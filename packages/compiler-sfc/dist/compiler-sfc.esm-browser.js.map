{"version":3,"file":"compiler-sfc.esm-browser.js","sources":["../../shared/src/makeMap.ts","../../shared/src/general.ts","../../shared/src/patchFlags.ts","../../shared/src/slotFlags.ts","../../shared/src/globalsAllowList.ts","../../shared/src/codeframe.ts","../../shared/src/normalizeProp.ts","../../shared/src/domTagConfig.ts","../../shared/src/domAttrConfig.ts","../../shared/src/escapeHtml.ts","../../shared/src/toDisplayString.ts","../../compiler-core/src/runtimeHelpers.ts","../../compiler-core/src/ast.ts","../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-html.js","../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-xml.js","../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode_codepoint.js","../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode.js","../../compiler-core/src/tokenizer.ts","../../compiler-core/src/compat/compatConfig.ts","../../compiler-core/src/errors.ts","../../../node_modules/.pnpm/@babel+parser@7.23.6/node_modules/@babel/parser/lib/index.js","../../../node_modules/.pnpm/estree-walker@2.0.2/node_modules/estree-walker/dist/esm/estree-walker.js","../../compiler-core/src/babelUtils.ts","../../compiler-core/src/utils.ts","../../compiler-core/src/parser.ts","../../compiler-core/src/transforms/hoistStatic.ts","../../compiler-core/src/transform.ts","../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/base64.js","../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/base64-vlq.js","../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/util.js","../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/array-set.js","../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/mapping-list.js","../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/source-map-generator.js","../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/binary-search.js","../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/quick-sort.js","../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/source-map-consumer.js","../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/source-node.js","../../../node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/source-map.js","../../compiler-core/src/codegen.ts","../../compiler-core/src/transforms/transformExpression.ts","../../compiler-core/src/transforms/vIf.ts","../../compiler-core/src/transforms/vFor.ts","../../compiler-core/src/transforms/vSlot.ts","../../compiler-core/src/transforms/transformElement.ts","../../compiler-core/src/transforms/transformSlotOutlet.ts","../../compiler-core/src/transforms/vOn.ts","../../compiler-core/src/transforms/vBind.ts","../../compiler-core/src/transforms/transformText.ts","../../compiler-core/src/transforms/vOnce.ts","../../compiler-core/src/transforms/vModel.ts","../../compiler-core/src/transforms/vMemo.ts","../../compiler-core/src/compile.ts","../../compiler-core/src/options.ts","../../compiler-core/src/transforms/noopDirectiveTransform.ts","../../compiler-dom/src/runtimeHelpers.ts","../../compiler-dom/src/parserOptions.ts","../../compiler-dom/src/transforms/transformStyle.ts","../../compiler-dom/src/errors.ts","../../compiler-dom/src/transforms/vHtml.ts","../../compiler-dom/src/transforms/vText.ts","../../compiler-dom/src/transforms/vModel.ts","../../compiler-dom/src/transforms/vOn.ts","../../compiler-dom/src/transforms/vShow.ts","../../compiler-dom/src/transforms/Transition.ts","../../compiler-dom/src/transforms/stringifyStatic.ts","../../compiler-dom/src/transforms/ignoreSideEffectTags.ts","../../compiler-dom/src/index.ts","../src/script/utils.ts","../../../node_modules/.pnpm/hash-sum@2.0.0/node_modules/hash-sum/hash-sum.js","../src/style/cssVars.ts","../src/cache.ts","../src/script/importUsageCheck.ts","../src/parse.ts","../src/template/templateUtils.ts","../src/template/transformAssetUrl.ts","../src/template/transformSrcset.ts","../../compiler-ssr/src/runtimeHelpers.ts","../../compiler-ssr/src/transforms/ssrVIf.ts","../../compiler-ssr/src/transforms/ssrVFor.ts","../../compiler-ssr/src/transforms/ssrTransformSlotOutlet.ts","../../compiler-ssr/src/errors.ts","../../compiler-ssr/src/transforms/ssrTransformTeleport.ts","../../compiler-ssr/src/transforms/ssrTransformSuspense.ts","../../compiler-ssr/src/transforms/ssrTransformElement.ts","../../compiler-ssr/src/transforms/ssrTransformTransitionGroup.ts","../../compiler-ssr/src/transforms/ssrTransformTransition.ts","../../compiler-ssr/src/transforms/ssrTransformComponent.ts","../../compiler-ssr/src/ssrCodegenTransform.ts","../../compiler-ssr/src/transforms/ssrVModel.ts","../../compiler-ssr/src/transforms/ssrVShow.ts","../../compiler-ssr/src/transforms/ssrInjectFallthroughAttrs.ts","../../compiler-ssr/src/transforms/ssrInjectCssVars.ts","../../compiler-ssr/src/index.ts","../src/warn.ts","../src/compileTemplate.ts","../../../node_modules/.pnpm/picocolors@1.0.0/node_modules/picocolors/picocolors.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/tokenize.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/terminal-highlight.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/css-syntax-error.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/symbols.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/stringifier.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/stringify.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/node.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/declaration.js","../../../node_modules/.pnpm/nanoid@3.3.7/node_modules/nanoid/non-secure/index.cjs","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/previous-map.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/input.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/map-generator.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/comment.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/container.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/document.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/warn-once.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/warning.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/result.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/at-rule.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/root.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/list.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/rule.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/parser.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/parse.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/lazy-result.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/no-work-result.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/processor.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/fromJSON.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/postcss.js","../../../node_modules/.pnpm/postcss@8.4.33/node_modules/postcss/lib/postcss.mjs","../src/style/pluginTrim.ts","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/util/unesc.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/util/getProp.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/util/ensureObject.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/util/stripComments.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/util/index.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/node.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/types.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/container.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/root.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/selector.js","../../../node_modules/.pnpm/cssesc@3.0.0/node_modules/cssesc/cssesc.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/className.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/comment.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/id.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/namespace.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/tag.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/string.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/pseudo.js","../../../node_modules/.pnpm/util-deprecate@1.0.2/node_modules/util-deprecate/node.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/attribute.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/universal.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/combinator.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/nesting.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/sortAscending.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/tokenTypes.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/tokenize.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/parser.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/processor.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/constructors.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/guards.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/selectors/index.js","../../../node_modules/.pnpm/postcss-selector-parser@6.0.15/node_modules/postcss-selector-parser/dist/index.js","../src/style/pluginScoped.ts","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64-vlq.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/util.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/array-set.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/mapping-list.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-generator.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/binary-search.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/quick-sort.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-consumer.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-node.js","../../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/source-map.js","../../../node_modules/.pnpm/merge-source-map@1.1.0/node_modules/merge-source-map/index.js","../src/style/preprocessors.ts","../src/compileStyle.ts","../src/script/analyzeScriptBindings.ts","../../../node_modules/.pnpm/@jridgewell+sourcemap-codec@1.4.15/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs","../../../node_modules/.pnpm/magic-string@0.30.5/node_modules/magic-string/dist/magic-string.es.mjs","../src/script/context.ts","../src/rewriteDefault.ts","../src/script/normalScript.ts","../src/script/resolveType.ts","../src/script/defineModel.ts","../src/script/defineProps.ts","../src/script/definePropsDestructure.ts","../src/script/defineEmits.ts","../src/script/defineExpose.ts","../src/script/defineSlots.ts","../src/script/defineOptions.ts","../src/script/topLevelAwait.ts","../src/compileScript.ts","../src/index.ts"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nexport function makeMap(\r\n  str: string,\r\n  expectsLowerCase?: boolean,\r\n): (key: string) => boolean {\r\n  const set = new Set(str.split(','))\r\n  return expectsLowerCase\r\n    ? val => set.has(val.toLowerCase())\r\n    : val => set.has(val)\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\r\n  ? Object.freeze({})\r\n  : {}\r\nexport const EMPTY_ARR = __DEV__ ? Object.freeze([]) : []\r\n\r\nexport const NOOP = () => {}\r\n\r\n/**\r\n * Always return false.\r\n */\r\nexport const NO = () => false\r\n\r\nexport const isOn = (key: string) =>\r\n  key.charCodeAt(0) === 111 /* o */ &&\r\n  key.charCodeAt(1) === 110 /* n */ &&\r\n  // uppercase letter\r\n  (key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97)\r\n\r\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\r\n\r\nexport const extend = Object.assign\r\n\r\nexport const remove = <T>(arr: T[], el: T) => {\r\n  const i = arr.indexOf(el)\r\n  if (i > -1) {\r\n    arr.splice(i, 1)\r\n  }\r\n}\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (\r\n  val: object,\r\n  key: string | symbol,\r\n): key is keyof typeof val => hasOwnProperty.call(val, key)\r\n\r\nexport const isArray = Array.isArray\r\nexport const isMap = (val: unknown): val is Map<any, any> =>\r\n  toTypeString(val) === '[object Map]'\r\nexport const isSet = (val: unknown): val is Set<any> =>\r\n  toTypeString(val) === '[object Set]'\r\n\r\nexport const isDate = (val: unknown): val is Date =>\r\n  toTypeString(val) === '[object Date]'\r\nexport const isRegExp = (val: unknown): val is RegExp =>\r\n  toTypeString(val) === '[object RegExp]'\r\nexport const isFunction = (val: unknown): val is Function =>\r\n  typeof val === 'function'\r\nexport const isString = (val: unknown): val is string => typeof val === 'string'\r\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\r\nexport const isObject = (val: unknown): val is Record<any, any> =>\r\n  val !== null && typeof val === 'object'\r\n\r\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\r\n  return (\r\n    (isObject(val) || isFunction(val)) &&\r\n    isFunction((val as any).then) &&\r\n    isFunction((val as any).catch)\r\n  )\r\n}\r\n\r\nexport const objectToString = Object.prototype.toString\r\nexport const toTypeString = (value: unknown): string =>\r\n  objectToString.call(value)\r\n\r\nexport const toRawType = (value: unknown): string => {\r\n  // extract \"RawType\" from strings like \"[object RawType]\"\r\n  return toTypeString(value).slice(8, -1)\r\n}\r\n\r\nexport const isPlainObject = (val: unknown): val is object =>\r\n  toTypeString(val) === '[object Object]'\r\n\r\nexport const isIntegerKey = (key: unknown) =>\r\n  isString(key) &&\r\n  key !== 'NaN' &&\r\n  key[0] !== '-' &&\r\n  '' + parseInt(key, 10) === key\r\n\r\nexport const isReservedProp = /*#__PURE__*/ makeMap(\r\n  // the leading comma is intentional so empty string \"\" is also included\r\n  ',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted',\r\n)\r\n\r\nexport const isBuiltInDirective = /*#__PURE__*/ makeMap(\r\n  'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo',\r\n)\r\n\r\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\r\n  const cache: Record<string, string> = Object.create(null)\r\n  return ((str: string) => {\r\n    const hit = cache[str]\r\n    return hit || (cache[str] = fn(str))\r\n  }) as T\r\n}\r\n\r\nconst camelizeRE = /-(\\w)/g\r\n/**\r\n * @private\r\n */\r\nexport const camelize = cacheStringFunction((str: string): string => {\r\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\r\n})\r\n\r\nconst hyphenateRE = /\\B([A-Z])/g\r\n/**\r\n * @private\r\n */\r\nexport const hyphenate = cacheStringFunction((str: string) =>\r\n  str.replace(hyphenateRE, '-$1').toLowerCase(),\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const capitalize = cacheStringFunction(<T extends string>(str: T) => {\r\n  return (str.charAt(0).toUpperCase() + str.slice(1)) as Capitalize<T>\r\n})\r\n\r\n/**\r\n * @private\r\n */\r\nexport const toHandlerKey = cacheStringFunction(<T extends string>(str: T) => {\r\n  const s = str ? `on${capitalize(str)}` : ``\r\n  return s as T extends '' ? '' : `on${Capitalize<T>}`\r\n})\r\n\r\n// compare whether a value has changed, accounting for NaN.\r\nexport const hasChanged = (value: any, oldValue: any): boolean =>\r\n  !Object.is(value, oldValue)\r\n\r\nexport const invokeArrayFns = (fns: Function[], arg?: any) => {\r\n  for (let i = 0; i < fns.length; i++) {\r\n    fns[i](arg)\r\n  }\r\n}\r\n\r\nexport const def = (obj: object, key: string | symbol, value: any) => {\r\n  Object.defineProperty(obj, key, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value,\r\n  })\r\n}\r\n\r\n/**\r\n * \"123-foo\" will be parsed to 123\r\n * This is used for the .number modifier in v-model\r\n */\r\nexport const looseToNumber = (val: any): any => {\r\n  const n = parseFloat(val)\r\n  return isNaN(n) ? val : n\r\n}\r\n\r\n/**\r\n * Only concerns number-like strings\r\n * \"123-foo\" will be returned as-is\r\n */\r\nexport const toNumber = (val: any): any => {\r\n  const n = isString(val) ? Number(val) : NaN\r\n  return isNaN(n) ? val : n\r\n}\r\n\r\nlet _globalThis: any\r\nexport const getGlobalThis = (): any => {\r\n  return (\r\n    _globalThis ||\r\n    (_globalThis =\r\n      typeof globalThis !== 'undefined'\r\n        ? globalThis\r\n        : typeof self !== 'undefined'\r\n          ? self\r\n          : typeof window !== 'undefined'\r\n            ? window\r\n            : typeof global !== 'undefined'\r\n              ? global\r\n              : {})\r\n  )\r\n}\r\n\r\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\r\n\r\nexport function genPropsAccessExp(name: string) {\r\n  return identRE.test(name)\r\n    ? `__props.${name}`\r\n    : `__props[${JSON.stringify(name)}]`\r\n}\r\n","/**\r\n * Patch flags are optimization hints generated by the compiler.\r\n * when a block with dynamicChildren is encountered during diff, the algorithm\r\n * enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n * a render function generated by the compiler, so the algorithm only needs to\r\n * handle updates explicitly marked by these patch flags.\r\n *\r\n * Patch flags can be combined using the | bitwise operator and can be checked\r\n * using the & operator, e.g.\r\n *\r\n * ```js\r\n * const flag = TEXT | CLASS\r\n * if (flag & TEXT) { ... }\r\n * ```\r\n *\r\n * Check the `patchElement` function in '../../runtime-core/src/renderer.ts' to see how the\r\n * flags are handled during diff.\r\n */\r\n/**\r\n * 用于标识VNode在patch过程中需要进行的操作的标志位，是一个枚举类型，定义了多个不同的标志位，每个标志位代表了一种不同的操作类型或者优化提示\r\n */\r\nexport enum PatchFlags {\r\n// 表示文本内容的动态绑定，需要在patch过程中更新文本内容\r\n  TEXT = 1,\r\n// 表示动态class绑定，需要在patch过程中更新元素的class\r\n  CLASS = 1 << 1,\r\n\r\n  /**\r\n   * Indicates an element with dynamic style\r\n   * The compiler pre-compiles static string styles into static objects\r\n   * + detects and hoists inline static objects\r\n   * e.g. `style=\"color: red\"` and `:style=\"{ color: 'red' }\"` both get hoisted\r\n   * as:\r\n   * ```js\r\n   * const style = { color: 'red' }\r\n   * render() { return e('div', { style }) }\r\n   * ```\r\n   */\r\n  // 表示动态绑定style，需要在patch过程中更新元素的style\r\n  STYLE = 1 << 2,\r\n\r\n  /**\r\n   * Indicates an element that has non-class/style dynamic props.\r\n   * Can also be on a component that has any dynamic props (includes\r\n   * class/style). when this flag is present, the vnode also has a dynamicProps\r\n   * array that contains the keys of the props that may change so the runtime\r\n   * can diff them faster (without having to worry about removed props)\r\n   */\r\n  // 表示非class,style以及事件等的动态属性，需要在patch过程中更新这些属性\r\n  PROPS = 1 << 3,\r\n\r\n  /**\r\n   * Indicates an element with props with dynamic keys. When keys change, a full\r\n   * diff is always needed to remove the old key. This flag is mutually\r\n   * exclusive with CLASS, STYLE and PROPS.\r\n   */\r\n  //表示动态属性中有动态绑定的键名，需要在patch过程中进行完成的比较\r\n  FULL_PROPS = 1 << 4,\r\n\r\n  /**\r\n   * Indicates an element that requires props hydration\r\n   * (but not necessarily patching)\r\n   * e.g. event listeners & v-bind with prop modifier\r\n   */\r\n  // 表示需要进行hydration，服务端渲染\r\n  NEED_HYDRATION = 1 << 5,\r\n\r\n  /**\r\n   * Indicates a fragment whose children order doesn't change.\r\n   */\r\n  //表示稳定的fragment，子节点顺序不会改变\r\n  STABLE_FRAGMENT = 1 << 6,\r\n\r\n  /**\r\n   * Indicates a fragment with keyed or partially keyed children\r\n   */\r\n  // 表示带有键值的Fragment\r\n  KEYED_FRAGMENT = 1 << 7,\r\n\r\n  /**\r\n   * Indicates a fragment with unkeyed children.\r\n   */\r\n  // 表示不带键值的Fragment\r\n  UNKEYED_FRAGMENT = 1 << 8,\r\n\r\n  /**\r\n   * Indicates an element that only needs non-props patching, e.g. ref or\r\n   * directives (onVnodeXXX hooks). since every patched vnode checks for refs\r\n   * and onVnodeXXX hooks, it simply marks the vnode so that a parent block\r\n   * will track it.\r\n   */\r\n  // 表示需要进行非props的更新，比如ref、directive等\r\n  NEED_PATCH = 1 << 9,\r\n\r\n  /**\r\n   * Indicates a component with dynamic slots (e.g. slot that references a v-for\r\n   * iterated value, or dynamic slot names).\r\n   * Components with this flag are always force updated.\r\n   */\r\n    // 表示存在动态插槽，需要强制刷新\r\n  DYNAMIC_SLOTS = 1 << 10,\r\n\r\n  /**\r\n   * Indicates a fragment that was created only because the user has placed\r\n   * comments at the root level of a template. This is a dev-only flag since\r\n   * comments are stripped in production.\r\n   */\r\n//表示开发环境下的根 Fragment，用于开发环境的调试。\r\n  DEV_ROOT_FRAGMENT = 1 << 11,\r\n\r\n  /**\r\n   * SPECIAL FLAGS -------------------------------------------------------------\r\n   * Special flags are negative integers. They are never matched against using\r\n   * bitwise operators (bitwise matching should only happen in branches where\r\n   * patchFlag > 0), and are mutually exclusive. When checking for a special\r\n   * flag, simply check patchFlag === FLAG.\r\n   */\r\n\r\n  /**\r\n   * Indicates a hoisted static vnode. This is a hint for hydration to skip\r\n   * the entire sub tree since static content never needs to be updated.\r\n   */\r\n  HOISTED = -1,\r\n  /**\r\n   * A special flag that indicates that the diffing algorithm should bail out\r\n   * of optimized mode. For example, on block fragments created by renderSlot()\r\n   * when encountering non-compiler generated slots (i.e. manually written\r\n   * render functions, which should always be fully diffed)\r\n   * OR manually cloneVNodes\r\n   */\r\n  //表示不需要优化\r\n  BAIL = -2,\r\n}\r\n\r\n/**\r\n * dev only flag -> name mapping\r\n */\r\nexport const PatchFlagNames: Record<PatchFlags, string> = {\r\n  [PatchFlags.TEXT]: `TEXT`,\r\n  [PatchFlags.CLASS]: `CLASS`,\r\n  [PatchFlags.STYLE]: `STYLE`,\r\n  [PatchFlags.PROPS]: `PROPS`,\r\n  [PatchFlags.FULL_PROPS]: `FULL_PROPS`,\r\n  [PatchFlags.NEED_HYDRATION]: `NEED_HYDRATION`,\r\n  [PatchFlags.STABLE_FRAGMENT]: `STABLE_FRAGMENT`,\r\n  [PatchFlags.KEYED_FRAGMENT]: `KEYED_FRAGMENT`,\r\n  [PatchFlags.UNKEYED_FRAGMENT]: `UNKEYED_FRAGMENT`,\r\n  [PatchFlags.NEED_PATCH]: `NEED_PATCH`,\r\n  [PatchFlags.DYNAMIC_SLOTS]: `DYNAMIC_SLOTS`,\r\n  [PatchFlags.DEV_ROOT_FRAGMENT]: `DEV_ROOT_FRAGMENT`,\r\n  [PatchFlags.HOISTED]: `HOISTED`,\r\n  [PatchFlags.BAIL]: `BAIL`,\r\n}\r\n","export enum SlotFlags {\r\n  /**\r\n   * Stable slots that only reference slot props or context state. The slot\r\n   * can fully capture its own dependencies so when passed down the parent won't\r\n   * need to force the child to update.\r\n   */\r\n  STABLE = 1,\r\n  /**\r\n   * Slots that reference scope variables (v-for or an outer slot prop), or\r\n   * has conditional structure (v-if, v-for). The parent will need to force\r\n   * the child to update because the slot does not fully capture its dependencies.\r\n   */\r\n  DYNAMIC = 2,\r\n  /**\r\n   * `<slot/>` being forwarded into a child component. Whether the parent needs\r\n   * to update the child is dependent on what kind of slots the parent itself\r\n   * received. This has to be refined at runtime, when the child's vnode\r\n   * is being created (in `normalizeChildren`)\r\n   */\r\n  FORWARDED = 3,\r\n}\r\n\r\n/**\r\n * Dev only\r\n */\r\nexport const slotFlagsText = {\r\n  [SlotFlags.STABLE]: 'STABLE',\r\n  [SlotFlags.DYNAMIC]: 'DYNAMIC',\r\n  [SlotFlags.FORWARDED]: 'FORWARDED',\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nconst GLOBALS_ALLOWED =\r\n  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error'\r\n\r\nexport const isGloballyAllowed = /*#__PURE__*/ makeMap(GLOBALS_ALLOWED)\r\n\r\n/** @deprecated use `isGloballyAllowed` instead */\r\nexport const isGloballyWhitelisted = isGloballyAllowed\r\n","const range: number = 2\r\n\r\nexport function generateCodeFrame(\r\n  source: string,\r\n  start = 0,\r\n  end = source.length,\r\n): string {\r\n  // Split the content into individual lines but capture the newline sequence\r\n  // that separated each line. This is important because the actual sequence is\r\n  // needed to properly take into account the full line length for offset\r\n  // comparison\r\n  let lines = source.split(/(\\r?\\n)/)\r\n\r\n  // Separate the lines and newline sequences into separate arrays for easier referencing\r\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1)\r\n  lines = lines.filter((_, idx) => idx % 2 === 0)\r\n\r\n  let count = 0\r\n  const res: string[] = []\r\n  for (let i = 0; i < lines.length; i++) {\r\n    count +=\r\n      lines[i].length +\r\n      ((newlineSequences[i] && newlineSequences[i].length) || 0)\r\n    if (count >= start) {\r\n      for (let j = i - range; j <= i + range || end > count; j++) {\r\n        if (j < 0 || j >= lines.length) continue\r\n        const line = j + 1\r\n        res.push(\r\n          `${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${\r\n            lines[j]\r\n          }`,\r\n        )\r\n        const lineLength = lines[j].length\r\n        const newLineSeqLength =\r\n          (newlineSequences[j] && newlineSequences[j].length) || 0\r\n\r\n        if (j === i) {\r\n          // push underline\r\n          const pad = start - (count - (lineLength + newLineSeqLength))\r\n          const length = Math.max(\r\n            1,\r\n            end > count ? lineLength - pad : end - start,\r\n          )\r\n          res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length))\r\n        } else if (j > i) {\r\n          if (end > count) {\r\n            const length = Math.max(Math.min(end - count, lineLength), 1)\r\n            res.push(`   |  ` + '^'.repeat(length))\r\n          }\r\n\r\n          count += lineLength + newLineSeqLength\r\n        }\r\n      }\r\n      break\r\n    }\r\n  }\r\n  return res.join('\\n')\r\n}\r\n","import { hyphenate, isArray, isObject, isString } from './general'\r\n\r\nexport type NormalizedStyle = Record<string, string | number>\r\n\r\nexport function normalizeStyle(\r\n  value: unknown,\r\n): NormalizedStyle | string | undefined {\r\n  if (isArray(value)) {\r\n    const res: NormalizedStyle = {}\r\n    for (let i = 0; i < value.length; i++) {\r\n      const item = value[i]\r\n      const normalized = isString(item)\r\n        ? parseStringStyle(item)\r\n        : (normalizeStyle(item) as NormalizedStyle)\r\n      if (normalized) {\r\n        for (const key in normalized) {\r\n          res[key] = normalized[key]\r\n        }\r\n      }\r\n    }\r\n    return res\r\n  } else if (isString(value) || isObject(value)) {\r\n    return value\r\n  }\r\n}\r\n\r\nconst listDelimiterRE = /;(?![^(]*\\))/g\r\nconst propertyDelimiterRE = /:([^]+)/\r\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g\r\n\r\nexport function parseStringStyle(cssText: string): NormalizedStyle {\r\n  const ret: NormalizedStyle = {}\r\n  cssText\r\n    .replace(styleCommentRE, '')\r\n    .split(listDelimiterRE)\r\n    .forEach(item => {\r\n      if (item) {\r\n        const tmp = item.split(propertyDelimiterRE)\r\n        tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim())\r\n      }\r\n    })\r\n  return ret\r\n}\r\n\r\nexport function stringifyStyle(\r\n  styles: NormalizedStyle | string | undefined,\r\n): string {\r\n  let ret = ''\r\n  if (!styles || isString(styles)) {\r\n    return ret\r\n  }\r\n  for (const key in styles) {\r\n    const value = styles[key]\r\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key)\r\n    if (isString(value) || typeof value === 'number') {\r\n      // only render valid values\r\n      ret += `${normalizedKey}:${value};`\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function normalizeClass(value: unknown): string {\r\n  let res = ''\r\n  if (isString(value)) {\r\n    res = value\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      const normalized = normalizeClass(value[i])\r\n      if (normalized) {\r\n        res += normalized + ' '\r\n      }\r\n    }\r\n  } else if (isObject(value)) {\r\n    for (const name in value) {\r\n      if (value[name]) {\r\n        res += name + ' '\r\n      }\r\n    }\r\n  }\r\n  return res.trim()\r\n}\r\n\r\nexport function normalizeProps(props: Record<string, any> | null) {\r\n  if (!props) return null\r\n  let { class: klass, style } = props\r\n  if (klass && !isString(klass)) {\r\n    props.class = normalizeClass(klass)\r\n  }\r\n  if (style) {\r\n    props.style = normalizeStyle(style)\r\n  }\r\n  return props\r\n}\r\n","// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// must be extracted in shared to avoid creating a dependency between the two.\r\nimport { makeMap } from './makeMap'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS =\r\n  'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n  'header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n  'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n  'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n  'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n  'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n  'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n  'option,output,progress,select,textarea,details,dialog,menu,' +\r\n  'summary,template,blockquote,iframe,tfoot'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS =\r\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n  'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n  'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n  'feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n  'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n  'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n  'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n  'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n  'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n  'text,textPath,title,tspan,unknown,use,view'\r\n\r\n// https://www.w3.org/TR/mathml4/ (content elements excluded)\r\nconst MATH_TAGS =\r\n  'annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,' +\r\n  'merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,' +\r\n  'mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,' +\r\n  'mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,' +\r\n  'msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics'\r\n\r\nconst VOID_TAGS =\r\n  'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr'\r\n\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS)\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS)\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isMathMLTag = /*#__PURE__*/ makeMap(MATH_TAGS)\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS)\r\n","import { makeMap } from './makeMap'\r\n\r\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`\r\nexport const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs)\r\n\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nexport const isBooleanAttr = /*#__PURE__*/ makeMap(\r\n  specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `inert,loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`,\r\n)\r\n\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\r\nexport function includeBooleanAttr(value: unknown): boolean {\r\n  return !!value || value === ''\r\n}\r\n\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/\r\nconst attrValidationCache: Record<string, boolean> = {}\r\n\r\nexport function isSSRSafeAttrName(name: string): boolean {\r\n  if (attrValidationCache.hasOwnProperty(name)) {\r\n    return attrValidationCache[name]\r\n  }\r\n  const isUnsafe = unsafeAttrCharRE.test(name)\r\n  if (isUnsafe) {\r\n    console.error(`unsafe attribute name: ${name}`)\r\n  }\r\n  return (attrValidationCache[name] = !isUnsafe)\r\n}\r\n\r\nexport const propsToAttrMap: Record<string, string | undefined> = {\r\n  acceptCharset: 'accept-charset',\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n  httpEquiv: 'http-equiv',\r\n}\r\n\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nexport const isKnownHtmlAttr = /*#__PURE__*/ makeMap(\r\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`,\r\n)\r\n\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nexport const isKnownSvgAttr = /*#__PURE__*/ makeMap(\r\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`,\r\n)\r\n\r\n/**\r\n * Shared between server-renderer and runtime-core hydration logic\r\n */\r\nexport function isRenderableAttrValue(value: unknown): boolean {\r\n  if (value == null) {\r\n    return false\r\n  }\r\n  const type = typeof value\r\n  return type === 'string' || type === 'number' || type === 'boolean'\r\n}\r\n","const escapeRE = /[\"'&<>]/\r\n\r\nexport function escapeHtml(string: unknown) {\r\n  const str = '' + string\r\n  const match = escapeRE.exec(str)\r\n\r\n  if (!match) {\r\n    return str\r\n  }\r\n\r\n  let html = ''\r\n  let escaped: string\r\n  let index: number\r\n  let lastIndex = 0\r\n  for (index = match.index; index < str.length; index++) {\r\n    switch (str.charCodeAt(index)) {\r\n      case 34: // \"\r\n        escaped = '&quot;'\r\n        break\r\n      case 38: // &\r\n        escaped = '&amp;'\r\n        break\r\n      case 39: // '\r\n        escaped = '&#39;'\r\n        break\r\n      case 60: // <\r\n        escaped = '&lt;'\r\n        break\r\n      case 62: // >\r\n        escaped = '&gt;'\r\n        break\r\n      default:\r\n        continue\r\n    }\r\n\r\n    if (lastIndex !== index) {\r\n      html += str.slice(lastIndex, index)\r\n    }\r\n\r\n    lastIndex = index + 1\r\n    html += escaped\r\n  }\r\n\r\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html\r\n}\r\n\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g\r\n\r\nexport function escapeHtmlComment(src: string): string {\r\n  return src.replace(commentStripRE, '')\r\n}\r\n","import {\r\n  isArray,\r\n  isFunction,\r\n  isMap,\r\n  isObject,\r\n  isPlainObject,\r\n  isSet,\r\n  isString,\r\n  isSymbol,\r\n  objectToString,\r\n} from './general'\r\n\r\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nexport const toDisplayString = (val: unknown): string => {\r\n  return isString(val)\r\n    ? val\r\n    : val == null\r\n      ? ''\r\n      : isArray(val) ||\r\n          (isObject(val) &&\r\n            (val.toString === objectToString || !isFunction(val.toString)))\r\n        ? JSON.stringify(val, replacer, 2)\r\n        : String(val)\r\n}\r\n\r\nconst replacer = (_key: string, val: any): any => {\r\n  // can't use isRef here since @vue/shared has no deps\r\n  if (val && val.__v_isRef) {\r\n    return replacer(_key, val.value)\r\n  } else if (isMap(val)) {\r\n    return {\r\n      [`Map(${val.size})`]: [...val.entries()].reduce(\r\n        (entries, [key, val], i) => {\r\n          entries[stringifySymbol(key, i) + ' =>'] = val\r\n          return entries\r\n        },\r\n        {} as Record<string, any>,\r\n      ),\r\n    }\r\n  } else if (isSet(val)) {\r\n    return {\r\n      [`Set(${val.size})`]: [...val.values()].map(v => stringifySymbol(v)),\r\n    }\r\n  } else if (isSymbol(val)) {\r\n    return stringifySymbol(val)\r\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n    // native elements\r\n    return String(val)\r\n  }\r\n  return val\r\n}\r\n\r\nconst stringifySymbol = (v: unknown, i: number | string = ''): any =>\r\n  isSymbol(v) ? `Symbol(${v.description ?? i})` : v\r\n","export const FRAGMENT = Symbol(__DEV__ ? `Fragment` : ``)\r\nexport const TELEPORT = Symbol(__DEV__ ? `Teleport` : ``)\r\nexport const SUSPENSE = Symbol(__DEV__ ? `Suspense` : ``)\r\nexport const KEEP_ALIVE = Symbol(__DEV__ ? `KeepAlive` : ``)\r\nexport const BASE_TRANSITION = Symbol(__DEV__ ? `BaseTransition` : ``)\r\nexport const OPEN_BLOCK = Symbol(__DEV__ ? `openBlock` : ``)\r\nexport const CREATE_BLOCK = Symbol(__DEV__ ? `createBlock` : ``)\r\nexport const CREATE_ELEMENT_BLOCK = Symbol(__DEV__ ? `createElementBlock` : ``)\r\nexport const CREATE_VNODE = Symbol(__DEV__ ? `createVNode` : ``)\r\nexport const CREATE_ELEMENT_VNODE = Symbol(__DEV__ ? `createElementVNode` : ``)\r\nexport const CREATE_COMMENT = Symbol(__DEV__ ? `createCommentVNode` : ``)\r\nexport const CREATE_TEXT = Symbol(__DEV__ ? `createTextVNode` : ``)\r\nexport const CREATE_STATIC = Symbol(__DEV__ ? `createStaticVNode` : ``)\r\nexport const RESOLVE_COMPONENT = Symbol(__DEV__ ? `resolveComponent` : ``)\r\nexport const RESOLVE_DYNAMIC_COMPONENT = Symbol(\r\n  __DEV__ ? `resolveDynamicComponent` : ``,\r\n)\r\nexport const RESOLVE_DIRECTIVE = Symbol(__DEV__ ? `resolveDirective` : ``)\r\nexport const RESOLVE_FILTER = Symbol(__DEV__ ? `resolveFilter` : ``)\r\nexport const WITH_DIRECTIVES = Symbol(__DEV__ ? `withDirectives` : ``)\r\nexport const RENDER_LIST = Symbol(__DEV__ ? `renderList` : ``)\r\nexport const RENDER_SLOT = Symbol(__DEV__ ? `renderSlot` : ``)\r\nexport const CREATE_SLOTS = Symbol(__DEV__ ? `createSlots` : ``)\r\nexport const TO_DISPLAY_STRING = Symbol(__DEV__ ? `toDisplayString` : ``)\r\nexport const MERGE_PROPS = Symbol(__DEV__ ? `mergeProps` : ``)\r\nexport const NORMALIZE_CLASS = Symbol(__DEV__ ? `normalizeClass` : ``)\r\nexport const NORMALIZE_STYLE = Symbol(__DEV__ ? `normalizeStyle` : ``)\r\nexport const NORMALIZE_PROPS = Symbol(__DEV__ ? `normalizeProps` : ``)\r\nexport const GUARD_REACTIVE_PROPS = Symbol(__DEV__ ? `guardReactiveProps` : ``)\r\nexport const TO_HANDLERS = Symbol(__DEV__ ? `toHandlers` : ``)\r\nexport const CAMELIZE = Symbol(__DEV__ ? `camelize` : ``)\r\nexport const CAPITALIZE = Symbol(__DEV__ ? `capitalize` : ``)\r\nexport const TO_HANDLER_KEY = Symbol(__DEV__ ? `toHandlerKey` : ``)\r\nexport const SET_BLOCK_TRACKING = Symbol(__DEV__ ? `setBlockTracking` : ``)\r\nexport const PUSH_SCOPE_ID = Symbol(__DEV__ ? `pushScopeId` : ``)\r\nexport const POP_SCOPE_ID = Symbol(__DEV__ ? `popScopeId` : ``)\r\nexport const WITH_CTX = Symbol(__DEV__ ? `withCtx` : ``)\r\nexport const UNREF = Symbol(__DEV__ ? `unref` : ``)\r\nexport const IS_REF = Symbol(__DEV__ ? `isRef` : ``)\r\nexport const WITH_MEMO = Symbol(__DEV__ ? `withMemo` : ``)\r\nexport const IS_MEMO_SAME = Symbol(__DEV__ ? `isMemoSame` : ``)\r\n\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\nexport const helperNameMap: Record<symbol, string> = {\r\n  [FRAGMENT]: `Fragment`,\r\n  [TELEPORT]: `Teleport`,\r\n  [SUSPENSE]: `Suspense`,\r\n  [KEEP_ALIVE]: `KeepAlive`,\r\n  [BASE_TRANSITION]: `BaseTransition`,\r\n  [OPEN_BLOCK]: `openBlock`,\r\n  [CREATE_BLOCK]: `createBlock`,\r\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n  [CREATE_VNODE]: `createVNode`,\r\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n  [CREATE_COMMENT]: `createCommentVNode`,\r\n  [CREATE_TEXT]: `createTextVNode`,\r\n  [CREATE_STATIC]: `createStaticVNode`,\r\n  [RESOLVE_COMPONENT]: `resolveComponent`,\r\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n  [RESOLVE_FILTER]: `resolveFilter`,\r\n  [WITH_DIRECTIVES]: `withDirectives`,\r\n  [RENDER_LIST]: `renderList`,\r\n  [RENDER_SLOT]: `renderSlot`,\r\n  [CREATE_SLOTS]: `createSlots`,\r\n  [TO_DISPLAY_STRING]: `toDisplayString`,\r\n  [MERGE_PROPS]: `mergeProps`,\r\n  [NORMALIZE_CLASS]: `normalizeClass`,\r\n  [NORMALIZE_STYLE]: `normalizeStyle`,\r\n  [NORMALIZE_PROPS]: `normalizeProps`,\r\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n  [TO_HANDLERS]: `toHandlers`,\r\n  [CAMELIZE]: `camelize`,\r\n  [CAPITALIZE]: `capitalize`,\r\n  [TO_HANDLER_KEY]: `toHandlerKey`,\r\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n  [PUSH_SCOPE_ID]: `pushScopeId`,\r\n  [POP_SCOPE_ID]: `popScopeId`,\r\n  [WITH_CTX]: `withCtx`,\r\n  [UNREF]: `unref`,\r\n  [IS_REF]: `isRef`,\r\n  [WITH_MEMO]: `withMemo`,\r\n  [IS_MEMO_SAME]: `isMemoSame`,\r\n}\r\n\r\nexport function registerRuntimeHelpers(helpers: Record<symbol, string>) {\r\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n    helperNameMap[s] = helpers[s]\r\n  })\r\n}\r\n","import { isString } from '@vue/shared'\r\nimport {\r\n  CREATE_BLOCK,\r\n  CREATE_ELEMENT_BLOCK,\r\n  CREATE_ELEMENT_VNODE,\r\n  type CREATE_SLOTS,\r\n  CREATE_VNODE,\r\n  type FRAGMENT,\r\n  OPEN_BLOCK,\r\n  type RENDER_LIST,\r\n  type RENDER_SLOT,\r\n  WITH_DIRECTIVES,\r\n  type WITH_MEMO,\r\n} from './runtimeHelpers'\r\nimport type { PropsExpression } from './transforms/transformElement'\r\nimport type { ImportItem, TransformContext } from './transform'\r\nimport type { Node as BabelNode } from '@babel/types'\r\n\r\n// Vue template is a platform-agnostic superset of HTML (syntax only).\r\n// More namespaces can be declared by platform specific compilers.\r\nexport type Namespace = number\r\n\r\nexport enum Namespaces {\r\n  HTML,\r\n  SVG,\r\n  MATH_ML,\r\n}\r\n\r\nexport enum NodeTypes {\r\n  ROOT,\r\n  ELEMENT,\r\n  TEXT,\r\n  COMMENT,\r\n  SIMPLE_EXPRESSION,\r\n  INTERPOLATION,\r\n  ATTRIBUTE,\r\n  DIRECTIVE,\r\n  // containers\r\n  COMPOUND_EXPRESSION,\r\n  IF,\r\n  IF_BRANCH,\r\n  FOR,\r\n  TEXT_CALL,\r\n  // codegen\r\n  VNODE_CALL,\r\n  JS_CALL_EXPRESSION,\r\n  JS_OBJECT_EXPRESSION,\r\n  JS_PROPERTY,\r\n  JS_ARRAY_EXPRESSION,\r\n  JS_FUNCTION_EXPRESSION,\r\n  JS_CONDITIONAL_EXPRESSION,\r\n  JS_CACHE_EXPRESSION,\r\n\r\n  // ssr codegen\r\n  JS_BLOCK_STATEMENT,\r\n  JS_TEMPLATE_LITERAL,\r\n  JS_IF_STATEMENT,\r\n  JS_ASSIGNMENT_EXPRESSION,\r\n  JS_SEQUENCE_EXPRESSION,\r\n  JS_RETURN_STATEMENT,\r\n}\r\n\r\nexport enum ElementTypes {\r\n  ELEMENT,\r\n  COMPONENT,\r\n  SLOT,\r\n  TEMPLATE,\r\n}\r\n\r\nexport interface Node {\r\n  type: NodeTypes\r\n  loc: SourceLocation\r\n}\r\n\r\n// The node's range. The `start` is inclusive and `end` is exclusive.\r\n// [start, end)\r\nexport interface SourceLocation {\r\n  start: Position\r\n  end: Position\r\n  source: string\r\n}\r\n\r\nexport interface Position {\r\n  offset: number // from start of file\r\n  line: number\r\n  column: number\r\n}\r\n\r\nexport type ParentNode = RootNode | ElementNode | IfBranchNode | ForNode\r\n\r\nexport type ExpressionNode = SimpleExpressionNode | CompoundExpressionNode\r\n\r\nexport type TemplateChildNode =\r\n  | ElementNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n  | TextNode\r\n  | CommentNode\r\n  | IfNode\r\n  | IfBranchNode\r\n  | ForNode\r\n  | TextCallNode\r\n\r\nexport interface RootNode extends Node {\r\n  type: NodeTypes.ROOT\r\n  source: string\r\n  children: TemplateChildNode[]\r\n  helpers: Set<symbol>\r\n  components: string[]\r\n  directives: string[]\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  cached: number\r\n  temps: number\r\n  ssrHelpers?: symbol[]\r\n  codegenNode?: TemplateChildNode | JSChildNode | BlockStatement\r\n  transformed?: boolean\r\n\r\n  // v2 compat only\r\n  filters?: string[]\r\n}\r\n\r\nexport type ElementNode =\r\n  | PlainElementNode\r\n  | ComponentNode\r\n  | SlotOutletNode\r\n  | TemplateNode\r\n\r\nexport interface BaseElementNode extends Node {\r\n  type: NodeTypes.ELEMENT\r\n  ns: Namespace\r\n  tag: string\r\n  tagType: ElementTypes\r\n  props: Array<AttributeNode | DirectiveNode>\r\n  children: TemplateChildNode[]\r\n  isSelfClosing?: boolean\r\n  innerLoc?: SourceLocation // only for SFC root level elements\r\n}\r\n\r\nexport interface PlainElementNode extends BaseElementNode {\r\n  tagType: ElementTypes.ELEMENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | SimpleExpressionNode // when hoisted\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: TemplateLiteral\r\n}\r\n\r\nexport interface ComponentNode extends BaseElementNode {\r\n  tagType: ElementTypes.COMPONENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface SlotOutletNode extends BaseElementNode {\r\n  tagType: ElementTypes.SLOT\r\n  codegenNode:\r\n    | RenderSlotCall\r\n    | CacheExpression // when cached by v-once\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface TemplateNode extends BaseElementNode {\r\n  tagType: ElementTypes.TEMPLATE\r\n  // TemplateNode is a container type that always gets compiled away\r\n  codegenNode: undefined\r\n}\r\n\r\nexport interface TextNode extends Node {\r\n  type: NodeTypes.TEXT\r\n  content: string\r\n}\r\n\r\nexport interface CommentNode extends Node {\r\n  type: NodeTypes.COMMENT\r\n  content: string\r\n}\r\n\r\nexport interface AttributeNode extends Node {\r\n  type: NodeTypes.ATTRIBUTE\r\n  name: string\r\n  nameLoc: SourceLocation\r\n  value: TextNode | undefined\r\n}\r\n\r\nexport interface DirectiveNode extends Node {\r\n  type: NodeTypes.DIRECTIVE\r\n  /**\r\n   * the normalized name without prefix or shorthands, e.g. \"bind\", \"on\"\r\n   */\r\n  name: string\r\n  /**\r\n   * the raw attribute name, preserving shorthand, and including arg & modifiers\r\n   * this is only used during parse.\r\n   */\r\n  rawName?: string\r\n  exp: ExpressionNode | undefined\r\n  arg: ExpressionNode | undefined\r\n  modifiers: string[]\r\n  /**\r\n   * optional property to cache the expression parse result for v-for\r\n   */\r\n  forParseResult?: ForParseResult\r\n}\r\n\r\n/**\r\n * Static types have several levels.\r\n * Higher levels implies lower levels. e.g. a node that can be stringified\r\n * can always be hoisted and skipped for patch.\r\n */\r\nexport enum ConstantTypes {\r\n  NOT_CONSTANT = 0,\r\n  CAN_SKIP_PATCH,\r\n  CAN_HOIST,\r\n  CAN_STRINGIFY,\r\n}\r\n\r\nexport interface SimpleExpressionNode extends Node {\r\n  type: NodeTypes.SIMPLE_EXPRESSION\r\n  content: string\r\n  isStatic: boolean\r\n  constType: ConstantTypes\r\n  /**\r\n   * - `null` means the expression is a simple identifier that doesn't need\r\n   *    parsing\r\n   * - `false` means there was a parsing error\r\n   */\r\n  ast?: BabelNode | null | false\r\n  /**\r\n   * Indicates this is an identifier for a hoist vnode call and points to the\r\n   * hoisted node.\r\n   */\r\n  hoisted?: JSChildNode\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface InterpolationNode extends Node {\r\n  type: NodeTypes.INTERPOLATION\r\n  content: ExpressionNode\r\n}\r\n\r\nexport interface CompoundExpressionNode extends Node {\r\n  type: NodeTypes.COMPOUND_EXPRESSION\r\n  /**\r\n   * - `null` means the expression is a simple identifier that doesn't need\r\n   *    parsing\r\n   * - `false` means there was a parsing error\r\n   */\r\n  ast?: BabelNode | null | false\r\n  children: (\r\n    | SimpleExpressionNode\r\n    | CompoundExpressionNode\r\n    | InterpolationNode\r\n    | TextNode\r\n    | string\r\n    | symbol\r\n  )[]\r\n\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface IfNode extends Node {\r\n  type: NodeTypes.IF\r\n  branches: IfBranchNode[]\r\n  codegenNode?: IfConditionalExpression | CacheExpression // <div v-if v-once>\r\n}\r\n\r\nexport interface IfBranchNode extends Node {\r\n  type: NodeTypes.IF_BRANCH\r\n  condition: ExpressionNode | undefined // else\r\n  children: TemplateChildNode[]\r\n  userKey?: AttributeNode | DirectiveNode\r\n  isTemplateIf?: boolean\r\n}\r\n\r\nexport interface ForNode extends Node {\r\n  type: NodeTypes.FOR\r\n  source: ExpressionNode\r\n  valueAlias: ExpressionNode | undefined\r\n  keyAlias: ExpressionNode | undefined\r\n  objectIndexAlias: ExpressionNode | undefined\r\n  parseResult: ForParseResult\r\n  children: TemplateChildNode[]\r\n  codegenNode?: ForCodegenNode\r\n}\r\n\r\nexport interface ForParseResult {\r\n  source: ExpressionNode\r\n  value: ExpressionNode | undefined\r\n  key: ExpressionNode | undefined\r\n  index: ExpressionNode | undefined\r\n  finalized: boolean\r\n}\r\n\r\nexport interface TextCallNode extends Node {\r\n  type: NodeTypes.TEXT_CALL\r\n  content: TextNode | InterpolationNode | CompoundExpressionNode\r\n  codegenNode: CallExpression | SimpleExpressionNode // when hoisted\r\n}\r\n\r\nexport type TemplateTextChildNode =\r\n  | TextNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n\r\nexport interface VNodeCall extends Node {\r\n  type: NodeTypes.VNODE_CALL\r\n  tag: string | symbol | CallExpression\r\n  props: PropsExpression | undefined\r\n  children:\r\n    | TemplateChildNode[] // multiple children\r\n    | TemplateTextChildNode // single text child\r\n    | SlotsExpression // component slots\r\n    | ForRenderListExpression // v-for fragment call\r\n    | SimpleExpressionNode // hoisted\r\n    | undefined\r\n  patchFlag: string | undefined\r\n  dynamicProps: string | SimpleExpressionNode | undefined\r\n  directives: DirectiveArguments | undefined\r\n  isBlock: boolean\r\n  disableTracking: boolean\r\n  isComponent: boolean\r\n}\r\n\r\n// JS Node Types ---------------------------------------------------------------\r\n\r\n// We also include a number of JavaScript AST nodes for code generation.\r\n// The AST is an intentionally minimal subset just to meet the exact needs of\r\n// Vue render function generation.\r\n\r\nexport type JSChildNode =\r\n  | VNodeCall\r\n  | CallExpression\r\n  | ObjectExpression\r\n  | ArrayExpression\r\n  | ExpressionNode\r\n  | FunctionExpression\r\n  | ConditionalExpression\r\n  | CacheExpression\r\n  | AssignmentExpression\r\n  | SequenceExpression\r\n\r\nexport interface CallExpression extends Node {\r\n  type: NodeTypes.JS_CALL_EXPRESSION\r\n  callee: string | symbol\r\n  arguments: (\r\n    | string\r\n    | symbol\r\n    | JSChildNode\r\n    | SSRCodegenNode\r\n    | TemplateChildNode\r\n    | TemplateChildNode[]\r\n  )[]\r\n}\r\n\r\nexport interface ObjectExpression extends Node {\r\n  type: NodeTypes.JS_OBJECT_EXPRESSION\r\n  properties: Array<Property>\r\n}\r\n\r\nexport interface Property extends Node {\r\n  type: NodeTypes.JS_PROPERTY\r\n  key: ExpressionNode\r\n  value: JSChildNode\r\n}\r\n\r\nexport interface ArrayExpression extends Node {\r\n  type: NodeTypes.JS_ARRAY_EXPRESSION\r\n  elements: Array<string | Node>\r\n}\r\n\r\nexport interface FunctionExpression extends Node {\r\n  type: NodeTypes.JS_FUNCTION_EXPRESSION\r\n  params: ExpressionNode | string | (ExpressionNode | string)[] | undefined\r\n  returns?: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n  body?: BlockStatement | IfStatement\r\n  newline: boolean\r\n  /**\r\n   * This flag is for codegen to determine whether it needs to generate the\r\n   * withScopeId() wrapper\r\n   */\r\n  isSlot: boolean\r\n  /**\r\n   * __COMPAT__ only, indicates a slot function that should be excluded from\r\n   * the legacy $scopedSlots instance property.\r\n   */\r\n  isNonScopedSlot?: boolean\r\n}\r\n\r\nexport interface ConditionalExpression extends Node {\r\n  type: NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  test: JSChildNode\r\n  consequent: JSChildNode\r\n  alternate: JSChildNode\r\n  newline: boolean\r\n}\r\n\r\nexport interface CacheExpression extends Node {\r\n  type: NodeTypes.JS_CACHE_EXPRESSION\r\n  index: number\r\n  value: JSChildNode\r\n  isVNode: boolean\r\n}\r\n\r\nexport interface MemoExpression extends CallExpression {\r\n  callee: typeof WITH_MEMO\r\n  arguments: [ExpressionNode, MemoFactory, string, string]\r\n}\r\n\r\ninterface MemoFactory extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// SSR-specific Node Types -----------------------------------------------------\r\n\r\nexport type SSRCodegenNode =\r\n  | BlockStatement\r\n  | TemplateLiteral\r\n  | IfStatement\r\n  | AssignmentExpression\r\n  | ReturnStatement\r\n  | SequenceExpression\r\n\r\nexport interface BlockStatement extends Node {\r\n  type: NodeTypes.JS_BLOCK_STATEMENT\r\n  body: (JSChildNode | IfStatement)[]\r\n}\r\n\r\nexport interface TemplateLiteral extends Node {\r\n  type: NodeTypes.JS_TEMPLATE_LITERAL\r\n  elements: (string | JSChildNode)[]\r\n}\r\n\r\nexport interface IfStatement extends Node {\r\n  type: NodeTypes.JS_IF_STATEMENT\r\n  test: ExpressionNode\r\n  consequent: BlockStatement\r\n  alternate: IfStatement | BlockStatement | ReturnStatement | undefined\r\n}\r\n\r\nexport interface AssignmentExpression extends Node {\r\n  type: NodeTypes.JS_ASSIGNMENT_EXPRESSION\r\n  left: SimpleExpressionNode\r\n  right: JSChildNode\r\n}\r\n\r\nexport interface SequenceExpression extends Node {\r\n  type: NodeTypes.JS_SEQUENCE_EXPRESSION\r\n  expressions: JSChildNode[]\r\n}\r\n\r\nexport interface ReturnStatement extends Node {\r\n  type: NodeTypes.JS_RETURN_STATEMENT\r\n  returns: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n}\r\n\r\n// Codegen Node Types ----------------------------------------------------------\r\n\r\nexport interface DirectiveArguments extends ArrayExpression {\r\n  elements: DirectiveArgumentNode[]\r\n}\r\n\r\nexport interface DirectiveArgumentNode extends ArrayExpression {\r\n  elements: // dir, exp, arg, modifiers\r\n  | [string]\r\n    | [string, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode, ObjectExpression]\r\n}\r\n\r\n// renderSlot(...)\r\nexport interface RenderSlotCall extends CallExpression {\r\n  callee: typeof RENDER_SLOT\r\n  arguments: // $slots, name, props, fallback\r\n  | [string, string | ExpressionNode]\r\n    | [string, string | ExpressionNode, PropsExpression]\r\n    | [\r\n        string,\r\n        string | ExpressionNode,\r\n        PropsExpression | '{}',\r\n        TemplateChildNode[],\r\n      ]\r\n}\r\n\r\nexport type SlotsExpression = SlotsObjectExpression | DynamicSlotsExpression\r\n\r\n// { foo: () => [...] }\r\nexport interface SlotsObjectExpression extends ObjectExpression {\r\n  properties: SlotsObjectProperty[]\r\n}\r\n\r\nexport interface SlotsObjectProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport interface SlotFunctionExpression extends FunctionExpression {\r\n  returns: TemplateChildNode[]\r\n}\r\n\r\n// createSlots({ ... }, [\r\n//    foo ? () => [] : undefined,\r\n//    renderList(list, i => () => [i])\r\n// ])\r\nexport interface DynamicSlotsExpression extends CallExpression {\r\n  callee: typeof CREATE_SLOTS\r\n  arguments: [SlotsObjectExpression, DynamicSlotEntries]\r\n}\r\n\r\nexport interface DynamicSlotEntries extends ArrayExpression {\r\n  elements: (ConditionalDynamicSlotNode | ListDynamicSlotNode)[]\r\n}\r\n\r\nexport interface ConditionalDynamicSlotNode extends ConditionalExpression {\r\n  consequent: DynamicSlotNode\r\n  alternate: DynamicSlotNode | SimpleExpressionNode\r\n}\r\n\r\nexport interface ListDynamicSlotNode extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ListDynamicSlotIterator]\r\n}\r\n\r\nexport interface ListDynamicSlotIterator extends FunctionExpression {\r\n  returns: DynamicSlotNode\r\n}\r\n\r\nexport interface DynamicSlotNode extends ObjectExpression {\r\n  properties: [Property, DynamicSlotFnProperty]\r\n}\r\n\r\nexport interface DynamicSlotFnProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport type BlockCodegenNode = VNodeCall | RenderSlotCall\r\n\r\nexport interface IfConditionalExpression extends ConditionalExpression {\r\n  consequent: BlockCodegenNode | MemoExpression\r\n  alternate: BlockCodegenNode | IfConditionalExpression | MemoExpression\r\n}\r\n\r\nexport interface ForCodegenNode extends VNodeCall {\r\n  isBlock: true\r\n  tag: typeof FRAGMENT\r\n  props: undefined\r\n  children: ForRenderListExpression\r\n  patchFlag: string\r\n  disableTracking: boolean\r\n}\r\n\r\nexport interface ForRenderListExpression extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ForIteratorExpression]\r\n}\r\n\r\nexport interface ForIteratorExpression extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// AST Utilities ---------------------------------------------------------------\r\n\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nexport const locStub: SourceLocation = {\r\n  start: { line: 1, column: 1, offset: 0 },\r\n  end: { line: 1, column: 1, offset: 0 },\r\n  source: '',\r\n}\r\n\r\nexport function createRoot(\r\n  children: TemplateChildNode[],\r\n  source = '',\r\n): RootNode {\r\n  return {\r\n    type: NodeTypes.ROOT,\r\n    source,\r\n    children,\r\n    helpers: new Set(),\r\n    components: [],\r\n    directives: [],\r\n    hoists: [],\r\n    imports: [],\r\n    cached: 0,\r\n    temps: 0,\r\n    codegenNode: undefined,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createVNodeCall(\r\n  context: TransformContext | null,\r\n  tag: VNodeCall['tag'],\r\n  props?: VNodeCall['props'],\r\n  children?: VNodeCall['children'],\r\n  patchFlag?: VNodeCall['patchFlag'],\r\n  dynamicProps?: VNodeCall['dynamicProps'],\r\n  directives?: VNodeCall['directives'],\r\n  isBlock: VNodeCall['isBlock'] = false,\r\n  disableTracking: VNodeCall['disableTracking'] = false,\r\n  isComponent: VNodeCall['isComponent'] = false,\r\n  loc = locStub,\r\n): VNodeCall {\r\n  if (context) {\r\n    if (isBlock) {\r\n      context.helper(OPEN_BLOCK)\r\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent))\r\n    } else {\r\n      context.helper(getVNodeHelper(context.inSSR, isComponent))\r\n    }\r\n    if (directives) {\r\n      context.helper(WITH_DIRECTIVES)\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.VNODE_CALL,\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent,\r\n    loc,\r\n  }\r\n}\r\n\r\nexport function createArrayExpression(\r\n  elements: ArrayExpression['elements'],\r\n  loc: SourceLocation = locStub,\r\n): ArrayExpression {\r\n  return {\r\n    type: NodeTypes.JS_ARRAY_EXPRESSION,\r\n    loc,\r\n    elements,\r\n  }\r\n}\r\n\r\nexport function createObjectExpression(\r\n  properties: ObjectExpression['properties'],\r\n  loc: SourceLocation = locStub,\r\n): ObjectExpression {\r\n  return {\r\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\r\n    loc,\r\n    properties,\r\n  }\r\n}\r\n\r\nexport function createObjectProperty(\r\n  key: Property['key'] | string,\r\n  value: Property['value'],\r\n): Property {\r\n  return {\r\n    type: NodeTypes.JS_PROPERTY,\r\n    loc: locStub,\r\n    key: isString(key) ? createSimpleExpression(key, true) : key,\r\n    value,\r\n  }\r\n}\r\n\r\nexport function createSimpleExpression(\r\n  content: SimpleExpressionNode['content'],\r\n  isStatic: SimpleExpressionNode['isStatic'] = false,\r\n  loc: SourceLocation = locStub,\r\n  constType: ConstantTypes = ConstantTypes.NOT_CONSTANT,\r\n): SimpleExpressionNode {\r\n  return {\r\n    type: NodeTypes.SIMPLE_EXPRESSION,\r\n    loc,\r\n    content,\r\n    isStatic,\r\n    constType: isStatic ? ConstantTypes.CAN_STRINGIFY : constType,\r\n  }\r\n}\r\n\r\nexport function createInterpolation(\r\n  content: InterpolationNode['content'] | string,\r\n  loc: SourceLocation,\r\n): InterpolationNode {\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    loc,\r\n    content: isString(content)\r\n      ? createSimpleExpression(content, false, loc)\r\n      : content,\r\n  }\r\n}\r\n\r\nexport function createCompoundExpression(\r\n  children: CompoundExpressionNode['children'],\r\n  loc: SourceLocation = locStub,\r\n): CompoundExpressionNode {\r\n  return {\r\n    type: NodeTypes.COMPOUND_EXPRESSION,\r\n    loc,\r\n    children,\r\n  }\r\n}\r\n\r\ntype InferCodegenNodeType<T> = T extends typeof RENDER_SLOT\r\n  ? RenderSlotCall\r\n  : CallExpression\r\n\r\nexport function createCallExpression<T extends CallExpression['callee']>(\r\n  callee: T,\r\n  args: CallExpression['arguments'] = [],\r\n  loc: SourceLocation = locStub,\r\n): InferCodegenNodeType<T> {\r\n  return {\r\n    type: NodeTypes.JS_CALL_EXPRESSION,\r\n    loc,\r\n    callee,\r\n    arguments: args,\r\n  } as InferCodegenNodeType<T>\r\n}\r\n\r\nexport function createFunctionExpression(\r\n  params: FunctionExpression['params'],\r\n  returns: FunctionExpression['returns'] = undefined,\r\n  newline: boolean = false,\r\n  isSlot: boolean = false,\r\n  loc: SourceLocation = locStub,\r\n): FunctionExpression {\r\n  return {\r\n    type: NodeTypes.JS_FUNCTION_EXPRESSION,\r\n    params,\r\n    returns,\r\n    newline,\r\n    isSlot,\r\n    loc,\r\n  }\r\n}\r\n\r\nexport function createConditionalExpression(\r\n  test: ConditionalExpression['test'],\r\n  consequent: ConditionalExpression['consequent'],\r\n  alternate: ConditionalExpression['alternate'],\r\n  newline = true,\r\n): ConditionalExpression {\r\n  return {\r\n    type: NodeTypes.JS_CONDITIONAL_EXPRESSION,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    newline,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createCacheExpression(\r\n  index: number,\r\n  value: JSChildNode,\r\n  isVNode: boolean = false,\r\n): CacheExpression {\r\n  return {\r\n    type: NodeTypes.JS_CACHE_EXPRESSION,\r\n    index,\r\n    value,\r\n    isVNode,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createBlockStatement(\r\n  body: BlockStatement['body'],\r\n): BlockStatement {\r\n  return {\r\n    type: NodeTypes.JS_BLOCK_STATEMENT,\r\n    body,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createTemplateLiteral(\r\n  elements: TemplateLiteral['elements'],\r\n): TemplateLiteral {\r\n  return {\r\n    type: NodeTypes.JS_TEMPLATE_LITERAL,\r\n    elements,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createIfStatement(\r\n  test: IfStatement['test'],\r\n  consequent: IfStatement['consequent'],\r\n  alternate?: IfStatement['alternate'],\r\n): IfStatement {\r\n  return {\r\n    type: NodeTypes.JS_IF_STATEMENT,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createAssignmentExpression(\r\n  left: AssignmentExpression['left'],\r\n  right: AssignmentExpression['right'],\r\n): AssignmentExpression {\r\n  return {\r\n    type: NodeTypes.JS_ASSIGNMENT_EXPRESSION,\r\n    left,\r\n    right,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createSequenceExpression(\r\n  expressions: SequenceExpression['expressions'],\r\n): SequenceExpression {\r\n  return {\r\n    type: NodeTypes.JS_SEQUENCE_EXPRESSION,\r\n    expressions,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createReturnStatement(\r\n  returns: ReturnStatement['returns'],\r\n): ReturnStatement {\r\n  return {\r\n    type: NodeTypes.JS_RETURN_STATEMENT,\r\n    returns,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function getVNodeHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE\r\n}\r\n\r\nexport function getVNodeBlockHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK\r\n}\r\n\r\nexport function convertToBlock(\r\n  node: VNodeCall,\r\n  { helper, removeHelper, inSSR }: TransformContext,\r\n) {\r\n  if (!node.isBlock) {\r\n    node.isBlock = true\r\n    removeHelper(getVNodeHelper(inSSR, node.isComponent))\r\n    helper(OPEN_BLOCK)\r\n    helper(getVNodeBlockHelper(inSSR, node.isComponent))\r\n  }\r\n}\r\n","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/**\r\n * This Tokenizer is adapted from htmlparser2 under the MIT License listed at\r\n * https://github.com/fb55/htmlparser2/blob/master/LICENSE\r\n\r\nCopyright 2010, 2011, Chris Winberry <chris@winberry.net>. All rights reserved.\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to\r\ndeal in the Software without restriction, including without limitation the\r\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\nsell copies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\nIN THE SOFTWARE.\r\n */\r\n\r\nimport { ErrorCodes } from './errors'\r\nimport type { ElementNode, Position } from './ast'\r\n\r\n/**\r\n * Note: entities is a non-browser-build-only dependency.\r\n * In the browser, we use an HTML element to do the decoding.\r\n * Make sure all imports from entities are only used in non-browser branches\r\n * so that it can be properly treeshaken.\r\n */\r\nimport {\r\n  DecodingMode,\r\n  EntityDecoder,\r\n  fromCodePoint,\r\n  htmlDecodeTree,\r\n} from 'entities/lib/decode.js'\r\n\r\nexport enum ParseMode {\r\n  BASE,\r\n  HTML,\r\n  SFC,\r\n}\r\n\r\nexport enum CharCodes {\r\n  Tab = 0x9, // \"\\t\"\r\n  NewLine = 0xa, // \"\\n\"\r\n  FormFeed = 0xc, // \"\\f\"\r\n  CarriageReturn = 0xd, // \"\\r\"\r\n  Space = 0x20, // \" \"\r\n  ExclamationMark = 0x21, // \"!\"\r\n  Number = 0x23, // \"#\"\r\n  Amp = 0x26, // \"&\"\r\n  SingleQuote = 0x27, // \"'\"\r\n  DoubleQuote = 0x22, // '\"'\r\n  GraveAccent = 96, // \"`\"\r\n  Dash = 0x2d, // \"-\"\r\n  Slash = 0x2f, // \"/\"\r\n  Zero = 0x30, // \"0\"\r\n  Nine = 0x39, // \"9\"\r\n  Semi = 0x3b, // \";\"\r\n  Lt = 0x3c, // \"<\"\r\n  Eq = 0x3d, // \"=\"\r\n  Gt = 0x3e, // \">\"\r\n  Questionmark = 0x3f, // \"?\"\r\n  UpperA = 0x41, // \"A\"\r\n  LowerA = 0x61, // \"a\"\r\n  UpperF = 0x46, // \"F\"\r\n  LowerF = 0x66, // \"f\"\r\n  UpperZ = 0x5a, // \"Z\"\r\n  LowerZ = 0x7a, // \"z\"\r\n  LowerX = 0x78, // \"x\"\r\n  LowerV = 0x76, // \"v\"\r\n  Dot = 0x2e, // \".\"\r\n  Colon = 0x3a, // \":\"\r\n  At = 0x40, // \"@\"\r\n  LeftSquare = 91, // \"[\"\r\n  RightSquare = 93, // \"]\"\r\n}\r\n\r\nconst defaultDelimitersOpen = new Uint8Array([123, 123]) // \"{{\"\r\nconst defaultDelimitersClose = new Uint8Array([125, 125]) // \"}}\"\r\n\r\n/** All the states the tokenizer can be in. */\r\nexport enum State {\r\n  Text = 1,\r\n\r\n  // interpolation\r\n  InterpolationOpen,\r\n  Interpolation,\r\n  InterpolationClose,\r\n\r\n  // Tags\r\n  BeforeTagName, // After <\r\n  InTagName,\r\n  InSelfClosingTag,\r\n  BeforeClosingTagName,\r\n  InClosingTagName,\r\n  AfterClosingTagName,\r\n\r\n  // Attrs\r\n  BeforeAttrName,\r\n  InAttrName,\r\n  InDirName,\r\n  InDirArg,\r\n  InDirDynamicArg,\r\n  InDirModifier,\r\n  AfterAttrName,\r\n  BeforeAttrValue,\r\n  InAttrValueDq, // \"\r\n  InAttrValueSq, // '\r\n  InAttrValueNq,\r\n\r\n  // Declarations\r\n  BeforeDeclaration, // !\r\n  InDeclaration,\r\n\r\n  // Processing instructions\r\n  InProcessingInstruction, // ?\r\n\r\n  // Comments & CDATA\r\n  BeforeComment,\r\n  CDATASequence,\r\n  InSpecialComment,\r\n  InCommentLike,\r\n\r\n  // Special tags\r\n  BeforeSpecialS, // Decide if we deal with `<script` or `<style`\r\n  BeforeSpecialT, // Decide if we deal with `<title` or `<textarea`\r\n  SpecialStartSequence,\r\n  InRCDATA,\r\n\r\n  InEntity,\r\n\r\n  InSFCRootTagName,\r\n}\r\n\r\n/**\r\n * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a\r\n * tag name.\r\n */\r\nfunction isTagStartChar(c: number): boolean {\r\n  return (\r\n    (c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\r\n    (c >= CharCodes.UpperA && c <= CharCodes.UpperZ)\r\n  )\r\n}\r\n\r\nexport function isWhitespace(c: number): boolean {\r\n  return (\r\n    c === CharCodes.Space ||\r\n    c === CharCodes.NewLine ||\r\n    c === CharCodes.Tab ||\r\n    c === CharCodes.FormFeed ||\r\n    c === CharCodes.CarriageReturn\r\n  )\r\n}\r\n\r\nfunction isEndOfTagSection(c: number): boolean {\r\n  return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c)\r\n}\r\n\r\nexport function toCharCodes(str: string): Uint8Array {\r\n  const ret = new Uint8Array(str.length)\r\n  for (let i = 0; i < str.length; i++) {\r\n    ret[i] = str.charCodeAt(i)\r\n  }\r\n  return ret\r\n}\r\n\r\nexport enum QuoteType {\r\n  NoValue = 0,\r\n  Unquoted = 1,\r\n  Single = 2,\r\n  Double = 3,\r\n}\r\n\r\nexport interface Callbacks {\r\n  ontext(start: number, endIndex: number): void\r\n  ontextentity(char: string, start: number, endIndex: number): void\r\n\r\n  oninterpolation(start: number, endIndex: number): void\r\n\r\n  onopentagname(start: number, endIndex: number): void\r\n  onopentagend(endIndex: number): void\r\n  onselfclosingtag(endIndex: number): void\r\n  onclosetag(start: number, endIndex: number): void\r\n\r\n  onattribdata(start: number, endIndex: number): void\r\n  onattribentity(char: string, start: number, end: number): void\r\n  onattribend(quote: QuoteType, endIndex: number): void\r\n  onattribname(start: number, endIndex: number): void\r\n  onattribnameend(endIndex: number): void\r\n\r\n  ondirname(start: number, endIndex: number): void\r\n  ondirarg(start: number, endIndex: number): void\r\n  ondirmodifier(start: number, endIndex: number): void\r\n\r\n  oncomment(start: number, endIndex: number): void\r\n  oncdata(start: number, endIndex: number): void\r\n\r\n  onprocessinginstruction(start: number, endIndex: number): void\r\n  // ondeclaration(start: number, endIndex: number): void\r\n  onend(): void\r\n  onerr(code: ErrorCodes, index: number): void\r\n}\r\n\r\n/**\r\n * Sequences used to match longer strings.\r\n *\r\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\r\n * sequences with an increased offset.\r\n */\r\nexport const Sequences = {\r\n  Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]), // CDATA[\r\n  CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]), // ]]>\r\n  CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]), // `-->`\r\n  ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]), // `</script`\r\n  StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]), // `</style`\r\n  TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\r\n  TextareaEnd: new Uint8Array([\r\n    0x3c, 0x2f, 116, 101, 120, 116, 97, 114, 101, 97,\r\n  ]), // `</textarea\r\n}\r\n\r\nexport default class Tokenizer {\r\n  /** The current state the tokenizer is in. */\r\n  public state = State.Text\r\n  /** The read buffer. */\r\n  private buffer = ''\r\n  /** The beginning of the section that is currently being read. */\r\n  public sectionStart = 0\r\n  /** The index within the buffer that we are currently looking at. */\r\n  private index = 0\r\n  /** The start of the last entity. */\r\n  private entityStart = 0\r\n  /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\r\n  private baseState = State.Text\r\n  /** For special parsing behavior inside of script and style tags. */\r\n  public inRCDATA = false\r\n  /** For disabling RCDATA tags handling */\r\n  public inXML = false\r\n  /** For disabling interpolation parsing in v-pre */\r\n  public inVPre = false\r\n  /** Record newline positions for fast line / column calculation */\r\n  private newlines: number[] = []\r\n\r\n  private readonly entityDecoder?: EntityDecoder\r\n\r\n  public mode = ParseMode.BASE\r\n  public get inSFCRoot() {\r\n    return this.mode === ParseMode.SFC && this.stack.length === 0\r\n  }\r\n\r\n  constructor(\r\n    private readonly stack: ElementNode[],\r\n    private readonly cbs: Callbacks,\r\n  ) {\r\n    if (!__BROWSER__) {\r\n      this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) =>\r\n        this.emitCodePoint(cp, consumed),\r\n      )\r\n    }\r\n  }\r\n\r\n  public reset(): void {\r\n    this.state = State.Text\r\n    this.mode = ParseMode.BASE\r\n    this.buffer = ''\r\n    this.sectionStart = 0\r\n    this.index = 0\r\n    this.baseState = State.Text\r\n    this.inRCDATA = false\r\n    this.currentSequence = undefined!\r\n    this.newlines.length = 0\r\n    this.delimiterOpen = defaultDelimitersOpen\r\n    this.delimiterClose = defaultDelimitersClose\r\n  }\r\n\r\n  /**\r\n   * Generate Position object with line / column information using recorded\r\n   * newline positions. We know the index is always going to be an already\r\n   * processed index, so all the newlines up to this index should have been\r\n   * recorded.\r\n   */\r\n  public getPos(index: number): Position {\r\n    let line = 1\r\n    let column = index + 1\r\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\r\n      const newlineIndex = this.newlines[i]\r\n      if (index > newlineIndex) {\r\n        line = i + 2\r\n        column = index - newlineIndex\r\n        break\r\n      }\r\n    }\r\n    return {\r\n      column,\r\n      line,\r\n      offset: index,\r\n    }\r\n  }\r\n\r\n  private peek() {\r\n    return this.buffer.charCodeAt(this.index + 1)\r\n  }\r\n\r\n  private stateText(c: number): void {\r\n    if (c === CharCodes.Lt) {\r\n      if (this.index > this.sectionStart) {\r\n        this.cbs.ontext(this.sectionStart, this.index)\r\n      }\r\n      this.state = State.BeforeTagName\r\n      this.sectionStart = this.index\r\n    } else if (!__BROWSER__ && c === CharCodes.Amp) {\r\n      this.startEntity()\r\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\r\n      this.state = State.InterpolationOpen\r\n      this.delimiterIndex = 0\r\n      this.stateInterpolationOpen(c)\r\n    }\r\n  }\r\n\r\n  public delimiterOpen: Uint8Array = defaultDelimitersOpen\r\n  public delimiterClose: Uint8Array = defaultDelimitersClose\r\n  private delimiterIndex = -1\r\n\r\n  private stateInterpolationOpen(c: number): void {\r\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\r\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\r\n        const start = this.index + 1 - this.delimiterOpen.length\r\n        if (start > this.sectionStart) {\r\n          this.cbs.ontext(this.sectionStart, start)\r\n        }\r\n        this.state = State.Interpolation\r\n        this.sectionStart = start\r\n      } else {\r\n        this.delimiterIndex++\r\n      }\r\n    } else if (this.inRCDATA) {\r\n      this.state = State.InRCDATA\r\n      this.stateInRCDATA(c)\r\n    } else {\r\n      this.state = State.Text\r\n      this.stateText(c)\r\n    }\r\n  }\r\n\r\n  private stateInterpolation(c: number): void {\r\n    if (c === this.delimiterClose[0]) {\r\n      this.state = State.InterpolationClose\r\n      this.delimiterIndex = 0\r\n      this.stateInterpolationClose(c)\r\n    }\r\n  }\r\n\r\n  private stateInterpolationClose(c: number) {\r\n    if (c === this.delimiterClose[this.delimiterIndex]) {\r\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\r\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1)\r\n        if (this.inRCDATA) {\r\n          this.state = State.InRCDATA\r\n        } else {\r\n          this.state = State.Text\r\n        }\r\n        this.sectionStart = this.index + 1\r\n      } else {\r\n        this.delimiterIndex++\r\n      }\r\n    } else {\r\n      this.state = State.Interpolation\r\n      this.stateInterpolation(c)\r\n    }\r\n  }\r\n\r\n  public currentSequence: Uint8Array = undefined!\r\n  private sequenceIndex = 0\r\n  private stateSpecialStartSequence(c: number): void {\r\n    const isEnd = this.sequenceIndex === this.currentSequence.length\r\n    const isMatch = isEnd\r\n      ? // If we are at the end of the sequence, make sure the tag name has ended\r\n        isEndOfTagSection(c)\r\n      : // Otherwise, do a case-insensitive comparison\r\n        (c | 0x20) === this.currentSequence[this.sequenceIndex]\r\n\r\n    if (!isMatch) {\r\n      this.inRCDATA = false\r\n    } else if (!isEnd) {\r\n      this.sequenceIndex++\r\n      return\r\n    }\r\n\r\n    this.sequenceIndex = 0\r\n    this.state = State.InTagName\r\n    this.stateInTagName(c)\r\n  }\r\n\r\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\r\n  private stateInRCDATA(c: number): void {\r\n    if (this.sequenceIndex === this.currentSequence.length) {\r\n      if (c === CharCodes.Gt || isWhitespace(c)) {\r\n        const endOfText = this.index - this.currentSequence.length\r\n\r\n        if (this.sectionStart < endOfText) {\r\n          // Spoof the index so that reported locations match up.\r\n          const actualIndex = this.index\r\n          this.index = endOfText\r\n          this.cbs.ontext(this.sectionStart, endOfText)\r\n          this.index = actualIndex\r\n        }\r\n\r\n        this.sectionStart = endOfText + 2 // Skip over the `</`\r\n        this.stateInClosingTagName(c)\r\n        this.inRCDATA = false\r\n        return // We are done; skip the rest of the function.\r\n      }\r\n\r\n      this.sequenceIndex = 0\r\n    }\r\n\r\n    if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\r\n      this.sequenceIndex += 1\r\n    } else if (this.sequenceIndex === 0) {\r\n      if (\r\n        this.currentSequence === Sequences.TitleEnd ||\r\n        (this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot)\r\n      ) {\r\n        // We have to parse entities in <title> and <textarea> tags.\r\n        if (!__BROWSER__ && c === CharCodes.Amp) {\r\n          this.startEntity()\r\n        } else if (c === this.delimiterOpen[0]) {\r\n          // We also need to handle interpolation\r\n          this.state = State.InterpolationOpen\r\n          this.delimiterIndex = 0\r\n          this.stateInterpolationOpen(c)\r\n        }\r\n      } else if (this.fastForwardTo(CharCodes.Lt)) {\r\n        // Outside of <title> and <textarea> tags, we can fast-forward.\r\n        this.sequenceIndex = 1\r\n      }\r\n    } else {\r\n      // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\r\n      this.sequenceIndex = Number(c === CharCodes.Lt)\r\n    }\r\n  }\r\n\r\n  private stateCDATASequence(c: number): void {\r\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\r\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\r\n        this.state = State.InCommentLike\r\n        this.currentSequence = Sequences.CdataEnd\r\n        this.sequenceIndex = 0\r\n        this.sectionStart = this.index + 1\r\n      }\r\n    } else {\r\n      this.sequenceIndex = 0\r\n      this.state = State.InDeclaration\r\n      this.stateInDeclaration(c) // Reconsume the character\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When we wait for one specific character, we can speed things up\r\n   * by skipping through the buffer until we find it.\r\n   *\r\n   * @returns Whether the character was found.\r\n   */\r\n  private fastForwardTo(c: number): boolean {\r\n    while (++this.index < this.buffer.length) {\r\n      const cc = this.buffer.charCodeAt(this.index)\r\n      if (cc === CharCodes.NewLine) {\r\n        this.newlines.push(this.index)\r\n      }\r\n      if (cc === c) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    /*\r\n     * We increment the index at the end of the `parse` loop,\r\n     * so set it to `buffer.length - 1` here.\r\n     *\r\n     * TODO: Refactor `parse` to increment index before calling states.\r\n     */\r\n    this.index = this.buffer.length - 1\r\n\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Comments and CDATA end with `-->` and `]]>`.\r\n   *\r\n   * Their common qualities are:\r\n   * - Their end sequences have a distinct character they start with.\r\n   * - That character is then repeated, so we have to check multiple repeats.\r\n   * - All characters but the start character of the sequence can be skipped.\r\n   */\r\n  private stateInCommentLike(c: number): void {\r\n    if (c === this.currentSequence[this.sequenceIndex]) {\r\n      if (++this.sequenceIndex === this.currentSequence.length) {\r\n        if (this.currentSequence === Sequences.CdataEnd) {\r\n          this.cbs.oncdata(this.sectionStart, this.index - 2)\r\n        } else {\r\n          this.cbs.oncomment(this.sectionStart, this.index - 2)\r\n        }\r\n\r\n        this.sequenceIndex = 0\r\n        this.sectionStart = this.index + 1\r\n        this.state = State.Text\r\n      }\r\n    } else if (this.sequenceIndex === 0) {\r\n      // Fast-forward to the first character of the sequence\r\n      if (this.fastForwardTo(this.currentSequence[0])) {\r\n        this.sequenceIndex = 1\r\n      }\r\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\r\n      // Allow long sequences, eg. --->, ]]]>\r\n      this.sequenceIndex = 0\r\n    }\r\n  }\r\n\r\n  private startSpecial(sequence: Uint8Array, offset: number) {\r\n    this.enterRCDATA(sequence, offset)\r\n    this.state = State.SpecialStartSequence\r\n  }\r\n\r\n  public enterRCDATA(sequence: Uint8Array, offset: number) {\r\n    this.inRCDATA = true\r\n    this.currentSequence = sequence\r\n    this.sequenceIndex = offset\r\n  }\r\n\r\n  private stateBeforeTagName(c: number): void {\r\n    if (c === CharCodes.ExclamationMark) {\r\n      this.state = State.BeforeDeclaration\r\n      this.sectionStart = this.index + 1\r\n    } else if (c === CharCodes.Questionmark) {\r\n      this.state = State.InProcessingInstruction\r\n      this.sectionStart = this.index + 1\r\n    } else if (isTagStartChar(c)) {\r\n      this.sectionStart = this.index\r\n      if (this.mode === ParseMode.BASE) {\r\n        // no special tags in base mode\r\n        this.state = State.InTagName\r\n      } else if (this.inSFCRoot) {\r\n        // SFC mode + root level\r\n        // - everything except <template> is RAWTEXT\r\n        // - <template> with lang other than html is also RAWTEXT\r\n        this.state = State.InSFCRootTagName\r\n      } else if (!this.inXML) {\r\n        // HTML mode\r\n        // - <script>, <style> RAWTEXT\r\n        // - <title>, <textarea> RCDATA\r\n        const lower = c | 0x20\r\n        if (lower === 116 /* t */) {\r\n          this.state = State.BeforeSpecialT\r\n        } else {\r\n          this.state =\r\n            lower === 115 /* s */ ? State.BeforeSpecialS : State.InTagName\r\n        }\r\n      } else {\r\n        this.state = State.InTagName\r\n      }\r\n    } else if (c === CharCodes.Slash) {\r\n      this.state = State.BeforeClosingTagName\r\n    } else {\r\n      this.state = State.Text\r\n      this.stateText(c)\r\n    }\r\n  }\r\n  private stateInTagName(c: number): void {\r\n    if (isEndOfTagSection(c)) {\r\n      this.handleTagName(c)\r\n    }\r\n  }\r\n  private stateInSFCRootTagName(c: number): void {\r\n    if (isEndOfTagSection(c)) {\r\n      const tag = this.buffer.slice(this.sectionStart, this.index)\r\n      if (tag !== 'template') {\r\n        this.enterRCDATA(toCharCodes(`</` + tag), 0)\r\n      }\r\n      this.handleTagName(c)\r\n    }\r\n  }\r\n  private handleTagName(c: number) {\r\n    this.cbs.onopentagname(this.sectionStart, this.index)\r\n    this.sectionStart = -1\r\n    this.state = State.BeforeAttrName\r\n    this.stateBeforeAttrName(c)\r\n  }\r\n  private stateBeforeClosingTagName(c: number): void {\r\n    if (isWhitespace(c)) {\r\n      // Ignore\r\n    } else if (c === CharCodes.Gt) {\r\n      if (__DEV__ || !__BROWSER__) {\r\n        this.cbs.onerr(ErrorCodes.MISSING_END_TAG_NAME, this.index)\r\n      }\r\n      this.state = State.Text\r\n      // Ignore\r\n      this.sectionStart = this.index + 1\r\n    } else {\r\n      this.state = isTagStartChar(c)\r\n        ? State.InClosingTagName\r\n        : State.InSpecialComment\r\n      this.sectionStart = this.index\r\n    }\r\n  }\r\n  private stateInClosingTagName(c: number): void {\r\n    if (c === CharCodes.Gt || isWhitespace(c)) {\r\n      this.cbs.onclosetag(this.sectionStart, this.index)\r\n      this.sectionStart = -1\r\n      this.state = State.AfterClosingTagName\r\n      this.stateAfterClosingTagName(c)\r\n    }\r\n  }\r\n  private stateAfterClosingTagName(c: number): void {\r\n    // Skip everything until \">\"\r\n    if (c === CharCodes.Gt) {\r\n      this.state = State.Text\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateBeforeAttrName(c: number): void {\r\n    if (c === CharCodes.Gt) {\r\n      this.cbs.onopentagend(this.index)\r\n      if (this.inRCDATA) {\r\n        this.state = State.InRCDATA\r\n      } else {\r\n        this.state = State.Text\r\n      }\r\n      this.sectionStart = this.index + 1\r\n    } else if (c === CharCodes.Slash) {\r\n      this.state = State.InSelfClosingTag\r\n      if ((__DEV__ || !__BROWSER__) && this.peek() !== CharCodes.Gt) {\r\n        this.cbs.onerr(ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG, this.index)\r\n      }\r\n    } else if (c === CharCodes.Lt && this.peek() === CharCodes.Slash) {\r\n      // special handling for </ appearing in open tag state\r\n      // this is different from standard HTML parsing but makes practical sense\r\n      // especially for parsing intermediate input state in IDEs.\r\n      this.cbs.onopentagend(this.index)\r\n      this.state = State.BeforeTagName\r\n      this.sectionStart = this.index\r\n    } else if (!isWhitespace(c)) {\r\n      if ((__DEV__ || !__BROWSER__) && c === CharCodes.Eq) {\r\n        this.cbs.onerr(\r\n          ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\r\n          this.index,\r\n        )\r\n      }\r\n      this.handleAttrStart(c)\r\n    }\r\n  }\r\n  private handleAttrStart(c: number) {\r\n    if (c === CharCodes.LowerV && this.peek() === CharCodes.Dash) {\r\n      this.state = State.InDirName\r\n      this.sectionStart = this.index\r\n    } else if (\r\n      c === CharCodes.Dot ||\r\n      c === CharCodes.Colon ||\r\n      c === CharCodes.At ||\r\n      c === CharCodes.Number\r\n    ) {\r\n      this.cbs.ondirname(this.index, this.index + 1)\r\n      this.state = State.InDirArg\r\n      this.sectionStart = this.index + 1\r\n    } else {\r\n      this.state = State.InAttrName\r\n      this.sectionStart = this.index\r\n    }\r\n  }\r\n  private stateInSelfClosingTag(c: number): void {\r\n    if (c === CharCodes.Gt) {\r\n      this.cbs.onselfclosingtag(this.index)\r\n      this.state = State.Text\r\n      this.sectionStart = this.index + 1\r\n      this.inRCDATA = false // Reset special state, in case of self-closing special tags\r\n    } else if (!isWhitespace(c)) {\r\n      this.state = State.BeforeAttrName\r\n      this.stateBeforeAttrName(c)\r\n    }\r\n  }\r\n  private stateInAttrName(c: number): void {\r\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\r\n      this.cbs.onattribname(this.sectionStart, this.index)\r\n      this.handleAttrNameEnd(c)\r\n    } else if (\r\n      (__DEV__ || !__BROWSER__) &&\r\n      (c === CharCodes.DoubleQuote ||\r\n        c === CharCodes.SingleQuote ||\r\n        c === CharCodes.Lt)\r\n    ) {\r\n      this.cbs.onerr(\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n        this.index,\r\n      )\r\n    }\r\n  }\r\n  private stateInDirName(c: number): void {\r\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\r\n      this.cbs.ondirname(this.sectionStart, this.index)\r\n      this.handleAttrNameEnd(c)\r\n    } else if (c === CharCodes.Colon) {\r\n      this.cbs.ondirname(this.sectionStart, this.index)\r\n      this.state = State.InDirArg\r\n      this.sectionStart = this.index + 1\r\n    } else if (c === CharCodes.Dot) {\r\n      this.cbs.ondirname(this.sectionStart, this.index)\r\n      this.state = State.InDirModifier\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateInDirArg(c: number): void {\r\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\r\n      this.cbs.ondirarg(this.sectionStart, this.index)\r\n      this.handleAttrNameEnd(c)\r\n    } else if (c === CharCodes.LeftSquare) {\r\n      this.state = State.InDirDynamicArg\r\n    } else if (c === CharCodes.Dot) {\r\n      this.cbs.ondirarg(this.sectionStart, this.index)\r\n      this.state = State.InDirModifier\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateInDynamicDirArg(c: number): void {\r\n    if (c === CharCodes.RightSquare) {\r\n      this.state = State.InDirArg\r\n    } else if (c === CharCodes.Eq || isEndOfTagSection(c)) {\r\n      this.cbs.ondirarg(this.sectionStart, this.index + 1)\r\n      this.handleAttrNameEnd(c)\r\n      if (__DEV__ || !__BROWSER__) {\r\n        this.cbs.onerr(\r\n          ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\r\n          this.index,\r\n        )\r\n      }\r\n    }\r\n  }\r\n  private stateInDirModifier(c: number): void {\r\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\r\n      this.cbs.ondirmodifier(this.sectionStart, this.index)\r\n      this.handleAttrNameEnd(c)\r\n    } else if (c === CharCodes.Dot) {\r\n      this.cbs.ondirmodifier(this.sectionStart, this.index)\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private handleAttrNameEnd(c: number): void {\r\n    this.sectionStart = this.index\r\n    this.state = State.AfterAttrName\r\n    this.cbs.onattribnameend(this.index)\r\n    this.stateAfterAttrName(c)\r\n  }\r\n  private stateAfterAttrName(c: number): void {\r\n    if (c === CharCodes.Eq) {\r\n      this.state = State.BeforeAttrValue\r\n    } else if (c === CharCodes.Slash || c === CharCodes.Gt) {\r\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart)\r\n      this.sectionStart = -1\r\n      this.state = State.BeforeAttrName\r\n      this.stateBeforeAttrName(c)\r\n    } else if (!isWhitespace(c)) {\r\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart)\r\n      this.handleAttrStart(c)\r\n    }\r\n  }\r\n  private stateBeforeAttrValue(c: number): void {\r\n    if (c === CharCodes.DoubleQuote) {\r\n      this.state = State.InAttrValueDq\r\n      this.sectionStart = this.index + 1\r\n    } else if (c === CharCodes.SingleQuote) {\r\n      this.state = State.InAttrValueSq\r\n      this.sectionStart = this.index + 1\r\n    } else if (!isWhitespace(c)) {\r\n      this.sectionStart = this.index\r\n      this.state = State.InAttrValueNq\r\n      this.stateInAttrValueNoQuotes(c) // Reconsume token\r\n    }\r\n  }\r\n  private handleInAttrValue(c: number, quote: number) {\r\n    if (c === quote || (__BROWSER__ && this.fastForwardTo(quote))) {\r\n      this.cbs.onattribdata(this.sectionStart, this.index)\r\n      this.sectionStart = -1\r\n      this.cbs.onattribend(\r\n        quote === CharCodes.DoubleQuote ? QuoteType.Double : QuoteType.Single,\r\n        this.index + 1,\r\n      )\r\n      this.state = State.BeforeAttrName\r\n    } else if (!__BROWSER__ && c === CharCodes.Amp) {\r\n      this.startEntity()\r\n    }\r\n  }\r\n  private stateInAttrValueDoubleQuotes(c: number): void {\r\n    this.handleInAttrValue(c, CharCodes.DoubleQuote)\r\n  }\r\n  private stateInAttrValueSingleQuotes(c: number): void {\r\n    this.handleInAttrValue(c, CharCodes.SingleQuote)\r\n  }\r\n  private stateInAttrValueNoQuotes(c: number): void {\r\n    if (isWhitespace(c) || c === CharCodes.Gt) {\r\n      this.cbs.onattribdata(this.sectionStart, this.index)\r\n      this.sectionStart = -1\r\n      this.cbs.onattribend(QuoteType.Unquoted, this.index)\r\n      this.state = State.BeforeAttrName\r\n      this.stateBeforeAttrName(c)\r\n    } else if (\r\n      ((__DEV__ || !__BROWSER__) && c === CharCodes.DoubleQuote) ||\r\n      c === CharCodes.SingleQuote ||\r\n      c === CharCodes.Lt ||\r\n      c === CharCodes.Eq ||\r\n      c === CharCodes.GraveAccent\r\n    ) {\r\n      this.cbs.onerr(\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n        this.index,\r\n      )\r\n    } else if (!__BROWSER__ && c === CharCodes.Amp) {\r\n      this.startEntity()\r\n    }\r\n  }\r\n  private stateBeforeDeclaration(c: number): void {\r\n    if (c === CharCodes.LeftSquare) {\r\n      this.state = State.CDATASequence\r\n      this.sequenceIndex = 0\r\n    } else {\r\n      this.state =\r\n        c === CharCodes.Dash ? State.BeforeComment : State.InDeclaration\r\n    }\r\n  }\r\n  private stateInDeclaration(c: number): void {\r\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\r\n      // this.cbs.ondeclaration(this.sectionStart, this.index)\r\n      this.state = State.Text\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateInProcessingInstruction(c: number): void {\r\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\r\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index)\r\n      this.state = State.Text\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateBeforeComment(c: number): void {\r\n    if (c === CharCodes.Dash) {\r\n      this.state = State.InCommentLike\r\n      this.currentSequence = Sequences.CommentEnd\r\n      // Allow short comments (eg. <!-->)\r\n      this.sequenceIndex = 2\r\n      this.sectionStart = this.index + 1\r\n    } else {\r\n      this.state = State.InDeclaration\r\n    }\r\n  }\r\n  private stateInSpecialComment(c: number): void {\r\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\r\n      this.cbs.oncomment(this.sectionStart, this.index)\r\n      this.state = State.Text\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateBeforeSpecialS(c: number): void {\r\n    const lower = c | 0x20\r\n    if (lower === Sequences.ScriptEnd[3]) {\r\n      this.startSpecial(Sequences.ScriptEnd, 4)\r\n    } else if (lower === Sequences.StyleEnd[3]) {\r\n      this.startSpecial(Sequences.StyleEnd, 4)\r\n    } else {\r\n      this.state = State.InTagName\r\n      this.stateInTagName(c) // Consume the token again\r\n    }\r\n  }\r\n  private stateBeforeSpecialT(c: number): void {\r\n    const lower = c | 0x20\r\n    if (lower === Sequences.TitleEnd[3]) {\r\n      this.startSpecial(Sequences.TitleEnd, 4)\r\n    } else if (lower === Sequences.TextareaEnd[3]) {\r\n      this.startSpecial(Sequences.TextareaEnd, 4)\r\n    } else {\r\n      this.state = State.InTagName\r\n      this.stateInTagName(c) // Consume the token again\r\n    }\r\n  }\r\n\r\n  private startEntity() {\r\n    if (!__BROWSER__) {\r\n      this.baseState = this.state\r\n      this.state = State.InEntity\r\n      this.entityStart = this.index\r\n      this.entityDecoder!.startEntity(\r\n        this.baseState === State.Text || this.baseState === State.InRCDATA\r\n          ? DecodingMode.Legacy\r\n          : DecodingMode.Attribute,\r\n      )\r\n    }\r\n  }\r\n\r\n  private stateInEntity(): void {\r\n    if (!__BROWSER__) {\r\n      const length = this.entityDecoder!.write(this.buffer, this.index)\r\n\r\n      // If `length` is positive, we are done with the entity.\r\n      if (length >= 0) {\r\n        this.state = this.baseState\r\n\r\n        if (length === 0) {\r\n          this.index = this.entityStart\r\n        }\r\n      } else {\r\n        // Mark buffer as consumed.\r\n        this.index = this.buffer.length - 1\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterates through the buffer, calling the function corresponding to the current state.\r\n   *\r\n   * States that are more likely to be hit are higher up, as a performance improvement.\r\n   */\r\n  public parse(input: string) {\r\n    this.buffer = input\r\n    while (this.index < this.buffer.length) {\r\n      const c = this.buffer.charCodeAt(this.index)\r\n      if (c === CharCodes.NewLine) {\r\n        this.newlines.push(this.index)\r\n      }\r\n      switch (this.state) {\r\n        case State.Text: {\r\n          this.stateText(c)\r\n          break\r\n        }\r\n        case State.InterpolationOpen: {\r\n          this.stateInterpolationOpen(c)\r\n          break\r\n        }\r\n        case State.Interpolation: {\r\n          this.stateInterpolation(c)\r\n          break\r\n        }\r\n        case State.InterpolationClose: {\r\n          this.stateInterpolationClose(c)\r\n          break\r\n        }\r\n        case State.SpecialStartSequence: {\r\n          this.stateSpecialStartSequence(c)\r\n          break\r\n        }\r\n        case State.InRCDATA: {\r\n          this.stateInRCDATA(c)\r\n          break\r\n        }\r\n        case State.CDATASequence: {\r\n          this.stateCDATASequence(c)\r\n          break\r\n        }\r\n        case State.InAttrValueDq: {\r\n          this.stateInAttrValueDoubleQuotes(c)\r\n          break\r\n        }\r\n        case State.InAttrName: {\r\n          this.stateInAttrName(c)\r\n          break\r\n        }\r\n        case State.InDirName: {\r\n          this.stateInDirName(c)\r\n          break\r\n        }\r\n        case State.InDirArg: {\r\n          this.stateInDirArg(c)\r\n          break\r\n        }\r\n        case State.InDirDynamicArg: {\r\n          this.stateInDynamicDirArg(c)\r\n          break\r\n        }\r\n        case State.InDirModifier: {\r\n          this.stateInDirModifier(c)\r\n          break\r\n        }\r\n        case State.InCommentLike: {\r\n          this.stateInCommentLike(c)\r\n          break\r\n        }\r\n        case State.InSpecialComment: {\r\n          this.stateInSpecialComment(c)\r\n          break\r\n        }\r\n        case State.BeforeAttrName: {\r\n          this.stateBeforeAttrName(c)\r\n          break\r\n        }\r\n        case State.InTagName: {\r\n          this.stateInTagName(c)\r\n          break\r\n        }\r\n        case State.InSFCRootTagName: {\r\n          this.stateInSFCRootTagName(c)\r\n          break\r\n        }\r\n        case State.InClosingTagName: {\r\n          this.stateInClosingTagName(c)\r\n          break\r\n        }\r\n        case State.BeforeTagName: {\r\n          this.stateBeforeTagName(c)\r\n          break\r\n        }\r\n        case State.AfterAttrName: {\r\n          this.stateAfterAttrName(c)\r\n          break\r\n        }\r\n        case State.InAttrValueSq: {\r\n          this.stateInAttrValueSingleQuotes(c)\r\n          break\r\n        }\r\n        case State.BeforeAttrValue: {\r\n          this.stateBeforeAttrValue(c)\r\n          break\r\n        }\r\n        case State.BeforeClosingTagName: {\r\n          this.stateBeforeClosingTagName(c)\r\n          break\r\n        }\r\n        case State.AfterClosingTagName: {\r\n          this.stateAfterClosingTagName(c)\r\n          break\r\n        }\r\n        case State.BeforeSpecialS: {\r\n          this.stateBeforeSpecialS(c)\r\n          break\r\n        }\r\n        case State.BeforeSpecialT: {\r\n          this.stateBeforeSpecialT(c)\r\n          break\r\n        }\r\n        case State.InAttrValueNq: {\r\n          this.stateInAttrValueNoQuotes(c)\r\n          break\r\n        }\r\n        case State.InSelfClosingTag: {\r\n          this.stateInSelfClosingTag(c)\r\n          break\r\n        }\r\n        case State.InDeclaration: {\r\n          this.stateInDeclaration(c)\r\n          break\r\n        }\r\n        case State.BeforeDeclaration: {\r\n          this.stateBeforeDeclaration(c)\r\n          break\r\n        }\r\n        case State.BeforeComment: {\r\n          this.stateBeforeComment(c)\r\n          break\r\n        }\r\n        case State.InProcessingInstruction: {\r\n          this.stateInProcessingInstruction(c)\r\n          break\r\n        }\r\n        case State.InEntity: {\r\n          this.stateInEntity()\r\n          break\r\n        }\r\n      }\r\n      this.index++\r\n    }\r\n    this.cleanup()\r\n    this.finish()\r\n  }\r\n\r\n  /**\r\n   * Remove data that has already been consumed from the buffer.\r\n   */\r\n  private cleanup() {\r\n    // If we are inside of text or attributes, emit what we already have.\r\n    if (this.sectionStart !== this.index) {\r\n      if (\r\n        this.state === State.Text ||\r\n        (this.state === State.InRCDATA && this.sequenceIndex === 0)\r\n      ) {\r\n        this.cbs.ontext(this.sectionStart, this.index)\r\n        this.sectionStart = this.index\r\n      } else if (\r\n        this.state === State.InAttrValueDq ||\r\n        this.state === State.InAttrValueSq ||\r\n        this.state === State.InAttrValueNq\r\n      ) {\r\n        this.cbs.onattribdata(this.sectionStart, this.index)\r\n        this.sectionStart = this.index\r\n      }\r\n    }\r\n  }\r\n\r\n  private finish() {\r\n    if (!__BROWSER__ && this.state === State.InEntity) {\r\n      this.entityDecoder!.end()\r\n      this.state = this.baseState\r\n    }\r\n\r\n    this.handleTrailingData()\r\n\r\n    this.cbs.onend()\r\n  }\r\n\r\n  /** Handle any trailing data. */\r\n  private handleTrailingData() {\r\n    const endIndex = this.buffer.length\r\n\r\n    // If there is no remaining data, we are done.\r\n    if (this.sectionStart >= endIndex) {\r\n      return\r\n    }\r\n\r\n    if (this.state === State.InCommentLike) {\r\n      if (this.currentSequence === Sequences.CdataEnd) {\r\n        this.cbs.oncdata(this.sectionStart, endIndex)\r\n      } else {\r\n        this.cbs.oncomment(this.sectionStart, endIndex)\r\n      }\r\n    } else if (\r\n      this.state === State.InTagName ||\r\n      this.state === State.BeforeAttrName ||\r\n      this.state === State.BeforeAttrValue ||\r\n      this.state === State.AfterAttrName ||\r\n      this.state === State.InAttrName ||\r\n      this.state === State.InDirName ||\r\n      this.state === State.InDirArg ||\r\n      this.state === State.InDirDynamicArg ||\r\n      this.state === State.InDirModifier ||\r\n      this.state === State.InAttrValueSq ||\r\n      this.state === State.InAttrValueDq ||\r\n      this.state === State.InAttrValueNq ||\r\n      this.state === State.InClosingTagName\r\n    ) {\r\n      /*\r\n       * If we are currently in an opening or closing tag, us not calling the\r\n       * respective callback signals that the tag should be ignored.\r\n       */\r\n    } else {\r\n      this.cbs.ontext(this.sectionStart, endIndex)\r\n    }\r\n  }\r\n\r\n  private emitCodePoint(cp: number, consumed: number): void {\r\n    if (!__BROWSER__) {\r\n      if (this.baseState !== State.Text && this.baseState !== State.InRCDATA) {\r\n        if (this.sectionStart < this.entityStart) {\r\n          this.cbs.onattribdata(this.sectionStart, this.entityStart)\r\n        }\r\n        this.sectionStart = this.entityStart + consumed\r\n        this.index = this.sectionStart - 1\r\n\r\n        this.cbs.onattribentity(\r\n          fromCodePoint(cp),\r\n          this.entityStart,\r\n          this.sectionStart,\r\n        )\r\n      } else {\r\n        if (this.sectionStart < this.entityStart) {\r\n          this.cbs.ontext(this.sectionStart, this.entityStart)\r\n        }\r\n        this.sectionStart = this.entityStart + consumed\r\n        this.index = this.sectionStart - 1\r\n\r\n        this.cbs.ontextentity(\r\n          fromCodePoint(cp),\r\n          this.entityStart,\r\n          this.sectionStart,\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { SourceLocation } from '../ast'\r\nimport type { CompilerError } from '../errors'\r\nimport type { MergedParserOptions } from '../parser'\r\nimport type { TransformContext } from '../transform'\r\n\r\nexport type CompilerCompatConfig = Partial<\r\n  Record<CompilerDeprecationTypes, boolean | 'suppress-warning'>\r\n> & {\r\n  MODE?: 2 | 3\r\n}\r\n\r\nexport interface CompilerCompatOptions {\r\n  compatConfig?: CompilerCompatConfig\r\n}\r\n\r\nexport enum CompilerDeprecationTypes {\r\n  COMPILER_IS_ON_ELEMENT = 'COMPILER_IS_ON_ELEMENT',\r\n  COMPILER_V_BIND_SYNC = 'COMPILER_V_BIND_SYNC',\r\n  COMPILER_V_BIND_OBJECT_ORDER = 'COMPILER_V_BIND_OBJECT_ORDER',\r\n  COMPILER_V_ON_NATIVE = 'COMPILER_V_ON_NATIVE',\r\n  COMPILER_V_IF_V_FOR_PRECEDENCE = 'COMPILER_V_IF_V_FOR_PRECEDENCE',\r\n  COMPILER_NATIVE_TEMPLATE = 'COMPILER_NATIVE_TEMPLATE',\r\n  COMPILER_INLINE_TEMPLATE = 'COMPILER_INLINE_TEMPLATE',\r\n  COMPILER_FILTERS = 'COMPILER_FILTERS',\r\n}\r\n\r\ntype DeprecationData = {\r\n  message: string | ((...args: any[]) => string)\r\n  link?: string\r\n}\r\n\r\nconst deprecationData: Record<CompilerDeprecationTypes, DeprecationData> = {\r\n  [CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT]: {\r\n    message:\r\n      `Platform-native elements with \"is\" prop will no longer be ` +\r\n      `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\r\n      `prefixed with \"vue:\".`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`,\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_V_BIND_SYNC]: {\r\n    message: key =>\r\n      `.sync modifier for v-bind has been removed. Use v-model with ` +\r\n      `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\r\n      `\\`v-model:${key}\\`.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`,\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER]: {\r\n    message:\r\n      `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\r\n      `object spread: it will now overwrite an existing non-mergeable attribute ` +\r\n      `that appears before v-bind in the case of conflict. ` +\r\n      `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\r\n      `You can also suppress this warning if the usage is intended.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`,\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_V_ON_NATIVE]: {\r\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`,\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE]: {\r\n    message:\r\n      `v-if / v-for precedence when used on the same element has changed ` +\r\n      `in Vue 3: v-if now takes higher precedence and will no longer have ` +\r\n      `access to v-for scope variables. It is best to avoid the ambiguity ` +\r\n      `with <template> tags or use a computed property that filters v-for ` +\r\n      `data source.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`,\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE]: {\r\n    message:\r\n      `<template> with no special directives will render as a native template ` +\r\n      `element instead of its inner content in Vue 3.`,\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE]: {\r\n    message: `\"inline-template\" has been removed in Vue 3.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`,\r\n  },\r\n\r\n  [CompilerDeprecationTypes.COMPILER_FILTERS]: {\r\n    message:\r\n      `filters have been removed in Vue 3. ` +\r\n      `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n      `Use method calls or computed properties instead.`,\r\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`,\r\n  },\r\n}\r\n\r\nfunction getCompatValue(\r\n  key: CompilerDeprecationTypes | 'MODE',\r\n  { compatConfig }: MergedParserOptions | TransformContext,\r\n) {\r\n  const value = compatConfig && compatConfig[key]\r\n  if (key === 'MODE') {\r\n    return value || 3 // compiler defaults to v3 behavior\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n\r\nexport function isCompatEnabled(\r\n  key: CompilerDeprecationTypes,\r\n  context: MergedParserOptions | TransformContext,\r\n) {\r\n  const mode = getCompatValue('MODE', context)\r\n  const value = getCompatValue(key, context)\r\n  // in v3 mode, only enable if explicitly set to true\r\n  // otherwise enable for any non-false value\r\n  return mode === 3 ? value === true : value !== false\r\n}\r\n\r\nexport function checkCompatEnabled(\r\n  key: CompilerDeprecationTypes,\r\n  context: MergedParserOptions | TransformContext,\r\n  loc: SourceLocation | null,\r\n  ...args: any[]\r\n): boolean {\r\n  const enabled = isCompatEnabled(key, context)\r\n  if (__DEV__ && enabled) {\r\n    warnDeprecation(key, context, loc, ...args)\r\n  }\r\n  return enabled\r\n}\r\n\r\nexport function warnDeprecation(\r\n  key: CompilerDeprecationTypes,\r\n  context: MergedParserOptions | TransformContext,\r\n  loc: SourceLocation | null,\r\n  ...args: any[]\r\n) {\r\n  const val = getCompatValue(key, context)\r\n  if (val === 'suppress-warning') {\r\n    return\r\n  }\r\n  const { message, link } = deprecationData[key]\r\n  const msg = `(deprecation ${key}) ${\r\n    typeof message === 'function' ? message(...args) : message\r\n  }${link ? `\\n  Details: ${link}` : ``}`\r\n\r\n  const err = new SyntaxError(msg) as CompilerError\r\n  err.code = key\r\n  if (loc) err.loc = loc\r\n  context.onWarn(err)\r\n}\r\n","import type { SourceLocation } from './ast'\r\n\r\nexport interface CompilerError extends SyntaxError {\r\n  code: number | string\r\n  loc?: SourceLocation\r\n}\r\n\r\nexport interface CoreCompilerError extends CompilerError {\r\n  code: ErrorCodes\r\n}\r\n\r\nexport function defaultOnError(error: CompilerError) {\r\n  throw error\r\n}\r\n\r\nexport function defaultOnWarn(msg: CompilerError) {\r\n  __DEV__ && console.warn(`[Vue warn] ${msg.message}`)\r\n}\r\n\r\ntype InferCompilerError<T> = T extends ErrorCodes\r\n  ? CoreCompilerError\r\n  : CompilerError\r\n\r\nexport function createCompilerError<T extends number>(\r\n  code: T,\r\n  loc?: SourceLocation,\r\n  messages?: { [code: number]: string },\r\n  additionalMessage?: string,\r\n): InferCompilerError<T> {\r\n  const msg =\r\n    __DEV__ || !__BROWSER__\r\n      ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n      : `https://vuejs.org/error-reference/#compiler-${code}`\r\n  const error = new SyntaxError(String(msg)) as InferCompilerError<T>\r\n  error.code = code\r\n  error.loc = loc\r\n  return error\r\n}\r\n\r\nexport enum ErrorCodes {\r\n  // parse errors\r\n  ABRUPT_CLOSING_OF_EMPTY_COMMENT,\r\n  CDATA_IN_HTML_CONTENT,\r\n  DUPLICATE_ATTRIBUTE,\r\n  END_TAG_WITH_ATTRIBUTES,\r\n  END_TAG_WITH_TRAILING_SOLIDUS,\r\n  EOF_BEFORE_TAG_NAME,\r\n  EOF_IN_CDATA,\r\n  EOF_IN_COMMENT,\r\n  EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT,\r\n  EOF_IN_TAG,\r\n  INCORRECTLY_CLOSED_COMMENT,\r\n  INCORRECTLY_OPENED_COMMENT,\r\n  INVALID_FIRST_CHARACTER_OF_TAG_NAME,\r\n  MISSING_ATTRIBUTE_VALUE,\r\n  MISSING_END_TAG_NAME,\r\n  MISSING_WHITESPACE_BETWEEN_ATTRIBUTES,\r\n  NESTED_COMMENT,\r\n  UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n  UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n  UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\r\n  UNEXPECTED_NULL_CHARACTER,\r\n  UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n  UNEXPECTED_SOLIDUS_IN_TAG,\r\n\r\n  // Vue-specific parse errors\r\n  X_INVALID_END_TAG,\r\n  X_MISSING_END_TAG,\r\n  X_MISSING_INTERPOLATION_END,\r\n  X_MISSING_DIRECTIVE_NAME,\r\n  X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\r\n\r\n  // transform errors\r\n  X_V_IF_NO_EXPRESSION,\r\n  X_V_IF_SAME_KEY,\r\n  X_V_ELSE_NO_ADJACENT_IF,\r\n  X_V_FOR_NO_EXPRESSION,\r\n  X_V_FOR_MALFORMED_EXPRESSION,\r\n  X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n  X_V_BIND_NO_EXPRESSION,\r\n  X_V_ON_NO_EXPRESSION,\r\n  X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n  X_V_SLOT_MIXED_SLOT_USAGE,\r\n  X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n  X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n  X_V_SLOT_MISPLACED,\r\n  X_V_MODEL_NO_EXPRESSION,\r\n  X_V_MODEL_MALFORMED_EXPRESSION,\r\n  X_V_MODEL_ON_SCOPE_VARIABLE,\r\n  X_V_MODEL_ON_PROPS,\r\n  X_INVALID_EXPRESSION,\r\n  X_KEEP_ALIVE_INVALID_CHILDREN,\r\n\r\n  // generic errors\r\n  X_PREFIX_ID_NOT_SUPPORTED,\r\n  X_MODULE_MODE_NOT_SUPPORTED,\r\n  X_CACHE_HANDLER_NOT_SUPPORTED,\r\n  X_SCOPE_ID_NOT_SUPPORTED,\r\n  X_VNODE_HOOKS,\r\n\r\n  // Special value for higher-order compilers to pick up the last code\r\n  // to avoid collision of error codes. This should always be kept as the last\r\n  // item.\r\n  __EXTEND_POINT__,\r\n}\r\n\r\nexport const errorMessages: Record<ErrorCodes, string> = {\r\n  // parse errors\r\n  [ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT]: 'Illegal comment.',\r\n  [ErrorCodes.CDATA_IN_HTML_CONTENT]:\r\n    'CDATA section is allowed only in XML context.',\r\n  [ErrorCodes.DUPLICATE_ATTRIBUTE]: 'Duplicate attribute.',\r\n  [ErrorCodes.END_TAG_WITH_ATTRIBUTES]: 'End tag cannot have attributes.',\r\n  [ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS]: \"Illegal '/' in tags.\",\r\n  [ErrorCodes.EOF_BEFORE_TAG_NAME]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.EOF_IN_CDATA]: 'Unexpected EOF in CDATA section.',\r\n  [ErrorCodes.EOF_IN_COMMENT]: 'Unexpected EOF in comment.',\r\n  [ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT]:\r\n    'Unexpected EOF in script.',\r\n  [ErrorCodes.EOF_IN_TAG]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.INCORRECTLY_CLOSED_COMMENT]: 'Incorrectly closed comment.',\r\n  [ErrorCodes.INCORRECTLY_OPENED_COMMENT]: 'Incorrectly opened comment.',\r\n  [ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME]:\r\n    \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n  [ErrorCodes.MISSING_ATTRIBUTE_VALUE]: 'Attribute value was expected.',\r\n  [ErrorCodes.MISSING_END_TAG_NAME]: 'End tag name was expected.',\r\n  [ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES]:\r\n    'Whitespace was expected.',\r\n  [ErrorCodes.NESTED_COMMENT]: \"Unexpected '<!--' in comment.\",\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME]:\r\n    'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE]:\r\n    'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n  [ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME]:\r\n    \"Attribute name cannot start with '='.\",\r\n  [ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME]:\r\n    \"'<?' is allowed only in XML context.\",\r\n  [ErrorCodes.UNEXPECTED_NULL_CHARACTER]: `Unexpected null character.`,\r\n  [ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG]: \"Illegal '/' in tags.\",\r\n\r\n  // Vue-specific parse errors\r\n  [ErrorCodes.X_INVALID_END_TAG]: 'Invalid end tag.',\r\n  [ErrorCodes.X_MISSING_END_TAG]: 'Element is missing end tag.',\r\n  [ErrorCodes.X_MISSING_INTERPOLATION_END]:\r\n    'Interpolation end sign was not found.',\r\n  [ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END]:\r\n    'End bracket for dynamic directive argument was not found. ' +\r\n    'Note that dynamic directive argument cannot contain spaces.',\r\n  [ErrorCodes.X_MISSING_DIRECTIVE_NAME]: 'Legal directive name was expected.',\r\n\r\n  // transform errors\r\n  [ErrorCodes.X_V_IF_NO_EXPRESSION]: `v-if/v-else-if is missing expression.`,\r\n  [ErrorCodes.X_V_IF_SAME_KEY]: `v-if/else branches must use unique keys.`,\r\n  [ErrorCodes.X_V_ELSE_NO_ADJACENT_IF]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n  [ErrorCodes.X_V_FOR_NO_EXPRESSION]: `v-for is missing expression.`,\r\n  [ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION]: `v-for has invalid expression.`,\r\n  [ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT]: `<template v-for> key should be placed on the <template> tag.`,\r\n  [ErrorCodes.X_V_BIND_NO_EXPRESSION]: `v-bind is missing expression.`,\r\n  [ErrorCodes.X_V_ON_NO_EXPRESSION]: `v-on is missing expression.`,\r\n  [ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET]: `Unexpected custom directive on <slot> outlet.`,\r\n  [ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE]:\r\n    `Mixed v-slot usage on both the component and nested <template>. ` +\r\n    `When there are multiple named slots, all slots should use <template> ` +\r\n    `syntax to avoid scope ambiguity.`,\r\n  [ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES]: `Duplicate slot names found. `,\r\n  [ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN]:\r\n    `Extraneous children found when component already has explicitly named ` +\r\n    `default slot. These children will be ignored.`,\r\n  [ErrorCodes.X_V_SLOT_MISPLACED]: `v-slot can only be used on components or <template> tags.`,\r\n  [ErrorCodes.X_V_MODEL_NO_EXPRESSION]: `v-model is missing expression.`,\r\n  [ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION]: `v-model value must be a valid JavaScript member expression.`,\r\n  [ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n  [ErrorCodes.X_V_MODEL_ON_PROPS]: `v-model cannot be used on a prop, because local prop bindings are not writable.\\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\r\n  [ErrorCodes.X_INVALID_EXPRESSION]: `Error parsing JavaScript expression: `,\r\n  [ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN]: `<KeepAlive> expects exactly one child component.`,\r\n  [ErrorCodes.X_VNODE_HOOKS]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\r\n\r\n  // generic errors\r\n  [ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED]: `ES module mode is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n  [ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED]: `\"scopeId\" option is only supported in module mode.`,\r\n\r\n  // just to fulfill types\r\n  [ErrorCodes.__EXTEND_POINT__]: ``,\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nclass Position {\n  constructor(line, col, index) {\n    this.line = void 0;\n    this.column = void 0;\n    this.index = void 0;\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n}\nfunction createPositionWithColumnOffset(position, columnOffset) {\n  const {\n    line,\n    column,\n    index\n  } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\nconst code = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\nvar ModuleErrors = {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code\n  }\n};\nconst NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\"\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\"\n};\nconst toNodeDescription = ({\n  type,\n  prefix\n}) => type === \"UpdateExpression\" ? NodeDescriptions.UpdateExpression[String(prefix)] : NodeDescriptions[type];\nvar StandardErrors = {\n  AccessorIsGenerator: ({\n    kind\n  }) => `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitUsingNotInAsyncContext: \"'await using' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses: \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport: \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeferImportRequiresNamespace: 'Only `import defer * as x from \"./module\"` is valid.',\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({\n    exportName\n  }) => `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  DynamicImportPhaseRequiresImportExpressions: ({\n    phase\n  }) => `'import.${phase}(...)' can only be parsed when using the 'createImportExpressions' option.`,\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName\n  }) => `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: ({\n    type\n  }) => `'${type === \"ForInStatement\" ? \"for-in\" : \"for-of\"}' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: ({\n    type\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportAttributesUseAssert: \"The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You can enable the `deprecatedAssertSyntax: true` option in the import attributes plugin to suppress this error.\",\n  ImportBindingIsString: ({\n    importName\n  }) => `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({\n    maxArgumentCount\n  }) => `\\`import()\\` requires exactly ${maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"}.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault: \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding: 'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags: \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({\n    radix\n  }) => `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({\n    reservedWord\n  }) => `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({\n    identifierName\n  }) => `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({\n    ancestor\n  }) => `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({\n    ancestor\n  }) => `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsOptionalChaining: ({\n    ancestor\n  }) => `Invalid optional chaining in the left-hand side of ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({\n    unexpected\n  }) => `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({\n    labelName\n  }) => `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is disallowed as a lexically bound name.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling the parser plugin: ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingOneOfPlugins: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({\n    key\n  }) => `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode\n  }) => `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(16)}'.`,\n  ModuleExportUndefined: ({\n    localName\n  }) => `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({\n    identifierName\n  }) => `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({\n    identifierName\n  }) => `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  SourcePhaseImportRequiresDefault: 'Only `import source x from \"./module\"` is valid.',\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({\n    keyword\n  }) => `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({\n    reservedWord\n  }) => `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected\n  }) => `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${expected ? `, expected \"${expected}\"` : \"\"}`,\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration: \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName\n  }) => `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationHasBindingPattern: \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({\n    identifierName\n  }) => `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n};\nvar StrictModeErrors = {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: ({\n    referenceName\n  }) => `Assigning to '${referenceName}' in strict mode.`,\n  StrictEvalArgumentsBinding: ({\n    bindingName\n  }) => `Binding '${bindingName}' in strict mode.`,\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\"\n};\nconst UnparenthesizedPipeBodyDescriptions = new Set([\"ArrowFunctionExpression\", \"AssignmentExpression\", \"ConditionalExpression\", \"YieldExpression\"]);\nvar PipelineOperatorErrors = {\n  PipeBodyIsTighter: \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({\n    token\n  }) => `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({\n    type\n  }) => `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n    type\n  })}; please wrap it in parentheses.`,\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.'\n};\nconst _excluded$1 = [\"toMessage\"],\n  _excluded2$1 = [\"message\"];\nfunction defineHidden(obj, key, value) {\n  Object.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: true,\n    value\n  });\n}\nfunction toParseErrorConstructor(_ref) {\n  let {\n      toMessage\n    } = _ref,\n    properties = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  return function constructor({\n    loc,\n    details\n  }) {\n    const error = new SyntaxError();\n    Object.assign(error, properties, {\n      loc,\n      pos: loc.index\n    });\n    if (\"missingPlugin\" in details) {\n      Object.assign(error, {\n        missingPlugin: details.missingPlugin\n      });\n    }\n    defineHidden(error, \"clone\", function clone(overrides = {}) {\n      var _overrides$loc;\n      const {\n        line,\n        column,\n        index\n      } = (_overrides$loc = overrides.loc) != null ? _overrides$loc : loc;\n      return constructor({\n        loc: new Position(line, column, index),\n        details: Object.assign({}, details, overrides.details)\n      });\n    });\n    defineHidden(error, \"details\", details);\n    Object.defineProperty(error, \"message\", {\n      configurable: true,\n      get() {\n        const message = `${toMessage(details)} (${loc.line}:${loc.column})`;\n        this.message = message;\n        return message;\n      },\n      set(value) {\n        Object.defineProperty(this, \"message\", {\n          value,\n          writable: true\n        });\n      }\n    });\n    return error;\n  };\n}\nfunction ParseErrorEnum(argument, syntaxPlugin) {\n  if (Array.isArray(argument)) {\n    return parseErrorTemplates => ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n  const ParseErrorConstructors = {};\n  for (const reasonCode of Object.keys(argument)) {\n    const template = argument[reasonCode];\n    const _ref2 = typeof template === \"string\" ? {\n        message: () => template\n      } : typeof template === \"function\" ? {\n        message: template\n      } : template,\n      {\n        message\n      } = _ref2,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded2$1);\n    const toMessage = typeof message === \"string\" ? () => message : message;\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor(Object.assign({\n      code: \"BABEL_PARSER_SYNTAX_ERROR\",\n      reasonCode,\n      toMessage\n    }, syntaxPlugin ? {\n      syntaxPlugin\n    } : {}, rest));\n  }\n  return ParseErrorConstructors;\n}\nconst Errors = Object.assign({}, ParseErrorEnum(ModuleErrors), ParseErrorEnum(StandardErrors), ParseErrorEnum(StrictModeErrors), ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors));\nconst {\n  defineProperty\n} = Object;\nconst toUnenumerable = (object, key) => defineProperty(object, key, {\n  enumerable: false,\n  value: object[key]\n});\nfunction toESTreeLocation(node) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n  return node;\n}\nvar estree = superClass => class ESTreeParserMixin extends superClass {\n  parse() {\n    const file = toESTreeLocation(super.parse());\n    if (this.options.tokens) {\n      file.tokens = file.tokens.map(toESTreeLocation);\n    }\n    return file;\n  }\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n  parseBigIntLiteral(value) {\n    let bigInt;\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  directiveToStmt(directive) {\n    const expression = directive.value;\n    delete directive.value;\n    expression.type = \"Literal\";\n    expression.raw = expression.extra.raw;\n    expression.value = expression.extra.expressionValue;\n    const stmt = directive;\n    stmt.type = \"ExpressionStatement\";\n    stmt.expression = expression;\n    stmt.directive = expression.extra.rawValue;\n    delete expression.extra;\n    return stmt;\n  }\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    super.parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n    classBody.body.push(method);\n  }\n  parsePrivateName() {\n    const node = super.parsePrivateName();\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return node;\n      }\n    }\n    return this.convertPrivateNameToPrivateIdentifier(node);\n  }\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n  isPrivateName(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n    }\n    return node.type === \"PrivateIdentifier\";\n  }\n  getPrivateNameSV(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n    }\n    return node.name;\n  }\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n    return this.finishNode(node, \"MethodDefinition\");\n  }\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    return propertyNode;\n  }\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    propertyNode.computed = false;\n    return propertyNode;\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") {\n        node.kind = \"init\";\n      }\n      node.shorthand = false;\n    }\n    return node;\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n    return node;\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return type === \"Property\" ? \"value\" : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n    return super.isAssignable(node, isBinding);\n  }\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      const {\n        key,\n        value\n      } = node;\n      if (this.isPrivateName(key)) {\n        this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n      }\n      this.toAssignable(value, isLHS);\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(Errors.PatternHasAccessor, {\n        at: prop.key\n      });\n    } else if (prop.method) {\n      this.raise(Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else {\n      super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n    }\n  }\n  finishCallExpression(unfinished, optional) {\n    const node = super.finishCallExpression(unfinished, optional);\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      if (this.hasPlugin(\"importAttributes\") || this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$, _node$arguments$2;\n        node.options = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n        node.attributes = (_node$arguments$2 = node.arguments[1]) != null ? _node$arguments$2 : null;\n      }\n      delete node.arguments;\n      delete node.callee;\n    }\n    return node;\n  }\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n    super.toReferencedArguments(node);\n  }\n  parseExport(unfinished, decorators) {\n    const exportStartLoc = this.state.lastTokStartLoc;\n    const node = super.parseExport(unfinished, decorators);\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n      case \"ExportDefaultDeclaration\":\n        {\n          var _declaration$decorato;\n          const {\n            declaration\n          } = node;\n          if ((declaration == null ? void 0 : declaration.type) === \"ClassDeclaration\" && ((_declaration$decorato = declaration.decorators) == null ? void 0 : _declaration$decorato.length) > 0 && declaration.start === node.start) {\n            this.resetStartLocation(node, exportStartLoc);\n          }\n        }\n        break;\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startLoc, noCalls, state);\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n    return node;\n  }\n  isOptionalMemberExpression(node) {\n    if (node.type === \"ChainExpression\") {\n      return node.expression.type === \"MemberExpression\";\n    }\n    return super.isOptionalMemberExpression(node);\n  }\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n    return super.hasPropertyAsPrivateName(node);\n  }\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n  finishNodeAt(node, type, endLoc) {\n    return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n  }\n  resetStartLocation(node, startLoc) {\n    super.resetStartLocation(node, startLoc);\n    toESTreeLocation(node);\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    super.resetEndLocation(node, endLoc);\n    toESTreeLocation(node);\n  }\n};\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  j_oTag: new TokContext(\"<tag\"),\n  j_cTag: new TokContext(\"</tag\"),\n  j_expr: new TokContext(\"<tag>...</tag>\", true)\n};\n{\n  types.template = new TokContext(\"`\", true);\n}\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass ExportedTokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    {\n      this.updateContext = null;\n    }\n  }\n}\nconst keywords$1 = new Map();\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr,\n    binop\n  });\n}\nlet tokenTypeCounter = -1;\nconst tokenTypes = [];\nconst tokenLabels = [];\nconst tokenBinops = [];\nconst tokenBeforeExprs = [];\nconst tokenStartsExprs = [];\nconst tokenPrefixes = [];\nfunction createToken(name, options = {}) {\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\nfunction createKeywordLike(name, options = {}) {\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\nconst tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  templateTail: createToken(\"...`\", {\n    startsExpr\n  }),\n  templateNonTail: createToken(\"...${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  doubleCaret: createToken(\"^^\", {\n    startsExpr\n  }),\n  doubleAt: createToken(\"@@\", {\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr\n  }),\n  _defer: createKeywordLike(\"defer\", {\n    startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr\n  }),\n  _source: createKeywordLike(\"source\", {\n    startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr\n  }),\n  _using: createKeywordLike(\"using\", {\n    startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr\n  }),\n  _satisfies: createKeywordLike(\"satisfies\", {\n    startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\nfunction tokenIsIdentifier(token) {\n  return token >= 93 && token <= 132;\n}\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 92;\n}\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 58 && token <= 132;\n}\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 58 && token <= 136;\n}\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\nfunction tokenIsAssignment(token) {\n  return token >= 29 && token <= 33;\n}\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 129 && token <= 131;\n}\nfunction tokenIsLoop(token) {\n  return token >= 90 && token <= 92;\n}\nfunction tokenIsKeyword(token) {\n  return token >= 58 && token <= 92;\n}\nfunction tokenIsOperator(token) {\n  return token >= 39 && token <= 59;\n}\nfunction tokenIsPostfix(token) {\n  return token === 34;\n}\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 121 && token <= 123;\n}\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 124 && token <= 130;\n}\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\nfunction tokenIsRightAssociative(token) {\n  return token === 57;\n}\nfunction tokenIsTemplate(token) {\n  return token >= 24 && token <= 25;\n}\nfunction getExportedToken(token) {\n  return tokenTypes[token];\n}\n{\n  tokenTypes[8].updateContext = context => {\n    context.pop();\n  };\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = context => {\n    context.push(types.brace);\n  };\n  tokenTypes[22].updateContext = context => {\n    if (context[context.length - 1] === types.template) {\n      context.pop();\n    } else {\n      context.push(types.template);\n    }\n  };\n  tokenTypes[142].updateContext = context => {\n    context.push(types.j_expr, types.j_oTag);\n  };\n}\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\nfunction isIteratorStart(current, next, next2) {\n  return current === 64 && next === 64 && isIdentifierStart(next2);\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n}\nclass ScopeHandler {\n  constructor(parser, inModule) {\n    this.parser = void 0;\n    this.scopeStack = [];\n    this.inModule = void 0;\n    this.undefinedExports = new Map();\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n  get inTopLevel() {\n    return (this.currentScope().flags & 1) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & 2) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & 16) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & 32) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & 64) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & 64) > 0 && (flags & 2) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & 128) {\n        return true;\n      }\n      if (flags & (387 | 64)) {\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & 2) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n  createScope(flags) {\n    return new Scope(flags);\n  }\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n  exit() {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & (2 | 128) || !this.parser.inModule && scope.flags & 1);\n  }\n  declareName(name, bindingType, loc) {\n    let scope = this.currentScope();\n    if (bindingType & 8 || bindingType & 16) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      if (bindingType & 16) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n      if (bindingType & 8) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & 4) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & 387) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & 1) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  maybeExportDefined(scope, name) {\n    if (this.parser.inModule && scope.flags & 1) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  checkRedeclarationInScope(scope, name, bindingType, loc) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & 1)) return false;\n    if (bindingType & 8) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n    if (bindingType & 16) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n    return scope.lexical.has(name) && !(scope.flags & 8 && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & 387) {\n        return flags;\n      }\n    }\n  }\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & (387 | 64) && !(flags & 4)) {\n        return flags;\n      }\n    }\n  }\n}\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n}\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n  declareName(name, bindingType, loc) {\n    const scope = this.currentScope();\n    if (bindingType & 2048) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n    if (bindingType & 2048) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n    return false;\n  }\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n  hasPlugin(pluginConfig) {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(pluginOptions)) {\n        if ((actualOptions == null ? void 0 : actualOptions[key]) !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  getPluginOption(plugin, name) {\n    var _this$plugins$get;\n    return (_this$plugins$get = this.plugins.get(plugin)) == null ? void 0 : _this$plugins$get[name];\n  }\n}\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n    const {\n      start: nodeStart\n    } = node;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        break;\n      }\n    }\n  }\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n  resetPreviousIdentifierLeadingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    if (commentStack[length - 1].trailingNode === node) {\n      commentStack[length - 1].trailingNode = null;\n    } else if (length >= 2 && commentStack[length - 2].trailingNode === node) {\n      commentStack[length - 2].trailingNode = null;\n    }\n  }\n  takeSurroundingComments(node, start, end) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/g;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n    default:\n      return false;\n  }\n}\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.inDisallowConditionalTypesContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 139;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.context = [types.brace];\n    this.canStartJSXElement = true;\n    this.containsEsc = false;\n    this.firstInvalidTemplateEscapePos = null;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n  init({\n    strictMode,\n    sourceType,\n    startLine,\n    startColumn\n  }) {\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n      state[key] = val;\n    }\n    return state;\n  }\n}\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([46, 66, 69, 79, 95, 98, 101, 111]),\n  hex: new Set([46, 88, 95, 120])\n};\nconst isAllowedNumericSeparatorSibling = {\n  bin: ch => ch === 48 || ch === 49,\n  oct: ch => ch >= 48 && ch <= 55,\n  dec: ch => ch >= 48 && ch <= 57,\n  hex: ch => ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102\n};\nfunction readStringContents(type, input, pos, lineStart, curLine, errors) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const {\n    length\n  } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === 92) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(input, pos, lineStart, curLine, type === \"template\", errors);\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = {\n          pos,\n          lineStart,\n          curLine\n        };\n      } else {\n        out += res.ch;\n      }\n      ({\n        pos,\n        lineStart,\n        curLine\n      } = res);\n      chunkStart = pos;\n    } else if (ch === 8232 || ch === 8233) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === 10 || ch === 13) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (ch === 13 && input.charCodeAt(pos) === 10) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return {\n    pos,\n    str: out,\n    firstInvalidLoc,\n    lineStart,\n    curLine,\n    containsInvalid: !!firstInvalidLoc\n  };\n}\nfunction isStringEnd(type, ch, input, pos) {\n  if (type === \"template\") {\n    return ch === 96 || ch === 36 && input.charCodeAt(pos + 1) === 123;\n  }\n  return ch === (type === \"double\" ? 34 : 39);\n}\nfunction readEscapedChar(input, pos, lineStart, curLine, inTemplate, errors) {\n  const throwOnInvalid = !inTemplate;\n  pos++;\n  const res = ch => ({\n    pos,\n    ch,\n    lineStart,\n    curLine\n  });\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case 110:\n      return res(\"\\n\");\n    case 114:\n      return res(\"\\r\");\n    case 120:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readHexChar(input, pos, lineStart, curLine, 2, false, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCharCode(code));\n      }\n    case 117:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCodePoint(code));\n      }\n    case 116:\n      return res(\"\\t\");\n    case 98:\n      return res(\"\\b\");\n    case 118:\n      return res(\"\\u000b\");\n    case 102:\n      return res(\"\\f\");\n    case 13:\n      if (input.charCodeAt(pos) === 10) {\n        ++pos;\n      }\n    case 10:\n      lineStart = pos;\n      ++curLine;\n    case 8232:\n    case 8233:\n      return res(\"\");\n    case 56:\n    case 57:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/);\n        let octalStr = match[0];\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (octalStr !== \"0\" || next === 56 || next === 57) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n        return res(String.fromCharCode(octal));\n      }\n      return res(String.fromCharCode(ch));\n  }\n}\nfunction readHexChar(input, pos, lineStart, curLine, len, forceLen, throwOnInvalid, errors) {\n  const initialPos = pos;\n  let n;\n  ({\n    n,\n    pos\n  } = readInt(input, pos, lineStart, curLine, 16, len, forceLen, false, errors, !throwOnInvalid));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return {\n    code: n,\n    pos\n  };\n}\nfunction readInt(input, pos, lineStart, curLine, radix, len, forceLen, allowNumSeparator, errors, bailOnError) {\n  const start = pos;\n  const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling = radix === 16 ? isAllowedNumericSeparatorSibling.hex : radix === 10 ? isAllowedNumericSeparatorSibling.dec : radix === 8 ? isAllowedNumericSeparatorSibling.oct : isAllowedNumericSeparatorSibling.bin;\n  let invalid = false;\n  let total = 0;\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n    if (code === 95 && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n      if (!allowNumSeparator) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (Number.isNaN(next) || !isAllowedSibling(next) || forbiddenSiblings.has(prev) || forbiddenSiblings.has(next)) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n      ++pos;\n      continue;\n    }\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } else if (code >= 65) {\n      val = code - 65 + 10;\n    } else if (_isDigit(code)) {\n      val = code - 48;\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      if (val <= 9 && bailOnError) {\n        return {\n          n: null,\n          pos\n        };\n      } else if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || len != null && pos - start !== len || invalid) {\n    return {\n      n: null,\n      pos\n    };\n  }\n  return {\n    n: total,\n    pos\n  };\n}\nfunction readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors) {\n  const ch = input.charCodeAt(pos);\n  let code;\n  if (ch === 123) {\n    ++pos;\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, input.indexOf(\"}\", pos) - pos, true, throwOnInvalid, errors));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return {\n          code: null,\n          pos\n        };\n      }\n    }\n  } else {\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, 4, false, throwOnInvalid, errors));\n  }\n  return {\n    code,\n    pos\n  };\n}\nconst _excluded = [\"at\"],\n  _excluded2 = [\"at\"];\nfunction buildPosition(pos, lineStart, curLine) {\n  return new Position(curLine, pos - lineStart, pos);\n}\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100, 118]);\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n}\nclass Tokenizer extends CommentsParser {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.errorHandlers_readInt = {\n      invalidDigit: (pos, lineStart, curLine, radix) => {\n        if (!this.options.errorRecovery) return false;\n        this.raise(Errors.InvalidDigit, {\n          at: buildPosition(pos, lineStart, curLine),\n          radix\n        });\n        return true;\n      },\n      numericSeparatorInEscapeSequence: this.errorBuilder(Errors.NumericSeparatorInEscapeSequence),\n      unexpectedNumericSeparator: this.errorBuilder(Errors.UnexpectedNumericSeparator)\n    };\n    this.errorHandlers_readCodePoint = Object.assign({}, this.errorHandlers_readInt, {\n      invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n      invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint)\n    });\n    this.errorHandlers_readStringContents_string = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: (pos, lineStart, curLine) => {\n        this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      },\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedString, {\n          at: buildPosition(pos - 1, lineStart, curLine)\n        });\n      }\n    });\n    this.errorHandlers_readStringContents_template = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedTemplate, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      }\n    });\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n  next() {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n  match(type) {\n    return this.state.type === type;\n  }\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition\n    };\n  }\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n  nextTokenInLineStart() {\n    return this.nextTokenInLineStartSince(this.state.pos);\n  }\n  nextTokenInLineStartSince(pos) {\n    skipWhiteSpaceInLine.lastIndex = pos;\n    return skipWhiteSpaceInLine.test(this.input) ? skipWhiteSpaceInLine.lastIndex : pos;\n  }\n  lookaheadInLineCharCode() {\n    return this.input.charCodeAt(this.nextTokenInLineStart());\n  }\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n  setStrict(strict) {\n    this.state.strict = strict;\n    if (strict) {\n      this.state.strictErrors.forEach(([toParseError, at]) => this.raise(toParseError, {\n        at\n      }));\n      this.state.strictErrors.clear();\n    }\n  }\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n  nextToken() {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(139);\n      return;\n    }\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n  skipBlockComment(commentEnd) {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + commentEnd.length,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment(\"*/\");\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            default:\n              break loop;\n          }\n          break;\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule && this.options.annexB) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule && this.options.annexB) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n  replaceToken(type) {\n    this.state.type = type;\n    this.updateContext();\n  }\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= 48 && next <= 57) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition()\n      });\n    }\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(next === 123 ? Errors.RecordExpressionHashIncorrectStartSyntaxType : Errors.TupleExpressionHashIncorrectStartSyntaxType, {\n          at: this.state.curPosition()\n        });\n      }\n      this.state.pos += 2;\n      if (next === 123) {\n        this.finishToken(7);\n      } else {\n        this.finishToken(1);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(138, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(138, this.readWord1());\n    } else {\n      this.finishOp(27, 1);\n    }\n  }\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(21);\n    } else {\n      ++this.state.pos;\n      this.finishToken(16);\n    }\n  }\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(31, 2);\n    } else {\n      this.finishOp(56, 1);\n    }\n  }\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(28, value);\n    return true;\n  }\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? 55 : 54;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = 57;\n    }\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? 33 : 30;\n    }\n    this.finishOp(type, width);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(code === 124 ? 41 : 42, 2);\n      }\n      return;\n    }\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(39, 2);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(9);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(4);\n        return;\n      }\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n      return;\n    }\n    this.finishOp(code === 124 ? 43 : 45, 1);\n  }\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61 && !this.state.inType) {\n      this.finishOp(32, 2);\n    } else if (next === 94 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"^^\"\n    }])) {\n      this.finishOp(37, 2);\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === 94) {\n        this.unexpected();\n      }\n    } else {\n      this.finishOp(44, 1);\n    }\n  }\n  readToken_atSign() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 64 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"@@\"\n    }])) {\n      this.finishOp(38, 2);\n    } else {\n      this.finishOp(26, 1);\n    }\n  }\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      this.finishOp(34, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n    } else {\n      this.finishOp(53, 1);\n    }\n  }\n  readToken_lt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 60) {\n      if (this.input.charCodeAt(pos + 2) === 61) {\n        this.finishOp(30, 3);\n        return;\n      }\n      this.finishOp(51, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(47, 1);\n  }\n  readToken_gt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 62) {\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === 61) {\n        this.finishOp(30, size + 1);\n        return;\n      }\n      this.finishOp(52, size);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(48, 1);\n  }\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(46, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(19);\n      return;\n    }\n    this.finishOp(code === 61 ? 29 : 35, 1);\n  }\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(40, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(18);\n    } else {\n      ++this.state.pos;\n      this.finishToken(17);\n    }\n  }\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n      case 40:\n        ++this.state.pos;\n        this.finishToken(10);\n        return;\n      case 41:\n        ++this.state.pos;\n        this.finishToken(11);\n        return;\n      case 59:\n        ++this.state.pos;\n        this.finishToken(13);\n        return;\n      case 44:\n        ++this.state.pos;\n        this.finishToken(12);\n        return;\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.TupleExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n          this.state.pos += 2;\n          this.finishToken(2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(0);\n        }\n        return;\n      case 93:\n        ++this.state.pos;\n        this.finishToken(3);\n        return;\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.RecordExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n          this.state.pos += 2;\n          this.finishToken(6);\n        } else {\n          ++this.state.pos;\n          this.finishToken(5);\n        }\n        return;\n      case 125:\n        ++this.state.pos;\n        this.finishToken(8);\n        return;\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(15, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(14);\n        }\n        return;\n      case 63:\n        this.readToken_question();\n        return;\n      case 96:\n        this.readTemplateToken();\n        return;\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n      case 47:\n        this.readToken_slash();\n        return;\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n      case 94:\n        this.readToken_caret();\n        return;\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n      case 60:\n        this.readToken_lt();\n        return;\n      case 62:\n        this.readToken_gt();\n        return;\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n      case 126:\n        this.finishOp(36, 1);\n        return;\n      case 64:\n        this.readToken_atSign();\n        return;\n      case 35:\n        this.readToken_numberSign();\n        return;\n      case 92:\n        this.readWord();\n        return;\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code)\n    });\n  }\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n  readRegexp() {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n        escaped = ch === 92;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n    const nextPos = () => createPositionWithColumnOffset(startLoc, pos + 2 - start);\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === 118) {\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        } else if (cp === 117) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, {\n            at: nextPos()\n          });\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(Errors.MalformedRegExpFlags, {\n          at: nextPos()\n        });\n      } else {\n        break;\n      }\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n    this.finishToken(137, {\n      pattern: content,\n      flags: mods\n    });\n  }\n  readInt(radix, len, forceLen = false, allowNumSeparator = true) {\n    const {\n      n,\n      pos\n    } = readInt(this.input, this.state.pos, this.state.lineStart, this.state.curLine, radix, len, forceLen, allowNumSeparator, this.errorHandlers_readInt, false);\n    this.state.pos = pos;\n    return n;\n  }\n  readRadixNumber(radix) {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(Errors.InvalidDecimal, {\n        at: startLoc\n      });\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n    if (isBigInt) {\n      const str = this.input.slice(startLoc.index, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(135, str);\n      return;\n    }\n    this.finishToken(134, val);\n  }\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, {\n        at: this.state.curPosition()\n      });\n    }\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, {\n        at: startLoc\n      });\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos)\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, {\n          at: startLoc\n        });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, {\n          at: startLoc\n        });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, {\n          at: startLoc\n        });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n    if (isBigInt) {\n      this.finishToken(135, str);\n      return;\n    }\n    if (isDecimal) {\n      this.finishToken(136, str);\n      return;\n    }\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(134, val);\n  }\n  readCodePoint(throwOnInvalid) {\n    const {\n      code,\n      pos\n    } = readCodePoint(this.input, this.state.pos, this.state.lineStart, this.state.curLine, throwOnInvalid, this.errorHandlers_readCodePoint);\n    this.state.pos = pos;\n    return code;\n  }\n  readString(quote) {\n    const {\n      str,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(quote === 34 ? \"double\" : \"single\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_string);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(133, str);\n  }\n  readTemplateContinuation() {\n    if (!this.match(8)) {\n      this.unexpected(null, 8);\n    }\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n  readTemplateToken() {\n    const opening = this.input[this.state.pos];\n    const {\n      str,\n      firstInvalidLoc,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(\"template\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_template);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(firstInvalidLoc.curLine, firstInvalidLoc.pos - firstInvalidLoc.lineStart, firstInvalidLoc.pos);\n    }\n    if (this.input.codePointAt(pos) === 96) {\n      this.finishToken(24, firstInvalidLoc ? null : opening + str + \"`\");\n    } else {\n      this.state.pos++;\n      this.finishToken(25, firstInvalidLoc ? null : opening + str + \"${\");\n    }\n  }\n  recordStrictModeErrors(toParseError, {\n    at\n  }) {\n    const index = at.index;\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, {\n        at\n      });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition()\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, {\n              at: escStart\n            });\n          }\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word);\n    if (type !== undefined) {\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(132, word);\n    }\n  }\n  checkKeywordEscapes() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type)\n      });\n    }\n  }\n  raise(toParseError, raiseProperties) {\n    const {\n        at\n      } = raiseProperties,\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded);\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError({\n      loc,\n      details\n    });\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n    return error;\n  }\n  raiseOverwrite(toParseError, raiseProperties) {\n    const {\n        at\n      } = raiseProperties,\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded2);\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return errors[i] = toParseError({\n          loc,\n          details\n        });\n      }\n      if (error.loc.index < pos) break;\n    }\n    return this.raise(toParseError, raiseProperties);\n  }\n  updateContext(prevType) {}\n  unexpected(loc, type) {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc\n    });\n  }\n  expectPlugin(pluginName, loc) {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName]\n    });\n  }\n  expectOnePlugin(pluginNames) {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames\n      });\n    }\n  }\n  errorBuilder(error) {\n    return (pos, lineStart, curLine) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine)\n      });\n    };\n  }\n}\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n}\nclass ClassScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.parser = parser;\n  }\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name\n        });\n      }\n    }\n  }\n  declarePrivateName(name, elementType, loc) {\n    const {\n      privateNames,\n      loneAccessors,\n      undefinedPrivateNames\n    } = this.current();\n    let redefined = privateNames.has(name);\n    if (elementType & 3) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & 4;\n        const newStatic = elementType & 4;\n        const oldKind = accessor & 3;\n        const newKind = elementType & 3;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n  usePrivateName(name, loc) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n}\nclass ExpressionScope {\n  constructor(type = 0) {\n    this.type = type;\n  }\n  canBeArrowParameterDeclaration() {\n    return this.type === 2 || this.type === 1;\n  }\n  isCertainlyParameterDeclaration() {\n    return this.type === 3;\n  }\n}\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.declarationErrors = new Map();\n  }\n  recordDeclarationError(ParsingErrorClass, {\n    at\n  }) {\n    const index = at.index;\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(iterator) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\nclass ExpressionScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [new ExpressionScope()];\n    this.parser = parser;\n  }\n  enter(scope) {\n    this.stack.push(scope);\n  }\n  exit() {\n    this.stack.pop();\n  }\n  recordParameterInitializerError(toParseError, {\n    at: node\n  }) {\n    const origin = {\n      at: node.loc.start\n    };\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n  recordArrowParameterBindingError(error, {\n    at: node\n  }) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n    const origin = {\n      at: node.loc.start\n    };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n  recordAsyncArrowParametersError({\n    at\n  }) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === 2) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, {\n          at\n        });\n      }\n      scope = stack[--i];\n    }\n  }\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, {\n        at: loc\n      });\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(3);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(1);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(2);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n  exit() {\n    this.stacks.pop();\n  }\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n  get hasAwait() {\n    return (this.currentFlags() & 2) > 0;\n  }\n  get hasYield() {\n    return (this.currentFlags() & 1) > 0;\n  }\n  get hasReturn() {\n    return (this.currentFlags() & 4) > 0;\n  }\n  get hasIn() {\n    return (this.currentFlags() & 8) > 0;\n  }\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? 2 : 0) | (isGenerator ? 1 : 0);\n}\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, value, enumerable = true) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, {\n        enumerable,\n        value\n      });\n    }\n  }\n  isContextual(token) {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n    return false;\n  }\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n  eatContextual(token) {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  expectContextual(token, toParseError) {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, {\n          at: this.state.startLoc\n        });\n      }\n      this.unexpected(null, token);\n    }\n  }\n  canInsertSemicolon() {\n    return this.match(139) || this.match(8) || this.hasPrecedingLineBreak();\n  }\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEndLoc.index, this.state.start));\n  }\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n  isLineTerminator() {\n    return this.eat(13) || this.canInsertSemicolon();\n  }\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n    this.raise(Errors.MissingSemicolon, {\n      at: this.state.lastTokEndLoc\n    });\n  }\n  expect(type, loc) {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n      throw error;\n    }\n  }\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc\n    } = refExpressionErrors;\n    const hasErrors = !!shorthandAssignLoc || !!doubleProtoLoc || !!optionalParametersLoc || !!privateKeyLoc;\n    if (!andThrow) {\n      return hasErrors;\n    }\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc\n      });\n    }\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, {\n        at: doubleProtoLoc\n      });\n    }\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, {\n        at: privateKeyLoc\n      });\n    }\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n  isLiteralPropertyName() {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n  enterInitialScopes() {\n    let paramFlags = 0;\n    if (this.inModule) {\n      paramFlags |= 2;\n    }\n    this.scope.enter(1);\n    this.prodParam.enter(paramFlags);\n  }\n  checkDestructuringPrivate(refExpressionErrors) {\n    const {\n      privateKeyLoc\n    } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssignLoc = null;\n    this.doubleProtoLoc = null;\n    this.privateKeyLoc = null;\n    this.optionalParametersLoc = null;\n  }\n}\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n}\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n    return newNode;\n  };\n}\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n  startNodeAt(loc) {\n    return new Node(this, loc.index, loc);\n  }\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.loc.start);\n  }\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n  finishNodeAt(node, type, endLoc) {\n    node.type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n  resetStartLocation(node, startLoc) {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: ({\n    reservedType\n  }) => `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName\n  }) => `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName\n  }) => `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({\n    enumName\n  }) => `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName\n  }) => `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName\n  }) => `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType\n  }) => `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName\n  }) => `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName\n  }) => `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion\n  }) => `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName\n  }) => `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitialized: ({\n    enumName\n  }) => `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: Object.assign({\n    message: \"A binding pattern parameter cannot be optional in an implementation signature.\"\n  }, {\n    reasonCode: \"OptionalBindingPattern\"\n  }),\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({\n    reservedType\n  }) => `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion\n  }) => `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n});\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = superClass => class FlowParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n  finishToken(type, val) {\n    if (type !== 133 && type !== 13 && type !== 28) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n    super.finishToken(type, val);\n  }\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n      if (!matches) ;else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n    super.addComment(comment);\n  }\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || 14);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloLoc = this.state.startLoc;\n    this.next();\n    this.expectContextual(110);\n    if (this.state.lastTokStart > moduloLoc.index + 1) {\n      this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n        at: moduloLoc\n      });\n    }\n    if (this.eat(10)) {\n      node.value = super.parseExpression();\n      this.expect(11);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(14);\n    let type = null;\n    let predicate = null;\n    if (this.match(54)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n      if (this.match(54)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n    return [type, predicate];\n  }\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n    if (this.match(47)) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n    this.expect(10);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(11);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, 2048, node.id.loc.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n  flowParseDeclare(node, insideModule) {\n    if (this.match(80)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(68)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(74)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(127)) {\n      if (this.match(16)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(FlowErrors.NestedDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(130)) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(131)) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(129)) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(82)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      this.unexpected();\n    }\n  }\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, 5, node.id.loc.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n  flowParseDeclareModule(node) {\n    this.scope.enter(0);\n    if (this.match(133)) {\n      node.id = super.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(5);\n    while (!this.match(8)) {\n      let bodyNode = this.startNode();\n      if (this.match(83)) {\n        this.next();\n        if (!this.isContextual(130) && !this.match(87)) {\n          this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        super.parseImport(bodyNode);\n      } else {\n        this.expectContextual(125, FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n      body.push(bodyNode);\n    }\n    this.scope.exit();\n    this.expect(8);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n            at: bodyElement\n          });\n        }\n        if (kind === \"ES\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(82);\n    if (this.eat(65)) {\n      if (this.match(68) || this.match(80)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(75) || this.isLet() || (this.isContextual(130) || this.isContextual(129)) && !insideModule) {\n        const label = this.state.value;\n        throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n          at: this.state.startLoc,\n          unsupportedExportKind: label,\n          suggestion: exportSuggestions[label]\n        });\n      }\n      if (this.match(74) || this.match(68) || this.match(80) || this.isContextual(131)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(55) || this.match(5) || this.isContextual(129) || this.isContextual(130) || this.isContextual(131)) {\n        node = this.parseExport(node, null);\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n    this.unexpected();\n  }\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(111);\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    const finished = this.flowParseTypeAlias(node);\n    finished.type = \"DeclareTypeAlias\";\n    return finished;\n  }\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    const finished = this.flowParseOpaqueType(node, true);\n    finished.type = \"DeclareOpaqueType\";\n    return finished;\n  }\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node, false);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n  flowParseInterfaceish(node, isClass) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? 17 : 8201, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.extends = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(12));\n    }\n    if (isClass) {\n      node.implements = [];\n      node.mixins = [];\n      if (this.eatContextual(117)) {\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(12));\n      }\n      if (this.eatContextual(113)) {\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(12));\n      }\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node, false);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n        at: this.state.startLoc\n      });\n    }\n  }\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, {\n      at: startLoc,\n      reservedType: word\n    });\n  }\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.startLoc, declaration);\n    return this.parseIdentifier(liberal);\n  }\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, 8201, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.right = this.flowParseTypeInitialiser(29);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(130);\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, 8201, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.supertype = null;\n    if (this.match(14)) {\n      node.supertype = this.flowParseTypeInitialiser(14);\n    }\n    node.impltype = null;\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(29);\n    }\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStartLoc = this.state.startLoc;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n    if (this.match(29)) {\n      this.eat(29);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(FlowErrors.MissingTypeParamDefault, {\n          at: nodeStartLoc\n        });\n      }\n    }\n    return this.finishNode(node, \"TypeParameter\");\n  }\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n    if (this.match(47) || this.match(142)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    let defaultRequired = false;\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    } while (!this.match(48));\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n    while (!this.match(48)) {\n      node.params.push(this.flowParseType());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    while (!this.match(48)) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(129);\n    node.extends = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n  flowParseObjectPropertyKey() {\n    return this.match(134) || this.match(133) ? super.parseExprAtom() : this.parseIdentifier(true);\n  }\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n    if (this.lookahead().type === 14) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n    this.expect(3);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(3);\n    this.expect(3);\n    if (this.match(47) || this.match(10)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n    } else {\n      node.method = false;\n      if (this.eat(17)) {\n        node.optional = true;\n      }\n      node.value = this.flowParseTypeInitialiser();\n    }\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    this.expect(10);\n    if (this.match(78)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n    this.expect(11);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n    if (allowExact && this.match(6)) {\n      this.expect(6);\n      endDelim = 9;\n      exact = true;\n    } else {\n      this.expect(5);\n      endDelim = 8;\n      exact = false;\n    }\n    nodeStart.exact = exact;\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStartLoc = null;\n      let inexactStartLoc = null;\n      const node = this.startNode();\n      if (allowProto && this.isContextual(118)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          protoStartLoc = this.state.startLoc;\n          allowStatic = false;\n        }\n      }\n      if (allowStatic && this.isContextual(106)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          isStatic = true;\n        }\n      }\n      const variance = this.flowParseVariance();\n      if (this.eat(0)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (this.eat(0)) {\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(10) || this.match(47)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n        if (this.isContextual(99) || this.isContextual(104)) {\n          const lookahead = this.lookahead();\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStartLoc = this.state.lastTokStartLoc;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n      this.flowObjectTypeSemicolon();\n      if (inexactStartLoc && !this.match(8) && !this.match(9)) {\n        this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n          at: inexactStartLoc\n        });\n      }\n    }\n    this.expect(endDelim);\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n  flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(21)) {\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(FlowErrors.InexactInsideNonObject, {\n            at: this.state.lastTokStartLoc\n          });\n        } else if (!allowInexact) {\n          this.raise(FlowErrors.InexactInsideExact, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        if (variance) {\n          this.raise(FlowErrors.InexactVariance, {\n            at: variance\n          });\n        }\n        return null;\n      }\n      if (!allowSpread) {\n        this.raise(FlowErrors.UnexpectedSpreadType, {\n          at: this.state.lastTokStartLoc\n        });\n      }\n      if (protoStartLoc != null) {\n        this.unexpected(protoStartLoc);\n      }\n      if (variance) {\n        this.raise(FlowErrors.SpreadVariance, {\n          at: variance\n        });\n      }\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStartLoc != null;\n      node.kind = kind;\n      let optional = false;\n      if (this.match(47) || this.match(10)) {\n        node.method = true;\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, {\n            at: node.value.this\n          });\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n        if (this.eat(17)) {\n          optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n    if (property.value.this) {\n      this.raise(property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam, {\n        at: property.value.this\n      });\n    }\n    if (length !== paramCount) {\n      this.raise(property.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: property\n      });\n    }\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: property\n      });\n    }\n  }\n  flowObjectTypeSemicolon() {\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n      this.unexpected();\n    }\n  }\n  flowParseQualifiedTypeIdentifier(startLoc, id) {\n    var _startLoc;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n    while (this.eat(16)) {\n      const node2 = this.startNodeAt(startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n    return node;\n  }\n  flowParseGenericType(startLoc, id) {\n    const node = this.startNodeAt(startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(87);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(0);\n    while (this.state.pos < this.length && !this.match(3)) {\n      node.types.push(this.flowParseType());\n      if (this.match(3)) break;\n      this.expect(12);\n    }\n    this.expect(3);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === 78;\n    if (lh.type === 14 || lh.type === 17) {\n      if (isThis && !first) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node\n        });\n      }\n      name = this.parseIdentifier(isThis);\n      if (this.eat(17)) {\n        optional = true;\n        if (isThis) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n            at: node\n          });\n        }\n      }\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n    if (this.match(78)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n  flowIdentToTypeAnnotation(startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startLoc, id);\n    }\n  }\n  flowParsePrimaryType() {\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    switch (this.state.type) {\n      case 5:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n      case 6:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n      case 0:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n      case 47:\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(10);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 10:\n        this.next();\n        if (!this.match(11) && !this.match(21)) {\n          if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== 17 && token !== 14;\n          } else {\n            isGroupedType = true;\n          }\n        }\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n            this.expect(11);\n            return type;\n          } else {\n            this.eat(12);\n          }\n        }\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 133:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n      case 85:\n      case 86:\n        node.value = this.match(85);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n      case 53:\n        if (this.state.value === \"-\") {\n          this.next();\n          if (this.match(134)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n          if (this.match(135)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n          throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n            at: this.state.startLoc\n          });\n        }\n        this.unexpected();\n        return;\n      case 134:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n      case 135:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n      case 88:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n      case 84:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n      case 78:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n      case 55:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n      case 87:\n        return this.flowParseTypeofType();\n      default:\n        if (tokenIsKeyword(this.state.type)) {\n          const label = tokenLabelName(this.state.type);\n          this.next();\n          return super.createIdentifier(node, label);\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (this.isContextual(129)) {\n            return this.flowParseInterfaceType();\n          }\n          return this.flowIdentToTypeAnnotation(startLoc, node, this.parseIdentifier());\n        }\n    }\n    this.unexpected();\n  }\n  flowParsePostfixType() {\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      const optional = this.eat(18);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(0);\n      if (!optional && this.match(3)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(3);\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n    return type;\n  }\n  flowParsePrefixType() {\n    const node = this.startNode();\n    if (this.eat(17)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\n      const node = this.startNodeAt(param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n    return param;\n  }\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(45);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n    while (this.eat(45)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(43);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n    while (this.eat(43)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === 132 && this.state.value === \"_\") {\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n    if (this.match(14)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n    return ident;\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  flowParseVariance() {\n    let variance = null;\n    if (this.match(53)) {\n      variance = this.startNode();\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n      this.next();\n      return this.finishNode(variance, \"Variance\");\n    }\n    return variance;\n  }\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      return;\n    }\n    super.parseFunctionBody(node, false, isMethod);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  parseStatementLike(flags) {\n    if (this.state.strict && this.isContextual(129)) {\n      const lookahead = this.lookahead();\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(126)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    const stmt = super.parseStatementLike(flags);\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n    return stmt;\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(80) || tokenIsIdentifier(this.state.type) || this.match(68) || this.match(74) || this.match(82)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (tokenIsIdentifier(this.state.type)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n    return super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 126) {\n      return !this.state.containsEsc;\n    }\n    return super.shouldParseExportDeclaration();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 126) {\n      return this.state.containsEsc;\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(126)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.match(17)) return expr;\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n    this.expect(17);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n      if (failed && valid.length > 1) {\n        this.raise(FlowErrors.AmbiguousConditionalArrow, {\n          at: state.startLoc\n        });\n      }\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(14);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(14);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n    while (stack.length !== 0) {\n      const node = stack.pop();\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n  finishArrowValidation(node) {\n    var _node$extra;\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingCommaLoc, false);\n    this.scope.enter(2 | 4);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n    return result;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n    return node;\n  }\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n    super.assertModuleNodeAllowed(node);\n  }\n  parseExportDeclaration(node) {\n    if (this.isContextual(130)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      if (this.match(5)) {\n        node.specifiers = this.parseExportSpecifiers(true);\n        super.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(131)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(129)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(126)) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n  eatExportStar(node) {\n    if (super.eatExportStar(node)) return true;\n    if (this.isContextual(130) && this.lookahead().type === 55) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    const {\n      startLoc\n    } = this.state;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(startLoc);\n    }\n    return hasNamespace;\n  }\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n  parseClassMember(classBody, member, state) {\n    const {\n      startLoc\n    } = this.state;\n    if (this.isContextual(125)) {\n      if (super.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      member.declare = true;\n    }\n    super.parseClassMember(classBody, member, state);\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(FlowErrors.DeclareClassElement, {\n          at: startLoc\n        });\n      } else if (member.value) {\n        this.raise(FlowErrors.DeclareClassFieldInitializer, {\n          at: member.value\n        });\n      }\n    }\n  }\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(Errors.InvalidIdentifier, {\n        at: this.state.curPosition(),\n        identifierName: fullWord\n      });\n    }\n    this.finishToken(132, fullWord);\n  }\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 123 && next === 124) {\n      this.finishOp(6, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      this.finishOp(code === 62 ? 48 : 47, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        this.finishOp(18, 2);\n      } else {\n        this.finishOp(17, 1);\n      }\n    } else if (isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))) {\n      this.state.pos += 2;\n      this.readIterator();\n    } else {\n      super.getTokenFromCode(code);\n    }\n  }\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    if (!isLHS && node.type === \"AssignmentExpression\" && node.left.type === \"TypeCastExpression\") {\n      node.left = this.typeCastToParameter(node.left);\n    }\n    super.toAssignable(node, isLHS);\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n      const expr = exprList[i];\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(FlowErrors.TypeCastInPattern, {\n          at: expr.typeAnnotation\n        });\n      }\n    }\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n    return node;\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"TypeCastExpression\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  parseClassProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassPrivateProperty(node);\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(14) || super.isClassProperty();\n  }\n  isNonstaticConstructor(method) {\n    return !this.match(14) && super.isNonstaticConstructor(method);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    if (method.params && isConstructor) {\n      const params = method.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    }\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && this.match(47)) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    if (this.isContextual(113)) {\n      this.next();\n      const implemented = node.implements = [];\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n        if (this.match(47)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(12));\n    }\n  }\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length > 0) {\n      const param = params[0];\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(FlowErrors.GetterMayNotHaveThisParam, {\n          at: param\n        });\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.SetterMayNotHaveThisParam, {\n          at: param\n        });\n      }\n    }\n  }\n  parsePropertyNamePrefixOperator(node) {\n    node.variance = this.flowParseVariance();\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.loc.start);\n    }\n    delete prop.variance;\n    let typeParameters;\n    if (this.match(47) && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(10)) this.unexpected();\n    }\n    const result = super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    if (typeParameters) {\n      (result.value || result).typeParameters = typeParameters;\n    }\n    return result;\n  }\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(FlowErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n      if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n          at: param\n        });\n      }\n      param.optional = true;\n    }\n    if (this.match(14)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamAnnotationRequired, {\n        at: param\n      });\n    }\n    if (this.match(29) && this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamNoDefault, {\n        at: param\n      });\n    }\n    this.resetEndLocation(param);\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(FlowErrors.TypeBeforeInitializer, {\n        at: node.typeAnnotation\n      });\n    }\n    return node;\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(FlowErrors.ImportReflectionHasImportType, {\n        at: node.specifiers[0].loc.start\n      });\n    }\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  isPotentialImportPhase(isExport) {\n    if (super.isPotentialImportPhase(isExport)) return true;\n    if (this.isContextual(130)) {\n      if (!isExport) return true;\n      const ch = this.lookaheadCharCode();\n      return ch === 123 || ch === 42;\n    }\n    return !isExport && this.isContextual(87);\n  }\n  applyImportPhase(node, isExport, phase, loc) {\n    super.applyImportPhase(node, isExport, phase, loc);\n    if (isExport) {\n      if (!phase && this.match(65)) {\n        return;\n      }\n      node.exportKind = phase === \"type\" ? phase : \"value\";\n    } else {\n      if (phase === \"type\" && this.match(55)) this.unexpected();\n      node.importKind = phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n    }\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    const firstIdent = specifier.imported;\n    let specifierTypeKind = null;\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n    let isBinding = false;\n    if (this.isContextual(93) && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (importedIsString) {\n          throw this.raise(Errors.ImportBindingIsString, {\n            at: specifier,\n            importName: firstIdent.value\n          });\n        }\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n      if (this.eatContextual(93)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\n      this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n        at: specifier\n      });\n    }\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.loc.start, true);\n    }\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.loc.start, true, true);\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 78:\n        return this.parseIdentifier(true);\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n  parseFunctionParams(node, isConstructor) {\n    const kind = node.kind;\n    if (kind !== \"get\" && kind !== \"set\" && this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.parseFunctionParams(node, isConstructor);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (this.match(14)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n    let state = null;\n    let jsx;\n    if (this.hasPlugin(\"jsx\") && (this.match(142) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n    if ((_jsx = jsx) != null && _jsx.error || this.match(47)) {\n      var _jsx2, _jsx3;\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction, {\n              at: typeParameters\n            });\n          }\n          return arrow.node;\n        }\n        arrowExpression = arrow.node;\n      }\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n        at: typeParameters\n      });\n    }\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(19)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n    return super.parseArrow(node);\n  }\n  shouldParseArrow(params) {\n    return this.match(14) || super.shouldParseArrow(params);\n  }\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node.params[i]\n        });\n      }\n    }\n    super.checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged);\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startLoc.index) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.arguments = super.parseCallExpressionArguments(11, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(47)) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n      throw arrow.error || result.error;\n    }\n    return super.parseSubscripts(base, startLoc, noCalls);\n  }\n  parseSubscript(base, startLoc, noCalls, subscriptState) {\n    if (this.match(18) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(10);\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.match(47)) {\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(10);\n        node.arguments = super.parseCallExpressionArguments(11, false);\n        if (subscriptState.optionalChainMember) {\n          node.optional = false;\n        }\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, subscriptState);\n  }\n  parseNewCallee(node) {\n    super.parseNewCallee(node);\n    let targs = null;\n    if (this.shouldParseTypes() && this.match(47)) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n    node.typeArguments = targs;\n  }\n  parseAsyncArrowWithTypeParameters(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.parseFunctionParams(node, false);\n    if (!this.parseArrow(node)) return;\n    return super.parseArrowExpression(node, undefined, true);\n  }\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n    super.readToken_mult_modulo(code);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 124 && next === 125) {\n      this.finishOp(9, 2);\n      return;\n    }\n    super.readToken_pipe_amp(code);\n  }\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n    if (this.state.hasFlowComment) {\n      this.raise(FlowErrors.UnterminatedFlowComment, {\n        at: this.state.curPosition()\n      });\n    }\n    return fileNode;\n  }\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        throw this.raise(FlowErrors.NestedFlowComment, {\n          at: this.state.startLoc\n        });\n      }\n      this.hasFlowCommentCompletion();\n      const commentSkip = this.skipFlowComment();\n      if (commentSkip) {\n        this.state.pos += commentSkip;\n        this.state.hasFlowComment = true;\n      }\n      return;\n    }\n    return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n  }\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n    return false;\n  }\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n  }\n  flowEnumErrorBooleanMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n      at: loc,\n      memberName,\n      enumName\n    });\n  }\n  flowEnumErrorInvalidMemberInitializer(loc, enumContext) {\n    return this.raise(!enumContext.explicitType ? FlowErrors.EnumInvalidMemberInitializerUnknownType : enumContext.explicitType === \"symbol\" ? FlowErrors.EnumInvalidMemberInitializerSymbolType : FlowErrors.EnumInvalidMemberInitializerPrimaryType, Object.assign({\n      at: loc\n    }, enumContext));\n  }\n  flowEnumErrorNumberMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n      at: loc,\n      enumName,\n      memberName\n    });\n  }\n  flowEnumErrorStringMemberInconsistentlyInitialized(node, {\n    enumName\n  }) {\n    this.raise(FlowErrors.EnumStringMemberInconsistentlyInitialized, {\n      at: node,\n      enumName\n    });\n  }\n  flowEnumMemberInit() {\n    const startLoc = this.state.startLoc;\n    const endOfInit = () => this.match(12) || this.match(8);\n    switch (this.state.type) {\n      case 134:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 133:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 85:\n      case 86:\n        {\n          const literal = this.parseBooleanLiteral(this.match(85));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      default:\n        return {\n          type: \"invalid\",\n          loc: startLoc\n        };\n    }\n  }\n  flowEnumMemberRaw() {\n    const loc = this.state.startLoc;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(29) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      loc\n    };\n    return {\n      id,\n      init\n    };\n  }\n  flowEnumCheckExplicitTypeMismatch(loc, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n    if (explicitType === null) {\n      return;\n    }\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(loc, context);\n    }\n  }\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n    while (!this.match(8)) {\n      if (this.eat(21)) {\n        hasUnknownMembers = true;\n        break;\n      }\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n      if (memberName === \"\") {\n        continue;\n      }\n      if (/^[a-z]/.test(memberName)) {\n        this.raise(FlowErrors.EnumInvalidMemberName, {\n          at: id,\n          memberName,\n          suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n          enumName\n        });\n      }\n      if (seenNames.has(memberName)) {\n        this.raise(FlowErrors.EnumDuplicateMemberName, {\n          at: id,\n          memberName,\n          enumName\n        });\n      }\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.loc, context);\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n      if (!this.match(8)) {\n        this.expect(12);\n      }\n    }\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n          enumName\n        });\n      }\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n          enumName\n        });\n      }\n      return initializedMembers;\n    }\n  }\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (!this.eatContextual(102)) return null;\n    if (!tokenIsIdentifier(this.state.type)) {\n      throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n        at: this.state.startLoc,\n        enumName\n      });\n    }\n    const {\n      value\n    } = this.state;\n    this.next();\n    if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n      this.raise(FlowErrors.EnumInvalidExplicitType, {\n        at: this.state.startLoc,\n        enumName,\n        invalidEnumType: value\n      });\n    }\n    return value;\n  }\n  flowEnumBody(node, id) {\n    const enumName = id.name;\n    const nameLoc = id.loc.start;\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(5);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumBooleanBody\");\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumNumberBody\");\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(8);\n        return this.finishNode(node, \"EnumStringBody\");\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumSymbolBody\");\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), id);\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n    return false;\n  }\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n};\nconst entities = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({\n    openingTagName\n  }) => `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity\n  }) => `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\nvar jsx = superClass => class JSXParserMixin extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(JsxErrors.UnterminatedJsxContent, {\n          at: this.state.startLoc\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.canStartJSXElement) {\n              ++this.state.pos;\n              this.finishToken(142);\n            } else {\n              super.getTokenFromCode(ch);\n            }\n            return;\n          }\n          out += this.input.slice(chunkStart, this.state.pos);\n          this.finishToken(141, out);\n          return;\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n        case 62:\n        case 125:\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n      }\n    }\n  }\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(133, out);\n  }\n  jsxReadEntity() {\n    const startPos = ++this.state.pos;\n    if (this.codePointAtPos(this.state.pos) === 35) {\n      ++this.state.pos;\n      let radix = 10;\n      if (this.codePointAtPos(this.state.pos) === 120) {\n        radix = 16;\n        ++this.state.pos;\n      }\n      const codePoint = this.readInt(radix, undefined, false, \"bail\");\n      if (codePoint !== null && this.codePointAtPos(this.state.pos) === 59) {\n        ++this.state.pos;\n        return String.fromCodePoint(codePoint);\n      }\n    } else {\n      let count = 0;\n      let semi = false;\n      while (count++ < 10 && this.state.pos < this.length && !(semi = this.codePointAtPos(this.state.pos) == 59)) {\n        ++this.state.pos;\n      }\n      if (semi) {\n        const desc = this.input.slice(startPos, this.state.pos);\n        const entity = entities[desc];\n        ++this.state.pos;\n        if (entity) {\n          return entity;\n        }\n      }\n    }\n    this.state.pos = startPos;\n    return \"&\";\n  }\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n    this.finishToken(140, this.input.slice(start, this.state.pos));\n  }\n  jsxParseIdentifier() {\n    const node = this.startNode();\n    if (this.match(140)) {\n      node.name = this.state.value;\n    } else if (tokenIsKeyword(this.state.type)) {\n      node.name = tokenLabelName(this.state.type);\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n  jsxParseNamespacedName() {\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(14)) return name;\n    const node = this.startNodeAt(startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n  jsxParseElementName() {\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n    while (this.eat(16)) {\n      const newNode = this.startNodeAt(startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n    return node;\n  }\n  jsxParseAttributeValue() {\n    let node;\n    switch (this.state.type) {\n      case 5:\n        node = this.startNode();\n        this.setContext(types.brace);\n        this.next();\n        node = this.jsxParseExpressionContainer(node, types.j_oTag);\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(JsxErrors.AttributeIsEmpty, {\n            at: node\n          });\n        }\n        return node;\n      case 142:\n      case 133:\n        return this.parseExprAtom();\n      default:\n        throw this.raise(JsxErrors.UnsupportedJsxValue, {\n          at: this.state.startLoc\n        });\n    }\n  }\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n  }\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.setContext(types.j_expr);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n  jsxParseExpressionContainer(node, previousContext) {\n    if (this.match(8)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n    this.setContext(previousContext);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n  jsxParseAttribute() {\n    const node = this.startNode();\n    if (this.match(5)) {\n      this.setContext(types.brace);\n      this.next();\n      this.expect(21);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.setContext(types.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(8);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(29) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n  jsxParseOpeningElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(143)) {\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n    while (!this.match(56) && !this.match(143)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n    node.attributes = attributes;\n    node.selfClosing = this.eat(56);\n    this.expect(143);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n  jsxParseClosingElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(143)) {\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    this.expect(143);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n  jsxParseElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startLoc);\n    let closingElement = null;\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case 142:\n            startLoc = this.state.startLoc;\n            this.next();\n            if (this.eat(56)) {\n              closingElement = this.jsxParseClosingElementAt(startLoc);\n              break contents;\n            }\n            children.push(this.jsxParseElementAt(startLoc));\n            break;\n          case 141:\n            children.push(this.parseExprAtom());\n            break;\n          case 5:\n            {\n              const node = this.startNode();\n              this.setContext(types.brace);\n              this.next();\n              if (this.match(21)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node, types.j_expr));\n              }\n              break;\n            }\n          default:\n            this.unexpected();\n        }\n      }\n      if (isFragment(openingElement) && !isFragment(closingElement) && closingElement !== null) {\n        this.raise(JsxErrors.MissingClosingTagFragment, {\n          at: closingElement\n        });\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(JsxErrors.MissingClosingTagElement, {\n          at: closingElement,\n          openingTagName: getQualifiedJSXName(openingElement.name)\n        });\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name)\n          });\n        }\n      }\n    }\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n    node.children = children;\n    if (this.match(47)) {\n      throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n        at: this.state.startLoc\n      });\n    }\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n  jsxParseElement() {\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startLoc);\n  }\n  setContext(newContext) {\n    const {\n      context\n    } = this.state;\n    context[context.length - 1] = newContext;\n  }\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(141)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(142)) {\n      return this.jsxParseElement();\n    } else if (this.match(47) && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.replaceToken(142);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n  skipSpace() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) super.skipSpace();\n  }\n  getTokenFromCode(code) {\n    const context = this.curContext();\n    if (context === types.j_expr) {\n      this.jsxReadToken();\n      return;\n    }\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        this.jsxReadWord();\n        return;\n      }\n      if (code === 62) {\n        ++this.state.pos;\n        this.finishToken(143);\n        return;\n      }\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        this.jsxReadString(code);\n        return;\n      }\n    }\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      this.finishToken(142);\n      return;\n    }\n    super.getTokenFromCode(code);\n  }\n  updateContext(prevType) {\n    const {\n      context,\n      type\n    } = this.state;\n    if (type === 56 && prevType === 142) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.canStartJSXElement = false;\n    } else if (type === 142) {\n      context.push(types.j_oTag);\n    } else if (type === 143) {\n      const out = context[context.length - 1];\n      if (out === types.j_oTag && prevType === 56 || out === types.j_cTag) {\n        context.pop();\n        this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\n      } else {\n        this.setContext(types.j_expr);\n        this.state.canStartJSXElement = true;\n      }\n    } else {\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n    }\n  }\n};\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n}\nclass TypeScriptScopeHandler extends ScopeHandler {\n  constructor(...args) {\n    super(...args);\n    this.importsStack = [];\n  }\n  createScope(flags) {\n    this.importsStack.push(new Set());\n    return new TypeScriptScope(flags);\n  }\n  enter(flags) {\n    if (flags == 256) {\n      this.importsStack.push(new Set());\n    }\n    super.enter(flags);\n  }\n  exit() {\n    const flags = super.exit();\n    if (flags == 256) {\n      this.importsStack.pop();\n    }\n    return flags;\n  }\n  hasImport(name, allowShadow) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n  declareName(name, bindingType, loc) {\n    if (bindingType & 4096) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n    const scope = this.currentScope();\n    if (bindingType & 1024) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n    if (bindingType & 2) {\n      if (!(bindingType & 1)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & 256) scope.enums.add(name);\n    if (bindingType & 512) {\n      scope.constEnums.add(name);\n    }\n    if (bindingType & 128) scope.classes.add(name);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & 256) {\n        const isConst = !!(bindingType & 512);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & 128 && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & 1);\n      } else {\n        return false;\n      }\n    }\n    if (bindingType & 2 && scope.types.has(name)) {\n      return true;\n    }\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    if (this.hasImport(name)) return;\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n    super.checkLocalExport(id);\n  }\n}\nconst getOwn$1 = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        } else if (parenthesized.type !== \"MemberExpression\" && !this.isOptionalMemberExpression(parenthesized)) {\n          this.raise(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, {\n          at: node\n        });\n      }\n    }\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingCommaLoc) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc\n            });\n          }\n        }\n        break;\n      case \"ObjectProperty\":\n        {\n          const {\n            key,\n            value\n          } = node;\n          if (this.isPrivateName(key)) {\n            this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n          }\n          this.toAssignable(value, isLHS);\n          break;\n        }\n      case \"SpreadElement\":\n        {\n          throw new Error(\"Internal @babel/parser error (this is a bug, please report it).\" + \" SpreadElement should be converted by .toAssignable's caller.\");\n        }\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingCommaLoc, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, {\n            at: node.left.loc.end\n          });\n        }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(prop.kind === \"get\" || prop.kind === \"set\" ? Errors.PatternHasAccessor : Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, false);\n      this.toAssignable(arg, isLHS);\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, {\n          at: prop\n        });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    const end = exprList.length - 1;\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, {\n            at: elt\n          });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, {\n            at: trailingCommaLoc\n          });\n        }\n      }\n    }\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n      default:\n        return false;\n    }\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n  parseSpread(refExpressionErrors) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 0:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(3, 93, 1);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n      case 5:\n        return this.parseObjectLike(8, true);\n    }\n    return this.parseIdentifier();\n  }\n  parseBindingList(close, closeCharCode, flags) {\n    const allowEmpty = flags & 1;\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n      }\n      if (allowEmpty && this.match(12)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(21)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding(), flags));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(26) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc\n          });\n        }\n        while (this.match(26)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(flags, decorators));\n      }\n    }\n    return elts;\n  }\n  parseBindingRestProperty(prop) {\n    this.next();\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(125);\n    return this.finishNode(prop, \"RestElement\");\n  }\n  parseBindingProperty() {\n    const prop = this.startNode();\n    const {\n      type,\n      startLoc\n    } = this.state;\n    if (type === 21) {\n      return this.parseBindingRestProperty(prop);\n    } else if (type === 138) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    return this.parseObjPropValue(prop, startLoc, false, false, true, false);\n  }\n  parseAssignableListItem(flags, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  parseAssignableListItemTypes(param, flags) {\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    var _startLoc, _left;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(29)) return left;\n    const node = this.startNodeAt(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn$1({\n      AssignmentPattern: \"left\",\n      RestElement: \"argument\",\n      ObjectProperty: \"value\",\n      ParenthesizedExpression: \"expression\",\n      ArrayPattern: \"elements\",\n      ObjectPattern: \"properties\"\n    }, type);\n  }\n  isOptionalMemberExpression(expression) {\n    return expression.type === \"OptionalMemberExpression\";\n  }\n  checkLVal(expression, {\n    in: ancestor,\n    binding = 64,\n    checkClashes = false,\n    strictModeChanged = false,\n    hasParenthesizedAncestor = false\n  }) {\n    var _expression$extra;\n    const type = expression.type;\n    if (this.isObjectMethod(expression)) return;\n    const isOptionalMemberExpression = this.isOptionalMemberExpression(expression);\n    if (isOptionalMemberExpression || type === \"MemberExpression\") {\n      if (isOptionalMemberExpression) {\n        this.expectPlugin(\"optionalChainingAssign\", expression.loc.start);\n        if (ancestor.type !== \"AssignmentExpression\") {\n          this.raise(Errors.InvalidLhsOptionalChaining, {\n            at: expression,\n            ancestor\n          });\n        }\n      }\n      if (binding !== 64) {\n        this.raise(Errors.InvalidPropertyBindingPattern, {\n          at: expression\n        });\n      }\n      return;\n    }\n    if (type === \"Identifier\") {\n      this.checkIdentifier(expression, binding, strictModeChanged);\n      const {\n        name\n      } = expression;\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, {\n            at: expression\n          });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n      return;\n    }\n    const validity = this.isValidLVal(type, !(hasParenthesizedAncestor || (_expression$extra = expression.extra) != null && _expression$extra.parenthesized) && ancestor.type === \"AssignmentExpression\", binding);\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass = binding === 64 ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor\n      });\n      return;\n    }\n    const [key, isParenthesizedExpression] = Array.isArray(validity) ? validity : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor = type === \"ArrayPattern\" || type === \"ObjectPattern\" ? {\n      type\n    } : ancestor;\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression\n        });\n      }\n    }\n  }\n  checkIdentifier(at, bindingType, strictModeChanged = false) {\n    if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(at.name, this.inModule) : isStrictBindOnlyReservedWord(at.name))) {\n      if (bindingType === 64) {\n        this.raise(Errors.StrictEvalArguments, {\n          at,\n          referenceName: at.name\n        });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name\n        });\n      }\n    }\n    if (bindingType & 8192 && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, {\n        at\n      });\n    }\n    if (!(bindingType & 64)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n  declareNameFromIdentifier(identifier, binding) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, {\n          at: node\n        });\n    }\n  }\n  checkCommaAfterRest(close) {\n    if (!this.match(12)) {\n      return false;\n    }\n    this.raise(this.lookaheadCharCode() === close ? Errors.RestTrailingComma : Errors.ElementAfterRest, {\n      at: this.state.startLoc\n    });\n    return true;\n  }\n}\nconst getOwn = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({\n    methodName\n  }) => `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName\n  }) => `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  AccessorCannotBeOptional: \"An 'accessor' property cannot be declared optional.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({\n    kind\n  }) => `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: ({\n    modifier\n  }) => `Accessibility modifier already seen.`,\n  DuplicateModifier: ({\n    modifier\n  }) => `Duplicate modifier: '${modifier}'.`,\n  EmptyHeritageClauseType: ({\n    token\n  }) => `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers\n  }) => `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier\n  }) => `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext: \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier\n  }) => `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers\n  }) => `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression: \"Invalid property access after an instantiation expression. \" + \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier\n  }) => `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName\n  }) => `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TupleOptionalAfterType: \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({\n    type\n  }) => `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`\n});\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\nfunction tsIsVarianceAnnotations(modifier) {\n  return modifier === \"in\" || modifier === \"out\";\n}\nvar typescript = superClass => class TypeScriptParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\"const\", \"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n    this.tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    });\n    this.tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n  }\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n  tsIsIdentifier() {\n    return tokenIsIdentifier(this.state.type);\n  }\n  tsTokenCanFollowModifier() {\n    return (this.match(0) || this.match(5) || this.match(55) || this.match(21) || this.match(138) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!tokenIsIdentifier(this.state.type) && this.state.type !== 58 && this.state.type !== 75) {\n      return undefined;\n    }\n    const modifier = this.state.value;\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n    return undefined;\n  }\n  tsParseModifiers({\n    allowedModifiers,\n    disallowedModifiers,\n    stopOnStartOfClassStaticBlock,\n    errorTemplate = TSErrors.InvalidModifierOnTypeMember\n  }, modified) {\n    const enforceOrder = (loc, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(TSErrors.InvalidModifiersOrder, {\n          at: loc,\n          orderedModifiers: [before, after]\n        });\n      }\n    };\n    const incompatible = (loc, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(TSErrors.IncompatibleModifiers, {\n          at: loc,\n          modifiers: [mod1, mod2]\n        });\n      }\n    };\n    for (;;) {\n      const {\n        startLoc\n      } = this.state;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(TSErrors.DuplicateAccessibilityModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, modifier, \"override\");\n          enforceOrder(startLoc, modifier, modifier, \"static\");\n          enforceOrder(startLoc, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else if (tsIsVarianceAnnotations(modifier)) {\n        if (modified[modifier]) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        }\n        modified[modifier] = true;\n        enforceOrder(startLoc, modifier, \"in\", \"out\");\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"static\", \"override\");\n          enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n          incompatible(startLoc, modifier, \"declare\", \"override\");\n          incompatible(startLoc, modifier, \"static\", \"abstract\");\n        }\n        modified[modifier] = true;\n      }\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(errorTemplate, {\n          at: startLoc,\n          modifier\n        });\n      }\n    }\n  }\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(8);\n      case \"HeritageClauseElement\":\n        return this.match(5);\n      case \"TupleElementTypes\":\n        return this.match(3);\n      case \"TypeParametersOrArguments\":\n        return this.match(48);\n    }\n  }\n  tsParseList(kind, parseElement) {\n    const result = [];\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n    return result;\n  }\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n  }\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n    const result = [];\n    let trailingCommaPos = -1;\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      trailingCommaPos = -1;\n      const element = parseElement();\n      if (element == null) {\n        return undefined;\n      }\n      result.push(element);\n      if (this.eat(12)) {\n        trailingCommaPos = this.state.lastTokStart;\n        continue;\n      }\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      if (expectSuccess) {\n        this.expect(12);\n      }\n      return undefined;\n    }\n    if (refTrailingCommaPos) {\n      refTrailingCommaPos.value = trailingCommaPos;\n    }\n    return result;\n  }\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(0);\n      } else {\n        this.expect(47);\n      }\n    }\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n    if (bracket) {\n      this.expect(3);\n    } else {\n      this.expect(48);\n    }\n    return result;\n  }\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(83);\n    this.expect(10);\n    if (!this.match(133)) {\n      this.raise(TSErrors.UnsupportedImportTypeArgument, {\n        at: this.state.startLoc\n      });\n    }\n    node.argument = super.parseExprAtom();\n    this.expect(11);\n    if (this.eat(16)) {\n      node.qualifier = this.tsParseEntityName();\n    }\n    if (this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSImportType\");\n  }\n  tsParseEntityName(allowReservedWords = true) {\n    let entity = this.parseIdentifier(allowReservedWords);\n    while (this.eat(16)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n    return entity;\n  }\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName();\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(87);\n    if (this.match(83)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName();\n    }\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n  tsParseTypeParameter(parseModifiers) {\n    const node = this.startNode();\n    parseModifiers(node);\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(81);\n    node.default = this.tsEatThenParseType(29);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsTryParseTypeParameters(parseModifiers) {\n    if (this.match(47)) {\n      return this.tsParseTypeParameters(parseModifiers);\n    }\n  }\n  tsParseTypeParameters(parseModifiers) {\n    const node = this.startNode();\n    if (this.match(47) || this.match(142)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    const refTrailingCommaPos = {\n      value: -1\n    };\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this, parseModifiers), false, true, refTrailingCommaPos);\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeParameters, {\n        at: node\n      });\n    }\n    if (refTrailingCommaPos.value !== -1) {\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n    }\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === 19;\n    const paramsKey = \"parameters\";\n    const returnTypeKey = \"typeAnnotation\";\n    signature.typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    this.expect(10);\n    signature[paramsKey] = this.tsParseBindingListForSignature();\n    if (returnTokenRequired) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n  tsParseBindingListForSignature() {\n    const list = super.parseBindingList(11, 41, 2);\n    for (const pattern of list) {\n      const {\n        type\n      } = pattern;\n      if (type === \"AssignmentPattern\" || type === \"TSParameterProperty\") {\n        this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n          at: pattern,\n          type\n        });\n      }\n    }\n    return list;\n  }\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(12) && !this.isLineTerminator()) {\n      this.expect(13);\n    }\n  }\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(14, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    if (tokenIsIdentifier(this.state.type)) {\n      this.next();\n      return this.match(14);\n    }\n    return false;\n  }\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return;\n    }\n    this.expect(0);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(3);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(17)) node.optional = true;\n    const nodeAny = node;\n    if (this.match(10) || this.match(47)) {\n      if (readonly) {\n        this.raise(TSErrors.ReadonlyForMethodSignature, {\n          at: node\n        });\n      }\n      const method = nodeAny;\n      if (method.kind && this.match(47)) {\n        this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n          at: this.state.curPosition()\n        });\n      }\n      this.tsFillSignature(14, method);\n      this.tsParseTypeMemberSemicolon();\n      const paramsKey = \"parameters\";\n      const returnTypeKey = \"typeAnnotation\";\n      if (method.kind === \"get\") {\n        if (method[paramsKey].length > 0) {\n          this.raise(Errors.BadGetterArity, {\n            at: this.state.curPosition()\n          });\n          if (this.isThisParam(method[paramsKey][0])) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method[paramsKey].length !== 1) {\n          this.raise(Errors.BadSetterArity, {\n            at: this.state.curPosition()\n          });\n        } else {\n          const firstParameter = method[paramsKey][0];\n          if (this.isThisParam(firstParameter)) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n              at: this.state.curPosition()\n            });\n          }\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n        if (method[returnTypeKey]) {\n          this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n            at: method[returnTypeKey]\n          });\n        }\n      } else {\n        method.kind = \"method\";\n      }\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n  tsParseTypeMember() {\n    const node = this.startNode();\n    if (this.match(10) || this.match(47)) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n    if (this.match(77)) {\n      const id = this.startNode();\n      this.next();\n      if (this.match(10) || this.match(47)) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n    this.tsParseModifiers({\n      allowedModifiers: [\"readonly\"],\n      disallowedModifiers: [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"]\n    }, node);\n    const idx = this.tsTryParseIndexSignature(node);\n    if (idx) {\n      return idx;\n    }\n    super.parsePropertyName(node);\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      super.parsePropertyName(node);\n    }\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n  tsParseObjectTypeMembers() {\n    this.expect(5);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(8);\n    return members;\n  }\n  tsIsStartOfMappedType() {\n    this.next();\n    if (this.eat(53)) {\n      return this.isContextual(122);\n    }\n    if (this.isContextual(122)) {\n      this.next();\n    }\n    if (!this.match(0)) {\n      return false;\n    }\n    this.next();\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n    this.next();\n    return this.match(58);\n  }\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(58);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(5);\n    if (this.match(53)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(122);\n    } else if (this.eatContextual(122)) {\n      node.readonly = true;\n    }\n    this.expect(0);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(93) ? this.tsParseType() : null;\n    this.expect(3);\n    if (this.match(53)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(17);\n    } else if (this.eat(17)) {\n      node.optional = true;\n    }\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(8);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    node.elementTypes.forEach(elementNode => {\n      const {\n        type\n      } = elementNode;\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(TSErrors.OptionalTypeBeforeRequired, {\n          at: elementNode\n        });\n      }\n      seenOptionalElement || (seenOptionalElement = type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\");\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n  tsParseTupleElementType() {\n    const {\n      startLoc\n    } = this.state;\n    const rest = this.eat(21);\n    let labeled;\n    let label;\n    let optional;\n    let type;\n    const isWord = tokenIsKeywordOrIdentifier(this.state.type);\n    const chAfterWord = isWord ? this.lookaheadCharCode() : null;\n    if (chAfterWord === 58) {\n      labeled = true;\n      optional = false;\n      label = this.parseIdentifier(true);\n      this.expect(14);\n      type = this.tsParseType();\n    } else if (chAfterWord === 63) {\n      optional = true;\n      const startLoc = this.state.startLoc;\n      const wordName = this.state.value;\n      const typeOrLabel = this.tsParseNonArrayType();\n      if (this.lookaheadCharCode() === 58) {\n        labeled = true;\n        label = this.createIdentifier(this.startNodeAt(startLoc), wordName);\n        this.expect(17);\n        this.expect(14);\n        type = this.tsParseType();\n      } else {\n        labeled = false;\n        type = typeOrLabel;\n        this.expect(17);\n      }\n    } else {\n      type = this.tsParseType();\n      optional = this.eat(17);\n      labeled = this.eat(14);\n    }\n    if (labeled) {\n      let labeledNode;\n      if (label) {\n        labeledNode = this.startNodeAtNode(label);\n        labeledNode.optional = optional;\n        labeledNode.label = label;\n        labeledNode.elementType = type;\n        if (this.eat(17)) {\n          labeledNode.optional = true;\n          this.raise(TSErrors.TupleOptionalAfterType, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n      } else {\n        labeledNode = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n        this.raise(TSErrors.InvalidTupleMemberLabel, {\n          at: type\n        });\n        labeledNode.label = type;\n        labeledNode.elementType = this.tsParseType();\n      }\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n    if (rest) {\n      const restNode = this.startNodeAt(startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n    return type;\n  }\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(10);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(11);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n    this.tsInAllowConditionalTypesContext(() => this.tsFillSignature(19, node));\n    return this.finishNode(node, type);\n  }\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n    switch (this.state.type) {\n      case 134:\n      case 135:\n      case 133:\n      case 85:\n      case 86:\n        node.literal = super.parseExprAtom();\n        break;\n      default:\n        this.unexpected();\n    }\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = super.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n    if (this.isContextual(116) && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case 133:\n      case 134:\n      case 135:\n      case 85:\n      case 86:\n        return this.tsParseLiteralTypeNode();\n      case 53:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n          if (nextToken.type !== 134 && nextToken.type !== 135) {\n            this.unexpected();\n          }\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n        break;\n      case 78:\n        return this.tsParseThisTypeOrThisTypePredicate();\n      case 87:\n        return this.tsParseTypeQuery();\n      case 83:\n        return this.tsParseImportType();\n      case 5:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n      case 0:\n        return this.tsParseTupleType();\n      case 10:\n        return this.tsParseParenthesizedType();\n      case 25:\n      case 24:\n        return this.tsParseTemplateLiteralType();\n      default:\n        {\n          const {\n            type\n          } = this.state;\n          if (tokenIsIdentifier(type) || type === 88 || type === 84) {\n            const nodeType = type === 88 ? \"TSVoidKeyword\" : type === 84 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n              const node = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n    }\n    this.unexpected();\n  }\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n      if (this.match(3)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(3);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(3);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n    return type;\n  }\n  tsParseTypeOperator() {\n    const node = this.startNode();\n    const operator = this.state.value;\n    this.next();\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n      default:\n        this.raise(TSErrors.UnexpectedReadonly, {\n          at: node\n        });\n    }\n  }\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(115);\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    typeParameter.constraint = this.tsTryParse(() => this.tsParseConstraintForInferType());\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n  tsParseConstraintForInferType() {\n    if (this.eat(81)) {\n      const constraint = this.tsInDisallowConditionalTypesContext(() => this.tsParseType());\n      if (this.state.inDisallowConditionalTypesContext || !this.match(17)) {\n        return constraint;\n      }\n    }\n  }\n  tsParseTypeOperatorOrHigher() {\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(115) ? this.tsParseInferType() : this.tsInAllowConditionalTypesContext(() => this.tsParseArrayTypeOrHigher());\n  }\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 45);\n  }\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 43);\n  }\n  tsIsStartOfFunctionType() {\n    if (this.match(47)) {\n      return true;\n    }\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n  tsSkipParameterStart() {\n    if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n      this.next();\n      return true;\n    }\n    if (this.match(5)) {\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        this.parseObjectLike(8, true);\n        return errors.length === previousErrorCount;\n      } catch (_unused) {\n        return false;\n      }\n    }\n    if (this.match(0)) {\n      this.next();\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        super.parseBindingList(3, 93, 1);\n        return errors.length === previousErrorCount;\n      } catch (_unused2) {\n        return false;\n      }\n    }\n    return false;\n  }\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n    if (this.match(11) || this.match(21)) {\n      return true;\n    }\n    if (this.tsSkipParameterStart()) {\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(29)) {\n        return true;\n      }\n      if (this.match(11)) {\n        this.next();\n        if (this.match(19)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n      if (asserts && this.match(78)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    if (this.match(14)) {\n      return this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n  }\n  tsTryParseTypeAnnotation() {\n    if (this.match(14)) {\n      return this.tsParseTypeAnnotation();\n    }\n  }\n  tsTryParseType() {\n    return this.tsEatThenParseType(14);\n  }\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n    if (this.isContextual(116) && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n  tsParseTypePredicateAsserts() {\n    if (this.state.type !== 109) {\n      return false;\n    }\n    const containsEsc = this.state.containsEsc;\n    this.next();\n    if (!tokenIsIdentifier(this.state.type) && !this.match(78)) {\n      return false;\n    }\n    if (containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.lastTokStartLoc,\n        reservedWord: \"asserts\"\n      });\n    }\n    return true;\n  }\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(14);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n    if (this.state.inDisallowConditionalTypesContext || this.hasPrecedingLineBreak() || !this.eat(81)) {\n      return type;\n    }\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsInDisallowConditionalTypesContext(() => this.tsParseNonConditionalType());\n    this.expect(17);\n    node.trueType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    this.expect(14);\n    node.falseType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n  isAbstractConstructorSignature() {\n    return this.isContextual(124) && this.lookahead().type === 77;\n  }\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n    if (this.match(77)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n    return this.tsParseUnionTypeOrHigher();\n  }\n  tsParseTypeAssertion() {\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedTypeAssertion, {\n        at: this.state.startLoc\n      });\n    }\n    const node = this.startNode();\n    node.typeAnnotation = this.tsInType(() => {\n      this.next();\n      return this.match(75) ? this.tsParseTypeReference() : this.tsParseType();\n    });\n    this.expect(48);\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n  tsParseHeritageClause(token) {\n    const originalStartLoc = this.state.startLoc;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", () => {\n      const node = this.startNode();\n      node.expression = this.tsParseEntityName();\n      if (this.match(47)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    });\n    if (!delimitedList.length) {\n      this.raise(TSErrors.EmptyHeritageClauseType, {\n        at: originalStartLoc,\n        token\n      });\n    }\n    return delimitedList;\n  }\n  tsParseInterfaceDeclaration(node, properties = {}) {\n    if (this.hasFollowingLineBreak()) return null;\n    this.expectContextual(129);\n    if (properties.declare) node.declare = true;\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, 130);\n    } else {\n      node.id = null;\n      this.raise(TSErrors.MissingInterfaceName, {\n        at: this.state.startLoc\n      });\n    }\n    node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\n    if (this.eat(81)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, 2);\n    node.typeAnnotation = this.tsInType(() => {\n      node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers);\n      this.expect(29);\n      if (this.isContextual(114) && this.lookahead().type !== 16) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n  tsInDisallowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsInAllowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = false;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsEatThenParseType(token) {\n    if (this.match(token)) {\n      return this.tsNextThenParseType();\n    }\n  }\n  tsExpectThenParseType(token) {\n    return this.tsInType(() => {\n      this.expect(token);\n      return this.tsParseType();\n    });\n  }\n  tsNextThenParseType() {\n    return this.tsInType(() => {\n      this.next();\n      return this.tsParseType();\n    });\n  }\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(133) ? super.parseStringLiteral(this.state.value) : this.parseIdentifier(true);\n    if (this.eat(29)) {\n      node.initializer = super.parseMaybeAssignAllowIn();\n    }\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n  tsParseEnumDeclaration(node, properties = {}) {\n    if (properties.const) node.const = true;\n    if (properties.declare) node.declare = true;\n    this.expectContextual(126);\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, node.const ? 8971 : 8459);\n    this.expect(5);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(8);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(0);\n    this.expect(5);\n    super.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n    if (!nested) {\n      this.checkIdentifier(node.id, 1024);\n    }\n    if (this.eat(16)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(256);\n      this.prodParam.enter(0);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(112)) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(133)) {\n      node.id = super.parseStringLiteral(this.state.value);\n    } else {\n      this.unexpected();\n    }\n    if (this.match(5)) {\n      this.scope.enter(256);\n      this.prodParam.enter(0);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseImportEqualsDeclaration(node, maybeDefaultIdentifier, isExport) {\n    node.isExport = isExport || false;\n    node.id = maybeDefaultIdentifier || this.parseIdentifier();\n    this.checkIdentifier(node.id, 4096);\n    this.expect(29);\n    const moduleReference = this.tsParseModuleReference();\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(TSErrors.ImportAliasHasImportType, {\n        at: moduleReference\n      });\n    }\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n  tsIsExternalModuleReference() {\n    return this.isContextual(119) && this.lookaheadCharCode() === 40;\n  }\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(119);\n    this.expect(10);\n    if (!this.match(133)) {\n      this.unexpected();\n    }\n    node.expression = super.parseExprAtom();\n    this.expect(11);\n    this.sawUnambiguousESM = true;\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n    if (result !== undefined && result !== false) {\n      return result;\n    }\n    this.state = state;\n  }\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n    let startType = this.state.type;\n    let kind;\n    if (this.isContextual(100)) {\n      startType = 74;\n      kind = \"let\";\n    }\n    return this.tsInAmbientContext(() => {\n      switch (startType) {\n        case 68:\n          nany.declare = true;\n          return super.parseFunctionStatement(nany, false, false);\n        case 80:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n        case 126:\n          return this.tsParseEnumDeclaration(nany, {\n            declare: true\n          });\n        case 112:\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        case 75:\n        case 74:\n          if (!this.match(75) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n          this.expect(75);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true\n          });\n        case 129:\n          {\n            const result = this.tsParseInterfaceDeclaration(nany, {\n              declare: true\n            });\n            if (result) return result;\n          }\n        default:\n          if (tokenIsIdentifier(startType)) {\n            return this.tsParseDeclaration(nany, this.state.value, true, null);\n          }\n      }\n    });\n  }\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true, null);\n  }\n  tsParseExpressionStatement(node, expr, decorators) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n          }\n          return declaration;\n        }\n      case \"global\":\n        if (this.match(5)) {\n          this.scope.enter(256);\n          this.prodParam.enter(0);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n        break;\n      default:\n        return this.tsParseDeclaration(node, expr.name, false, decorators);\n    }\n  }\n  tsParseDeclaration(node, value, next, decorators) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(80) || tokenIsIdentifier(this.state.type))) {\n          return this.tsParseAbstractDeclaration(node, decorators);\n        }\n        break;\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(133)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n        break;\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n        break;\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n        break;\n    }\n  }\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n    return !this.isLineTerminator();\n  }\n  tsTryParseGenericAsyncArrowFunction(startLoc) {\n    if (!this.match(47)) return;\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startLoc);\n      node.typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(19);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    if (!res) return;\n    return super.parseArrowExpression(res, null, true);\n  }\n  tsParseTypeArgumentsInExpression() {\n    if (this.reScan_lt() !== 47) return;\n    return this.tsParseTypeArguments();\n  }\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expect(47);\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeArguments, {\n        at: node\n      });\n    } else if (!this.state.inType && this.curContext() === types.brace) {\n      this.reScan_lt_gt();\n    }\n    this.expect(48);\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n  tsIsDeclarationStart() {\n    return tokenIsTSDeclarationStart(this.state.type);\n  }\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n  parseAssignableListItem(flags, decorators) {\n    const startLoc = this.state.startLoc;\n    const modified = {};\n    this.tsParseModifiers({\n      allowedModifiers: [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]\n    }, modified);\n    const accessibility = modified.accessibility;\n    const override = modified.override;\n    const readonly = modified.readonly;\n    if (!(flags & 4) && (accessibility || readonly || override)) {\n      this.raise(TSErrors.UnexpectedParameterModifier, {\n        at: startLoc\n      });\n    }\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startLoc);\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(TSErrors.UnsupportedParameterPropertyKind, {\n          at: pp\n        });\n      }\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  isSimpleParameter(node) {\n    return node.type === \"TSParameterProperty\" && super.isSimpleParameter(node.parameter) || super.isSimpleParameter(node);\n  }\n  tsDisallowOptionalPattern(node) {\n    for (const param of node.params) {\n      if (param.type !== \"Identifier\" && param.optional && !this.state.isAmbientContext) {\n        this.raise(TSErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n    }\n  }\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    this.tsDisallowOptionalPattern(node);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n      return this.finishNode(node, bodilessType);\n    }\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(TSErrors.DeclareFunctionHasImplementation, {\n        at: node\n      });\n      if (node.declare) {\n        return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n      }\n    }\n    this.tsDisallowOptionalPattern(node);\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkIdentifier(node.id, 1024);\n    } else {\n      super.registerFunctionStatementId(node);\n    }\n  }\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(TSErrors.UnexpectedTypeAnnotation, {\n          at: node.typeAnnotation\n        });\n      }\n    });\n  }\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(35)) {\n      this.state.canStartJSXElement = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n    let isOptionalCall = false;\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n    if (this.match(47) || this.match(51)) {\n      let missingParenErrorLoc;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startLoc);\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n        if (!typeArguments) return;\n        if (isOptionalCall && !this.match(10)) {\n          missingParenErrorLoc = this.state.curPosition();\n          return;\n        }\n        if (tokenIsTemplate(this.state.type)) {\n          const result = super.parseTaggedTemplateExpression(base, startLoc, state);\n          result.typeParameters = typeArguments;\n          return result;\n        }\n        if (!noCalls && this.eat(10)) {\n          const node = this.startNodeAt(startLoc);\n          node.callee = base;\n          node.arguments = this.parseCallExpressionArguments(11, false);\n          this.tsCheckForInvalidTypeCasts(node.arguments);\n          node.typeParameters = typeArguments;\n          if (state.optionalChainMember) {\n            node.optional = isOptionalCall;\n          }\n          return this.finishCallExpression(node, state.optionalChainMember);\n        }\n        const tokenType = this.state.type;\n        if (tokenType === 48 || tokenType === 52 || tokenType !== 10 && tokenCanStartExpression(tokenType) && !this.hasPrecedingLineBreak()) {\n          return;\n        }\n        const node = this.startNodeAt(startLoc);\n        node.expression = base;\n        node.typeParameters = typeArguments;\n        return this.finishNode(node, \"TSInstantiationExpression\");\n      });\n      if (missingParenErrorLoc) {\n        this.unexpected(missingParenErrorLoc, 10);\n      }\n      if (result) {\n        if (result.type === \"TSInstantiationExpression\" && (this.match(16) || this.match(18) && this.lookaheadCharCode() !== 40)) {\n          this.raise(TSErrors.InvalidPropertyAccessAfterInstantiationExpression, {\n            at: this.state.startLoc\n          });\n        }\n        return result;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, state);\n  }\n  parseNewCallee(node) {\n    var _callee$extra;\n    super.parseNewCallee(node);\n    const {\n      callee\n    } = node;\n    if (callee.type === \"TSInstantiationExpression\" && !((_callee$extra = callee.extra) != null && _callee$extra.parenthesized)) {\n      node.typeParameters = callee.typeParameters;\n      node.callee = callee.expression;\n    }\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    let isSatisfies;\n    if (tokenOperatorPrecedence(58) > minPrec && !this.hasPrecedingLineBreak() && (this.isContextual(93) || (isSatisfies = this.isContextual(120)))) {\n      const node = this.startNodeAt(leftStartLoc);\n      node.expression = left;\n      node.typeAnnotation = this.tsInType(() => {\n        this.next();\n        if (this.match(75)) {\n          if (isSatisfies) {\n            this.raise(Errors.UnexpectedKeyword, {\n              at: this.state.startLoc,\n              keyword: \"const\"\n            });\n          }\n          return this.tsParseTypeReference();\n        }\n        return this.tsParseType();\n      });\n      this.finishNode(node, isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartLoc, minPrec);\n    }\n    return super.parseExprOp(left, leftStartLoc, minPrec);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (!this.state.isAmbientContext) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(TSErrors.ImportReflectionHasImportType, {\n        at: node.specifiers[0].loc.start\n      });\n    }\n  }\n  checkDuplicateExports() {}\n  isPotentialImportPhase(isExport) {\n    if (super.isPotentialImportPhase(isExport)) return true;\n    if (this.isContextual(130)) {\n      const ch = this.lookaheadCharCode();\n      return isExport ? ch === 123 || ch === 42 : ch !== 61;\n    }\n    return !isExport && this.isContextual(87);\n  }\n  applyImportPhase(node, isExport, phase, loc) {\n    super.applyImportPhase(node, isExport, phase, loc);\n    if (isExport) {\n      node.exportKind = phase === \"type\" ? \"type\" : \"value\";\n    } else {\n      node.importKind = phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n    }\n  }\n  parseImport(node) {\n    if (this.match(133)) {\n      node.importKind = \"value\";\n      return super.parseImport(node);\n    }\n    let importNode;\n    if (tokenIsIdentifier(this.state.type) && this.lookaheadCharCode() === 61) {\n      node.importKind = \"value\";\n      return this.tsParseImportEqualsDeclaration(node);\n    } else if (this.isContextual(130)) {\n      const maybeDefaultIdentifier = this.parseMaybeImportPhase(node, false);\n      if (this.lookaheadCharCode() === 61) {\n        return this.tsParseImportEqualsDeclaration(node, maybeDefaultIdentifier);\n      } else {\n        importNode = super.parseImportSpecifiersAndAfter(node, maybeDefaultIdentifier);\n      }\n    } else {\n      importNode = super.parseImport(node);\n    }\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n        at: importNode\n      });\n    }\n    return importNode;\n  }\n  parseExport(node, decorators) {\n    if (this.match(83)) {\n      this.next();\n      let maybeDefaultIdentifier = null;\n      if (this.isContextual(130) && this.isPotentialImportPhase(false)) {\n        maybeDefaultIdentifier = this.parseMaybeImportPhase(node, false);\n      } else {\n        node.importKind = \"value\";\n      }\n      return this.tsParseImportEqualsDeclaration(node, maybeDefaultIdentifier, true);\n    } else if (this.eat(29)) {\n      const assign = node;\n      assign.expression = super.parseExpression();\n      this.semicolon();\n      this.sawUnambiguousESM = true;\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(93)) {\n      const decl = node;\n      this.expectContextual(128);\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      return super.parseExport(node, decorators);\n    }\n  }\n  isAbstractClass() {\n    return this.isContextual(124) && this.lookahead().type === 80;\n  }\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      return this.parseClass(cls, true, true);\n    }\n    if (this.match(129)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    const {\n      isAmbientContext\n    } = this.state;\n    const declaration = super.parseVarStatement(node, kind, allowMissingInitializer || isAmbientContext);\n    if (!isAmbientContext) return declaration;\n    for (const {\n      id,\n      init\n    } of declaration.declarations) {\n      if (!init) continue;\n      if (kind !== \"const\" || !!id.typeAnnotation) {\n        this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n          at: init\n        });\n      } else if (!isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))) {\n        this.raise(TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference, {\n          at: init\n        });\n      }\n    }\n    return declaration;\n  }\n  parseStatementContent(flags, decorators) {\n    if (this.match(75) && this.isLookaheadContextual(\"enum\")) {\n      const node = this.startNode();\n      this.expect(75);\n      return this.tsParseEnumDeclaration(node, {\n        const: true\n      });\n    }\n    if (this.isContextual(126)) {\n      return this.tsParseEnumDeclaration(this.startNode());\n    }\n    if (this.isContextual(129)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseStatementContent(flags, decorators);\n  }\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n      return !!member[modifier];\n    });\n  }\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(106) && this.lookaheadCharCode() === 123;\n  }\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers({\n      allowedModifiers: modifiers,\n      disallowedModifiers: [\"in\", \"out\"],\n      stopOnStartOfClassStaticBlock: true,\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    }, member);\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n            at: this.state.curPosition()\n          });\n        }\n        super.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n    if (idx) {\n      classBody.body.push(idx);\n      if (member.abstract) {\n        this.raise(TSErrors.IndexSignatureHasAbstract, {\n          at: member\n        });\n      }\n      if (member.accessibility) {\n        this.raise(TSErrors.IndexSignatureHasAccessibility, {\n          at: member,\n          modifier: member.accessibility\n        });\n      }\n      if (member.declare) {\n        this.raise(TSErrors.IndexSignatureHasDeclare, {\n          at: member\n        });\n      }\n      if (member.override) {\n        this.raise(TSErrors.IndexSignatureHasOverride, {\n          at: member\n        });\n      }\n      return;\n    }\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n        at: member\n      });\n    }\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(TSErrors.OverrideNotInSubClass, {\n          at: member\n        });\n      }\n    }\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(17);\n    if (optional) methodOrProp.optional = true;\n    if (methodOrProp.readonly && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasReadonly, {\n        at: methodOrProp\n      });\n    }\n    if (methodOrProp.declare && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasDeclare, {\n        at: methodOrProp\n      });\n    }\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr, decorators) : undefined;\n    return decl || super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\n      return super.parseConditional(expr, startLoc, refExpressionErrors);\n    }\n    const result = this.tryParse(() => super.parseConditional(expr, startLoc));\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n      return expr;\n    }\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n    return node;\n  }\n  parseExportDeclaration(node) {\n    if (!this.state.isAmbientContext && this.isContextual(125)) {\n      return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n    }\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(125);\n    if (isDeclare && (this.isContextual(125) || !this.shouldParseExportDeclaration())) {\n      throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n        at: this.state.startLoc\n      });\n    }\n    const isIdentifier = tokenIsIdentifier(this.state.type);\n    const declaration = isIdentifier && this.tsTryParseExportDeclaration() || super.parseExportDeclaration(node);\n    if (!declaration) return null;\n    if (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare) {\n      node.exportKind = \"type\";\n    }\n    if (isDeclare) {\n      this.resetStartLocation(declaration, startLoc);\n      declaration.declare = true;\n    }\n    return declaration;\n  }\n  parseClassId(node, isStatement, optionalId, bindingType) {\n    if ((!isStatement || optionalId) && this.isContextual(113)) {\n      return;\n    }\n    super.parseClassId(node, isStatement, optionalId, node.declare ? 1024 : 8331);\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional) {\n      if (this.eat(35)) {\n        node.definite = true;\n      } else if (this.eat(17)) {\n        node.optional = true;\n      }\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (this.state.isAmbientContext && !(node.readonly && !node.typeAnnotation) && this.match(29)) {\n      this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n        at: this.state.startLoc\n      });\n    }\n    if (node.abstract && this.match(29)) {\n      const {\n        key\n      } = node;\n      this.raise(TSErrors.AbstractPropertyHasInitializer, {\n        at: this.state.startLoc,\n        propertyName: key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n      });\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(TSErrors.PrivateElementHasAbstract, {\n        at: node\n      });\n    }\n    if (node.accessibility) {\n      this.raise(TSErrors.PrivateElementHasAccessibility, {\n        at: node,\n        modifier: node.accessibility\n      });\n    }\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n  parseClassAccessorProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (node.optional) {\n      this.raise(TSErrors.AccessorCannotBeOptional, {\n        at: node\n      });\n    }\n    return super.parseClassAccessorProperty(node);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters && isConstructor) {\n      this.raise(TSErrors.ConstructorHasTypeParameters, {\n        at: typeParameters\n      });\n    }\n    const {\n      declare = false,\n      kind\n    } = method;\n    if (declare && (kind === \"get\" || kind === \"set\")) {\n      this.raise(TSErrors.DeclareAccessor, {\n        at: method,\n        kind\n      });\n    }\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    if (node.type === \"TSDeclareMethod\") return;\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\n    super.declareClassPrivateMethodInScope(node, kind);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && (this.match(47) || this.match(51))) {\n      node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n    }\n    if (this.eatContextual(113)) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) prop.typeParameters = typeParameters;\n    return super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n  }\n  parseFunctionParams(node, isConstructor) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, isConstructor);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (decl.id.type === \"Identifier\" && !this.hasPrecedingLineBreak() && this.eat(35)) {\n      decl.definite = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2;\n    let state;\n    let jsx;\n    let typeCast;\n    if (this.hasPlugin(\"jsx\") && (this.match(142) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(47)) {\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n    if (!state || state === this.state) state = this.state.clone();\n    let typeParameters;\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n      typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n      const expr = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) {\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n    if (arrow.node) {\n      this.state = arrow.failState;\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n    throw ((_jsx3 = jsx) == null ? void 0 : _jsx3.error) || arrow.error || ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.error);\n  }\n  reportReservedArrowTypeParam(node) {\n    var _node$extra;\n    if (node.params.length === 1 && !node.params[0].constraint && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedArrowTypeParam, {\n        at: node\n      });\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    if (!this.hasPlugin(\"jsx\") && this.match(47)) {\n      return this.tsParseTypeAssertion();\n    }\n    return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n    return super.parseArrow(node);\n  }\n  parseAssignableListItemTypes(param, flags) {\n    if (!(flags & 2)) return param;\n    if (this.eat(17)) {\n      param.optional = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n      case \"TSParameterProperty\":\n        return true;\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.toAssignableParenthesizedExpression(node, isLHS);\n        break;\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        if (isLHS) {\n          this.expressionScope.recordArrowParameterBindingError(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        } else {\n          this.raise(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        }\n        this.toAssignable(node.expression, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n          node.left = this.typeCastToParameter(node.left);\n        }\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isLHS);\n        break;\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSTypeAssertion\":\n      case \"TSNonNullExpression\":\n        this.checkToRestConversion(node.expression, false);\n        break;\n      default:\n        super.checkToRestConversion(node, allowPattern);\n    }\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn({\n      TSTypeCastExpression: true,\n      TSParameterProperty: \"parameter\",\n      TSNonNullExpression: \"expression\",\n      TSAsExpression: (binding !== 64 || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSSatisfiesExpression: (binding !== 64 || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSTypeAssertion: (binding !== 64 || !isUnparenthesizedInAssign) && [\"expression\", true]\n    }, type) || super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  parseBindingAtom() {\n    if (this.state.type === 78) {\n      return this.parseIdentifier(true);\n    }\n    return super.parseBindingAtom();\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsParseTypeArgumentsInExpression();\n      if (this.match(10)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n      this.unexpected(null, 10);\n    }\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n      this.next();\n      return false;\n    }\n    return super.checkCommaAfterRest(close);\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(35) || this.match(14) || super.isClassProperty();\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(TSErrors.TypeAnnotationAfterAssign, {\n        at: node.typeAnnotation\n      });\n    }\n    return node;\n  }\n  getTokenFromCode(code) {\n    if (this.state.inType) {\n      if (code === 62) {\n        this.finishOp(48, 1);\n        return;\n      }\n      if (code === 60) {\n        this.finishOp(47, 1);\n        return;\n      }\n    }\n    super.getTokenFromCode(code);\n  }\n  reScan_lt_gt() {\n    const {\n      type\n    } = this.state;\n    if (type === 47) {\n      this.state.pos -= 1;\n      this.readToken_lt();\n    } else if (type === 48) {\n      this.state.pos -= 1;\n      this.readToken_gt();\n    }\n  }\n  reScan_lt() {\n    const {\n      type\n    } = this.state;\n    if (type === 51) {\n      this.state.pos -= 2;\n      this.finishOp(47, 1);\n      return 47;\n    }\n    return type;\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TSTypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  shouldParseArrow(params) {\n    if (this.match(14)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n    return super.shouldParseArrow(params);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n  jsxParseOpeningElementAfterName(node) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArgumentsInExpression());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n    return param;\n  }\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n  parseClass(node, isStatement, optionalId) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n    try {\n      return super.parseClass(node, isStatement, optionalId);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n  tsParseAbstractDeclaration(node, decorators) {\n    if (this.match(80)) {\n      node.abstract = true;\n      return this.maybeTakeDecorators(decorators, this.parseClass(node, true, false));\n    } else if (this.isContextual(129)) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n          at: node\n        });\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, 80);\n    }\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope) {\n    const method = super.parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(TSErrors.AbstractMethodHasImplementation, {\n          at: method,\n          methodName: key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n        });\n      }\n    }\n    return method;\n  }\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.parse();\n  }\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.getExpression();\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (!isString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n    node.exportKind = \"value\";\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (!importedIsString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n    specifier.importKind = \"value\";\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, isInTypeOnlyImport ? 4098 : 4096);\n  }\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\n    let leftOfAs = node[leftOfAsKey];\n    let rightOfAs;\n    let hasTypeSpecifier = false;\n    let canParseAsKeyword = true;\n    const loc = leftOfAs.loc.start;\n    if (this.isContextual(93)) {\n      const firstAs = this.parseIdentifier();\n      if (this.isContextual(93)) {\n        const secondAs = this.parseIdentifier();\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n          rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n          canParseAsKeyword = false;\n        } else {\n          rightOfAs = secondAs;\n          canParseAsKeyword = false;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        canParseAsKeyword = false;\n        rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n      } else {\n        hasTypeSpecifier = true;\n        leftOfAs = firstAs;\n      }\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      hasTypeSpecifier = true;\n      if (isImport) {\n        leftOfAs = this.parseIdentifier(true);\n        if (!this.isContextual(93)) {\n          this.checkReservedWord(leftOfAs.name, leftOfAs.loc.start, true, true);\n        }\n      } else {\n        leftOfAs = this.parseModuleExportName();\n      }\n    }\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n      this.raise(isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports, {\n        at: loc\n      });\n    }\n    node[leftOfAsKey] = leftOfAs;\n    node[rightOfAsKey] = rightOfAs;\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n    if (canParseAsKeyword && this.eatContextual(93)) {\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n    }\n    if (!node[rightOfAsKey]) {\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n    }\n    if (isImport) {\n      this.checkIdentifier(node[rightOfAsKey], hasTypeSpecifier ? 4098 : 4096);\n    }\n  }\n};\nfunction isPossiblyLiteralEnum(expression) {\n  if (expression.type !== \"MemberExpression\") return false;\n  const {\n    computed,\n    property\n  } = expression;\n  if (computed && property.type !== \"StringLiteral\" && (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)) {\n    return false;\n  }\n  return isUncomputedMemberExpressionChain(expression.object);\n}\nfunction isValidAmbientConstInitializer(expression, estree) {\n  var _expression$extra;\n  const {\n    type\n  } = expression;\n  if ((_expression$extra = expression.extra) != null && _expression$extra.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const {\n        value\n      } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\nfunction isNumber(expression, estree) {\n  if (estree) {\n    return expression.type === \"Literal\" && (typeof expression.value === \"number\" || \"bigint\" in expression);\n  }\n  return expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\";\n}\nfunction isNegativeNumber(expression, estree) {\n  if (expression.type === \"UnaryExpression\") {\n    const {\n      operator,\n      argument\n    } = expression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUncomputedMemberExpressionChain(expression) {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\" || expression.computed) {\n    return false;\n  }\n  return isUncomputedMemberExpressionChain(expression.object);\n}\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\"\n});\nvar placeholders = superClass => class PlaceholdersParserMixin extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(144)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace();\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace();\n      this.expect(144);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      this.finishOp(144, 2);\n    } else {\n      super.getTokenFromCode(code);\n    }\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(refExpressionErrors);\n  }\n  parseIdentifier(liberal) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word !== undefined) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"Placeholder\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  toAssignable(node, isLHS) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (super.chStartsBindingIdentifier(ch, pos)) {\n      return true;\n    }\n    const nextToken = this.lookahead();\n    if (nextToken.type === 144) {\n      return true;\n    }\n    return false;\n  }\n  verifyBreakContinue(node, isBreak) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(node, isBreak);\n  }\n  parseExpressionStatement(node, expr) {\n    var _expr$extra;\n    if (expr.type !== \"Placeholder\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n      return super.parseExpressionStatement(node, expr);\n    }\n    if (this.match(14)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n  parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse) {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse);\n  }\n  parseFunctionId(requireId) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId);\n  }\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (placeholder) {\n      if (this.match(81) || this.match(144) || this.match(5)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n          at: this.state.startLoc\n        });\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n    super.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || super.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n  parseExport(node, decorators) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(node, decorators);\n    if (!this.isContextual(98) && !this.match(12)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node, decorators);\n  }\n  isExportDefaultSpecifier() {\n    if (this.match(65)) {\n      const next = this.nextTokenStart();\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(tokenLabelName(144), this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  maybeParseExportDefaultSpecifier(node, maybeDefaultIdentifier) {\n    var _specifiers;\n    if ((_specifiers = node.specifiers) != null && _specifiers.length) {\n      return true;\n    }\n    return super.maybeParseExportDefaultSpecifier(node, maybeDefaultIdentifier);\n  }\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(node);\n    node.specifiers = [];\n    if (!this.isContextual(98) && !this.match(12)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    node.specifiers.push(this.finishNode(specifier, \"ImportDefaultSpecifier\"));\n    if (this.eat(12)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n    this.expectContextual(98);\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource();\n  }\n  assertNoSpace() {\n    if (this.state.start > this.state.lastTokEndLoc.index) {\n      this.raise(PlaceholderErrors.UnexpectedSpace, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n  }\n};\nvar v8intrinsic = superClass => class V8IntrinsicMixin extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(54)) {\n      const v8IntrinsicStartLoc = this.state.startLoc;\n      const node = this.startNode();\n      this.next();\n      if (tokenIsIdentifier(this.state.type)) {\n        const name = this.parseIdentifierName();\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n        if (this.match(10)) {\n          return identifier;\n        }\n      }\n      this.unexpected(v8IntrinsicStartLoc);\n    }\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors);\n  }\n};\nfunction hasPlugin(plugins, expectedConfig) {\n  const [expectedName, expectedOptions] = typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n  const expectedKeys = Object.keys(expectedOptions);\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return plugin[1][option];\n  }\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n    if (decoratorsBeforeExport != null && typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean, if specified.\");\n    }\n    const allowCallParenthesized = getPluginOption(plugins, \"decorators\", \"allowCallParenthesized\");\n    if (allowCallParenthesized != null && typeof allowCallParenthesized !== \"boolean\") {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\"recordAndTuple\", {\n      syntaxType: \"hash\"\n    }]);\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\") || hasPlugin(plugins, \"importAttributes\")) {\n        throw new Error(\"Cannot combine importAssertions, importAttributes and moduleAttributes plugins.\");\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n  if (hasPlugin(plugins, \"importAssertions\") && hasPlugin(plugins, \"importAttributes\")) {\n    throw new Error(\"Cannot combine importAssertions and importAttributes plugins.\");\n  }\n  if (hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n  if (hasPlugin(plugins, \"optionalChainingAssign\") && getPluginOption(plugins, \"optionalChainingAssign\", \"version\") !== \"2023-07\") {\n    throw new Error(\"The 'optionalChainingAssign' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is '2023-07'.\");\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowNewTargetOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createImportExpressions: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true,\n  annexB: true\n};\nfunction getOptions(opts) {\n  if (opts == null) {\n    return Object.assign({}, defaultOptions);\n  }\n  if (opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n  const options = {};\n  for (const key of Object.keys(defaultOptions)) {\n    var _opts$key;\n    options[key] = (_opts$key = opts[key]) != null ? _opts$key : defaultOptions[key];\n  }\n  return options;\n}\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, {\n          at: key\n        });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, {\n            at: key\n          });\n        }\n      }\n      protoRef.used = true;\n    }\n  }\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(139)) {\n      this.unexpected();\n    }\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n  parseExpressionBase(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(12)) {\n      const node = this.startNodeAt(startLoc);\n      node.expressions = [expr];\n      while (this.eat(12)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$loc;\n    refExpressionErrors.optionalParametersLoc = (_resultError$loc = resultError == null ? void 0 : resultError.loc) != null ? _resultError$loc : this.state.startLoc;\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(108)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const {\n      type\n    } = this.state;\n    if (type === 10 || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      if (this.match(29)) {\n        this.toAssignable(left, true);\n        node.left = left;\n        const startIndex = startLoc.index;\n        if (refExpressionErrors.doubleProtoLoc != null && refExpressionErrors.doubleProtoLoc.index >= startIndex) {\n          refExpressionErrors.doubleProtoLoc = null;\n        }\n        if (refExpressionErrors.shorthandAssignLoc != null && refExpressionErrors.shorthandAssignLoc.index >= startIndex) {\n          refExpressionErrors.shorthandAssignLoc = null;\n        }\n        if (refExpressionErrors.privateKeyLoc != null && refExpressionErrors.privateKeyLoc.index >= startIndex) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null;\n        }\n      } else {\n        node.left = left;\n      }\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\")\n      });\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    return left;\n  }\n  parseMaybeConditional(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (this.eat(17)) {\n      const node = this.startNodeAt(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(14);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(138) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n  parseExprOps(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      if (minPrec >= tokenOperatorPrecedence(58) || !this.prodParam.hasIn || !this.match(58)) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value\n        });\n      }\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(58))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === 39) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt(leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === 41 || op === 42;\n        const coalesce = op === 40;\n        if (coalesce) {\n          prec = tokenOperatorPrecedence(42);\n        }\n        this.next();\n        if (op === 39 && this.hasPlugin([\"pipelineOperator\", {\n          proposal: \"minimal\"\n        }])) {\n          if (this.state.type === 96 && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc\n            });\n          }\n        }\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n        if (coalesce && (nextOp === 41 || nextOp === 42) || logical && nextOp === 40) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n  parseExprOpRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case 39:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(108)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startLoc);\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n  parseExprOpBaseRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n  }\n  parseHackPipeBody() {\n    var _body$extra;\n    const {\n      startLoc\n    } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(body.type);\n    if (requiredParentheses && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        type: body.type\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipeTopicUnused, {\n        at: startLoc\n      });\n    }\n    return body;\n  }\n  checkExponentialAfterUnary(node) {\n    if (this.match(57)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument\n      });\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(96);\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(34);\n    const node = this.startNode();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n      if (this.match(72)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(89);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, {\n            at: node\n          });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, {\n            at: node\n          });\n        }\n      }\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n    if (isAwait) {\n      const {\n        type\n      } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(54);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, {\n          at: startLoc\n        });\n        return this.parseAwait(startLoc);\n      }\n    }\n    return expr;\n  }\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      const updateExpressionNode = node;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\")\n      });\n      return node;\n    }\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: expr = this.finishNode(node, \"UpdateExpression\")\n      });\n    }\n    return expr;\n  }\n  parseExprSubscripts(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseSubscripts(expr, startLoc);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const {\n      type\n    } = this.state;\n    if (!noCalls && type === 15) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n    let optional = false;\n    if (type === 18) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, {\n          at: this.state.startLoc\n        });\n        if (this.lookaheadCharCode() === 40) {\n          state.stop = true;\n          return base;\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n    if (!noCalls && this.match(10)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional);\n    } else {\n      const computed = this.eat(0);\n      if (computed || optional || this.eat(16)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n  parseMember(base, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(3);\n    } else if (this.match(138)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, {\n          at: startLoc\n        });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n  parseBind(base, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    this.next();\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startLoc, noCalls);\n  }\n  parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    const node = this.startNodeAt(startLoc);\n    node.callee = base;\n    const {\n      maybeAsyncArrow,\n      optionalChainMember\n    } = state;\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n    if (optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(11);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n    let finishedNode = this.finishCallExpression(node, optionalChainMember);\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startLoc), finishedNode);\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return finishedNode;\n  }\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n  parseTaggedTemplateExpression(base, startLoc, state) {\n    const node = this.startNodeAt(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, {\n        at: startLoc\n      });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEndLoc.index === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n  expectImportAttributesPlugin() {\n    if (!this.hasPlugin(\"importAssertions\")) {\n      this.expectPlugin(\"importAttributes\");\n    }\n  }\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectImportAttributesPlugin();\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount: this.hasPlugin(\"importAttributes\") || this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? 2 : 1\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, {\n              at: arg\n            });\n          }\n        }\n      }\n    }\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAttributes\") && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n  shouldParseAsyncArrow() {\n    return this.match(19) && !this.canInsertSemicolon();\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(19);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingCommaLoc);\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node;\n  }\n  parseNoCallExpr() {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n  parseExprAtom(refExpressionErrors) {\n    let node;\n    let decorators = null;\n    const {\n      type\n    } = this.state;\n    switch (type) {\n      case 79:\n        return this.parseSuper();\n      case 83:\n        node = this.startNode();\n        this.next();\n        if (this.match(16)) {\n          return this.parseImportMetaProperty(node);\n        }\n        if (this.match(10)) {\n          if (this.options.createImportExpressions) {\n            return this.parseImportCall(node);\n          } else {\n            return this.finishNode(node, \"Import\");\n          }\n        } else {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc\n          });\n          return this.finishNode(node, \"Import\");\n        }\n      case 78:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n      case 90:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n      case 56:\n      case 31:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n      case 134:\n        return this.parseNumericLiteral(this.state.value);\n      case 135:\n        return this.parseBigIntLiteral(this.state.value);\n      case 136:\n        return this.parseDecimalLiteral(this.state.value);\n      case 133:\n        return this.parseStringLiteral(this.state.value);\n      case 84:\n        return this.parseNullLiteral();\n      case 85:\n        return this.parseBooleanLiteral(true);\n      case 86:\n        return this.parseBooleanLiteral(false);\n      case 10:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n      case 2:\n      case 1:\n        {\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\n        }\n      case 0:\n        {\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\n        }\n      case 6:\n      case 7:\n        {\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\n        }\n      case 5:\n        {\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\n        }\n      case 68:\n        return this.parseFunctionOrFunctionSent();\n      case 26:\n        decorators = this.parseDecorators();\n      case 80:\n        return this.parseClass(this.maybeTakeDecorators(decorators, this.startNode()), false);\n      case 77:\n        return this.parseNewOrNewTarget();\n      case 25:\n      case 24:\n        return this.parseTemplate(false);\n      case 15:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(Errors.UnsupportedBind, {\n              at: callee\n            });\n          }\n        }\n      case 138:\n        {\n          this.raise(Errors.PrivateInExpectedIn, {\n            at: this.state.startLoc,\n            identifierName: this.state.value\n          });\n          return this.parsePrivateName();\n        }\n      case 33:\n        {\n          return this.parseTopicReferenceThenEqualsSign(54, \"%\");\n        }\n      case 32:\n        {\n          return this.parseTopicReferenceThenEqualsSign(44, \"^\");\n        }\n      case 37:\n      case 38:\n        {\n          return this.parseTopicReference(\"hack\");\n        }\n      case 44:\n      case 54:\n      case 27:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n          if (pipeProposal) {\n            return this.parseTopicReference(pipeProposal);\n          }\n          this.unexpected();\n          break;\n        }\n      case 47:\n        {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          } else {\n            this.unexpected();\n          }\n          break;\n        }\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (this.isContextual(127) && this.lookaheadInLineCharCode() === 123) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            const {\n              type\n            } = this.state;\n            if (type === 68) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(this.startNodeAtNode(id));\n            } else if (tokenIsIdentifier(type)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (type === 90) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n          return id;\n        } else {\n          this.unexpected();\n        }\n    }\n  }\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n    if (pipeProposal) {\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      this.unexpected();\n    }\n  }\n  parseTopicReference(pipeProposal) {\n    const node = this.startNode();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n    this.next();\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n  finishTopicReference(node, startLoc, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)) {\n      const nodeType = pipeProposal === \"smart\" ? \"PipelinePrimaryTopicReference\" : \"TopicReference\";\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(pipeProposal === \"smart\" ? Errors.PrimaryTopicNotAllowed : Errors.PipeTopicUnbound, {\n          at: startLoc\n        });\n      }\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType)\n      });\n    }\n  }\n  testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          return this.hasPlugin([\"pipelineOperator\", {\n            topicToken: tokenLabelName(tokenType)\n          }]);\n        }\n      case \"smart\":\n        return tokenType === 27;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, {\n          at: startLoc\n        });\n    }\n  }\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition()\n      });\n    }\n    this.expect(19);\n    return this.parseArrowExpression(node, params, true);\n  }\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      this.prodParam.enter(2);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.SuperNotAllowed, {\n        at: node\n      });\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.UnexpectedSuper, {\n        at: node\n      });\n    }\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\n      this.raise(Errors.UnsupportedSuper, {\n        at: node\n      });\n    }\n    return this.finishNode(node, \"Super\");\n  }\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(createPositionWithColumnOffset(this.state.startLoc, 1));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n    if (this.prodParam.hasYield && this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      if (this.match(103)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName\n      });\n    }\n    return this.finishNode(node, \"MetaProperty\");\n  }\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n    if (this.isContextual(101)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, {\n          at: id\n        });\n      }\n      this.sawUnambiguousESM = true;\n    } else if (this.isContextual(105) || this.isContextual(97)) {\n      const isSource = this.isContextual(105);\n      if (!isSource) this.unexpected();\n      this.expectPlugin(isSource ? \"sourcePhaseImports\" : \"deferredImportEvaluation\");\n      if (!this.options.createImportExpressions) {\n        throw this.raise(Errors.DynamicImportPhaseRequiresImportExpressions, {\n          at: this.state.startLoc,\n          phase: this.state.value\n        });\n      }\n      this.next();\n      node.phase = isSource ? \"source\" : \"defer\";\n      return this.parseImportCall(node);\n    }\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n    while (!this.match(11)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12, refExpressionErrors.optionalParametersLoc === null ? null : refExpressionErrors.optionalParametersLoc);\n        if (this.match(11)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n      if (this.match(21)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc));\n        if (!this.checkCommaAfterRest(41)) {\n          break;\n        }\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(11);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startLoc);\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n    return this.wrapParenthesis(startLoc, val);\n  }\n  wrapParenthesis(startLoc, expression) {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n      this.takeSurroundingComments(expression, startLoc.index, this.state.lastTokEndLoc.index);\n      return expression;\n    }\n    const parenExpression = this.startNodeAt(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n  parseArrow(node) {\n    if (this.eat(19)) {\n      return node;\n    }\n  }\n  parseParenItem(node, startLoc) {\n    return node;\n  }\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass && !this.options.allowNewTargetOutsideFunction) {\n        this.raise(Errors.UnexpectedNewTarget, {\n          at: metaProp\n        });\n      }\n      return metaProp;\n    }\n    return this.parseNew(node);\n  }\n  parseNew(node) {\n    this.parseNewCallee(node);\n    if (this.eat(10)) {\n      const args = this.parseExprList(11);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n    return this.finishNode(node, \"NewExpression\");\n  }\n  parseNewCallee(node) {\n    const isImport = this.match(83);\n    const callee = this.parseNoCallExpr();\n    node.callee = callee;\n    if (isImport && (callee.type === \"Import\" || callee.type === \"ImportExpression\")) {\n      this.raise(Errors.ImportCallNotNewExpression, {\n        at: callee\n      });\n    }\n  }\n  parseTemplateElement(isTagged) {\n    const {\n      start,\n      startLoc,\n      end,\n      value\n    } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(createPositionWithColumnOffset(startLoc, 1));\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          at: createPositionWithColumnOffset(this.state.firstInvalidTemplateEscapePos, 1)\n        });\n      }\n    }\n    const isTail = this.match(24);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset)\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(finishedNode, createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset));\n    return finishedNode;\n  }\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(Errors.InvalidRecordProperty, {\n          at: prop\n        });\n      }\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n      node.properties.push(prop);\n    }\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n  addTrailingCommaExtraToNode(node) {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(55));\n  }\n  parsePropertyDefinition(refExpressionErrors) {\n    let decorators = [];\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc\n        });\n      }\n      while (this.match(26)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n    if (this.match(21)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n    prop.method = false;\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n    let isGenerator = this.eat(55);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(55);\n        this.parsePropertyName(prop);\n      }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(55)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n    return this.parseObjPropValue(prop, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n  checkGetterSetterParams(method) {\n    var _params;\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length !== paramCount) {\n      this.raise(method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: method\n      });\n    }\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: method\n      });\n    }\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      const finishedProp = this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n    if (isAsync || isGenerator || this.match(10)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n    if (this.eat(14)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(29)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc\n          });\n        }\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n  parsePropertyName(prop, refExpressionErrors) {\n    if (this.eat(0)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(3);\n    } else {\n      const {\n        type,\n        value\n      } = this.state;\n      let key;\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case 134:\n            key = this.parseNumericLiteral(value);\n            break;\n          case 133:\n            key = this.parseStringLiteral(value);\n            break;\n          case 135:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case 136:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case 138:\n            {\n              const privateKeyLoc = this.state.startLoc;\n              if (refExpressionErrors != null) {\n                if (refExpressionErrors.privateKeyLoc === null) {\n                  refExpressionErrors.privateKeyLoc = privateKeyLoc;\n                }\n              } else {\n                this.raise(Errors.UnexpectedPrivateField, {\n                  at: privateKeyLoc\n                });\n              }\n              key = this.parsePrivateName();\n              break;\n            }\n          default:\n            this.unexpected();\n        }\n      }\n      prop.key = key;\n      if (type !== 138) {\n        prop.computed = false;\n      }\n    }\n    return prop.key;\n  }\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(2 | 16 | (inClassScope ? 64 : 0) | (allowDirectSuper ? 32 : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return finishedNode;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n  parseArrowExpression(node, params, isAsync, trailingCommaLoc) {\n    this.scope.enter(2 | 4);\n    let flags = functionFlags(isAsync, false);\n    if (!this.match(5) && this.prodParam.hasIn) {\n      flags |= 8;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params;\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(5);\n    this.expressionScope.enter(newExpressionScope());\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | 4);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n        if (hasStrictModeDirective && nonSimple) {\n          this.raise(Errors.IllegalLanguageModeDirective, {\n            at: (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.loc.end : node\n          });\n        }\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n        if (this.state.strict && node.id) {\n          this.checkIdentifier(node.id, 65, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n  isSimpleParameter(node) {\n    return node.type === \"Identifier\";\n  }\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = !allowDuplicates && new Set();\n    const formalParameters = {\n      type: \"FormalParameters\"\n    };\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: 5,\n        checkClashes,\n        strictModeChanged\n      });\n    }\n  }\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n    if (this.match(12)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\"\n        });\n      }\n      elt = null;\n    } else if (this.match(21)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartLoc);\n    } else if (this.match(17)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n    return elt;\n  }\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(liberal);\n    return this.createIdentifier(node, name);\n  }\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n  parseIdentifierName(liberal) {\n    let name;\n    const {\n      startLoc,\n      type\n    } = this.state;\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      this.unexpected();\n    }\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n    if (liberal) {\n      if (tokenIsKeyword) {\n        this.replaceToken(132);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n    this.next();\n    return name;\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word\n      });\n      return;\n    }\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc\n        });\n        return;\n      }\n      this.expressionScope.recordAsyncArrowParametersError({\n        at: startLoc\n      });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, {\n          at: startLoc\n        });\n        return;\n      }\n    }\n  }\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n  parseAwait(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.expressionScope.recordParameterInitializerError(Errors.AwaitExpressionFormalParameter, {\n      at: node\n    });\n    if (this.eat(55)) {\n      this.raise(Errors.ObsoleteAwaitStar, {\n        at: node\n      });\n    }\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n  isAmbiguousAwait() {\n    if (this.hasPrecedingLineBreak()) return true;\n    const {\n      type\n    } = this.state;\n    return type === 53 || type === 10 || type === 0 || tokenIsTemplate(type) || type === 102 && !this.state.containsEsc || type === 137 || type === 56 || this.hasPlugin(\"v8intrinsic\") && type === 54;\n  }\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(Errors.YieldInParameter, {\n      at: node\n    });\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(55);\n      switch (this.state.type) {\n        case 13:\n        case 139:\n        case 8:\n        case 11:\n        case 3:\n        case 9:\n        case 14:\n        case 12:\n          if (!delegating) break;\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n  parseImportCall(node) {\n    this.next();\n    node.source = this.parseMaybeAssignAllowIn();\n    if (this.hasPlugin(\"importAttributes\") || this.hasPlugin(\"importAssertions\")) {\n      node.options = null;\n    }\n    if (this.eat(12)) {\n      this.expectImportAttributesPlugin();\n      if (!this.match(11)) {\n        node.options = this.parseMaybeAssignAllowIn();\n        this.eat(12);\n      }\n    }\n    this.expect(11);\n    return this.finishNode(node, \"ImportExpression\");\n  }\n  checkPipelineAtInfixOperator(left, leftStartLoc) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc\n        });\n      }\n    }\n  }\n  parseSmartPipelineBodyInStyle(childExpr, startLoc) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n  checkSmartPipeTopicBodyEarlyErrors(startLoc) {\n    if (this.match(19)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, {\n        at: this.state.startLoc\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, {\n        at: startLoc\n      });\n    }\n  }\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n  withSmartMixTopicForbiddingContext(callback) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = 8 & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | 8);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = 8 & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~8);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n  parseFSharpPipelineBody(prec) {\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    if (!this.match(5)) {\n      this.unexpected(null, 5);\n    }\n    const program = this.startNodeAt(this.state.endLoc);\n    this.next();\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    try {\n      node.body = this.parseProgram(program, 8, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n  parsePropertyNamePrefixOperator(prop) {}\n}\nconst loopLabel = {\n    kind: \"loop\"\n  },\n  switchLabel = {\n    kind: \"switch\"\n  };\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const {\n      type\n    } = token;\n    if (typeof type === \"number\") {\n      {\n        if (type === 138) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(i, 1, new Token({\n            type: getExportedToken(27),\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc\n          }), new Token({\n            type: getExportedToken(132),\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end\n          }));\n          i++;\n          continue;\n        }\n        if (tokenIsTemplate(type)) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === 96) {\n            startToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          } else {\n            startToken = new Token({\n              type: getExportedToken(8),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          }\n          let templateValue, templateElementEnd, templateElementEndLoc, endToken;\n          if (type === 24) {\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          } else {\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              type: getExportedToken(23),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          }\n          tokens.splice(i, 1, startToken, new Token({\n            type: getExportedToken(20),\n            value: templateValue,\n            start: backquoteEnd,\n            end: templateElementEnd,\n            startLoc: backquoteEndLoc,\n            endLoc: templateElementEndLoc\n          }), endToken);\n          i += 2;\n          continue;\n        }\n      }\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n    return this.finishNode(file, \"File\");\n  }\n  parseProgram(program, end = 139, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, {\n          at,\n          localName\n        });\n      }\n    }\n    let finishedProgram;\n    if (end === 139) {\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      finishedProgram = this.finishNodeAt(program, \"Program\", createPositionWithColumnOffset(this.state.startLoc, -1));\n    }\n    return finishedProgram;\n  }\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n  parseInterpreterDirective() {\n    if (!this.match(28)) {\n      return null;\n    }\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n  isLet() {\n    if (!this.isContextual(100)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === 92) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  chStartsBindingPattern(ch) {\n    return ch === 91 || ch === 123;\n  }\n  hasFollowingBindingAtom() {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingPattern(nextCh) || this.chStartsBindingIdentifier(nextCh, next);\n  }\n  hasInLineFollowingBindingIdentifier() {\n    const next = this.nextTokenInLineStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingIdentifier(nextCh, next);\n  }\n  startsUsingForOf() {\n    const {\n      type,\n      containsEsc\n    } = this.lookahead();\n    if (type === 102 && !containsEsc) {\n      return false;\n    } else if (tokenIsIdentifier(type) && !this.hasFollowingLineBreak()) {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n  startsAwaitUsing() {\n    let next = this.nextTokenInLineStart();\n    if (this.isUnparsedContextual(next, \"using\")) {\n      next = this.nextTokenInLineStartSince(next + 5);\n      const nextCh = this.codePointAtPos(next);\n      if (this.chStartsBindingIdentifier(nextCh, next)) {\n        this.expectPlugin(\"explicitResourceManagement\");\n        return true;\n      }\n    }\n    return false;\n  }\n  parseModuleItem() {\n    return this.parseStatementLike(1 | 2 | 4 | 8);\n  }\n  parseStatementListItem() {\n    return this.parseStatementLike(2 | 4 | (!this.options.annexB || this.state.strict ? 0 : 8));\n  }\n  parseStatementOrSloppyAnnexBFunctionDeclaration(allowLabeledFunction = false) {\n    let flags = 0;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= 4;\n      if (allowLabeledFunction) {\n        flags |= 8;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n  parseStatement() {\n    return this.parseStatementLike(0);\n  }\n  parseStatementLike(flags) {\n    let decorators = null;\n    if (this.match(26)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n  parseStatementContent(flags, decorators) {\n    const starttype = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & 2);\n    const allowFunctionDeclaration = !!(flags & 4);\n    const topLevel = flags & 1;\n    switch (starttype) {\n      case 60:\n        return this.parseBreakContinueStatement(node, true);\n      case 63:\n        return this.parseBreakContinueStatement(node, false);\n      case 64:\n        return this.parseDebuggerStatement(node);\n      case 90:\n        return this.parseDoWhileStatement(node);\n      case 91:\n        return this.parseForStatement(node);\n      case 68:\n        if (this.lookaheadCharCode() === 46) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(this.state.strict ? Errors.StrictFunction : this.options.annexB ? Errors.SloppyFunctionAnnexB : Errors.SloppyFunction, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseFunctionStatement(node, false, !allowDeclaration && allowFunctionDeclaration);\n      case 80:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(this.maybeTakeDecorators(decorators, node), true);\n      case 69:\n        return this.parseIfStatement(node);\n      case 70:\n        return this.parseReturnStatement(node);\n      case 71:\n        return this.parseSwitchStatement(node);\n      case 72:\n        return this.parseThrowStatement(node);\n      case 73:\n        return this.parseTryStatement(node);\n      case 96:\n        if (!this.state.containsEsc && this.startsAwaitUsing()) {\n          if (!this.isAwaitAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, {\n              at: node\n            });\n          } else if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, {\n              at: node\n            });\n          }\n          this.next();\n          return this.parseVarStatement(node, \"await using\");\n        }\n        break;\n      case 107:\n        if (this.state.containsEsc || !this.hasInLineFollowingBindingIdentifier()) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, {\n            at: this.state.startLoc\n          });\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseVarStatement(node, \"using\");\n      case 100:\n        {\n          if (this.state.containsEsc) {\n            break;\n          }\n          const next = this.nextTokenStart();\n          const nextCh = this.codePointAtPos(next);\n          if (nextCh !== 91) {\n            if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n            if (!this.chStartsBindingIdentifier(nextCh, next) && nextCh !== 123) {\n              break;\n            }\n          }\n        }\n      case 75:\n        {\n          if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, {\n              at: this.state.startLoc\n            });\n          }\n        }\n      case 74:\n        {\n          const kind = this.state.value;\n          return this.parseVarStatement(node, kind);\n        }\n      case 92:\n        return this.parseWhileStatement(node);\n      case 76:\n        return this.parseWithStatement(node);\n      case 5:\n        return this.parseBlock();\n      case 13:\n        return this.parseEmptyStatement(node);\n      case 83:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n      case 82:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(Errors.UnexpectedImportExport, {\n              at: this.state.startLoc\n            });\n          }\n          this.next();\n          let result;\n          if (starttype === 83) {\n            result = this.parseImport(node);\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node, decorators);\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n          this.assertModuleNodeAllowed(result);\n          return result;\n        }\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (!allowDeclaration) {\n              this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n                at: this.state.startLoc\n              });\n            }\n            this.next();\n            return this.parseFunctionStatement(node, true, !allowDeclaration && allowFunctionDeclaration);\n          }\n        }\n    }\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n      return this.parseLabeledStatement(node, maybeName, expr, flags);\n    } else {\n      return this.parseExpressionStatement(node, expr, decorators);\n    }\n  }\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, {\n        at: node\n      });\n    }\n  }\n  decoratorsEnabledBeforeExport() {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false;\n  }\n  maybeTakeDecorators(maybeDecorators, classNode, exportNode) {\n    if (maybeDecorators) {\n      if (classNode.decorators && classNode.decorators.length > 0) {\n        if (typeof this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== \"boolean\") {\n          this.raise(Errors.DecoratorsBeforeAfterExport, {\n            at: classNode.decorators[0]\n          });\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n  canHaveLeadingDecorator() {\n    return this.match(80);\n  }\n  parseDecorators(allowExport) {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(26));\n    if (this.match(82)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, {\n          at: this.state.startLoc\n        });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n    return decorators;\n  }\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n    const node = this.startNode();\n    this.next();\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr;\n      if (this.match(10)) {\n        const startLoc = this.state.startLoc;\n        this.next();\n        expr = this.parseExpression();\n        this.expect(11);\n        expr = this.wrapParenthesis(startLoc, expr);\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (this.getPluginOption(\"decorators\", \"allowCallParenthesized\") === false && node.expression !== expr) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n        while (this.eat(16)) {\n          const node = this.startNodeAt(startLoc);\n          node.object = expr;\n          if (this.match(138)) {\n            this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(10)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n    return expr;\n  }\n  parseBreakContinueStatement(node, isBreak) {\n    this.next();\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n    this.verifyBreakContinue(node, isBreak);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n  verifyBreakContinue(node, isBreak) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, {\n        at: node,\n        type\n      });\n    }\n  }\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n  parseHeaderExpression() {\n    this.expect(10);\n    const val = this.parseExpression();\n    this.expect(11);\n    return val;\n  }\n  parseDoWhileStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    this.expect(92);\n    node.test = this.parseHeaderExpression();\n    this.eat(13);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = null;\n    if (this.isAwaitAllowed() && this.eatContextual(96)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(0);\n    this.expect(10);\n    if (this.match(13)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n    const startsWithLet = this.isContextual(100);\n    {\n      const startsWithAwaitUsing = this.isContextual(96) && this.startsAwaitUsing();\n      const starsWithUsingDeclaration = startsWithAwaitUsing || this.isContextual(107) && this.startsUsingForOf();\n      const isLetOrUsing = startsWithLet && this.hasFollowingBindingAtom() || starsWithUsingDeclaration;\n      if (this.match(74) || this.match(75) || isLetOrUsing) {\n        const initNode = this.startNode();\n        let kind;\n        if (startsWithAwaitUsing) {\n          kind = \"await using\";\n          if (!this.isAwaitAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, {\n              at: this.state.startLoc\n            });\n          }\n          this.next();\n        } else {\n          kind = this.state.value;\n        }\n        this.next();\n        this.parseVar(initNode, true, kind);\n        const init = this.finishNode(initNode, \"VariableDeclaration\");\n        const isForIn = this.match(58);\n        if (isForIn && starsWithUsingDeclaration) {\n          this.raise(Errors.ForInUsing, {\n            at: init\n          });\n        }\n        if ((isForIn || this.isContextual(102)) && init.declarations.length === 1) {\n          return this.parseForIn(node, init, awaitAt);\n        }\n        if (awaitAt !== null) {\n          this.unexpected(awaitAt);\n        }\n        return this.parseFor(node, init);\n      }\n    }\n    const startsWithAsync = this.isContextual(95);\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(102);\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, {\n          at: init\n        });\n      }\n      if (awaitAt === null && startsWithAsync && init.type === \"Identifier\") {\n        this.raise(Errors.ForOfAsync, {\n          at: init\n        });\n      }\n    }\n    if (isForOf || this.match(58)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, {\n        in: {\n          type\n        }\n      });\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n  parseFunctionStatement(node, isAsync, isHangingDeclaration) {\n    this.next();\n    return this.parseFunction(node, 1 | (isHangingDeclaration ? 2 : 0) | (isAsync ? 8 : 0));\n  }\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(66) ? this.parseStatementOrSloppyAnnexBFunctionDeclaration() : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, {\n        at: this.state.startLoc\n      });\n    }\n    this.next();\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(5);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(0);\n    let cur;\n    for (let sawDefault; !this.match(8);) {\n      if (this.match(61) || this.match(65)) {\n        const isCase = this.match(61);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(14);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n  parseThrowStatement(node) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    this.scope.enter(this.options.annexB && param.type === \"Identifier\" ? 8 : 0);\n    this.checkLVal(param, {\n      in: {\n        type: \"CatchClause\"\n      },\n      binding: 9\n    });\n    return param;\n  }\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.match(62)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(10)) {\n        this.expect(10);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(11);\n      } else {\n        clause.param = null;\n        this.scope.enter(0);\n      }\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(67) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, {\n        at: node\n      });\n    }\n    return this.finishNode(node, \"TryStatement\");\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, {\n        at: this.state.startLoc\n      });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    return this.finishNode(node, \"WithStatement\");\n  }\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n  parseLabeledStatement(node, maybeName, expr, flags) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName\n        });\n      }\n    }\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(71) ? \"switch\" : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = flags & 8 ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true) : this.parseStatement();\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(5);\n    if (createNewLexicalScope) {\n      this.scope.enter(0);\n    }\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n    while (!this.match(end)) {\n      const stmt = topLevel ? this.parseModuleItem() : this.parseStatementListItem();\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n          continue;\n        }\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n    afterBlockParse == null || afterBlockParse.call(this, hasStrictModeDirective);\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n    this.next();\n  }\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(13) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(11) ? null : this.parseExpression();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(58);\n    this.next();\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || !this.options.annexB || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\"\n      });\n    }\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: {\n          type: \"ForStatement\"\n        }\n      });\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n  parseVar(node, isFor, kind, allowMissingInitializer = false) {\n    const declarations = node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(29) ? null : isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      if (decl.init === null && !allowMissingInitializer) {\n        if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(58) || this.isContextual(102)))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\"\n          });\n        } else if (kind === \"const\" && !(this.match(58) || this.isContextual(102))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\"\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(12)) break;\n    }\n    return node;\n  }\n  parseVarId(decl, kind) {\n    const id = this.parseBindingAtom();\n    this.checkLVal(id, {\n      in: {\n        type: \"VariableDeclarator\"\n      },\n      binding: kind === \"var\" ? 5 : 8201\n    });\n    decl.id = id;\n  }\n  parseAsyncFunctionExpression(node) {\n    return this.parseFunction(node, 8);\n  }\n  parseFunction(node, flags = 0) {\n    const hangingDeclaration = flags & 2;\n    const isDeclaration = !!(flags & 1);\n    const requireId = isDeclaration && !(flags & 4);\n    const isAsync = !!(flags & 8);\n    this.initFunction(node, isAsync);\n    if (this.match(55)) {\n      if (hangingDeclaration) {\n        this.raise(Errors.GeneratorInSingleStatementContext, {\n          at: this.state.startLoc\n        });\n      }\n      this.next();\n      node.generator = true;\n    }\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(2);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n    if (isDeclaration && !hangingDeclaration) {\n      this.registerFunctionStatementId(node);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n  parseFunctionId(requireId) {\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n  }\n  parseFunctionParams(node, isConstructor) {\n    this.expect(10);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(11, 41, 2 | (isConstructor ? 4 : 0));\n    this.expressionScope.exit();\n  }\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, !this.options.annexB || this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? 5 : 8201 : 17, node.id.loc.start);\n  }\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n  isClassProperty() {\n    return this.match(29) || this.match(13) || this.match(8);\n  }\n  isClassMethod() {\n    return this.match(10);\n  }\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(5);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(8)) {\n        if (this.eat(13)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc\n            });\n          }\n          continue;\n        }\n        if (this.match(26)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n        const member = this.startNode();\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n        this.parseClassMember(classBody, member, state);\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(Errors.DecoratorConstructor, {\n            at: member\n          });\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(106);\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      if (this.eat(5)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const accessorProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n    if (this.eat(55)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(138);\n      this.parseClassElementName(method);\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key\n        });\n      }\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(138);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n    this.parsePostMemberNameModifiers(publicMember);\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, {\n            at: key\n          });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, {\n            at: key\n          });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(55);\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n      method.kind = \"method\";\n      const isPrivate = this.match(138);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, {\n            at: publicMethod.key\n          });\n        }\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(55) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(138);\n      this.parseClassElementName(publicMethod);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, {\n            at: publicMethod.key\n          });\n        }\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n      this.checkGetterSetterParams(publicMethod);\n    } else if (isContextual && key.name === \"accessor\" && !this.isLineTerminator()) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n      const isPrivate = this.match(138);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n  parseClassElementName(member) {\n    const {\n      type,\n      value\n    } = this.state;\n    if ((type === 132 || type === 133) && member.static && value === \"prototype\") {\n      this.raise(Errors.StaticPrototype, {\n        at: this.state.startLoc\n      });\n    }\n    if (type === 138) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n    return this.parsePropertyName(member);\n  }\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n    this.scope.enter(64 | 128 | 16);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(0);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(Errors.DecoratorStaticBlock, {\n        at: member\n      });\n    }\n  }\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(Errors.ConstructorClassField, {\n        at: prop.key\n      });\n    }\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), 0, node.key.loc.start);\n  }\n  pushClassAccessorProperty(classBody, prop, isPrivate) {\n    if (!isPrivate && !prop.computed) {\n      const key = prop.key;\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        this.raise(Errors.ConstructorClassField, {\n          at: key\n        });\n      }\n    }\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n    if (isPrivate) {\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), 0, node.key.loc.start);\n    }\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? 6 : 2 : node.kind === \"set\" ? node.static ? 5 : 1 : 0;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.loc.start);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {}\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n  parseClassAccessorProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n  parseInitializer(node) {\n    this.scope.enter(64 | 16);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(0);\n    node.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n  parseClassId(node, isStatement, optionalId, bindingType = 8331) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, {\n          at: this.state.startLoc\n        });\n      }\n    }\n  }\n  parseClassSuper(node) {\n    node.superClass = this.eat(81) ? this.parseExprSubscripts() : null;\n  }\n  parseExport(node, decorators) {\n    const maybeDefaultIdentifier = this.parseMaybeImportPhase(node, true);\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node, maybeDefaultIdentifier);\n    const parseAfterDefault = !hasDefault || this.eat(12);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n    const isFromRequired = hasDefault || hasStar;\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      this.unexpected(null, 5);\n    }\n    if (hasNamespace && parseAfterNamespace) {\n      this.unexpected(null, 98);\n    }\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      var _node2$declaration;\n      const node2 = node;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (((_node2$declaration = node2.declaration) == null ? void 0 : _node2$declaration.type) === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n    if (this.eat(65)) {\n      const node2 = node;\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.checkExport(node2, true, true);\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n    this.unexpected(null, 5);\n  }\n  eatExportStar(node) {\n    return this.eat(55);\n  }\n  maybeParseExportDefaultSpecifier(node, maybeDefaultIdentifier) {\n    if (maybeDefaultIdentifier || this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\", maybeDefaultIdentifier == null ? void 0 : maybeDefaultIdentifier.loc.start);\n      const id = maybeDefaultIdentifier || this.parseIdentifier(true);\n      const specifier = this.startNodeAtNode(id);\n      specifier.exported = id;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(93)) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(5)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n  isAsyncFunction() {\n    if (!this.isContextual(95)) return false;\n    const next = this.nextTokenInLineStart();\n    return this.isUnparsedContextual(next, \"function\");\n  }\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    if (this.match(68)) {\n      this.next();\n      return this.parseFunction(expr, 1 | 4);\n    } else if (this.isAsyncFunction()) {\n      this.next();\n      this.next();\n      return this.parseFunction(expr, 1 | 4 | 8);\n    }\n    if (this.match(80)) {\n      return this.parseClass(expr, true, true);\n    }\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\n        this.raise(Errors.DecoratorBeforeExport, {\n          at: this.state.startLoc\n        });\n      }\n      return this.parseClass(this.maybeTakeDecorators(this.parseDecorators(false), this.startNode()), true, true);\n    }\n    if (this.match(75) || this.match(74) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc\n      });\n    }\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n  parseExportDeclaration(node) {\n    if (this.match(80)) {\n      const node = this.parseClass(this.startNode(), true, false);\n      return node;\n    }\n    return this.parseStatementListItem();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if (type === 95 && !this.state.containsEsc || type === 100) {\n        return false;\n      }\n      if ((type === 130 || type === 129) && !this.state.containsEsc) {\n        const {\n          type: nextType\n        } = this.lookahead();\n        if (tokenIsIdentifier(nextType) && nextType !== 98 || nextType === 5) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(65)) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n      return true;\n    }\n    if (this.match(65) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n    return false;\n  }\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(98)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      this.maybeParseImportAttributes(node);\n      this.checkJSONModuleImport(node);\n    } else if (expect) {\n      this.unexpected();\n    }\n    this.semicolon();\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (type === 26) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\n          this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc\n          });\n        }\n        return true;\n      }\n    }\n    return type === 74 || type === 75 || type === 68 || type === 80 || this.isLet() || this.isAsyncFunction();\n  }\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      var _node$specifiers;\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n          const declaration = node.declaration;\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration\n            });\n          }\n        }\n      } else if ((_node$specifiers = node.specifiers) != null && _node$specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName\n              });\n            } else {\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n  checkDuplicateExports(node, exportName) {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, {\n          at: node\n        });\n      } else {\n        this.raise(Errors.DuplicateExport, {\n          at: node,\n          exportName\n        });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n  parseExportSpecifiers(isInTypeExport) {\n    const nodes = [];\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(130);\n      const isString = this.match(133);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n    }\n    return nodes;\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (this.eatContextual(93)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode(node, \"ExportSpecifier\");\n  }\n  parseModuleExportName() {\n    if (this.match(133)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0)\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n  isJSONModuleImport(node) {\n    if (node.assertions != null) {\n      return node.assertions.some(({\n        key,\n        value\n      }) => {\n        return value.value === \"json\" && (key.type === \"Identifier\" ? key.name === \"type\" : key.value === \"type\");\n      });\n    }\n    return false;\n  }\n  checkImportReflection(node) {\n    const {\n      specifiers\n    } = node;\n    const singleBindingType = specifiers.length === 1 ? specifiers[0].type : null;\n    if (node.phase === \"source\") {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.SourcePhaseImportRequiresDefault, {\n          at: specifiers[0].loc.start\n        });\n      }\n    } else if (node.phase === \"defer\") {\n      if (singleBindingType !== \"ImportNamespaceSpecifier\") {\n        this.raise(Errors.DeferImportRequiresNamespace, {\n          at: specifiers[0].loc.start\n        });\n      }\n    } else if (node.module) {\n      var _node$assertions;\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.ImportReflectionNotBinding, {\n          at: specifiers[0].loc.start\n        });\n      }\n      if (((_node$assertions = node.assertions) == null ? void 0 : _node$assertions.length) > 0) {\n        this.raise(Errors.ImportReflectionHasAssertion, {\n          at: node.specifiers[0].loc.start\n        });\n      }\n    }\n  }\n  checkJSONModuleImport(node) {\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      const {\n        specifiers\n      } = node;\n      if (specifiers != null) {\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\" ? imported.name !== \"default\" : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start\n          });\n        }\n      }\n    }\n  }\n  isPotentialImportPhase(isExport) {\n    if (isExport) return false;\n    return this.isContextual(105) || this.isContextual(97) || this.isContextual(127);\n  }\n  applyImportPhase(node, isExport, phase, loc) {\n    if (isExport) {\n      return;\n    }\n    if (phase === \"module\") {\n      this.expectPlugin(\"importReflection\", loc);\n      node.module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      node.module = false;\n    }\n    if (phase === \"source\") {\n      this.expectPlugin(\"sourcePhaseImports\", loc);\n      node.phase = \"source\";\n    } else if (phase === \"defer\") {\n      this.expectPlugin(\"deferredImportEvaluation\", loc);\n      node.phase = \"defer\";\n    } else if (this.hasPlugin(\"sourcePhaseImports\")) {\n      node.phase = null;\n    }\n  }\n  parseMaybeImportPhase(node, isExport) {\n    if (!this.isPotentialImportPhase(isExport)) {\n      this.applyImportPhase(node, isExport, null);\n      return null;\n    }\n    const phaseIdentifier = this.parseIdentifier(true);\n    const {\n      type\n    } = this.state;\n    const isImportPhase = tokenIsKeywordOrIdentifier(type) ? type !== 98 || this.lookaheadCharCode() === 102 : type !== 12;\n    if (isImportPhase) {\n      this.resetPreviousIdentifierLeadingComments(phaseIdentifier);\n      this.applyImportPhase(node, isExport, phaseIdentifier.name, phaseIdentifier.loc.start);\n      return null;\n    } else {\n      this.applyImportPhase(node, isExport, null);\n      return phaseIdentifier;\n    }\n  }\n  isPrecedingIdImportPhase(phase) {\n    const {\n      type\n    } = this.state;\n    return tokenIsIdentifier(type) ? type !== 98 || this.lookaheadCharCode() === 102 : type !== 12;\n  }\n  parseImport(node) {\n    if (this.match(133)) {\n      return this.parseImportSourceAndAttributes(node);\n    }\n    return this.parseImportSpecifiersAndAfter(node, this.parseMaybeImportPhase(node, false));\n  }\n  parseImportSpecifiersAndAfter(node, maybeDefaultIdentifier) {\n    node.specifiers = [];\n    const hasDefault = this.maybeParseDefaultImportSpecifier(node, maybeDefaultIdentifier);\n    const parseNext = !hasDefault || this.eat(12);\n    const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n    if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n    this.expectContextual(98);\n    return this.parseImportSourceAndAttributes(node);\n  }\n  parseImportSourceAndAttributes(node) {\n    var _node$specifiers2;\n    (_node$specifiers2 = node.specifiers) != null ? _node$specifiers2 : node.specifiers = [];\n    node.source = this.parseImportSource();\n    this.maybeParseImportAttributes(node);\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    if (!this.match(133)) this.unexpected();\n    return this.parseExprAtom();\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  finishImportSpecifier(specifier, type, bindingType = 8201) {\n    this.checkLVal(specifier.local, {\n      in: {\n        type\n      },\n      binding: bindingType\n    });\n    return this.finishNode(specifier, type);\n  }\n  parseImportAttributes() {\n    this.expect(5);\n    const attrs = [];\n    const attrNames = new Set();\n    do {\n      if (this.match(8)) {\n        break;\n      }\n      const node = this.startNode();\n      const keyName = this.state.value;\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(133)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(14);\n      if (!this.match(133)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(12));\n    this.expect(8);\n    return attrs;\n  }\n  parseModuleAttributes() {\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key\n        });\n      }\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(14);\n      if (!this.match(133)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(12));\n    return attrs;\n  }\n  maybeParseImportAttributes(node) {\n    let attributes;\n    let useWith = false;\n    if (this.match(76)) {\n      if (this.hasPrecedingLineBreak() && this.lookaheadCharCode() === 40) {\n        return;\n      }\n      this.next();\n      {\n        if (this.hasPlugin(\"moduleAttributes\")) {\n          attributes = this.parseModuleAttributes();\n        } else {\n          this.expectImportAttributesPlugin();\n          attributes = this.parseImportAttributes();\n        }\n      }\n      useWith = true;\n    } else if (this.isContextual(94) && !this.hasPrecedingLineBreak()) {\n      if (this.hasPlugin(\"importAttributes\")) {\n        if (this.getPluginOption(\"importAttributes\", \"deprecatedAssertSyntax\") !== true) {\n          this.raise(Errors.ImportAttributesUseAssert, {\n            at: this.state.startLoc\n          });\n        }\n        this.addExtra(node, \"deprecatedAssertSyntax\", true);\n      } else {\n        this.expectOnePlugin([\"importAttributes\", \"importAssertions\"]);\n      }\n      this.next();\n      attributes = this.parseImportAttributes();\n    } else if (this.hasPlugin(\"importAttributes\") || this.hasPlugin(\"importAssertions\")) {\n      attributes = [];\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) {\n        attributes = [];\n      } else return;\n    }\n    if (!useWith && this.hasPlugin(\"importAssertions\")) {\n      node.assertions = attributes;\n    } else {\n      node.attributes = attributes;\n    }\n  }\n  maybeParseDefaultImportSpecifier(node, maybeDefaultIdentifier) {\n    if (maybeDefaultIdentifier) {\n      const specifier = this.startNodeAtNode(maybeDefaultIdentifier);\n      specifier.local = maybeDefaultIdentifier;\n      node.specifiers.push(this.finishImportSpecifier(specifier, \"ImportDefaultSpecifier\"));\n      return true;\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(55)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(93);\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(14)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc\n          });\n        }\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const specifier = this.startNode();\n      const importedIsString = this.match(133);\n      const isMaybeTypeOnly = this.isContextual(130);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly, undefined);\n      node.specifiers.push(importSpecifier);\n    }\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (this.eatContextual(93)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: imported.value\n        });\n      }\n      this.checkReservedWord(imported.name, specifier.loc.start, true, true);\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\", bindingType);\n  }\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\nfunction parse(input, options) {\n  var _options;\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\nconst tokTypes = generateExportedTokenTypes(tt);\nfunction getParser(options, input) {\n  let cls = Parser;\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n  return new cls(options, input);\n}\nconst parserClassCache = {};\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = tokTypes;\n//# sourceMappingURL=index.js.map\n","// @ts-check\n/** @typedef { import('estree').BaseNode} BaseNode */\n\n/** @typedef {{\n\tskip: () => void;\n\tremove: () => void;\n\treplace: (node: BaseNode) => void;\n}} WalkerContext */\n\nclass WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {BaseNode | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t * @param {BaseNode} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop][index] = node;\n\t\t\t} else {\n\t\t\t\tparent[prop] = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\n\n/** @typedef {(\n *    this: WalkerContext,\n *    node: BaseNode,\n *    parent: BaseNode,\n *    key: string,\n *    index: number\n * ) => void} SyncHandler */\n\nclass SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} enter\n\t * @param {SyncHandler} leave\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} node\n\t * @param {BaseNode} parent\n\t * @param {string} [prop]\n\t * @param {number} [index]\n\t * @returns {BaseNode}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./walker').WalkerContext} WalkerContext */\n\n/** @typedef {(\n *    this: WalkerContext,\n *    node: BaseNode,\n *    parent: BaseNode,\n *    key: string,\n *    index: number\n * ) => Promise<void>} AsyncHandler */\n\nclass AsyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {AsyncHandler} enter\n\t * @param {AsyncHandler} leave\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {AsyncHandler} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {AsyncHandler} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} node\n\t * @param {BaseNode} parent\n\t * @param {string} [prop]\n\t * @param {number} [index]\n\t * @returns {Promise<BaseNode>}\n\t */\n\tasync visit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tawait this.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!(await this.visit(value[i], node, key, i))) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tawait this.visit(value, node, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tawait this.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\n/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\n\n/**\n *\n * @param {BaseNode} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {BaseNode}\n */\nfunction walk(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\n/**\n *\n * @param {BaseNode} ast\n * @param {{\n *   enter?: AsyncHandler\n *   leave?: AsyncHandler\n * }} walker\n * @returns {Promise<BaseNode>}\n */\nasync function asyncWalk(ast, { enter, leave }) {\n\tconst instance = new AsyncWalker(enter, leave);\n\treturn await instance.visit(ast, null);\n}\n\nexport { asyncWalk, walk };\n","// should only use types from @babel/types\r\n// do not import runtime methods\r\nimport type {\r\n  BlockStatement,\r\n  Function,\r\n  Identifier,\r\n  Node,\r\n  ObjectProperty,\r\n  Program,\r\n} from '@babel/types'\r\nimport { walk } from 'estree-walker'\r\n\r\nexport function walkIdentifiers(\r\n  root: Node,\r\n  onIdentifier: (\r\n    node: Identifier,\r\n    parent: Node,\r\n    parentStack: Node[],\r\n    isReference: boolean,\r\n    isLocal: boolean,\r\n  ) => void,\r\n  includeAll = false,\r\n  parentStack: Node[] = [],\r\n  knownIds: Record<string, number> = Object.create(null),\r\n) {\r\n  if (__BROWSER__) {\r\n    return\r\n  }\r\n\r\n  const rootExp =\r\n    root.type === 'Program'\r\n      ? root.body[0].type === 'ExpressionStatement' && root.body[0].expression\r\n      : root\r\n\r\n  walk(root, {\r\n    enter(node: Node & { scopeIds?: Set<string> }, parent: Node | undefined) {\r\n      parent && parentStack.push(parent)\r\n      if (\r\n        parent &&\r\n        parent.type.startsWith('TS') &&\r\n        !TS_NODE_TYPES.includes(parent.type)\r\n      ) {\r\n        return this.skip()\r\n      }\r\n      if (node.type === 'Identifier') {\r\n        const isLocal = !!knownIds[node.name]\r\n        const isRefed = isReferencedIdentifier(node, parent!, parentStack)\r\n        if (includeAll || (isRefed && !isLocal)) {\r\n          onIdentifier(node, parent!, parentStack, isRefed, isLocal)\r\n        }\r\n      } else if (\r\n        node.type === 'ObjectProperty' &&\r\n        parent?.type === 'ObjectPattern'\r\n      ) {\r\n        // mark property in destructure pattern\r\n        ;(node as any).inPattern = true\r\n      } else if (isFunctionType(node)) {\r\n        if (node.scopeIds) {\r\n          node.scopeIds.forEach(id => markKnownIds(id, knownIds))\r\n        } else {\r\n          // walk function expressions and add its arguments to known identifiers\r\n          // so that we don't prefix them\r\n          walkFunctionParams(node, id =>\r\n            markScopeIdentifier(node, id, knownIds),\r\n          )\r\n        }\r\n      } else if (node.type === 'BlockStatement') {\r\n        if (node.scopeIds) {\r\n          node.scopeIds.forEach(id => markKnownIds(id, knownIds))\r\n        } else {\r\n          // #3445 record block-level local variables\r\n          walkBlockDeclarations(node, id =>\r\n            markScopeIdentifier(node, id, knownIds),\r\n          )\r\n        }\r\n      }\r\n    },\r\n    leave(node: Node & { scopeIds?: Set<string> }, parent: Node | undefined) {\r\n      parent && parentStack.pop()\r\n      if (node !== rootExp && node.scopeIds) {\r\n        for (const id of node.scopeIds) {\r\n          knownIds[id]--\r\n          if (knownIds[id] === 0) {\r\n            delete knownIds[id]\r\n          }\r\n        }\r\n      }\r\n    },\r\n  })\r\n}\r\n\r\nexport function isReferencedIdentifier(\r\n  id: Identifier,\r\n  parent: Node | null,\r\n  parentStack: Node[],\r\n) {\r\n  if (__BROWSER__) {\r\n    return false\r\n  }\r\n\r\n  if (!parent) {\r\n    return true\r\n  }\r\n\r\n  // is a special keyword but parsed as identifier\r\n  if (id.name === 'arguments') {\r\n    return false\r\n  }\r\n\r\n  if (isReferenced(id, parent)) {\r\n    return true\r\n  }\r\n\r\n  // babel's isReferenced check returns false for ids being assigned to, so we\r\n  // need to cover those cases here\r\n  switch (parent.type) {\r\n    case 'AssignmentExpression':\r\n    case 'AssignmentPattern':\r\n      return true\r\n    case 'ObjectPattern':\r\n    case 'ArrayPattern':\r\n      return isInDestructureAssignment(parent, parentStack)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport function isInDestructureAssignment(\r\n  parent: Node,\r\n  parentStack: Node[],\r\n): boolean {\r\n  if (\r\n    parent &&\r\n    (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')\r\n  ) {\r\n    let i = parentStack.length\r\n    while (i--) {\r\n      const p = parentStack[i]\r\n      if (p.type === 'AssignmentExpression') {\r\n        return true\r\n      } else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function isInNewExpression(parentStack: Node[]): boolean {\r\n  let i = parentStack.length\r\n  while (i--) {\r\n    const p = parentStack[i]\r\n    if (p.type === 'NewExpression') {\r\n      return true\r\n    } else if (p.type !== 'MemberExpression') {\r\n      break\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function walkFunctionParams(\r\n  node: Function,\r\n  onIdent: (id: Identifier) => void,\r\n) {\r\n  for (const p of node.params) {\r\n    for (const id of extractIdentifiers(p)) {\r\n      onIdent(id)\r\n    }\r\n  }\r\n}\r\n\r\nexport function walkBlockDeclarations(\r\n  block: BlockStatement | Program,\r\n  onIdent: (node: Identifier) => void,\r\n) {\r\n  for (const stmt of block.body) {\r\n    if (stmt.type === 'VariableDeclaration') {\r\n      if (stmt.declare) continue\r\n      for (const decl of stmt.declarations) {\r\n        for (const id of extractIdentifiers(decl.id)) {\r\n          onIdent(id)\r\n        }\r\n      }\r\n    } else if (\r\n      stmt.type === 'FunctionDeclaration' ||\r\n      stmt.type === 'ClassDeclaration'\r\n    ) {\r\n      if (stmt.declare || !stmt.id) continue\r\n      onIdent(stmt.id)\r\n    } else if (\r\n      stmt.type === 'ForOfStatement' ||\r\n      stmt.type === 'ForInStatement' ||\r\n      stmt.type === 'ForStatement'\r\n    ) {\r\n      const variable = stmt.type === 'ForStatement' ? stmt.init : stmt.left\r\n      if (variable && variable.type === 'VariableDeclaration') {\r\n        for (const decl of variable.declarations) {\r\n          for (const id of extractIdentifiers(decl.id)) {\r\n            onIdent(id)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function extractIdentifiers(\r\n  param: Node,\r\n  nodes: Identifier[] = [],\r\n): Identifier[] {\r\n  switch (param.type) {\r\n    case 'Identifier':\r\n      nodes.push(param)\r\n      break\r\n\r\n    case 'MemberExpression':\r\n      let object: any = param\r\n      while (object.type === 'MemberExpression') {\r\n        object = object.object\r\n      }\r\n      nodes.push(object)\r\n      break\r\n\r\n    case 'ObjectPattern':\r\n      for (const prop of param.properties) {\r\n        if (prop.type === 'RestElement') {\r\n          extractIdentifiers(prop.argument, nodes)\r\n        } else {\r\n          extractIdentifiers(prop.value, nodes)\r\n        }\r\n      }\r\n      break\r\n\r\n    case 'ArrayPattern':\r\n      param.elements.forEach(element => {\r\n        if (element) extractIdentifiers(element, nodes)\r\n      })\r\n      break\r\n\r\n    case 'RestElement':\r\n      extractIdentifiers(param.argument, nodes)\r\n      break\r\n\r\n    case 'AssignmentPattern':\r\n      extractIdentifiers(param.left, nodes)\r\n      break\r\n  }\r\n\r\n  return nodes\r\n}\r\n\r\nfunction markKnownIds(name: string, knownIds: Record<string, number>) {\r\n  if (name in knownIds) {\r\n    knownIds[name]++\r\n  } else {\r\n    knownIds[name] = 1\r\n  }\r\n}\r\n\r\nfunction markScopeIdentifier(\r\n  node: Node & { scopeIds?: Set<string> },\r\n  child: Identifier,\r\n  knownIds: Record<string, number>,\r\n) {\r\n  const { name } = child\r\n  if (node.scopeIds && node.scopeIds.has(name)) {\r\n    return\r\n  }\r\n  markKnownIds(name, knownIds)\r\n  ;(node.scopeIds || (node.scopeIds = new Set())).add(name)\r\n}\r\n\r\nexport const isFunctionType = (node: Node): node is Function => {\r\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type)\r\n}\r\n\r\nexport const isStaticProperty = (node: Node): node is ObjectProperty =>\r\n  node &&\r\n  (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n  !node.computed\r\n\r\nexport const isStaticPropertyKey = (node: Node, parent: Node) =>\r\n  isStaticProperty(parent) && parent.key === node\r\n\r\n/**\r\n * Copied from https://github.com/babel/babel/blob/main/packages/babel-types/src/validators/isReferenced.ts\r\n * To avoid runtime dependency on @babel/types (which includes process references)\r\n * This file should not change very often in babel but we may need to keep it\r\n * up-to-date from time to time.\r\n *\r\n * https://github.com/babel/babel/blob/main/LICENSE\r\n *\r\n */\r\nfunction isReferenced(node: Node, parent: Node, grandparent?: Node): boolean {\r\n  switch (parent.type) {\r\n    // yes: PARENT[NODE]\r\n    // yes: NODE.child\r\n    // no: parent.NODE\r\n    case 'MemberExpression':\r\n    case 'OptionalMemberExpression':\r\n      if (parent.property === node) {\r\n        return !!parent.computed\r\n      }\r\n      return parent.object === node\r\n\r\n    case 'JSXMemberExpression':\r\n      return parent.object === node\r\n    // no: let NODE = init;\r\n    // yes: let id = NODE;\r\n    case 'VariableDeclarator':\r\n      return parent.init === node\r\n\r\n    // yes: () => NODE\r\n    // no: (NODE) => {}\r\n    case 'ArrowFunctionExpression':\r\n      return parent.body === node\r\n\r\n    // no: class { #NODE; }\r\n    // no: class { get #NODE() {} }\r\n    // no: class { #NODE() {} }\r\n    // no: class { fn() { return this.#NODE; } }\r\n    case 'PrivateName':\r\n      return false\r\n\r\n    // no: class { NODE() {} }\r\n    // yes: class { [NODE]() {} }\r\n    // no: class { foo(NODE) {} }\r\n    case 'ClassMethod':\r\n    case 'ClassPrivateMethod':\r\n    case 'ObjectMethod':\r\n      if (parent.key === node) {\r\n        return !!parent.computed\r\n      }\r\n      return false\r\n\r\n    // yes: { [NODE]: \"\" }\r\n    // no: { NODE: \"\" }\r\n    // depends: { NODE }\r\n    // depends: { key: NODE }\r\n    case 'ObjectProperty':\r\n      if (parent.key === node) {\r\n        return !!parent.computed\r\n      }\r\n      // parent.value === node\r\n      return !grandparent || grandparent.type !== 'ObjectPattern'\r\n    // no: class { NODE = value; }\r\n    // yes: class { [NODE] = value; }\r\n    // yes: class { key = NODE; }\r\n    case 'ClassProperty':\r\n      if (parent.key === node) {\r\n        return !!parent.computed\r\n      }\r\n      return true\r\n    case 'ClassPrivateProperty':\r\n      return parent.key !== node\r\n\r\n    // no: class NODE {}\r\n    // yes: class Foo extends NODE {}\r\n    case 'ClassDeclaration':\r\n    case 'ClassExpression':\r\n      return parent.superClass === node\r\n\r\n    // yes: left = NODE;\r\n    // no: NODE = right;\r\n    case 'AssignmentExpression':\r\n      return parent.right === node\r\n\r\n    // no: [NODE = foo] = [];\r\n    // yes: [foo = NODE] = [];\r\n    case 'AssignmentPattern':\r\n      return parent.right === node\r\n\r\n    // no: NODE: for (;;) {}\r\n    case 'LabeledStatement':\r\n      return false\r\n\r\n    // no: try {} catch (NODE) {}\r\n    case 'CatchClause':\r\n      return false\r\n\r\n    // no: function foo(...NODE) {}\r\n    case 'RestElement':\r\n      return false\r\n\r\n    case 'BreakStatement':\r\n    case 'ContinueStatement':\r\n      return false\r\n\r\n    // no: function NODE() {}\r\n    // no: function foo(NODE) {}\r\n    case 'FunctionDeclaration':\r\n    case 'FunctionExpression':\r\n      return false\r\n\r\n    // no: export NODE from \"foo\";\r\n    // no: export * as NODE from \"foo\";\r\n    case 'ExportNamespaceSpecifier':\r\n    case 'ExportDefaultSpecifier':\r\n      return false\r\n\r\n    // no: export { foo as NODE };\r\n    // yes: export { NODE as foo };\r\n    // no: export { NODE as foo } from \"foo\";\r\n    case 'ExportSpecifier':\r\n      // @ts-expect-error\r\n      if (grandparent?.source) {\r\n        return false\r\n      }\r\n      return parent.local === node\r\n\r\n    // no: import NODE from \"foo\";\r\n    // no: import * as NODE from \"foo\";\r\n    // no: import { NODE as foo } from \"foo\";\r\n    // no: import { foo as NODE } from \"foo\";\r\n    // no: import NODE from \"bar\";\r\n    case 'ImportDefaultSpecifier':\r\n    case 'ImportNamespaceSpecifier':\r\n    case 'ImportSpecifier':\r\n      return false\r\n\r\n    // no: import \"foo\" assert { NODE: \"json\" }\r\n    case 'ImportAttribute':\r\n      return false\r\n\r\n    // no: <div NODE=\"foo\" />\r\n    case 'JSXAttribute':\r\n      return false\r\n\r\n    // no: [NODE] = [];\r\n    // no: ({ NODE }) = [];\r\n    case 'ObjectPattern':\r\n    case 'ArrayPattern':\r\n      return false\r\n\r\n    // no: new.NODE\r\n    // no: NODE.target\r\n    case 'MetaProperty':\r\n      return false\r\n\r\n    // yes: type X = { someProperty: NODE }\r\n    // no: type X = { NODE: OtherType }\r\n    case 'ObjectTypeProperty':\r\n      return parent.key !== node\r\n\r\n    // yes: enum X { Foo = NODE }\r\n    // no: enum X { NODE }\r\n    case 'TSEnumMember':\r\n      return parent.id !== node\r\n\r\n    // yes: { [NODE]: value }\r\n    // no: { NODE: value }\r\n    case 'TSPropertySignature':\r\n      if (parent.key === node) {\r\n        return !!parent.computed\r\n      }\r\n\r\n      return true\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport const TS_NODE_TYPES = [\r\n  'TSAsExpression', // foo as number\r\n  'TSTypeAssertion', // (<number>foo)\r\n  'TSNonNullExpression', // foo!\r\n  'TSInstantiationExpression', // foo<string>\r\n  'TSSatisfiesExpression', // foo satisfies T\r\n]\r\n\r\nexport function unwrapTSNode(node: Node): Node {\r\n  if (TS_NODE_TYPES.includes(node.type)) {\r\n    return unwrapTSNode((node as any).expression)\r\n  } else {\r\n    return node\r\n  }\r\n}\r\n","import {\r\n  type BlockCodegenNode,\r\n  type CallExpression,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  type IfBranchNode,\r\n  type InterpolationNode,\r\n  type JSChildNode,\r\n  type MemoExpression,\r\n  NodeTypes,\r\n  type ObjectExpression,\r\n  type Position,\r\n  type Property,\r\n  type RenderSlotCall,\r\n  type RootNode,\r\n  type SimpleExpressionNode,\r\n  type SlotOutletNode,\r\n  type TemplateChildNode,\r\n  type TemplateNode,\r\n  type TextNode,\r\n  type VNodeCall,\r\n  createCallExpression,\r\n  createObjectExpression,\r\n} from './ast'\r\nimport type { TransformContext } from './transform'\r\nimport {\r\n  BASE_TRANSITION,\r\n  GUARD_REACTIVE_PROPS,\r\n  KEEP_ALIVE,\r\n  MERGE_PROPS,\r\n  NORMALIZE_PROPS,\r\n  SUSPENSE,\r\n  TELEPORT,\r\n  TO_HANDLERS,\r\n  WITH_MEMO,\r\n} from './runtimeHelpers'\r\nimport { NOOP, isObject, isString } from '@vue/shared'\r\nimport type { PropsExpression } from './transforms/transformElement'\r\nimport { parseExpression } from '@babel/parser'\r\nimport type { Expression } from '@babel/types'\r\nimport { unwrapTSNode } from './babelUtils'\r\n\r\nexport const isStaticExp = (p: JSChildNode): p is SimpleExpressionNode =>\r\n  p.type === NodeTypes.SIMPLE_EXPRESSION && p.isStatic\r\n\r\nexport function isCoreComponent(tag: string): symbol | void {\r\n  switch (tag) {\r\n    case 'Teleport':\r\n    case 'teleport':\r\n      return TELEPORT\r\n    case 'Suspense':\r\n    case 'suspense':\r\n      return SUSPENSE\r\n    case 'KeepAlive':\r\n    case 'keep-alive':\r\n      return KEEP_ALIVE\r\n    case 'BaseTransition':\r\n    case 'base-transition':\r\n      return BASE_TRANSITION\r\n  }\r\n}\r\n\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/\r\nexport const isSimpleIdentifier = (name: string): boolean =>\r\n  !nonIdentifierRE.test(name)\r\n\r\nenum MemberExpLexState {\r\n  inMemberExp,\r\n  inBrackets,\r\n  inParens,\r\n  inString,\r\n}\r\n\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g\r\n\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nexport const isMemberExpressionBrowser = (path: string): boolean => {\r\n  // remove whitespaces around . or [ first\r\n  path = path.trim().replace(whitespaceRE, s => s.trim())\r\n\r\n  let state = MemberExpLexState.inMemberExp\r\n  let stateStack: MemberExpLexState[] = []\r\n  let currentOpenBracketCount = 0\r\n  let currentOpenParensCount = 0\r\n  let currentStringType: \"'\" | '\"' | '`' | null = null\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    const char = path.charAt(i)\r\n    switch (state) {\r\n      case MemberExpLexState.inMemberExp:\r\n        if (char === '[') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inBrackets\r\n          currentOpenBracketCount++\r\n        } else if (char === '(') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inParens\r\n          currentOpenParensCount++\r\n        } else if (\r\n          !(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)\r\n        ) {\r\n          return false\r\n        }\r\n        break\r\n      case MemberExpLexState.inBrackets:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `[`) {\r\n          currentOpenBracketCount++\r\n        } else if (char === `]`) {\r\n          if (!--currentOpenBracketCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inParens:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `(`) {\r\n          currentOpenParensCount++\r\n        } else if (char === `)`) {\r\n          // if the exp ends as a call then it should not be considered valid\r\n          if (i === path.length - 1) {\r\n            return false\r\n          }\r\n          if (!--currentOpenParensCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inString:\r\n        if (char === currentStringType) {\r\n          state = stateStack.pop()!\r\n          currentStringType = null\r\n        }\r\n        break\r\n    }\r\n  }\r\n  return !currentOpenBracketCount && !currentOpenParensCount\r\n}\r\n\r\nexport const isMemberExpressionNode = __BROWSER__\r\n  ? (NOOP as any as (path: string, context: TransformContext) => boolean)\r\n  : (path: string, context: TransformContext): boolean => {\r\n      try {\r\n        let ret: Expression = parseExpression(path, {\r\n          plugins: context.expressionPlugins,\r\n        })\r\n        ret = unwrapTSNode(ret) as Expression\r\n        return (\r\n          ret.type === 'MemberExpression' ||\r\n          ret.type === 'OptionalMemberExpression' ||\r\n          (ret.type === 'Identifier' && ret.name !== 'undefined')\r\n        )\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    }\r\n\r\nexport const isMemberExpression = __BROWSER__\r\n  ? isMemberExpressionBrowser\r\n  : isMemberExpressionNode\r\n\r\nexport function advancePositionWithClone(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length,\r\n): Position {\r\n  return advancePositionWithMutation(\r\n    {\r\n      offset: pos.offset,\r\n      line: pos.line,\r\n      column: pos.column,\r\n    },\r\n    source,\r\n    numberOfCharacters,\r\n  )\r\n}\r\n\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nexport function advancePositionWithMutation(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length,\r\n): Position {\r\n  let linesCount = 0\r\n  let lastNewLinePos = -1\r\n  for (let i = 0; i < numberOfCharacters; i++) {\r\n    if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n      linesCount++\r\n      lastNewLinePos = i\r\n    }\r\n  }\r\n\r\n  pos.offset += numberOfCharacters\r\n  pos.line += linesCount\r\n  pos.column =\r\n    lastNewLinePos === -1\r\n      ? pos.column + numberOfCharacters\r\n      : numberOfCharacters - lastNewLinePos\r\n\r\n  return pos\r\n}\r\n\r\nexport function assert(condition: boolean, msg?: string) {\r\n  /* istanbul ignore if */\r\n  if (!condition) {\r\n    throw new Error(msg || `unexpected compiler condition`)\r\n  }\r\n}\r\n\r\nexport function findDir(\r\n  node: ElementNode,\r\n  name: string | RegExp,\r\n  allowEmpty: boolean = false,\r\n): DirectiveNode | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      (allowEmpty || p.exp) &&\r\n      (isString(name) ? p.name === name : name.test(p.name))\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function findProp(\r\n  node: ElementNode,\r\n  name: string,\r\n  dynamicOnly: boolean = false,\r\n  allowEmpty: boolean = false,\r\n): ElementNode['props'][0] | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (dynamicOnly) continue\r\n      if (p.name === name && (p.value || allowEmpty)) {\r\n        return p\r\n      }\r\n    } else if (\r\n      p.name === 'bind' &&\r\n      (p.exp || allowEmpty) &&\r\n      isStaticArgOf(p.arg, name)\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function isStaticArgOf(\r\n  arg: DirectiveNode['arg'],\r\n  name: string,\r\n): boolean {\r\n  return !!(arg && isStaticExp(arg) && arg.content === name)\r\n}\r\n\r\nexport function hasDynamicKeyVBind(node: ElementNode): boolean {\r\n  return node.props.some(\r\n    p =>\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      p.name === 'bind' &&\r\n      (!p.arg || // v-bind=\"obj\"\r\n        p.arg.type !== NodeTypes.SIMPLE_EXPRESSION || // v-bind:[_ctx.foo]\r\n        !p.arg.isStatic), // v-bind:[foo]\r\n  )\r\n}\r\n\r\nexport function isText(\r\n  node: TemplateChildNode,\r\n): node is TextNode | InterpolationNode {\r\n  return node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\r\n}\r\n\r\nexport function isVSlot(p: ElementNode['props'][0]): p is DirectiveNode {\r\n  return p.type === NodeTypes.DIRECTIVE && p.name === 'slot'\r\n}\r\n\r\nexport function isTemplateNode(\r\n  node: RootNode | TemplateChildNode,\r\n): node is TemplateNode {\r\n  return (\r\n    node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.TEMPLATE\r\n  )\r\n}\r\n\r\nexport function isSlotOutlet(\r\n  node: RootNode | TemplateChildNode,\r\n): node is SlotOutletNode {\r\n  return node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.SLOT\r\n}\r\n\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS])\r\n\r\nfunction getUnnormalizedProps(\r\n  props: PropsExpression | '{}',\r\n  callPath: CallExpression[] = [],\r\n): [PropsExpression | '{}', CallExpression[]] {\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const callee = props.callee\r\n    if (!isString(callee) && propsHelperSet.has(callee)) {\r\n      return getUnnormalizedProps(\r\n        props.arguments[0] as PropsExpression,\r\n        callPath.concat(props),\r\n      )\r\n    }\r\n  }\r\n  return [props, callPath]\r\n}\r\nexport function injectProp(\r\n  node: VNodeCall | RenderSlotCall,\r\n  prop: Property,\r\n  context: TransformContext,\r\n) {\r\n  let propsWithInjection: ObjectExpression | CallExpression | undefined\r\n  /**\r\n   * 1. mergeProps(...)\r\n   * 2. toHandlers(...)\r\n   * 3. normalizeProps(...)\r\n   * 4. normalizeProps(guardReactiveProps(...))\r\n   *\r\n   * we need to get the real props before normalization\r\n   */\r\n  let props =\r\n    node.type === NodeTypes.VNODE_CALL ? node.props : node.arguments[2]\r\n  let callPath: CallExpression[] = []\r\n  let parentCall: CallExpression | undefined\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const ret = getUnnormalizedProps(props)\r\n    props = ret[0]\r\n    callPath = ret[1]\r\n    parentCall = callPath[callPath.length - 1]\r\n  }\r\n\r\n  if (props == null || isString(props)) {\r\n    propsWithInjection = createObjectExpression([prop])\r\n  } else if (props.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n    // merged props... add ours\r\n    // only inject key to object literal if it's the first argument so that\r\n    // if doesn't override user provided keys\r\n    const first = props.arguments[0] as string | JSChildNode\r\n    if (!isString(first) && first.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n      // #6631\r\n      if (!hasProp(prop, first)) {\r\n        first.properties.unshift(prop)\r\n      }\r\n    } else {\r\n      if (props.callee === TO_HANDLERS) {\r\n        // #2366\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n          createObjectExpression([prop]),\r\n          props,\r\n        ])\r\n      } else {\r\n        props.arguments.unshift(createObjectExpression([prop]))\r\n      }\r\n    }\r\n    !propsWithInjection && (propsWithInjection = props)\r\n  } else if (props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    if (!hasProp(prop, props)) {\r\n      props.properties.unshift(prop)\r\n    }\r\n    propsWithInjection = props\r\n  } else {\r\n    // single v-bind with expression, return a merged replacement\r\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n      createObjectExpression([prop]),\r\n      props,\r\n    ])\r\n    // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n    // the `guardReactiveProps` will no longer be needed\r\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n      parentCall = callPath[callPath.length - 2]\r\n    }\r\n  }\r\n  if (node.type === NodeTypes.VNODE_CALL) {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.props = propsWithInjection\r\n    }\r\n  } else {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.arguments[2] = propsWithInjection\r\n    }\r\n  }\r\n}\r\n\r\n// check existing key to avoid overriding user provided keys\r\nfunction hasProp(prop: Property, props: ObjectExpression) {\r\n  let result = false\r\n  if (prop.key.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    const propKeyName = prop.key.content\r\n    result = props.properties.some(\r\n      p =>\r\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        p.key.content === propKeyName,\r\n    )\r\n  }\r\n  return result\r\n}\r\n\r\nexport function toValidAssetId(\r\n  name: string,\r\n  type: 'component' | 'directive' | 'filter',\r\n): string {\r\n  // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n    return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString()\r\n  })}`\r\n}\r\n\r\n// Check if a node contains expressions that reference current context scope ids\r\nexport function hasScopeRef(\r\n  node: TemplateChildNode | IfBranchNode | ExpressionNode | undefined,\r\n  ids: TransformContext['identifiers'],\r\n): boolean {\r\n  if (!node || Object.keys(ids).length === 0) {\r\n    return false\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i]\r\n        if (\r\n          p.type === NodeTypes.DIRECTIVE &&\r\n          (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.FOR:\r\n      if (hasScopeRef(node.source, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.IF:\r\n      return node.branches.some(b => hasScopeRef(b, ids))\r\n    case NodeTypes.IF_BRANCH:\r\n      if (hasScopeRef(node.condition, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return (\r\n        !node.isStatic &&\r\n        isSimpleIdentifier(node.content) &&\r\n        !!ids[node.content]\r\n      )\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids))\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return hasScopeRef(node.content, ids)\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return false\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return false\r\n  }\r\n}\r\n\r\nexport function getMemoedVNodeCall(node: BlockCodegenNode | MemoExpression) {\r\n  if (node.type === NodeTypes.JS_CALL_EXPRESSION && node.callee === WITH_MEMO) {\r\n    return node.arguments[1].returns as VNodeCall\r\n  } else {\r\n    return node\r\n  }\r\n}\r\n\r\nexport const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\r\n","import {\r\n  type AttributeNode,\r\n  ConstantTypes,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type ForParseResult,\r\n  Namespaces,\r\n  NodeTypes,\r\n  type RootNode,\r\n  type SimpleExpressionNode,\r\n  type SourceLocation,\r\n  type TemplateChildNode,\r\n  createRoot,\r\n  createSimpleExpression,\r\n} from './ast'\r\nimport type { ParserOptions } from './options'\r\nimport Tokenizer, {\r\n  CharCodes,\r\n  ParseMode,\r\n  QuoteType,\r\n  Sequences,\r\n  State,\r\n  isWhitespace,\r\n  toCharCodes,\r\n} from './tokenizer'\r\nimport {\r\n  type CompilerCompatOptions,\r\n  CompilerDeprecationTypes,\r\n  checkCompatEnabled,\r\n  isCompatEnabled,\r\n  warnDeprecation,\r\n} from './compat/compatConfig'\r\nimport { NO, extend } from '@vue/shared'\r\nimport {\r\n  ErrorCodes,\r\n  createCompilerError,\r\n  defaultOnError,\r\n  defaultOnWarn,\r\n} from './errors'\r\nimport {\r\n  forAliasRE,\r\n  isCoreComponent,\r\n  isSimpleIdentifier,\r\n  isStaticArgOf,\r\n} from './utils'\r\nimport { decodeHTML } from 'entities/lib/decode.js'\r\nimport {\r\n  type ParserOptions as BabelOptions,\r\n  parse,\r\n  parseExpression,\r\n} from '@babel/parser'\r\n\r\ntype OptionalOptions =\r\n  | 'decodeEntities'\r\n  | 'whitespace'\r\n  | 'isNativeTag'\r\n  | 'isBuiltInComponent'\r\n  | 'expressionPlugins'\r\n  | keyof CompilerCompatOptions\r\n\r\nexport type MergedParserOptions = Omit<\r\n  Required<ParserOptions>,\r\n  OptionalOptions\r\n> &\r\n  Pick<ParserOptions, OptionalOptions>\r\n\r\nexport const defaultParserOptions: MergedParserOptions = {\r\n  parseMode: 'base',\r\n  ns: Namespaces.HTML,\r\n  delimiters: [`{{`, `}}`],\r\n  getNamespace: () => Namespaces.HTML,\r\n  isVoidTag: NO,\r\n  isPreTag: NO,\r\n  isCustomElement: NO,\r\n  onError: defaultOnError,\r\n  onWarn: defaultOnWarn,\r\n  comments: __DEV__,\r\n  prefixIdentifiers: false,\r\n}\r\n\r\nlet currentOptions: MergedParserOptions = defaultParserOptions\r\nlet currentRoot: RootNode | null = null\r\n\r\n// parser state\r\nlet currentInput = ''\r\nlet currentOpenTag: ElementNode | null = null\r\nlet currentProp: AttributeNode | DirectiveNode | null = null\r\nlet currentAttrValue = ''\r\nlet currentAttrStartIndex = -1\r\nlet currentAttrEndIndex = -1\r\nlet inPre = 0\r\nlet inVPre = false\r\nlet currentVPreBoundary: ElementNode | null = null\r\nconst stack: ElementNode[] = []\r\n\r\nconst tokenizer = new Tokenizer(stack, {\r\n  onerr: emitError,\r\n\r\n  ontext(start, end) {\r\n    onText(getSlice(start, end), start, end)\r\n  },\r\n\r\n  ontextentity(char, start, end) {\r\n    onText(char, start, end)\r\n  },\r\n\r\n  oninterpolation(start, end) {\r\n    if (inVPre) {\r\n      return onText(getSlice(start, end), start, end)\r\n    }\r\n    let innerStart = start + tokenizer.delimiterOpen.length\r\n    let innerEnd = end - tokenizer.delimiterClose.length\r\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\r\n      innerStart++\r\n    }\r\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\r\n      innerEnd--\r\n    }\r\n    let exp = getSlice(innerStart, innerEnd)\r\n    // decode entities for backwards compat\r\n    if (exp.includes('&')) {\r\n      if (__BROWSER__) {\r\n        exp = currentOptions.decodeEntities!(exp, false)\r\n      } else {\r\n        exp = decodeHTML(exp)\r\n      }\r\n    }\r\n    addNode({\r\n      type: NodeTypes.INTERPOLATION,\r\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\r\n      loc: getLoc(start, end),\r\n    })\r\n  },\r\n\r\n  onopentagname(start, end) {\r\n    const name = getSlice(start, end)\r\n    currentOpenTag = {\r\n      type: NodeTypes.ELEMENT,\r\n      tag: name,\r\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\r\n      tagType: ElementTypes.ELEMENT, // will be refined on tag close\r\n      props: [],\r\n      children: [],\r\n      loc: getLoc(start - 1, end),\r\n      codegenNode: undefined,\r\n    }\r\n  },\r\n\r\n  onopentagend(end) {\r\n    endOpenTag(end)\r\n  },\r\n\r\n  onclosetag(start, end) {\r\n    const name = getSlice(start, end)\r\n    if (!currentOptions.isVoidTag(name)) {\r\n      let found = false\r\n      for (let i = 0; i < stack.length; i++) {\r\n        const e = stack[i]\r\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\r\n          found = true\r\n          if (i > 0) {\r\n            emitError(ErrorCodes.X_MISSING_END_TAG, stack[0].loc.start.offset)\r\n          }\r\n          for (let j = 0; j <= i; j++) {\r\n            const el = stack.shift()!\r\n            onCloseTag(el, end, j < i)\r\n          }\r\n          break\r\n        }\r\n      }\r\n      if (!found) {\r\n        emitError(ErrorCodes.X_INVALID_END_TAG, backTrack(start, CharCodes.Lt))\r\n      }\r\n    }\r\n  },\r\n\r\n  onselfclosingtag(end) {\r\n    const name = currentOpenTag!.tag\r\n    currentOpenTag!.isSelfClosing = true\r\n    endOpenTag(end)\r\n    if (stack[0]?.tag === name) {\r\n      onCloseTag(stack.shift()!, end)\r\n    }\r\n  },\r\n\r\n  onattribname(start, end) {\r\n    // plain attribute\r\n    currentProp = {\r\n      type: NodeTypes.ATTRIBUTE,\r\n      name: getSlice(start, end),\r\n      nameLoc: getLoc(start, end),\r\n      value: undefined,\r\n      loc: getLoc(start),\r\n    }\r\n  },\r\n\r\n  ondirname(start, end) {\r\n    const raw = getSlice(start, end)\r\n    const name =\r\n      raw === '.' || raw === ':'\r\n        ? 'bind'\r\n        : raw === '@'\r\n          ? 'on'\r\n          : raw === '#'\r\n            ? 'slot'\r\n            : raw.slice(2)\r\n\r\n    if (!inVPre && name === '') {\r\n      emitError(ErrorCodes.X_MISSING_DIRECTIVE_NAME, start)\r\n    }\r\n\r\n    if (inVPre || name === '') {\r\n      currentProp = {\r\n        type: NodeTypes.ATTRIBUTE,\r\n        name: raw,\r\n        nameLoc: getLoc(start, end),\r\n        value: undefined,\r\n        loc: getLoc(start),\r\n      }\r\n    } else {\r\n      currentProp = {\r\n        type: NodeTypes.DIRECTIVE,\r\n        name,\r\n        rawName: raw,\r\n        exp: undefined,\r\n        arg: undefined,\r\n        modifiers: raw === '.' ? ['prop'] : [],\r\n        loc: getLoc(start),\r\n      }\r\n      if (name === 'pre') {\r\n        inVPre = tokenizer.inVPre = true\r\n        currentVPreBoundary = currentOpenTag\r\n        // convert dirs before this one to attributes\r\n        const props = currentOpenTag!.props\r\n        for (let i = 0; i < props.length; i++) {\r\n          if (props[i].type === NodeTypes.DIRECTIVE) {\r\n            props[i] = dirToAttr(props[i] as DirectiveNode)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ondirarg(start, end) {\r\n    if (start === end) return\r\n    const arg = getSlice(start, end)\r\n    if (inVPre) {\r\n      ;(currentProp as AttributeNode).name += arg\r\n      setLocEnd((currentProp as AttributeNode).nameLoc, end)\r\n    } else {\r\n      const isStatic = arg[0] !== `[`\r\n      ;(currentProp as DirectiveNode).arg = createExp(\r\n        isStatic ? arg : arg.slice(1, -1),\r\n        isStatic,\r\n        getLoc(start, end),\r\n        isStatic ? ConstantTypes.CAN_STRINGIFY : ConstantTypes.NOT_CONSTANT,\r\n      )\r\n    }\r\n  },\r\n\r\n  ondirmodifier(start, end) {\r\n    const mod = getSlice(start, end)\r\n    if (inVPre) {\r\n      ;(currentProp as AttributeNode).name += '.' + mod\r\n      setLocEnd((currentProp as AttributeNode).nameLoc, end)\r\n    } else if ((currentProp as DirectiveNode).name === 'slot') {\r\n      // slot has no modifiers, special case for edge cases like\r\n      // https://github.com/vuejs/language-tools/issues/2710\r\n      const arg = (currentProp as DirectiveNode).arg\r\n      if (arg) {\r\n        ;(arg as SimpleExpressionNode).content += '.' + mod\r\n        setLocEnd(arg.loc, end)\r\n      }\r\n    } else {\r\n      ;(currentProp as DirectiveNode).modifiers.push(mod)\r\n    }\r\n  },\r\n\r\n  onattribdata(start, end) {\r\n    currentAttrValue += getSlice(start, end)\r\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start\r\n    currentAttrEndIndex = end\r\n  },\r\n\r\n  onattribentity(char, start, end) {\r\n    currentAttrValue += char\r\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start\r\n    currentAttrEndIndex = end\r\n  },\r\n\r\n  onattribnameend(end) {\r\n    const start = currentProp!.loc.start.offset\r\n    const name = getSlice(start, end)\r\n    if (currentProp!.type === NodeTypes.DIRECTIVE) {\r\n      currentProp!.rawName = name\r\n    }\r\n    // check duplicate attrs\r\n    if (\r\n      currentOpenTag!.props.some(\r\n        p => (p.type === NodeTypes.DIRECTIVE ? p.rawName : p.name) === name,\r\n      )\r\n    ) {\r\n      emitError(ErrorCodes.DUPLICATE_ATTRIBUTE, start)\r\n    }\r\n  },\r\n\r\n  onattribend(quote, end) {\r\n    if (currentOpenTag && currentProp) {\r\n      // finalize end pos\r\n      setLocEnd(currentProp.loc, end)\r\n\r\n      if (quote !== QuoteType.NoValue) {\r\n        if (__BROWSER__ && currentAttrValue.includes('&')) {\r\n          currentAttrValue = currentOptions.decodeEntities!(\r\n            currentAttrValue,\r\n            true,\r\n          )\r\n        }\r\n\r\n        if (currentProp.type === NodeTypes.ATTRIBUTE) {\r\n          // assign value\r\n\r\n          // condense whitespaces in class\r\n          if (currentProp!.name === 'class') {\r\n            currentAttrValue = condense(currentAttrValue).trim()\r\n          }\r\n\r\n          if (quote === QuoteType.Unquoted && !currentAttrValue) {\r\n            emitError(ErrorCodes.MISSING_ATTRIBUTE_VALUE, end)\r\n          }\r\n\r\n          currentProp!.value = {\r\n            type: NodeTypes.TEXT,\r\n            content: currentAttrValue,\r\n            loc:\r\n              quote === QuoteType.Unquoted\r\n                ? getLoc(currentAttrStartIndex, currentAttrEndIndex)\r\n                : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1),\r\n          }\r\n          if (\r\n            tokenizer.inSFCRoot &&\r\n            currentOpenTag.tag === 'template' &&\r\n            currentProp.name === 'lang' &&\r\n            currentAttrValue &&\r\n            currentAttrValue !== 'html'\r\n          ) {\r\n            // SFC root template with preprocessor lang, force tokenizer to\r\n            // RCDATA mode\r\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0)\r\n          }\r\n        } else {\r\n          // directive\r\n          let expParseMode = ExpParseMode.Normal\r\n          if (!__BROWSER__) {\r\n            if (currentProp.name === 'for') {\r\n              expParseMode = ExpParseMode.Skip\r\n            } else if (currentProp.name === 'slot') {\r\n              expParseMode = ExpParseMode.Params\r\n            } else if (\r\n              currentProp.name === 'on' &&\r\n              currentAttrValue.includes(';')\r\n            ) {\r\n              expParseMode = ExpParseMode.Statements\r\n            }\r\n          }\r\n          currentProp.exp = createExp(\r\n            currentAttrValue,\r\n            false,\r\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\r\n            ConstantTypes.NOT_CONSTANT,\r\n            expParseMode,\r\n          )\r\n          if (currentProp.name === 'for') {\r\n            currentProp.forParseResult = parseForExpression(currentProp.exp)\r\n          }\r\n          // 2.x compat v-bind:foo.sync -> v-model:foo\r\n          let syncIndex = -1\r\n          if (\r\n            __COMPAT__ &&\r\n            currentProp.name === 'bind' &&\r\n            (syncIndex = currentProp.modifiers.indexOf('sync')) > -1 &&\r\n            checkCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_V_BIND_SYNC,\r\n              currentOptions,\r\n              currentProp.loc,\r\n              currentProp.rawName,\r\n            )\r\n          ) {\r\n            currentProp.name = 'model'\r\n            currentProp.modifiers.splice(syncIndex, 1)\r\n          }\r\n        }\r\n      }\r\n      if (\r\n        currentProp.type !== NodeTypes.DIRECTIVE ||\r\n        currentProp.name !== 'pre'\r\n      ) {\r\n        currentOpenTag.props.push(currentProp)\r\n      }\r\n    }\r\n    currentAttrValue = ''\r\n    currentAttrStartIndex = currentAttrEndIndex = -1\r\n  },\r\n\r\n  oncomment(start, end) {\r\n    if (currentOptions.comments) {\r\n      addNode({\r\n        type: NodeTypes.COMMENT,\r\n        content: getSlice(start, end),\r\n        loc: getLoc(start - 4, end + 3),\r\n      })\r\n    }\r\n  },\r\n\r\n  onend() {\r\n    const end = currentInput.length\r\n    // EOF ERRORS\r\n    if ((__DEV__ || !__BROWSER__) && tokenizer.state !== State.Text) {\r\n      switch (tokenizer.state) {\r\n        case State.BeforeTagName:\r\n        case State.BeforeClosingTagName:\r\n          emitError(ErrorCodes.EOF_BEFORE_TAG_NAME, end)\r\n          break\r\n        case State.Interpolation:\r\n        case State.InterpolationClose:\r\n          emitError(\r\n            ErrorCodes.X_MISSING_INTERPOLATION_END,\r\n            tokenizer.sectionStart,\r\n          )\r\n          break\r\n        case State.InCommentLike:\r\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\r\n            emitError(ErrorCodes.EOF_IN_CDATA, end)\r\n          } else {\r\n            emitError(ErrorCodes.EOF_IN_COMMENT, end)\r\n          }\r\n          break\r\n        case State.InTagName:\r\n        case State.InSelfClosingTag:\r\n        case State.InClosingTagName:\r\n        case State.BeforeAttrName:\r\n        case State.InAttrName:\r\n        case State.InDirName:\r\n        case State.InDirArg:\r\n        case State.InDirDynamicArg:\r\n        case State.InDirModifier:\r\n        case State.AfterAttrName:\r\n        case State.BeforeAttrValue:\r\n        case State.InAttrValueDq: // \"\r\n        case State.InAttrValueSq: // '\r\n        case State.InAttrValueNq:\r\n          emitError(ErrorCodes.EOF_IN_TAG, end)\r\n          break\r\n        default:\r\n          // console.log(tokenizer.state)\r\n          break\r\n      }\r\n    }\r\n    for (let index = 0; index < stack.length; index++) {\r\n      onCloseTag(stack[index], end - 1)\r\n      emitError(ErrorCodes.X_MISSING_END_TAG, stack[index].loc.start.offset)\r\n    }\r\n  },\r\n\r\n  oncdata(start, end) {\r\n    if (stack[0].ns !== Namespaces.HTML) {\r\n      onText(getSlice(start, end), start, end)\r\n    } else {\r\n      emitError(ErrorCodes.CDATA_IN_HTML_CONTENT, start - 9)\r\n    }\r\n  },\r\n\r\n  onprocessinginstruction(start) {\r\n    // ignore as we do not have runtime handling for this, only check error\r\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === Namespaces.HTML) {\r\n      emitError(\r\n        ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n        start - 1,\r\n      )\r\n    }\r\n  },\r\n})\r\n\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\r\nconst stripParensRE = /^\\(|\\)$/g\r\n\r\nfunction parseForExpression(\r\n  input: SimpleExpressionNode,\r\n): ForParseResult | undefined {\r\n  const loc = input.loc\r\n  const exp = input.content\r\n  const inMatch = exp.match(forAliasRE)\r\n  if (!inMatch) return\r\n\r\n  const [, LHS, RHS] = inMatch\r\n\r\n  const createAliasExpression = (\r\n    content: string,\r\n    offset: number,\r\n    asParam = false,\r\n  ) => {\r\n    const start = loc.start.offset + offset\r\n    const end = start + content.length\r\n    return createExp(\r\n      content,\r\n      false,\r\n      getLoc(start, end),\r\n      ConstantTypes.NOT_CONSTANT,\r\n      asParam ? ExpParseMode.Params : ExpParseMode.Normal,\r\n    )\r\n  }\r\n\r\n  const result: ForParseResult = {\r\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n    value: undefined,\r\n    key: undefined,\r\n    index: undefined,\r\n    finalized: false,\r\n  }\r\n\r\n  let valueContent = LHS.trim().replace(stripParensRE, '').trim()\r\n  const trimmedOffset = LHS.indexOf(valueContent)\r\n\r\n  const iteratorMatch = valueContent.match(forIteratorRE)\r\n  if (iteratorMatch) {\r\n    valueContent = valueContent.replace(forIteratorRE, '').trim()\r\n\r\n    const keyContent = iteratorMatch[1].trim()\r\n    let keyOffset: number | undefined\r\n    if (keyContent) {\r\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length)\r\n      result.key = createAliasExpression(keyContent, keyOffset, true)\r\n    }\r\n\r\n    if (iteratorMatch[2]) {\r\n      const indexContent = iteratorMatch[2].trim()\r\n\r\n      if (indexContent) {\r\n        result.index = createAliasExpression(\r\n          indexContent,\r\n          exp.indexOf(\r\n            indexContent,\r\n            result.key\r\n              ? keyOffset! + keyContent.length\r\n              : trimmedOffset + valueContent.length,\r\n          ),\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (valueContent) {\r\n    result.value = createAliasExpression(valueContent, trimmedOffset, true)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction getSlice(start: number, end: number) {\r\n  return currentInput.slice(start, end)\r\n}\r\n\r\nfunction endOpenTag(end: number) {\r\n  if (tokenizer.inSFCRoot) {\r\n    // in SFC mode, generate locations for root-level tags' inner content.\r\n    currentOpenTag!.innerLoc = getLoc(end + 1, end + 1)\r\n  }\r\n  addNode(currentOpenTag!)\r\n  const { tag, ns } = currentOpenTag!\r\n  if (ns === Namespaces.HTML && currentOptions.isPreTag(tag)) {\r\n    inPre++\r\n  }\r\n  if (currentOptions.isVoidTag(tag)) {\r\n    onCloseTag(currentOpenTag!, end)\r\n  } else {\r\n    stack.unshift(currentOpenTag!)\r\n    if (ns === Namespaces.SVG || ns === Namespaces.MATH_ML) {\r\n      tokenizer.inXML = true\r\n    }\r\n  }\r\n  currentOpenTag = null\r\n}\r\n\r\nfunction onText(content: string, start: number, end: number) {\r\n  if (__BROWSER__) {\r\n    const tag = stack[0]?.tag\r\n    if (tag !== 'script' && tag !== 'style' && content.includes('&')) {\r\n      content = currentOptions.decodeEntities!(content, false)\r\n    }\r\n  }\r\n  const parent = stack[0] || currentRoot\r\n  const lastNode = parent.children[parent.children.length - 1]\r\n  if (lastNode?.type === NodeTypes.TEXT) {\r\n    // merge\r\n    lastNode.content += content\r\n    setLocEnd(lastNode.loc, end)\r\n  } else {\r\n    parent.children.push({\r\n      type: NodeTypes.TEXT,\r\n      content,\r\n      loc: getLoc(start, end),\r\n    })\r\n  }\r\n}\r\n\r\nfunction onCloseTag(el: ElementNode, end: number, isImplied = false) {\r\n  // attach end position\r\n  if (isImplied) {\r\n    // implied close, end should be backtracked to close\r\n    setLocEnd(el.loc, backTrack(end, CharCodes.Lt))\r\n  } else {\r\n    setLocEnd(el.loc, end + 1)\r\n  }\r\n\r\n  if (tokenizer.inSFCRoot) {\r\n    // SFC root tag, resolve inner end\r\n    if (el.children.length) {\r\n      el.innerLoc!.end = extend({}, el.children[el.children.length - 1].loc.end)\r\n    } else {\r\n      el.innerLoc!.end = extend({}, el.innerLoc!.start)\r\n    }\r\n    el.innerLoc!.source = getSlice(\r\n      el.innerLoc!.start.offset,\r\n      el.innerLoc!.end.offset,\r\n    )\r\n  }\r\n\r\n  // refine element type\r\n  const { tag, ns } = el\r\n  if (!inVPre) {\r\n    if (tag === 'slot') {\r\n      el.tagType = ElementTypes.SLOT\r\n    } else if (isFragmentTemplate(el)) {\r\n      el.tagType = ElementTypes.TEMPLATE\r\n    } else if (isComponent(el)) {\r\n      el.tagType = ElementTypes.COMPONENT\r\n    }\r\n  }\r\n\r\n  // whitespace management\r\n  if (!tokenizer.inRCDATA) {\r\n    el.children = condenseWhitespace(el.children, el.tag)\r\n  }\r\n  if (ns === Namespaces.HTML && currentOptions.isPreTag(tag)) {\r\n    inPre--\r\n  }\r\n  if (currentVPreBoundary === el) {\r\n    inVPre = tokenizer.inVPre = false\r\n    currentVPreBoundary = null\r\n  }\r\n  if (\r\n    tokenizer.inXML &&\r\n    (stack[0] ? stack[0].ns : currentOptions.ns) === Namespaces.HTML\r\n  ) {\r\n    tokenizer.inXML = false\r\n  }\r\n\r\n  // 2.x compat / deprecation checks\r\n  if (__COMPAT__) {\r\n    const props = el.props\r\n    if (\r\n      __DEV__ &&\r\n      isCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n        currentOptions,\r\n      )\r\n    ) {\r\n      let hasIf = false\r\n      let hasFor = false\r\n      for (let i = 0; i < props.length; i++) {\r\n        const p = props[i]\r\n        if (p.type === NodeTypes.DIRECTIVE) {\r\n          if (p.name === 'if') {\r\n            hasIf = true\r\n          } else if (p.name === 'for') {\r\n            hasFor = true\r\n          }\r\n        }\r\n        if (hasIf && hasFor) {\r\n          warnDeprecation(\r\n            CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n            currentOptions,\r\n            el.loc,\r\n          )\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      !tokenizer.inSFCRoot &&\r\n      isCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n        currentOptions,\r\n      ) &&\r\n      el.tag === 'template' &&\r\n      !isFragmentTemplate(el)\r\n    ) {\r\n      __DEV__ &&\r\n        warnDeprecation(\r\n          CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n          currentOptions,\r\n          el.loc,\r\n        )\r\n      // unwrap\r\n      const parent = stack[0] || currentRoot\r\n      const index = parent.children.indexOf(el)\r\n      parent.children.splice(index, 1, ...el.children)\r\n    }\r\n\r\n    const inlineTemplateProp = props.find(\r\n      p => p.type === NodeTypes.ATTRIBUTE && p.name === 'inline-template',\r\n    ) as AttributeNode\r\n    if (\r\n      inlineTemplateProp &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE,\r\n        currentOptions,\r\n        inlineTemplateProp.loc,\r\n      ) &&\r\n      el.children.length\r\n    ) {\r\n      inlineTemplateProp.value = {\r\n        type: NodeTypes.TEXT,\r\n        content: getSlice(\r\n          el.children[0].loc.start.offset,\r\n          el.children[el.children.length - 1].loc.end.offset,\r\n        ),\r\n        loc: inlineTemplateProp.loc,\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction backTrack(index: number, c: number) {\r\n  let i = index\r\n  while (currentInput.charCodeAt(i) !== c && i >= 0) i--\r\n  return i\r\n}\r\n\r\nconst specialTemplateDir = new Set(['if', 'else', 'else-if', 'for', 'slot'])\r\nfunction isFragmentTemplate({ tag, props }: ElementNode): boolean {\r\n  if (tag === 'template') {\r\n    for (let i = 0; i < props.length; i++) {\r\n      if (\r\n        props[i].type === NodeTypes.DIRECTIVE &&\r\n        specialTemplateDir.has((props[i] as DirectiveNode).name)\r\n      ) {\r\n        return true\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction isComponent({ tag, props }: ElementNode): boolean {\r\n  if (currentOptions.isCustomElement(tag)) {\r\n    return false\r\n  }\r\n  if (\r\n    tag === 'component' ||\r\n    isUpperCase(tag.charCodeAt(0)) ||\r\n    isCoreComponent(tag) ||\r\n    currentOptions.isBuiltInComponent?.(tag) ||\r\n    (currentOptions.isNativeTag && !currentOptions.isNativeTag(tag))\r\n  ) {\r\n    return true\r\n  }\r\n  // at this point the tag should be a native tag, but check for potential \"is\"\r\n  // casting\r\n  for (let i = 0; i < props.length; i++) {\r\n    const p = props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.name === 'is' && p.value) {\r\n        if (p.value.content.startsWith('vue:')) {\r\n          return true\r\n        } else if (\r\n          __COMPAT__ &&\r\n          checkCompatEnabled(\r\n            CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n            currentOptions,\r\n            p.loc,\r\n          )\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    } else if (\r\n      __COMPAT__ &&\r\n      // :is on plain element - only treat as component in compat mode\r\n      p.name === 'bind' &&\r\n      isStaticArgOf(p.arg, 'is') &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n        currentOptions,\r\n        p.loc,\r\n      )\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction isUpperCase(c: number) {\r\n  return c > 64 && c < 91\r\n}\r\n\r\nconst windowsNewlineRE = /\\r\\n/g\r\nfunction condenseWhitespace(\r\n  nodes: TemplateChildNode[],\r\n  tag?: string,\r\n): TemplateChildNode[] {\r\n  const shouldCondense = currentOptions.whitespace !== 'preserve'\r\n  let removedWhitespace = false\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    const node = nodes[i]\r\n    if (node.type === NodeTypes.TEXT) {\r\n      if (!inPre) {\r\n        if (isAllWhitespace(node.content)) {\r\n          const prev = nodes[i - 1]?.type\r\n          const next = nodes[i + 1]?.type\r\n          // Remove if:\r\n          // - the whitespace is the first or last node, or:\r\n          // - (condense mode) the whitespace is between two comments, or:\r\n          // - (condense mode) the whitespace is between comment and element, or:\r\n          // - (condense mode) the whitespace is between two elements AND contains newline\r\n          if (\r\n            !prev ||\r\n            !next ||\r\n            (shouldCondense &&\r\n              ((prev === NodeTypes.COMMENT &&\r\n                (next === NodeTypes.COMMENT || next === NodeTypes.ELEMENT)) ||\r\n                (prev === NodeTypes.ELEMENT &&\r\n                  (next === NodeTypes.COMMENT ||\r\n                    (next === NodeTypes.ELEMENT &&\r\n                      hasNewlineChar(node.content))))))\r\n          ) {\r\n            removedWhitespace = true\r\n            nodes[i] = null as any\r\n          } else {\r\n            // Otherwise, the whitespace is condensed into a single space\r\n            node.content = ' '\r\n          }\r\n        } else if (shouldCondense) {\r\n          // in condense mode, consecutive whitespaces in text are condensed\r\n          // down to a single space.\r\n          node.content = condense(node.content)\r\n        }\r\n      } else {\r\n        // #6410 normalize windows newlines in <pre>:\r\n        // in SSR, browsers normalize server-rendered \\r\\n into a single \\n\r\n        // in the DOM\r\n        node.content = node.content.replace(windowsNewlineRE, '\\n')\r\n      }\r\n    }\r\n  }\r\n  if (inPre && tag && currentOptions.isPreTag(tag)) {\r\n    // remove leading newline per html spec\r\n    // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n    const first = nodes[0]\r\n    if (first && first.type === NodeTypes.TEXT) {\r\n      first.content = first.content.replace(/^\\r?\\n/, '')\r\n    }\r\n  }\r\n  return removedWhitespace ? nodes.filter(Boolean) : nodes\r\n}\r\n\r\nfunction isAllWhitespace(str: string) {\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (!isWhitespace(str.charCodeAt(i))) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction hasNewlineChar(str: string) {\r\n  for (let i = 0; i < str.length; i++) {\r\n    const c = str.charCodeAt(i)\r\n    if (c === CharCodes.NewLine || c === CharCodes.CarriageReturn) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction condense(str: string) {\r\n  let ret = ''\r\n  let prevCharIsWhitespace = false\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (isWhitespace(str.charCodeAt(i))) {\r\n      if (!prevCharIsWhitespace) {\r\n        ret += ' '\r\n        prevCharIsWhitespace = true\r\n      }\r\n    } else {\r\n      ret += str[i]\r\n      prevCharIsWhitespace = false\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction addNode(node: TemplateChildNode) {\r\n  ;(stack[0] || currentRoot).children.push(node)\r\n}\r\n\r\nfunction getLoc(start: number, end?: number): SourceLocation {\r\n  return {\r\n    start: tokenizer.getPos(start),\r\n    // @ts-expect-error allow late attachment\r\n    end: end == null ? end : tokenizer.getPos(end),\r\n    // @ts-expect-error allow late attachment\r\n    source: end == null ? end : getSlice(start, end),\r\n  }\r\n}\r\n\r\nfunction setLocEnd(loc: SourceLocation, end: number) {\r\n  loc.end = tokenizer.getPos(end)\r\n  loc.source = getSlice(loc.start.offset, end)\r\n}\r\n\r\nfunction dirToAttr(dir: DirectiveNode): AttributeNode {\r\n  const attr: AttributeNode = {\r\n    type: NodeTypes.ATTRIBUTE,\r\n    name: dir.rawName!,\r\n    nameLoc: getLoc(\r\n      dir.loc.start.offset,\r\n      dir.loc.start.offset + dir.rawName!.length,\r\n    ),\r\n    value: undefined,\r\n    loc: dir.loc,\r\n  }\r\n  if (dir.exp) {\r\n    // account for quotes\r\n    const loc = dir.exp.loc\r\n    if (loc.end.offset < dir.loc.end.offset) {\r\n      loc.start.offset--\r\n      loc.start.column--\r\n      loc.end.offset++\r\n      loc.end.column++\r\n    }\r\n    attr.value = {\r\n      type: NodeTypes.TEXT,\r\n      content: (dir.exp as SimpleExpressionNode).content,\r\n      loc,\r\n    }\r\n  }\r\n  return attr\r\n}\r\n\r\nenum ExpParseMode {\r\n  Normal,\r\n  Params,\r\n  Statements,\r\n  Skip,\r\n}\r\n\r\nfunction createExp(\r\n  content: SimpleExpressionNode['content'],\r\n  isStatic: SimpleExpressionNode['isStatic'] = false,\r\n  loc: SourceLocation,\r\n  constType: ConstantTypes = ConstantTypes.NOT_CONSTANT,\r\n  parseMode = ExpParseMode.Normal,\r\n) {\r\n  const exp = createSimpleExpression(content, isStatic, loc, constType)\r\n  if (\r\n    !__BROWSER__ &&\r\n    !isStatic &&\r\n    currentOptions.prefixIdentifiers &&\r\n    parseMode !== ExpParseMode.Skip &&\r\n    content.trim()\r\n  ) {\r\n    if (isSimpleIdentifier(content)) {\r\n      exp.ast = null // fast path\r\n      return exp\r\n    }\r\n    try {\r\n      const plugins = currentOptions.expressionPlugins\r\n      const options: BabelOptions = {\r\n        plugins: plugins ? [...plugins, 'typescript'] : ['typescript'],\r\n      }\r\n      if (parseMode === ExpParseMode.Statements) {\r\n        // v-on with multi-inline-statements, pad 1 char\r\n        exp.ast = parse(` ${content} `, options).program\r\n      } else if (parseMode === ExpParseMode.Params) {\r\n        exp.ast = parseExpression(`(${content})=>{}`, options)\r\n      } else {\r\n        // normal exp, wrap with parens\r\n        exp.ast = parseExpression(`(${content})`, options)\r\n      }\r\n    } catch (e: any) {\r\n      exp.ast = false // indicate an error\r\n      emitError(ErrorCodes.X_INVALID_EXPRESSION, loc.start.offset, e.message)\r\n    }\r\n  }\r\n  return exp\r\n}\r\n\r\nfunction emitError(code: ErrorCodes, index: number, message?: string) {\r\n  currentOptions.onError(\r\n    createCompilerError(code, getLoc(index, index), undefined, message),\r\n  )\r\n}\r\n\r\nfunction reset() {\r\n  tokenizer.reset()\r\n  currentOpenTag = null\r\n  currentProp = null\r\n  currentAttrValue = ''\r\n  currentAttrStartIndex = -1\r\n  currentAttrEndIndex = -1\r\n  stack.length = 0\r\n}\r\n\r\nexport function baseParse(input: string, options?: ParserOptions): RootNode {\r\n  reset()\r\n  currentInput = input\r\n  currentOptions = extend({}, defaultParserOptions)\r\n\r\n  if (options) {\r\n    let key: keyof ParserOptions\r\n    for (key in options) {\r\n      if (options[key] != null) {\r\n        // @ts-expect-error\r\n        currentOptions[key] = options[key]\r\n      }\r\n    }\r\n  }\r\n\r\n  if (__DEV__) {\r\n    if (!__BROWSER__ && currentOptions.decodeEntities) {\r\n      console.warn(\r\n        `[@vue/compiler-core] decodeEntities option is passed but will be ` +\r\n          `ignored in non-browser builds.`,\r\n      )\r\n    } else if (__BROWSER__ && !currentOptions.decodeEntities) {\r\n      throw new Error(\r\n        `[@vue/compiler-core] decodeEntities option is required in browser builds.`,\r\n      )\r\n    }\r\n  }\r\n\r\n  tokenizer.mode =\r\n    currentOptions.parseMode === 'html'\r\n      ? ParseMode.HTML\r\n      : currentOptions.parseMode === 'sfc'\r\n        ? ParseMode.SFC\r\n        : ParseMode.BASE\r\n\r\n  tokenizer.inXML =\r\n    currentOptions.ns === Namespaces.SVG ||\r\n    currentOptions.ns === Namespaces.MATH_ML\r\n\r\n  const delimiters = options?.delimiters\r\n  if (delimiters) {\r\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0])\r\n    tokenizer.delimiterClose = toCharCodes(delimiters[1])\r\n  }\r\n\r\n  const root = (currentRoot = createRoot([], input))\r\n  tokenizer.parse(currentInput)\r\n  root.loc = getLoc(0, input.length)\r\n  root.children = condenseWhitespace(root.children)\r\n  currentRoot = null\r\n  return root\r\n}\r\n","import {\r\n  type CallExpression,\r\n  type ComponentNode,\r\n  ConstantTypes,\r\n  ElementTypes,\r\n  type JSChildNode,\r\n  NodeTypes,\r\n  type ParentNode,\r\n  type PlainElementNode,\r\n  type RootNode,\r\n  type SimpleExpressionNode,\r\n  type TemplateChildNode,\r\n  type TemplateNode,\r\n  type VNodeCall,\r\n  createArrayExpression,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n} from '../ast'\r\nimport type { TransformContext } from '../transform'\r\nimport { PatchFlags, isArray, isString, isSymbol } from '@vue/shared'\r\nimport { isSlotOutlet } from '../utils'\r\nimport {\r\n  GUARD_REACTIVE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_PROPS,\r\n  NORMALIZE_STYLE,\r\n  OPEN_BLOCK,\r\n} from '../runtimeHelpers'\r\n\r\nexport function hoistStatic(root: RootNode, context: TransformContext) {\r\n  walk(\r\n    root,\r\n    context,\r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]),\r\n  )\r\n}\r\n\r\nexport function isSingleElementRoot(\r\n  root: RootNode,\r\n  child: TemplateChildNode,\r\n): child is PlainElementNode | ComponentNode | TemplateNode {\r\n  const { children } = root\r\n  return (\r\n    children.length === 1 &&\r\n    child.type === NodeTypes.ELEMENT &&\r\n    !isSlotOutlet(child)\r\n  )\r\n}\r\n\r\nfunction walk(\r\n  node: ParentNode,\r\n  context: TransformContext,\r\n  doNotHoistNode: boolean = false,\r\n) {\r\n  const { children } = node\r\n  const originalCount = children.length\r\n  let hoistedCount = 0\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    // only plain elements & text calls are eligible for hoisting.\r\n    if (\r\n      child.type === NodeTypes.ELEMENT &&\r\n      child.tagType === ElementTypes.ELEMENT\r\n    ) {\r\n      const constantType = doNotHoistNode\r\n        ? ConstantTypes.NOT_CONSTANT\r\n        : getConstantType(child, context)\r\n      if (constantType > ConstantTypes.NOT_CONSTANT) {\r\n        if (constantType >= ConstantTypes.CAN_HOIST) {\r\n          ;(child.codegenNode as VNodeCall).patchFlag =\r\n            PatchFlags.HOISTED + (__DEV__ ? ` /* HOISTED */` : ``)\r\n          child.codegenNode = context.hoist(child.codegenNode!)\r\n          hoistedCount++\r\n          continue\r\n        }\r\n      } else {\r\n        // node may contain dynamic children, but its props may be eligible for\r\n        // hoisting.\r\n        const codegenNode = child.codegenNode!\r\n        if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n          const flag = getPatchFlag(codegenNode)\r\n          if (\r\n            (!flag ||\r\n              flag === PatchFlags.NEED_PATCH ||\r\n              flag === PatchFlags.TEXT) &&\r\n            getGeneratedPropsConstantType(child, context) >=\r\n              ConstantTypes.CAN_HOIST\r\n          ) {\r\n            const props = getNodeProps(child)\r\n            if (props) {\r\n              codegenNode.props = context.hoist(props)\r\n            }\r\n          }\r\n          if (codegenNode.dynamicProps) {\r\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // walk further\r\n    if (child.type === NodeTypes.ELEMENT) {\r\n      const isComponent = child.tagType === ElementTypes.COMPONENT\r\n      if (isComponent) {\r\n        context.scopes.vSlot++\r\n      }\r\n      walk(child, context)\r\n      if (isComponent) {\r\n        context.scopes.vSlot--\r\n      }\r\n    } else if (child.type === NodeTypes.FOR) {\r\n      // Do not hoist v-for single child because it has to be a block\r\n      walk(child, context, child.children.length === 1)\r\n    } else if (child.type === NodeTypes.IF) {\r\n      for (let i = 0; i < child.branches.length; i++) {\r\n        // Do not hoist v-if single child because it has to be a block\r\n        walk(\r\n          child.branches[i],\r\n          context,\r\n          child.branches[i].children.length === 1,\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (hoistedCount && context.transformHoist) {\r\n    context.transformHoist(children, context, node)\r\n  }\r\n\r\n  // all children were hoisted - the entire children array is hoistable.\r\n  if (\r\n    hoistedCount &&\r\n    hoistedCount === originalCount &&\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    node.codegenNode &&\r\n    node.codegenNode.type === NodeTypes.VNODE_CALL &&\r\n    isArray(node.codegenNode.children)\r\n  ) {\r\n    const hoisted = context.hoist(\r\n      createArrayExpression(node.codegenNode.children),\r\n    )\r\n    // #6978, #7138, #7114\r\n    // a hoisted children array inside v-for can caused HMR errors since\r\n    // it might be mutated when mounting the v-for list\r\n    if (context.hmr) {\r\n      hoisted.content = `[...${hoisted.content}]`\r\n    }\r\n    node.codegenNode.children = hoisted\r\n  }\r\n}\r\n\r\nexport function getConstantType(\r\n  node: TemplateChildNode | SimpleExpressionNode,\r\n  context: TransformContext,\r\n): ConstantTypes {\r\n  const { constantCache } = context\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      if (node.tagType !== ElementTypes.ELEMENT) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const cached = constantCache.get(node)\r\n      if (cached !== undefined) {\r\n        return cached\r\n      }\r\n      const codegenNode = node.codegenNode!\r\n      if (codegenNode.type !== NodeTypes.VNODE_CALL) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      if (\r\n        codegenNode.isBlock &&\r\n        node.tag !== 'svg' &&\r\n        node.tag !== 'foreignObject'\r\n      ) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const flag = getPatchFlag(codegenNode)\r\n      if (!flag) {\r\n        let returnType = ConstantTypes.CAN_STRINGIFY\r\n\r\n        // Element itself has no patch flag. However we still need to check:\r\n\r\n        // 1. Even for a node with no patch flag, it is possible for it to contain\r\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n        // injected keys or cached event handlers. Therefore we need to always\r\n        // check the codegenNode's props to be sure.\r\n        const generatedPropsType = getGeneratedPropsConstantType(node, context)\r\n        if (generatedPropsType === ConstantTypes.NOT_CONSTANT) {\r\n          constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n          return ConstantTypes.NOT_CONSTANT\r\n        }\r\n        if (generatedPropsType < returnType) {\r\n          returnType = generatedPropsType\r\n        }\r\n\r\n        // 2. its children.\r\n        for (let i = 0; i < node.children.length; i++) {\r\n          const childType = getConstantType(node.children[i], context)\r\n          if (childType === ConstantTypes.NOT_CONSTANT) {\r\n            constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n            return ConstantTypes.NOT_CONSTANT\r\n          }\r\n          if (childType < returnType) {\r\n            returnType = childType\r\n          }\r\n        }\r\n\r\n        // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n        // type, check if any of the props can cause the type to be lowered\r\n        // we can skip can_patch because it's guaranteed by the absence of a\r\n        // patchFlag.\r\n        if (returnType > ConstantTypes.CAN_SKIP_PATCH) {\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i]\r\n            if (p.type === NodeTypes.DIRECTIVE && p.name === 'bind' && p.exp) {\r\n              const expType = getConstantType(p.exp, context)\r\n              if (expType === ConstantTypes.NOT_CONSTANT) {\r\n                constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n                return ConstantTypes.NOT_CONSTANT\r\n              }\r\n              if (expType < returnType) {\r\n                returnType = expType\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // only svg/foreignObject could be block here, however if they are\r\n        // static then they don't need to be blocks since there will be no\r\n        // nested updates.\r\n        if (codegenNode.isBlock) {\r\n          // except set custom directives.\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i]\r\n            if (p.type === NodeTypes.DIRECTIVE) {\r\n              constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n              return ConstantTypes.NOT_CONSTANT\r\n            }\r\n          }\r\n\r\n          context.removeHelper(OPEN_BLOCK)\r\n          context.removeHelper(\r\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent),\r\n          )\r\n          codegenNode.isBlock = false\r\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent))\r\n        }\r\n\r\n        constantCache.set(node, returnType)\r\n        return returnType\r\n      } else {\r\n        constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return ConstantTypes.CAN_STRINGIFY\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.IF_BRANCH:\r\n      return ConstantTypes.NOT_CONSTANT\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return getConstantType(node.content, context)\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return node.constType\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      let returnType = ConstantTypes.CAN_STRINGIFY\r\n      for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i]\r\n        if (isString(child) || isSymbol(child)) {\r\n          continue\r\n        }\r\n        const childType = getConstantType(child, context)\r\n        if (childType === ConstantTypes.NOT_CONSTANT) {\r\n          return ConstantTypes.NOT_CONSTANT\r\n        } else if (childType < returnType) {\r\n          returnType = childType\r\n        }\r\n      }\r\n      return returnType\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return ConstantTypes.NOT_CONSTANT\r\n  }\r\n}\r\n\r\nconst allowHoistedHelperSet = new Set([\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS,\r\n])\r\n\r\nfunction getConstantTypeOfHelperCall(\r\n  value: CallExpression,\r\n  context: TransformContext,\r\n): ConstantTypes {\r\n  if (\r\n    value.type === NodeTypes.JS_CALL_EXPRESSION &&\r\n    !isString(value.callee) &&\r\n    allowHoistedHelperSet.has(value.callee)\r\n  ) {\r\n    const arg = value.arguments[0] as JSChildNode\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      return getConstantType(arg, context)\r\n    } else if (arg.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n      return getConstantTypeOfHelperCall(arg, context)\r\n    }\r\n  }\r\n  return ConstantTypes.NOT_CONSTANT\r\n}\r\n\r\nfunction getGeneratedPropsConstantType(\r\n  node: PlainElementNode,\r\n  context: TransformContext,\r\n): ConstantTypes {\r\n  let returnType = ConstantTypes.CAN_STRINGIFY\r\n  const props = getNodeProps(node)\r\n  if (props && props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    const { properties } = props\r\n    for (let i = 0; i < properties.length; i++) {\r\n      const { key, value } = properties[i]\r\n      const keyType = getConstantType(key, context)\r\n      if (keyType === ConstantTypes.NOT_CONSTANT) {\r\n        return keyType\r\n      }\r\n      if (keyType < returnType) {\r\n        returnType = keyType\r\n      }\r\n      let valueType: ConstantTypes\r\n      if (value.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n        valueType = getConstantType(value, context)\r\n      } else if (value.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n        // some helper calls can be hoisted,\r\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n        // in this case we need to respect the ConstantType of the helper's arguments\r\n        valueType = getConstantTypeOfHelperCall(value, context)\r\n      } else {\r\n        valueType = ConstantTypes.NOT_CONSTANT\r\n      }\r\n      if (valueType === ConstantTypes.NOT_CONSTANT) {\r\n        return valueType\r\n      }\r\n      if (valueType < returnType) {\r\n        returnType = valueType\r\n      }\r\n    }\r\n  }\r\n  return returnType\r\n}\r\n\r\nfunction getNodeProps(node: PlainElementNode) {\r\n  const codegenNode = node.codegenNode!\r\n  if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n    return codegenNode.props\r\n  }\r\n}\r\n\r\nfunction getPatchFlag(node: VNodeCall): number | undefined {\r\n  const flag = node.patchFlag\r\n  return flag ? parseInt(flag, 10) : undefined\r\n}\r\n","import type { TransformOptions } from './options'\r\nimport {\r\n  type ArrayExpression,\r\n  type CacheExpression,\r\n  ConstantTypes,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  type JSChildNode,\r\n  NodeTypes,\r\n  type ParentNode,\r\n  type Property,\r\n  type RootNode,\r\n  type SimpleExpressionNode,\r\n  type TemplateChildNode,\r\n  type TemplateLiteral,\r\n  convertToBlock,\r\n  createCacheExpression,\r\n  createSimpleExpression,\r\n  createVNodeCall,\r\n} from './ast'\r\nimport {\r\n  EMPTY_OBJ,\r\n  NOOP,\r\n  PatchFlagNames,\r\n  PatchFlags,\r\n  camelize,\r\n  capitalize,\r\n  isArray,\r\n  isString,\r\n} from '@vue/shared'\r\nimport { defaultOnError, defaultOnWarn } from './errors'\r\nimport {\r\n  CREATE_COMMENT,\r\n  FRAGMENT,\r\n  TO_DISPLAY_STRING,\r\n  helperNameMap,\r\n} from './runtimeHelpers'\r\nimport { isVSlot } from './utils'\r\nimport { hoistStatic, isSingleElementRoot } from './transforms/hoistStatic'\r\nimport type { CompilerCompatOptions } from './compat/compatConfig'\r\n\r\n// There are two types of transforms:\r\n//\r\n// - NodeTransform:\r\n//   Transforms that operate directly on a ChildNode. NodeTransforms may mutate,\r\n//   replace or remove the node being processed.\r\nexport type NodeTransform = (\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext,\r\n) => void | (() => void) | (() => void)[]\r\n\r\n// - DirectiveTransform:\r\n//   Transforms that handles a single directive attribute on an element.\r\n//   It translates the raw directive into actual props for the VNode.\r\nexport type DirectiveTransform = (\r\n  dir: DirectiveNode,\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  // a platform specific compiler can import the base transform and augment\r\n  // it by passing in this optional argument.\r\n  augmentor?: (ret: DirectiveTransformResult) => DirectiveTransformResult,\r\n) => DirectiveTransformResult\r\n\r\nexport interface DirectiveTransformResult {\r\n  props: Property[]\r\n  needRuntime?: boolean | symbol\r\n  ssrTagParts?: TemplateLiteral['elements']\r\n}\r\n\r\n// A structural directive transform is technically also a NodeTransform;\r\n// Only v-if and v-for fall into this category.\r\nexport type StructuralDirectiveTransform = (\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n) => void | (() => void)\r\n\r\nexport interface ImportItem {\r\n  exp: string | ExpressionNode\r\n  path: string\r\n}\r\n\r\nexport interface TransformContext\r\n  extends Required<Omit<TransformOptions, keyof CompilerCompatOptions>>,\r\n    CompilerCompatOptions {\r\n  selfName: string | null\r\n  root: RootNode\r\n  helpers: Map<symbol, number>\r\n  components: Set<string>\r\n  directives: Set<string>\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  temps: number\r\n  cached: number\r\n  identifiers: { [name: string]: number | undefined }\r\n  scopes: {\r\n    vFor: number\r\n    vSlot: number\r\n    vPre: number\r\n    vOnce: number\r\n  }\r\n  parent: ParentNode | null\r\n  childIndex: number\r\n  currentNode: RootNode | TemplateChildNode | null\r\n  inVOnce: boolean\r\n  helper<T extends symbol>(name: T): T\r\n  removeHelper<T extends symbol>(name: T): void\r\n  helperString(name: symbol): string\r\n  replaceNode(node: TemplateChildNode): void\r\n  removeNode(node?: TemplateChildNode): void\r\n  onNodeRemoved(): void\r\n  addIdentifiers(exp: ExpressionNode | string): void\r\n  removeIdentifiers(exp: ExpressionNode | string): void\r\n  hoist(exp: string | JSChildNode | ArrayExpression): SimpleExpressionNode\r\n  cache<T extends JSChildNode>(exp: T, isVNode?: boolean): CacheExpression | T\r\n  constantCache: WeakMap<TemplateChildNode, ConstantTypes>\r\n\r\n  // 2.x Compat only\r\n  filters?: Set<string>\r\n}\r\n\r\nexport function createTransformContext(\r\n  root: RootNode,\r\n  {\r\n    filename = '',\r\n    prefixIdentifiers = false,\r\n    hoistStatic = false,\r\n    hmr = false,\r\n    cacheHandlers = false,\r\n    nodeTransforms = [],\r\n    directiveTransforms = {},\r\n    transformHoist = null,\r\n    isBuiltInComponent = NOOP,\r\n    isCustomElement = NOOP,\r\n    expressionPlugins = [],\r\n    scopeId = null,\r\n    slotted = true,\r\n    ssr = false,\r\n    inSSR = false,\r\n    ssrCssVars = ``,\r\n    bindingMetadata = EMPTY_OBJ,\r\n    inline = false,\r\n    isTS = false,\r\n    onError = defaultOnError,\r\n    onWarn = defaultOnWarn,\r\n    compatConfig,\r\n  }: TransformOptions,\r\n): TransformContext {\r\n  const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/)\r\n  const context: TransformContext = {\r\n    // options\r\n    filename,\r\n    selfName: nameMatch && capitalize(camelize(nameMatch[1])),\r\n    prefixIdentifiers,\r\n    hoistStatic,\r\n    hmr,\r\n    cacheHandlers,\r\n    nodeTransforms,\r\n    directiveTransforms,\r\n    transformHoist,\r\n    isBuiltInComponent,\r\n    isCustomElement,\r\n    expressionPlugins,\r\n    scopeId,\r\n    slotted,\r\n    ssr,\r\n    inSSR,\r\n    ssrCssVars,\r\n    bindingMetadata,\r\n    inline,\r\n    isTS,\r\n    onError,\r\n    onWarn,\r\n    compatConfig,\r\n\r\n    // state\r\n    root,\r\n    helpers: new Map(),\r\n    components: new Set(),\r\n    directives: new Set(),\r\n    hoists: [],\r\n    imports: [],\r\n    constantCache: new WeakMap(),\r\n    temps: 0,\r\n    cached: 0,\r\n    identifiers: Object.create(null),\r\n    scopes: {\r\n      vFor: 0,\r\n      vSlot: 0,\r\n      vPre: 0,\r\n      vOnce: 0,\r\n    },\r\n    parent: null,\r\n    currentNode: root,\r\n    childIndex: 0,\r\n    inVOnce: false,\r\n\r\n    // methods\r\n    helper(name) {\r\n      const count = context.helpers.get(name) || 0\r\n      context.helpers.set(name, count + 1)\r\n      return name\r\n    },\r\n    removeHelper(name) {\r\n      const count = context.helpers.get(name)\r\n      if (count) {\r\n        const currentCount = count - 1\r\n        if (!currentCount) {\r\n          context.helpers.delete(name)\r\n        } else {\r\n          context.helpers.set(name, currentCount)\r\n        }\r\n      }\r\n    },\r\n    helperString(name) {\r\n      return `_${helperNameMap[context.helper(name)]}`\r\n    },\r\n    replaceNode(node) {\r\n      /* istanbul ignore if */\r\n      if (__DEV__) {\r\n        if (!context.currentNode) {\r\n          throw new Error(`Node being replaced is already removed.`)\r\n        }\r\n        if (!context.parent) {\r\n          throw new Error(`Cannot replace root node.`)\r\n        }\r\n      }\r\n      context.parent!.children[context.childIndex] = context.currentNode = node\r\n    },\r\n    removeNode(node) {\r\n      if (__DEV__ && !context.parent) {\r\n        throw new Error(`Cannot remove root node.`)\r\n      }\r\n      const list = context.parent!.children\r\n      const removalIndex = node\r\n        ? list.indexOf(node)\r\n        : context.currentNode\r\n          ? context.childIndex\r\n          : -1\r\n      /* istanbul ignore if */\r\n      if (__DEV__ && removalIndex < 0) {\r\n        throw new Error(`node being removed is not a child of current parent`)\r\n      }\r\n      if (!node || node === context.currentNode) {\r\n        // current node removed\r\n        context.currentNode = null\r\n        context.onNodeRemoved()\r\n      } else {\r\n        // sibling node removed\r\n        if (context.childIndex > removalIndex) {\r\n          context.childIndex--\r\n          context.onNodeRemoved()\r\n        }\r\n      }\r\n      context.parent!.children.splice(removalIndex, 1)\r\n    },\r\n    onNodeRemoved: NOOP,\r\n    addIdentifiers(exp) {\r\n      // identifier tracking only happens in non-browser builds.\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          addId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(addId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          addId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    removeIdentifiers(exp) {\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          removeId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(removeId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          removeId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    hoist(exp) {\r\n      if (isString(exp)) exp = createSimpleExpression(exp)\r\n      context.hoists.push(exp)\r\n      const identifier = createSimpleExpression(\r\n        `_hoisted_${context.hoists.length}`,\r\n        false,\r\n        exp.loc,\r\n        ConstantTypes.CAN_HOIST,\r\n      )\r\n      identifier.hoisted = exp\r\n      return identifier\r\n    },\r\n    cache(exp, isVNode = false) {\r\n      return createCacheExpression(context.cached++, exp, isVNode)\r\n    },\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    context.filters = new Set()\r\n  }\r\n\r\n  function addId(id: string) {\r\n    const { identifiers } = context\r\n    if (identifiers[id] === undefined) {\r\n      identifiers[id] = 0\r\n    }\r\n    identifiers[id]!++\r\n  }\r\n\r\n  function removeId(id: string) {\r\n    context.identifiers[id]!--\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function transform(root: RootNode, options: TransformOptions) {\r\n  const context = createTransformContext(root, options)\r\n  traverseNode(root, context)\r\n  if (options.hoistStatic) {\r\n    hoistStatic(root, context)\r\n  }\r\n  if (!options.ssr) {\r\n    createRootCodegen(root, context)\r\n  }\r\n  // finalize meta information\r\n  root.helpers = new Set([...context.helpers.keys()])\r\n  root.components = [...context.components]\r\n  root.directives = [...context.directives]\r\n  root.imports = context.imports\r\n  root.hoists = context.hoists\r\n  root.temps = context.temps\r\n  root.cached = context.cached\r\n  root.transformed = true\r\n\r\n  if (__COMPAT__) {\r\n    root.filters = [...context.filters!]\r\n  }\r\n}\r\n\r\nfunction createRootCodegen(root: RootNode, context: TransformContext) {\r\n  const { helper } = context\r\n  const { children } = root\r\n  if (children.length === 1) {\r\n    const child = children[0]\r\n    // if the single child is an element, turn it into a block.\r\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n      // single element root is never hoisted so codegenNode will never be\r\n      // SimpleExpressionNode\r\n      const codegenNode = child.codegenNode\r\n      if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        convertToBlock(codegenNode, context)\r\n      }\r\n      root.codegenNode = codegenNode\r\n    } else {\r\n      // - single <slot/>, IfNode, ForNode: already blocks.\r\n      // - single text node: always patched.\r\n      // root codegen falls through via genNode()\r\n      root.codegenNode = child\r\n    }\r\n  } else if (children.length > 1) {\r\n    // root has multiple nodes - return a fragment block.\r\n    let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n    let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n    // check if the fragment actually contains a single valid child with\r\n    // the rest being comments\r\n    if (\r\n      __DEV__ &&\r\n      children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n    ) {\r\n      patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n      patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n    }\r\n    root.codegenNode = createVNodeCall(\r\n      context,\r\n      helper(FRAGMENT),\r\n      undefined,\r\n      root.children,\r\n      patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n      undefined,\r\n      undefined,\r\n      true,\r\n      undefined,\r\n      false /* isComponent */,\r\n    )\r\n  } else {\r\n    // no children = noop. codegen will return null.\r\n  }\r\n}\r\n\r\nexport function traverseChildren(\r\n  parent: ParentNode,\r\n  context: TransformContext,\r\n) {\r\n  let i = 0\r\n  const nodeRemoved = () => {\r\n    i--\r\n  }\r\n  for (; i < parent.children.length; i++) {\r\n    const child = parent.children[i]\r\n    if (isString(child)) continue\r\n    context.parent = parent\r\n    context.childIndex = i\r\n    context.onNodeRemoved = nodeRemoved\r\n    traverseNode(child, context)\r\n  }\r\n}\r\n\r\nexport function traverseNode(\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext,\r\n) {\r\n  context.currentNode = node\r\n  // apply transform plugins\r\n  const { nodeTransforms } = context\r\n  const exitFns = []\r\n  for (let i = 0; i < nodeTransforms.length; i++) {\r\n    const onExit = nodeTransforms[i](node, context)\r\n    if (onExit) {\r\n      if (isArray(onExit)) {\r\n        exitFns.push(...onExit)\r\n      } else {\r\n        exitFns.push(onExit)\r\n      }\r\n    }\r\n    if (!context.currentNode) {\r\n      // node was removed\r\n      return\r\n    } else {\r\n      // node may have been replaced\r\n      node = context.currentNode\r\n    }\r\n  }\r\n\r\n  switch (node.type) {\r\n    case NodeTypes.COMMENT:\r\n      if (!context.ssr) {\r\n        // inject import for the Comment symbol, which is needed for creating\r\n        // comment nodes with `createVNode`\r\n        context.helper(CREATE_COMMENT)\r\n      }\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      // no need to traverse, but we need to inject toString helper\r\n      if (!context.ssr) {\r\n        context.helper(TO_DISPLAY_STRING)\r\n      }\r\n      break\r\n\r\n    // for container types, further traverse downwards\r\n    case NodeTypes.IF:\r\n      for (let i = 0; i < node.branches.length; i++) {\r\n        traverseNode(node.branches[i], context)\r\n      }\r\n      break\r\n    case NodeTypes.IF_BRANCH:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.ROOT:\r\n      traverseChildren(node, context)\r\n      break\r\n  }\r\n\r\n  // exit transforms\r\n  context.currentNode = node\r\n  let i = exitFns.length\r\n  while (i--) {\r\n    exitFns[i]()\r\n  }\r\n}\r\n\r\nexport function createStructuralDirectiveTransform(\r\n  name: string | RegExp,\r\n  fn: StructuralDirectiveTransform,\r\n): NodeTransform {\r\n  const matches = isString(name)\r\n    ? (n: string) => n === name\r\n    : (n: string) => name.test(n)\r\n\r\n  return (node, context) => {\r\n    if (node.type === NodeTypes.ELEMENT) {\r\n      const { props } = node\r\n      // structural directive transforms are not concerned with slots\r\n      // as they are handled separately in vSlot.ts\r\n      if (node.tagType === ElementTypes.TEMPLATE && props.some(isVSlot)) {\r\n        return\r\n      }\r\n      const exitFns = []\r\n      for (let i = 0; i < props.length; i++) {\r\n        const prop = props[i]\r\n        if (prop.type === NodeTypes.DIRECTIVE && matches(prop.name)) {\r\n          // structural directives are removed to avoid infinite recursion\r\n          // also we remove them *before* applying so that it can further\r\n          // traverse itself in case it moves the node around\r\n          props.splice(i, 1)\r\n          i--\r\n          const onExit = fn(node, prop, context)\r\n          if (onExit) exitFns.push(onExit)\r\n        }\r\n      }\r\n      return exitFns\r\n    }\r\n  }\r\n}\r\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\nfunction SortTemplate(comparator) {\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot, false) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n  return doQuickSort;\n}\n\nfunction cloneSort(comparator) {\n  let template = SortTemplate.toString();\n  let templateFn = new Function(`return ${template}`)();\n  return templateFn(comparator);\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\n\nlet sortCache = new WeakMap();\nexports.quickSort = function (ary, comparator, start = 0) {\n  let doQuickSort = sortCache.get(comparator);\n  if (doQuickSort === void 0) {\n    doQuickSort = cloneSort(comparator);\n    sortCache.set(comparator, doQuickSort);\n  }\n  doQuickSort(ary, comparator, start, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    var boundCallback = aCallback.bind(context);\n    var names = this._names;\n    var sources = this._sources;\n    var sourceMapURL = this._sourceMapURL;\n\n    for (var i = 0, n = mappings.length; i < n; i++) {\n      var mapping = mappings[i];\n      var source = mapping.source === null ? null : sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, sourceMapURL);\n      boundCallback({\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : names.at(mapping.name)\n      });\n    }\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\n\nconst compareGenerated = util.compareByGeneratedPositionsDeflatedNoLine;\nfunction sortGenerated(array, start) {\n  let l = array.length;\n  let n = array.length - start;\n  if (n <= 1) {\n    return;\n  } else if (n == 2) {\n    let a = array[start];\n    let b = array[start + 1];\n    if (compareGenerated(a, b) > 0) {\n      array[start] = b;\n      array[start + 1] = a;\n    }\n  } else if (n < 20) {\n    for (let i = start; i < l; i++) {\n      for (let j = i; j > start; j--) {\n        let a = array[j - 1];\n        let b = array[j];\n        if (compareGenerated(a, b) <= 0) {\n          break;\n        }\n        array[j - 1] = b;\n        array[j] = a;\n      }\n    }\n  } else {\n    quickSort(array, compareGenerated, start);\n  }\n}\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    let subarrayStart = 0;\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n\n        sortGenerated(generatedMappings, subarrayStart);\n        subarrayStart = generatedMappings.length;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = [];\n        while (index < end) {\n          base64VLQ.decode(aStr, index, temp);\n          value = temp.value;\n          index = temp.rest;\n          segment.push(value);\n        }\n\n        if (segment.length === 2) {\n          throw new Error('Found a source, but no line and column');\n        }\n\n        if (segment.length === 3) {\n          throw new Error('Found a source and line, but no column');\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          let currentSource = mapping.source;\n          while (originalMappings.length <= currentSource) {\n            originalMappings.push(null);\n          }\n          if (originalMappings[currentSource] === null) {\n            originalMappings[currentSource] = [];\n          }\n          originalMappings[currentSource].push(mapping);\n        }\n      }\n    }\n\n    sortGenerated(generatedMappings, subarrayStart);\n    this.__generatedMappings = generatedMappings;\n\n    for (var i = 0; i < originalMappings.length; i++) {\n      if (originalMappings[i] != null) {\n        quickSort(originalMappings[i], util.compareByOriginalPositionsNoSource);\n      }\n    }\n    this.__originalMappings = [].concat(...originalMappings);\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","import type { CodegenOptions } from './options'\r\nimport {\r\n  type ArrayExpression,\r\n  type AssignmentExpression,\r\n  type CacheExpression,\r\n  type CallExpression,\r\n  type CommentNode,\r\n  type CompoundExpressionNode,\r\n  type ConditionalExpression,\r\n  type ExpressionNode,\r\n  type FunctionExpression,\r\n  type IfStatement,\r\n  type InterpolationNode,\r\n  type JSChildNode,\r\n  NodeTypes,\r\n  type ObjectExpression,\r\n  type Position,\r\n  type ReturnStatement,\r\n  type RootNode,\r\n  type SSRCodegenNode,\r\n  type SequenceExpression,\r\n  type SimpleExpressionNode,\r\n  type TemplateChildNode,\r\n  type TemplateLiteral,\r\n  type TextNode,\r\n  type VNodeCall,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n  locStub,\r\n} from './ast'\r\nimport { type RawSourceMap, SourceMapGenerator } from 'source-map-js'\r\nimport {\r\n  advancePositionWithMutation,\r\n  assert,\r\n  isSimpleIdentifier,\r\n  toValidAssetId,\r\n} from './utils'\r\nimport { isArray, isString, isSymbol } from '@vue/shared'\r\nimport {\r\n  CREATE_COMMENT,\r\n  CREATE_ELEMENT_VNODE,\r\n  CREATE_STATIC,\r\n  CREATE_TEXT,\r\n  CREATE_VNODE,\r\n  OPEN_BLOCK,\r\n  POP_SCOPE_ID,\r\n  PUSH_SCOPE_ID,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DIRECTIVE,\r\n  RESOLVE_FILTER,\r\n  SET_BLOCK_TRACKING,\r\n  TO_DISPLAY_STRING,\r\n  WITH_CTX,\r\n  WITH_DIRECTIVES,\r\n  helperNameMap,\r\n} from './runtimeHelpers'\r\nimport type { ImportItem } from './transform'\r\n\r\nconst PURE_ANNOTATION = `/*#__PURE__*/`\r\n\r\nconst aliasHelper = (s: symbol) => `${helperNameMap[s]}: _${helperNameMap[s]}`\r\n\r\ntype CodegenNode = TemplateChildNode | JSChildNode | SSRCodegenNode\r\n\r\nexport interface CodegenResult {\r\n  code: string\r\n  preamble: string\r\n  ast: RootNode\r\n  map?: RawSourceMap\r\n}\r\n\r\nenum NewlineType {\r\n  Start = 0,\r\n  End = -1,\r\n  None = -2,\r\n  Unknown = -3,\r\n}\r\n\r\nexport interface CodegenContext\r\n  extends Omit<Required<CodegenOptions>, 'bindingMetadata' | 'inline'> {\r\n  source: string\r\n  code: string\r\n  line: number\r\n  column: number\r\n  offset: number\r\n  indentLevel: number\r\n  pure: boolean\r\n  map?: SourceMapGenerator\r\n  helper(key: symbol): string\r\n  push(code: string, newlineIndex?: number, node?: CodegenNode): void\r\n  indent(): void\r\n  deindent(withoutNewLine?: boolean): void\r\n  newline(): void\r\n}\r\n\r\nfunction createCodegenContext(\r\n  ast: RootNode,\r\n  {\r\n    mode = 'function',\r\n    prefixIdentifiers = mode === 'module',\r\n    sourceMap = false,\r\n    filename = `template.vue.html`,\r\n    scopeId = null,\r\n    optimizeImports = false,\r\n    runtimeGlobalName = `Vue`,\r\n    runtimeModuleName = `vue`,\r\n    ssrRuntimeModuleName = 'vue/server-renderer',\r\n    ssr = false,\r\n    isTS = false,\r\n    inSSR = false,\r\n  }: CodegenOptions,\r\n): CodegenContext {\r\n  const context: CodegenContext = {\r\n    mode,\r\n    prefixIdentifiers,\r\n    sourceMap,\r\n    filename,\r\n    scopeId,\r\n    optimizeImports,\r\n    runtimeGlobalName,\r\n    runtimeModuleName,\r\n    ssrRuntimeModuleName,\r\n    ssr,\r\n    isTS,\r\n    inSSR,\r\n    source: ast.source,\r\n    code: ``,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    indentLevel: 0,\r\n    pure: false,\r\n    map: undefined,\r\n    helper(key) {\r\n      return `_${helperNameMap[key]}`\r\n    },\r\n    push(code, newlineIndex = NewlineType.None, node) {\r\n      context.code += code\r\n      if (!__BROWSER__ && context.map) {\r\n        if (node) {\r\n          let name\r\n          if (node.type === NodeTypes.SIMPLE_EXPRESSION && !node.isStatic) {\r\n            const content = node.content.replace(/^_ctx\\./, '')\r\n            if (content !== node.content && isSimpleIdentifier(content)) {\r\n              name = content\r\n            }\r\n          }\r\n          addMapping(node.loc.start, name)\r\n        }\r\n        if (newlineIndex === NewlineType.Unknown) {\r\n          // multiple newlines, full iteration\r\n          advancePositionWithMutation(context, code)\r\n        } else {\r\n          // fast paths\r\n          context.offset += code.length\r\n          if (newlineIndex === NewlineType.None) {\r\n            // no newlines; fast path to avoid newline detection\r\n            if (__TEST__ && code.includes('\\n')) {\r\n              throw new Error(\r\n                `CodegenContext.push() called newlineIndex: none, but contains` +\r\n                  `newlines: ${code.replace(/\\n/g, '\\\\n')}`,\r\n              )\r\n            }\r\n            context.column += code.length\r\n          } else {\r\n            // single newline at known index\r\n            if (newlineIndex === NewlineType.End) {\r\n              newlineIndex = code.length - 1\r\n            }\r\n            if (\r\n              __TEST__ &&\r\n              (code.charAt(newlineIndex) !== '\\n' ||\r\n                code.slice(0, newlineIndex).includes('\\n') ||\r\n                code.slice(newlineIndex + 1).includes('\\n'))\r\n            ) {\r\n              throw new Error(\r\n                `CodegenContext.push() called with newlineIndex: ${newlineIndex} ` +\r\n                  `but does not conform: ${code.replace(/\\n/g, '\\\\n')}`,\r\n              )\r\n            }\r\n            context.line++\r\n            context.column = code.length - newlineIndex\r\n          }\r\n        }\r\n        if (node && node.loc !== locStub) {\r\n          addMapping(node.loc.end)\r\n        }\r\n      }\r\n    },\r\n    indent() {\r\n      newline(++context.indentLevel)\r\n    },\r\n    deindent(withoutNewLine = false) {\r\n      if (withoutNewLine) {\r\n        --context.indentLevel\r\n      } else {\r\n        newline(--context.indentLevel)\r\n      }\r\n    },\r\n    newline() {\r\n      newline(context.indentLevel)\r\n    },\r\n  }\r\n\r\n  function newline(n: number) {\r\n    context.push('\\n' + `  `.repeat(n), NewlineType.Start)\r\n  }\r\n\r\n  function addMapping(loc: Position, name: string | null = null) {\r\n    // we use the private property to directly add the mapping\r\n    // because the addMapping() implementation in source-map-js has a bunch of\r\n    // unnecessary arg and validation checks that are pure overhead in our case.\r\n    const { _names, _mappings } = context.map!\r\n    if (name !== null && !_names.has(name)) _names.add(name)\r\n    _mappings.add({\r\n      originalLine: loc.line,\r\n      originalColumn: loc.column - 1, // source-map column is 0 based\r\n      generatedLine: context.line,\r\n      generatedColumn: context.column - 1,\r\n      source: filename,\r\n      // @ts-expect-error it is possible to be null\r\n      name,\r\n    })\r\n  }\r\n\r\n  if (!__BROWSER__ && sourceMap) {\r\n    // lazy require source-map implementation, only in non-browser builds\r\n    context.map = new SourceMapGenerator()\r\n    context.map.setSourceContent(filename, context.source)\r\n    context.map._sources.add(filename)\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function generate(\r\n  ast: RootNode,\r\n  options: CodegenOptions & {\r\n    onContextCreated?: (context: CodegenContext) => void\r\n  } = {},\r\n): CodegenResult {\r\n  const context = createCodegenContext(ast, options)\r\n  if (options.onContextCreated) options.onContextCreated(context)\r\n  const {\r\n    mode,\r\n    push,\r\n    prefixIdentifiers,\r\n    indent,\r\n    deindent,\r\n    newline,\r\n    scopeId,\r\n    ssr,\r\n  } = context\r\n\r\n  const helpers = Array.from(ast.helpers)\r\n  const hasHelpers = helpers.length > 0\r\n  const useWithBlock = !prefixIdentifiers && mode !== 'module'\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode === 'module'\r\n  const isSetupInlined = !__BROWSER__ && !!options.inline\r\n\r\n  // preambles\r\n  // in setup() inline mode, the preamble is generated in a sub context\r\n  // and returned separately.\r\n  const preambleContext = isSetupInlined\r\n    ? createCodegenContext(ast, options)\r\n    : context\r\n  if (!__BROWSER__ && mode === 'module') {\r\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined)\r\n  } else {\r\n    genFunctionPreamble(ast, preambleContext)\r\n  }\r\n  // enter render function\r\n  const functionName = ssr ? `ssrRender` : `render`\r\n  const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache']\r\n  if (!__BROWSER__ && options.bindingMetadata && !options.inline) {\r\n    // binding optimization args\r\n    args.push('$props', '$setup', '$data', '$options')\r\n  }\r\n  const signature =\r\n    !__BROWSER__ && options.isTS\r\n      ? args.map(arg => `${arg}: any`).join(',')\r\n      : args.join(', ')\r\n\r\n  if (isSetupInlined) {\r\n    push(`(${signature}) => {`)\r\n  } else {\r\n    push(`function ${functionName}(${signature}) {`)\r\n  }\r\n  indent()\r\n\r\n  if (useWithBlock) {\r\n    push(`with (_ctx) {`)\r\n    indent()\r\n    // function mode const declarations should be inside with block\r\n    // also they should be renamed to avoid collision with user properties\r\n    if (hasHelpers) {\r\n      push(\r\n        `const { ${helpers.map(aliasHelper).join(', ')} } = _Vue\\n`,\r\n        NewlineType.End,\r\n      )\r\n      newline()\r\n    }\r\n  }\r\n\r\n  // generate asset resolution statements\r\n  if (ast.components.length) {\r\n    genAssets(ast.components, 'component', context)\r\n    if (ast.directives.length || ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (ast.directives.length) {\r\n    genAssets(ast.directives, 'directive', context)\r\n    if (ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (__COMPAT__ && ast.filters && ast.filters.length) {\r\n    newline()\r\n    genAssets(ast.filters, 'filter', context)\r\n    newline()\r\n  }\r\n\r\n  if (ast.temps > 0) {\r\n    push(`let `)\r\n    for (let i = 0; i < ast.temps; i++) {\r\n      push(`${i > 0 ? `, ` : ``}_temp${i}`)\r\n    }\r\n  }\r\n  if (ast.components.length || ast.directives.length || ast.temps) {\r\n    push(`\\n`, NewlineType.Start)\r\n    newline()\r\n  }\r\n\r\n  // generate the VNode tree expression\r\n  if (!ssr) {\r\n    push(`return `)\r\n  }\r\n  if (ast.codegenNode) {\r\n    genNode(ast.codegenNode, context)\r\n  } else {\r\n    push(`null`)\r\n  }\r\n\r\n  if (useWithBlock) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n\r\n  deindent()\r\n  push(`}`)\r\n\r\n  return {\r\n    ast,\r\n    code: context.code,\r\n    preamble: isSetupInlined ? preambleContext.code : ``,\r\n    map: context.map ? context.map.toJSON() : undefined,\r\n  }\r\n}\r\n\r\nfunction genFunctionPreamble(ast: RootNode, context: CodegenContext) {\r\n  const {\r\n    ssr,\r\n    prefixIdentifiers,\r\n    push,\r\n    newline,\r\n    runtimeModuleName,\r\n    runtimeGlobalName,\r\n    ssrRuntimeModuleName,\r\n  } = context\r\n  const VueBinding =\r\n    !__BROWSER__ && ssr\r\n      ? `require(${JSON.stringify(runtimeModuleName)})`\r\n      : runtimeGlobalName\r\n  // Generate const declaration for helpers\r\n  // In prefix mode, we place the const declaration at top so it's done\r\n  // only once; But if we not prefixing, we place the declaration inside the\r\n  // with block so it doesn't incur the `in` check cost for every helper access.\r\n  const helpers = Array.from(ast.helpers)\r\n  if (helpers.length > 0) {\r\n    if (!__BROWSER__ && prefixIdentifiers) {\r\n      push(\r\n        `const { ${helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`,\r\n        NewlineType.End,\r\n      )\r\n    } else {\r\n      // \"with\" mode.\r\n      // save Vue in a separate variable to avoid collision\r\n      push(`const _Vue = ${VueBinding}\\n`, NewlineType.End)\r\n      // in \"with\" mode, helpers are declared inside the with block to avoid\r\n      // has check cost, but hoists are lifted out of the function - we need\r\n      // to provide the helper here.\r\n      if (ast.hoists.length) {\r\n        const staticHelpers = [\r\n          CREATE_VNODE,\r\n          CREATE_ELEMENT_VNODE,\r\n          CREATE_COMMENT,\r\n          CREATE_TEXT,\r\n          CREATE_STATIC,\r\n        ]\r\n          .filter(helper => helpers.includes(helper))\r\n          .map(aliasHelper)\r\n          .join(', ')\r\n        push(`const { ${staticHelpers} } = _Vue\\n`, NewlineType.End)\r\n      }\r\n    }\r\n  }\r\n  // generate variables for ssr helpers\r\n  if (!__BROWSER__ && ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    // ssr guarantees prefixIdentifier: true\r\n    push(\r\n      `const { ${ast.ssrHelpers\r\n        .map(aliasHelper)\r\n        .join(', ')} } = require(\"${ssrRuntimeModuleName}\")\\n`,\r\n      NewlineType.End,\r\n    )\r\n  }\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n  push(`return `)\r\n}\r\n\r\nfunction genModulePreamble(\r\n  ast: RootNode,\r\n  context: CodegenContext,\r\n  genScopeId: boolean,\r\n  inline?: boolean,\r\n) {\r\n  const {\r\n    push,\r\n    newline,\r\n    optimizeImports,\r\n    runtimeModuleName,\r\n    ssrRuntimeModuleName,\r\n  } = context\r\n\r\n  if (genScopeId && ast.hoists.length) {\r\n    ast.helpers.add(PUSH_SCOPE_ID)\r\n    ast.helpers.add(POP_SCOPE_ID)\r\n  }\r\n\r\n  // generate import statements for helpers\r\n  if (ast.helpers.size) {\r\n    const helpers = Array.from(ast.helpers)\r\n    if (optimizeImports) {\r\n      // when bundled with webpack with code-split, calling an import binding\r\n      // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\r\n      // incurring both payload size increase and potential perf overhead.\r\n      // therefore we assign the imports to variables (which is a constant ~50b\r\n      // cost per-component instead of scaling with template size)\r\n      push(\r\n        `import { ${helpers\r\n          .map(s => helperNameMap[s])\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`,\r\n        NewlineType.End,\r\n      )\r\n      push(\r\n        `\\n// Binding optimization for webpack code-split\\nconst ${helpers\r\n          .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\r\n          .join(', ')}\\n`,\r\n        NewlineType.End,\r\n      )\r\n    } else {\r\n      push(\r\n        `import { ${helpers\r\n          .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`,\r\n        NewlineType.End,\r\n      )\r\n    }\r\n  }\r\n\r\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    push(\r\n      `import { ${ast.ssrHelpers\r\n        .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n        .join(', ')} } from \"${ssrRuntimeModuleName}\"\\n`,\r\n      NewlineType.End,\r\n    )\r\n  }\r\n\r\n  if (ast.imports.length) {\r\n    genImports(ast.imports, context)\r\n    newline()\r\n  }\r\n\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n\r\n  if (!inline) {\r\n    push(`export `)\r\n  }\r\n}\r\n\r\nfunction genAssets(\r\n  assets: string[],\r\n  type: 'component' | 'directive' | 'filter',\r\n  { helper, push, newline, isTS }: CodegenContext,\r\n) {\r\n  const resolver = helper(\r\n    __COMPAT__ && type === 'filter'\r\n      ? RESOLVE_FILTER\r\n      : type === 'component'\r\n        ? RESOLVE_COMPONENT\r\n        : RESOLVE_DIRECTIVE,\r\n  )\r\n  for (let i = 0; i < assets.length; i++) {\r\n    let id = assets[i]\r\n    // potential component implicit self-reference inferred from SFC filename\r\n    const maybeSelfReference = id.endsWith('__self')\r\n    if (maybeSelfReference) {\r\n      id = id.slice(0, -6)\r\n    }\r\n    push(\r\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${\r\n        maybeSelfReference ? `, true` : ``\r\n      })${isTS ? `!` : ``}`,\r\n    )\r\n    if (i < assets.length - 1) {\r\n      newline()\r\n    }\r\n  }\r\n}\r\n\r\nfunction genHoists(hoists: (JSChildNode | null)[], context: CodegenContext) {\r\n  if (!hoists.length) {\r\n    return\r\n  }\r\n  context.pure = true\r\n  const { push, newline, helper, scopeId, mode } = context\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode !== 'function'\r\n  newline()\r\n\r\n  // generate inlined withScopeId helper\r\n  if (genScopeId) {\r\n    push(\r\n      `const _withScopeId = n => (${helper(\r\n        PUSH_SCOPE_ID,\r\n      )}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`,\r\n    )\r\n    newline()\r\n  }\r\n\r\n  for (let i = 0; i < hoists.length; i++) {\r\n    const exp = hoists[i]\r\n    if (exp) {\r\n      const needScopeIdWrapper = genScopeId && exp.type === NodeTypes.VNODE_CALL\r\n      push(\r\n        `const _hoisted_${i + 1} = ${\r\n          needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``\r\n        }`,\r\n      )\r\n      genNode(exp, context)\r\n      if (needScopeIdWrapper) {\r\n        push(`)`)\r\n      }\r\n      newline()\r\n    }\r\n  }\r\n\r\n  context.pure = false\r\n}\r\n\r\nfunction genImports(importsOptions: ImportItem[], context: CodegenContext) {\r\n  if (!importsOptions.length) {\r\n    return\r\n  }\r\n  importsOptions.forEach(imports => {\r\n    context.push(`import `)\r\n    genNode(imports.exp, context)\r\n    context.push(` from '${imports.path}'`)\r\n    context.newline()\r\n  })\r\n}\r\n\r\nfunction isText(n: string | CodegenNode) {\r\n  return (\r\n    isString(n) ||\r\n    n.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n    n.type === NodeTypes.TEXT ||\r\n    n.type === NodeTypes.INTERPOLATION ||\r\n    n.type === NodeTypes.COMPOUND_EXPRESSION\r\n  )\r\n}\r\n\r\nfunction genNodeListAsArray(\r\n  nodes: (string | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext,\r\n) {\r\n  const multilines =\r\n    nodes.length > 3 ||\r\n    ((!__BROWSER__ || __DEV__) && nodes.some(n => isArray(n) || !isText(n)))\r\n  context.push(`[`)\r\n  multilines && context.indent()\r\n  genNodeList(nodes, context, multilines)\r\n  multilines && context.deindent()\r\n  context.push(`]`)\r\n}\r\n\r\nfunction genNodeList(\r\n  nodes: (string | symbol | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext,\r\n  multilines: boolean = false,\r\n  comma: boolean = true,\r\n) {\r\n  const { push, newline } = context\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    const node = nodes[i]\r\n    if (isString(node)) {\r\n      push(node, NewlineType.Unknown)\r\n    } else if (isArray(node)) {\r\n      genNodeListAsArray(node, context)\r\n    } else {\r\n      genNode(node, context)\r\n    }\r\n    if (i < nodes.length - 1) {\r\n      if (multilines) {\r\n        comma && push(',')\r\n        newline()\r\n      } else {\r\n        comma && push(', ')\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction genNode(node: CodegenNode | symbol | string, context: CodegenContext) {\r\n  if (isString(node)) {\r\n    context.push(node, NewlineType.Unknown)\r\n    return\r\n  }\r\n  if (isSymbol(node)) {\r\n    context.push(context.helper(node))\r\n    return\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n      __DEV__ &&\r\n        assert(\r\n          node.codegenNode != null,\r\n          `Codegen node is missing for element/if/for node. ` +\r\n            `Apply appropriate transforms first.`,\r\n        )\r\n      genNode(node.codegenNode!, context)\r\n      break\r\n    case NodeTypes.TEXT:\r\n      genText(node, context)\r\n      break\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      genExpression(node, context)\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      genInterpolation(node, context)\r\n      break\r\n    case NodeTypes.TEXT_CALL:\r\n      genNode(node.codegenNode, context)\r\n      break\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      genCompoundExpression(node, context)\r\n      break\r\n    case NodeTypes.COMMENT:\r\n      genComment(node, context)\r\n      break\r\n    case NodeTypes.VNODE_CALL:\r\n      genVNodeCall(node, context)\r\n      break\r\n\r\n    case NodeTypes.JS_CALL_EXPRESSION:\r\n      genCallExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_OBJECT_EXPRESSION:\r\n      genObjectExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_ARRAY_EXPRESSION:\r\n      genArrayExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_FUNCTION_EXPRESSION:\r\n      genFunctionExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CONDITIONAL_EXPRESSION:\r\n      genConditionalExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CACHE_EXPRESSION:\r\n      genCacheExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_BLOCK_STATEMENT:\r\n      genNodeList(node.body, context, true, false)\r\n      break\r\n\r\n    // SSR only types\r\n    case NodeTypes.JS_TEMPLATE_LITERAL:\r\n      !__BROWSER__ && genTemplateLiteral(node, context)\r\n      break\r\n    case NodeTypes.JS_IF_STATEMENT:\r\n      !__BROWSER__ && genIfStatement(node, context)\r\n      break\r\n    case NodeTypes.JS_ASSIGNMENT_EXPRESSION:\r\n      !__BROWSER__ && genAssignmentExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_SEQUENCE_EXPRESSION:\r\n      !__BROWSER__ && genSequenceExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_RETURN_STATEMENT:\r\n      !__BROWSER__ && genReturnStatement(node, context)\r\n      break\r\n\r\n    /* istanbul ignore next */\r\n    case NodeTypes.IF_BRANCH:\r\n      // noop\r\n      break\r\n    default:\r\n      if (__DEV__) {\r\n        assert(false, `unhandled codegen node type: ${(node as any).type}`)\r\n        // make sure we exhaust all possible types\r\n        const exhaustiveCheck: never = node\r\n        return exhaustiveCheck\r\n      }\r\n  }\r\n}\r\n\r\nfunction genText(\r\n  node: TextNode | SimpleExpressionNode,\r\n  context: CodegenContext,\r\n) {\r\n  context.push(JSON.stringify(node.content), NewlineType.Unknown, node)\r\n}\r\n\r\nfunction genExpression(node: SimpleExpressionNode, context: CodegenContext) {\r\n  const { content, isStatic } = node\r\n  context.push(\r\n    isStatic ? JSON.stringify(content) : content,\r\n    NewlineType.Unknown,\r\n    node,\r\n  )\r\n}\r\n\r\nfunction genInterpolation(node: InterpolationNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) push(PURE_ANNOTATION)\r\n  push(`${helper(TO_DISPLAY_STRING)}(`)\r\n  genNode(node.content, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genCompoundExpression(\r\n  node: CompoundExpressionNode,\r\n  context: CodegenContext,\r\n) {\r\n  for (let i = 0; i < node.children!.length; i++) {\r\n    const child = node.children![i]\r\n    if (isString(child)) {\r\n      context.push(child, NewlineType.Unknown)\r\n    } else {\r\n      genNode(child, context)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genExpressionAsPropertyKey(\r\n  node: ExpressionNode,\r\n  context: CodegenContext,\r\n) {\r\n  const { push } = context\r\n  if (node.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n    push(`[`)\r\n    genCompoundExpression(node, context)\r\n    push(`]`)\r\n  } else if (node.isStatic) {\r\n    // only quote keys if necessary\r\n    const text = isSimpleIdentifier(node.content)\r\n      ? node.content\r\n      : JSON.stringify(node.content)\r\n    push(text, NewlineType.None, node)\r\n  } else {\r\n    push(`[${node.content}]`, NewlineType.Unknown, node)\r\n  }\r\n}\r\n\r\nfunction genComment(node: CommentNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(\r\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\r\n    NewlineType.Unknown,\r\n    node,\r\n  )\r\n}\r\n\r\nfunction genVNodeCall(node: VNodeCall, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const {\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent,\r\n  } = node\r\n  if (directives) {\r\n    push(helper(WITH_DIRECTIVES) + `(`)\r\n  }\r\n  if (isBlock) {\r\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `)\r\n  }\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  const callHelper: symbol = isBlock\r\n    ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n    : getVNodeHelper(context.inSSR, isComponent)\r\n  push(helper(callHelper) + `(`, NewlineType.None, node)\r\n  genNodeList(\r\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\r\n    context,\r\n  )\r\n  push(`)`)\r\n  if (isBlock) {\r\n    push(`)`)\r\n  }\r\n  if (directives) {\r\n    push(`, `)\r\n    genNode(directives, context)\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genNullableArgs(args: any[]): CallExpression['arguments'] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i] != null) break\r\n  }\r\n  return args.slice(0, i + 1).map(arg => arg || `null`)\r\n}\r\n\r\n// JavaScript\r\nfunction genCallExpression(node: CallExpression, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const callee = isString(node.callee) ? node.callee : helper(node.callee)\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(callee + `(`, NewlineType.None, node)\r\n  genNodeList(node.arguments, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genObjectExpression(node: ObjectExpression, context: CodegenContext) {\r\n  const { push, indent, deindent, newline } = context\r\n  const { properties } = node\r\n  if (!properties.length) {\r\n    push(`{}`, NewlineType.None, node)\r\n    return\r\n  }\r\n  const multilines =\r\n    properties.length > 1 ||\r\n    ((!__BROWSER__ || __DEV__) &&\r\n      properties.some(p => p.value.type !== NodeTypes.SIMPLE_EXPRESSION))\r\n  push(multilines ? `{` : `{ `)\r\n  multilines && indent()\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const { key, value } = properties[i]\r\n    // key\r\n    genExpressionAsPropertyKey(key, context)\r\n    push(`: `)\r\n    // value\r\n    genNode(value, context)\r\n    if (i < properties.length - 1) {\r\n      // will only reach this if it's multilines\r\n      push(`,`)\r\n      newline()\r\n    }\r\n  }\r\n  multilines && deindent()\r\n  push(multilines ? `}` : ` }`)\r\n}\r\n\r\nfunction genArrayExpression(node: ArrayExpression, context: CodegenContext) {\r\n  genNodeListAsArray(node.elements as CodegenNode[], context)\r\n}\r\n\r\nfunction genFunctionExpression(\r\n  node: FunctionExpression,\r\n  context: CodegenContext,\r\n) {\r\n  const { push, indent, deindent } = context\r\n  const { params, returns, body, newline, isSlot } = node\r\n  if (isSlot) {\r\n    // wrap slot functions with owner context\r\n    push(`_${helperNameMap[WITH_CTX]}(`)\r\n  }\r\n  push(`(`, NewlineType.None, node)\r\n  if (isArray(params)) {\r\n    genNodeList(params, context)\r\n  } else if (params) {\r\n    genNode(params, context)\r\n  }\r\n  push(`) => `)\r\n  if (newline || body) {\r\n    push(`{`)\r\n    indent()\r\n  }\r\n  if (returns) {\r\n    if (newline) {\r\n      push(`return `)\r\n    }\r\n    if (isArray(returns)) {\r\n      genNodeListAsArray(returns, context)\r\n    } else {\r\n      genNode(returns, context)\r\n    }\r\n  } else if (body) {\r\n    genNode(body, context)\r\n  }\r\n  if (newline || body) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n  if (isSlot) {\r\n    if (__COMPAT__ && node.isNonScopedSlot) {\r\n      push(`, undefined, true`)\r\n    }\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genConditionalExpression(\r\n  node: ConditionalExpression,\r\n  context: CodegenContext,\r\n) {\r\n  const { test, consequent, alternate, newline: needNewline } = node\r\n  const { push, indent, deindent, newline } = context\r\n  if (test.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    const needsParens = !isSimpleIdentifier(test.content)\r\n    needsParens && push(`(`)\r\n    genExpression(test, context)\r\n    needsParens && push(`)`)\r\n  } else {\r\n    push(`(`)\r\n    genNode(test, context)\r\n    push(`)`)\r\n  }\r\n  needNewline && indent()\r\n  context.indentLevel++\r\n  needNewline || push(` `)\r\n  push(`? `)\r\n  genNode(consequent, context)\r\n  context.indentLevel--\r\n  needNewline && newline()\r\n  needNewline || push(` `)\r\n  push(`: `)\r\n  const isNested = alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  if (!isNested) {\r\n    context.indentLevel++\r\n  }\r\n  genNode(alternate, context)\r\n  if (!isNested) {\r\n    context.indentLevel--\r\n  }\r\n  needNewline && deindent(true /* without newline */)\r\n}\r\n\r\nfunction genCacheExpression(node: CacheExpression, context: CodegenContext) {\r\n  const { push, helper, indent, deindent, newline } = context\r\n  push(`_cache[${node.index}] || (`)\r\n  if (node.isVNode) {\r\n    indent()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`)\r\n    newline()\r\n  }\r\n  push(`_cache[${node.index}] = `)\r\n  genNode(node.value, context)\r\n  if (node.isVNode) {\r\n    push(`,`)\r\n    newline()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`)\r\n    newline()\r\n    push(`_cache[${node.index}]`)\r\n    deindent()\r\n  }\r\n  push(`)`)\r\n}\r\n\r\nfunction genTemplateLiteral(node: TemplateLiteral, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  push('`')\r\n  const l = node.elements.length\r\n  const multilines = l > 3\r\n  for (let i = 0; i < l; i++) {\r\n    const e = node.elements[i]\r\n    if (isString(e)) {\r\n      push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'), NewlineType.Unknown)\r\n    } else {\r\n      push('${')\r\n      if (multilines) indent()\r\n      genNode(e, context)\r\n      if (multilines) deindent()\r\n      push('}')\r\n    }\r\n  }\r\n  push('`')\r\n}\r\n\r\nfunction genIfStatement(node: IfStatement, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  const { test, consequent, alternate } = node\r\n  push(`if (`)\r\n  genNode(test, context)\r\n  push(`) {`)\r\n  indent()\r\n  genNode(consequent, context)\r\n  deindent()\r\n  push(`}`)\r\n  if (alternate) {\r\n    push(` else `)\r\n    if (alternate.type === NodeTypes.JS_IF_STATEMENT) {\r\n      genIfStatement(alternate, context)\r\n    } else {\r\n      push(`{`)\r\n      indent()\r\n      genNode(alternate, context)\r\n      deindent()\r\n      push(`}`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genAssignmentExpression(\r\n  node: AssignmentExpression,\r\n  context: CodegenContext,\r\n) {\r\n  genNode(node.left, context)\r\n  context.push(` = `)\r\n  genNode(node.right, context)\r\n}\r\n\r\nfunction genSequenceExpression(\r\n  node: SequenceExpression,\r\n  context: CodegenContext,\r\n) {\r\n  context.push(`(`)\r\n  genNodeList(node.expressions, context)\r\n  context.push(`)`)\r\n}\r\n\r\nfunction genReturnStatement(\r\n  { returns }: ReturnStatement,\r\n  context: CodegenContext,\r\n) {\r\n  context.push(`return `)\r\n  if (isArray(returns)) {\r\n    genNodeListAsArray(returns, context)\r\n  } else {\r\n    genNode(returns, context)\r\n  }\r\n}\r\n","// - Parse expressions in templates into compound expressions so that each\r\n//   identifier gets more accurate source-map locations.\r\n//\r\n// - Prefix identifiers with `_ctx.` or `$xxx` (for known binding types) so that\r\n//   they are accessed from the right source\r\n//\r\n// - This transform is only applied in non-browser builds because it relies on\r\n//   an additional JavaScript parser. In the browser, there is no source-map\r\n//   support and the code is wrapped in `with (this) { ... }`.\r\nimport type { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  type CompoundExpressionNode,\r\n  ConstantTypes,\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  createCompoundExpression,\r\n  createSimpleExpression,\r\n} from '../ast'\r\nimport {\r\n  isInDestructureAssignment,\r\n  isInNewExpression,\r\n  isStaticProperty,\r\n  isStaticPropertyKey,\r\n  walkIdentifiers,\r\n} from '../babelUtils'\r\nimport { advancePositionWithClone, isSimpleIdentifier } from '../utils'\r\nimport {\r\n  genPropsAccessExp,\r\n  hasOwn,\r\n  isGloballyAllowed,\r\n  isString,\r\n  makeMap,\r\n} from '@vue/shared'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport type {\r\n  AssignmentExpression,\r\n  Identifier,\r\n  Node,\r\n  UpdateExpression,\r\n} from '@babel/types'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { parse } from '@babel/parser'\r\nimport { IS_REF, UNREF } from '../runtimeHelpers'\r\nimport { BindingTypes } from '../options'\r\n\r\nconst isLiteralWhitelisted = /*#__PURE__*/ makeMap('true,false,null,this')\r\n\r\n// a heuristic safeguard to bail constant expressions on presence of\r\n// likely function invocation and member access\r\nconst constantBailRE = /\\w\\s*\\(|\\.[^\\d]/\r\n\r\nexport const transformExpression: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.INTERPOLATION) {\r\n    node.content = processExpression(\r\n      node.content as SimpleExpressionNode,\r\n      context,\r\n    )\r\n  } else if (node.type === NodeTypes.ELEMENT) {\r\n    // handle directives on element\r\n    for (let i = 0; i < node.props.length; i++) {\r\n      const dir = node.props[i]\r\n      // do not process for v-on & v-for since they are special handled\r\n      if (dir.type === NodeTypes.DIRECTIVE && dir.name !== 'for') {\r\n        const exp = dir.exp\r\n        const arg = dir.arg\r\n        // do not process exp if this is v-on:arg - we need special handling\r\n        // for wrapping inline statements.\r\n        if (\r\n          exp &&\r\n          exp.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n          !(dir.name === 'on' && arg)\r\n        ) {\r\n          dir.exp = processExpression(\r\n            exp,\r\n            context,\r\n            // slot args must be processed as function params\r\n            dir.name === 'slot',\r\n          )\r\n        }\r\n        if (arg && arg.type === NodeTypes.SIMPLE_EXPRESSION && !arg.isStatic) {\r\n          dir.arg = processExpression(arg, context)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ninterface PrefixMeta {\r\n  prefix?: string\r\n  isConstant: boolean\r\n  start: number\r\n  end: number\r\n  scopeIds?: Set<string>\r\n}\r\n\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !__BROWSER__ check so that it can be\r\n// tree-shaken from the browser build.\r\nexport function processExpression(\r\n  node: SimpleExpressionNode,\r\n  context: TransformContext,\r\n  // some expressions like v-slot props & v-for aliases should be parsed as\r\n  // function params\r\n  asParams = false,\r\n  // v-on handler values may contain multiple statements\r\n  asRawStatements = false,\r\n  localVars: Record<string, number> = Object.create(context.identifiers),\r\n): ExpressionNode {\r\n  if (__BROWSER__) {\r\n    if (__DEV__) {\r\n      // simple in-browser validation (same logic in 2.x)\r\n      validateBrowserExpression(node, context, asParams, asRawStatements)\r\n    }\r\n    return node\r\n  }\r\n\r\n  if (!context.prefixIdentifiers || !node.content.trim()) {\r\n    return node\r\n  }\r\n\r\n  const { inline, bindingMetadata } = context\r\n  const rewriteIdentifier = (raw: string, parent?: Node, id?: Identifier) => {\r\n    const type = hasOwn(bindingMetadata, raw) && bindingMetadata[raw]\r\n    if (inline) {\r\n      // x = y\r\n      const isAssignmentLVal =\r\n        parent && parent.type === 'AssignmentExpression' && parent.left === id\r\n      // x++\r\n      const isUpdateArg =\r\n        parent && parent.type === 'UpdateExpression' && parent.argument === id\r\n      // ({ x } = y)\r\n      const isDestructureAssignment =\r\n        parent && isInDestructureAssignment(parent, parentStack)\r\n      const isNewExpression = parent && isInNewExpression(parentStack)\r\n      const wrapWithUnref = (raw: string) => {\r\n        const wrapped = `${context.helperString(UNREF)}(${raw})`\r\n        return isNewExpression ? `(${wrapped})` : wrapped\r\n      }\r\n\r\n      if (\r\n        isConst(type) ||\r\n        type === BindingTypes.SETUP_REACTIVE_CONST ||\r\n        localVars[raw]\r\n      ) {\r\n        return raw\r\n      } else if (type === BindingTypes.SETUP_REF) {\r\n        return `${raw}.value`\r\n      } else if (type === BindingTypes.SETUP_MAYBE_REF) {\r\n        // const binding that may or may not be ref\r\n        // if it's not a ref, then assignments don't make sense -\r\n        // so we ignore the non-ref assignment case and generate code\r\n        // that assumes the value to be a ref for more efficiency\r\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment\r\n          ? `${raw}.value`\r\n          : wrapWithUnref(raw)\r\n      } else if (type === BindingTypes.SETUP_LET) {\r\n        if (isAssignmentLVal) {\r\n          // let binding.\r\n          // this is a bit more tricky as we need to cover the case where\r\n          // let is a local non-ref value, and we need to replicate the\r\n          // right hand side value.\r\n          // x = y --> isRef(x) ? x.value = y : x = y\r\n          const { right: rVal, operator } = parent as AssignmentExpression\r\n          const rExp = rawExp.slice(rVal.start! - 1, rVal.end! - 1)\r\n          const rExpString = stringifyExpression(\r\n            processExpression(\r\n              createSimpleExpression(rExp, false),\r\n              context,\r\n              false,\r\n              false,\r\n              knownIds,\r\n            ),\r\n          )\r\n          return `${context.helperString(IS_REF)}(${raw})${\r\n            context.isTS ? ` //@ts-ignore\\n` : ``\r\n          } ? ${raw}.value ${operator} ${rExpString} : ${raw}`\r\n        } else if (isUpdateArg) {\r\n          // make id replace parent in the code range so the raw update operator\r\n          // is removed\r\n          id!.start = parent!.start\r\n          id!.end = parent!.end\r\n          const { prefix: isPrefix, operator } = parent as UpdateExpression\r\n          const prefix = isPrefix ? operator : ``\r\n          const postfix = isPrefix ? `` : operator\r\n          // let binding.\r\n          // x++ --> isRef(a) ? a.value++ : a++\r\n          return `${context.helperString(IS_REF)}(${raw})${\r\n            context.isTS ? ` //@ts-ignore\\n` : ``\r\n          } ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`\r\n        } else if (isDestructureAssignment) {\r\n          // TODO\r\n          // let binding in a destructure assignment - it's very tricky to\r\n          // handle both possible cases here without altering the original\r\n          // structure of the code, so we just assume it's not a ref here\r\n          // for now\r\n          return raw\r\n        } else {\r\n          return wrapWithUnref(raw)\r\n        }\r\n      } else if (type === BindingTypes.PROPS) {\r\n        // use __props which is generated by compileScript so in ts mode\r\n        // it gets correct type\r\n        return genPropsAccessExp(raw)\r\n      } else if (type === BindingTypes.PROPS_ALIASED) {\r\n        // prop with a different local alias (from defineProps() destructure)\r\n        return genPropsAccessExp(bindingMetadata.__propsAliases![raw])\r\n      }\r\n    } else {\r\n      if (\r\n        (type && type.startsWith('setup')) ||\r\n        type === BindingTypes.LITERAL_CONST\r\n      ) {\r\n        // setup bindings in non-inline mode\r\n        return `$setup.${raw}`\r\n      } else if (type === BindingTypes.PROPS_ALIASED) {\r\n        return `$props['${bindingMetadata.__propsAliases![raw]}']`\r\n      } else if (type) {\r\n        return `$${type}.${raw}`\r\n      }\r\n    }\r\n\r\n    // fallback to ctx\r\n    return `_ctx.${raw}`\r\n  }\r\n\r\n  // fast path if expression is a simple identifier.\r\n  const rawExp = node.content\r\n  // bail constant on parens (function invocation) and dot (member access)\r\n  const bailConstant = constantBailRE.test(rawExp)\r\n\r\n  let ast = node.ast\r\n\r\n  if (ast === false) {\r\n    // ast being false means it has caused an error already during parse phase\r\n    return node\r\n  }\r\n\r\n  if (ast === null || (!ast && isSimpleIdentifier(rawExp))) {\r\n    const isScopeVarReference = context.identifiers[rawExp]\r\n    const isAllowedGlobal = isGloballyAllowed(rawExp)\r\n    const isLiteral = isLiteralWhitelisted(rawExp)\r\n    if (\r\n      !asParams &&\r\n      !isScopeVarReference &&\r\n      !isLiteral &&\r\n      (!isAllowedGlobal || bindingMetadata[rawExp])\r\n    ) {\r\n      // const bindings exposed from setup can be skipped for patching but\r\n      // cannot be hoisted to module scope\r\n      if (isConst(bindingMetadata[rawExp])) {\r\n        node.constType = ConstantTypes.CAN_SKIP_PATCH\r\n      }\r\n      node.content = rewriteIdentifier(rawExp)\r\n    } else if (!isScopeVarReference) {\r\n      if (isLiteral) {\r\n        node.constType = ConstantTypes.CAN_STRINGIFY\r\n      } else {\r\n        node.constType = ConstantTypes.CAN_HOIST\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  if (!ast) {\r\n    // exp needs to be parsed differently:\r\n    // 1. Multiple inline statements (v-on, with presence of `;`): parse as raw\r\n    //    exp, but make sure to pad with spaces for consistent ranges\r\n    // 2. Expressions: wrap with parens (for e.g. object expressions)\r\n    // 3. Function arguments (v-for, v-slot): place in a function argument position\r\n    const source = asRawStatements\r\n      ? ` ${rawExp} `\r\n      : `(${rawExp})${asParams ? `=>{}` : ``}`\r\n    try {\r\n      ast = parse(source, {\r\n        plugins: context.expressionPlugins,\r\n      }).program\r\n    } catch (e: any) {\r\n      context.onError(\r\n        createCompilerError(\r\n          ErrorCodes.X_INVALID_EXPRESSION,\r\n          node.loc,\r\n          undefined,\r\n          e.message,\r\n        ),\r\n      )\r\n      return node\r\n    }\r\n  }\r\n\r\n  type QualifiedId = Identifier & PrefixMeta\r\n  const ids: QualifiedId[] = []\r\n  const parentStack: Node[] = []\r\n  const knownIds: Record<string, number> = Object.create(context.identifiers)\r\n\r\n  walkIdentifiers(\r\n    ast,\r\n    (node, parent, _, isReferenced, isLocal) => {\r\n      if (isStaticPropertyKey(node, parent!)) {\r\n        return\r\n      }\r\n      // v2 wrapped filter call\r\n      if (__COMPAT__ && node.name.startsWith('_filter_')) {\r\n        return\r\n      }\r\n\r\n      const needPrefix = isReferenced && canPrefix(node)\r\n      if (needPrefix && !isLocal) {\r\n        if (isStaticProperty(parent!) && parent.shorthand) {\r\n          // property shorthand like { foo }, we need to add the key since\r\n          // we rewrite the value\r\n          ;(node as QualifiedId).prefix = `${node.name}: `\r\n        }\r\n        node.name = rewriteIdentifier(node.name, parent, node)\r\n        ids.push(node as QualifiedId)\r\n      } else {\r\n        // The identifier is considered constant unless it's pointing to a\r\n        // local scope variable (a v-for alias, or a v-slot prop)\r\n        if (!(needPrefix && isLocal) && !bailConstant) {\r\n          ;(node as QualifiedId).isConstant = true\r\n        }\r\n        // also generate sub-expressions for other identifiers for better\r\n        // source map support. (except for property keys which are static)\r\n        ids.push(node as QualifiedId)\r\n      }\r\n    },\r\n    true, // invoke on ALL identifiers\r\n    parentStack,\r\n    knownIds,\r\n  )\r\n\r\n  // We break up the compound expression into an array of strings and sub\r\n  // expressions (for identifiers that have been prefixed). In codegen, if\r\n  // an ExpressionNode has the `.children` property, it will be used instead of\r\n  // `.content`.\r\n  const children: CompoundExpressionNode['children'] = []\r\n  ids.sort((a, b) => a.start - b.start)\r\n  ids.forEach((id, i) => {\r\n    // range is offset by -1 due to the wrapping parens when parsed\r\n    const start = id.start - 1\r\n    const end = id.end - 1\r\n    const last = ids[i - 1]\r\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start)\r\n    if (leadingText.length || id.prefix) {\r\n      children.push(leadingText + (id.prefix || ``))\r\n    }\r\n    const source = rawExp.slice(start, end)\r\n    children.push(\r\n      createSimpleExpression(\r\n        id.name,\r\n        false,\r\n        {\r\n          start: advancePositionWithClone(node.loc.start, source, start),\r\n          end: advancePositionWithClone(node.loc.start, source, end),\r\n          source,\r\n        },\r\n        id.isConstant\r\n          ? ConstantTypes.CAN_STRINGIFY\r\n          : ConstantTypes.NOT_CONSTANT,\r\n      ),\r\n    )\r\n    if (i === ids.length - 1 && end < rawExp.length) {\r\n      children.push(rawExp.slice(end))\r\n    }\r\n  })\r\n\r\n  let ret\r\n  if (children.length) {\r\n    ret = createCompoundExpression(children, node.loc)\r\n    ret.ast = ast\r\n  } else {\r\n    ret = node\r\n    ret.constType = bailConstant\r\n      ? ConstantTypes.NOT_CONSTANT\r\n      : ConstantTypes.CAN_STRINGIFY\r\n  }\r\n  ret.identifiers = Object.keys(knownIds)\r\n  return ret\r\n}\r\n\r\nfunction canPrefix(id: Identifier) {\r\n  // skip whitelisted globals\r\n  if (isGloballyAllowed(id.name)) {\r\n    return false\r\n  }\r\n  // special case for webpack compilation\r\n  if (id.name === 'require') {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport function stringifyExpression(exp: ExpressionNode | string): string {\r\n  if (isString(exp)) {\r\n    return exp\r\n  } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    return exp.content\r\n  } else {\r\n    return (exp.children as (ExpressionNode | string)[])\r\n      .map(stringifyExpression)\r\n      .join('')\r\n  }\r\n}\r\n\r\nfunction isConst(type: unknown) {\r\n  return (\r\n    type === BindingTypes.SETUP_CONST || type === BindingTypes.LITERAL_CONST\r\n  )\r\n}\r\n","import {\r\n  type TransformContext,\r\n  createStructuralDirectiveTransform,\r\n  traverseNode,\r\n} from '../transform'\r\nimport {\r\n  type AttributeNode,\r\n  type BlockCodegenNode,\r\n  type CacheExpression,\r\n  ConstantTypes,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type IfBranchNode,\r\n  type IfConditionalExpression,\r\n  type IfNode,\r\n  type MemoExpression,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  convertToBlock,\r\n  createCallExpression,\r\n  createConditionalExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createVNodeCall,\r\n  locStub,\r\n} from '../ast'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { CREATE_COMMENT, FRAGMENT } from '../runtimeHelpers'\r\nimport { findDir, findProp, getMemoedVNodeCall, injectProp } from '../utils'\r\nimport { PatchFlagNames, PatchFlags } from '@vue/shared'\r\n\r\nexport const transformIf = createStructuralDirectiveTransform(\r\n  /^(if|else|else-if)$/,\r\n  (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n      // #1587: We need to dynamically increment the key based on the current\r\n      // node's sibling nodes, since chained v-if/else branches are\r\n      // rendered at the same depth\r\n      const siblings = context.parent!.children\r\n      let i = siblings.indexOf(ifNode)\r\n      let key = 0\r\n      while (i-- >= 0) {\r\n        const sibling = siblings[i]\r\n        if (sibling && sibling.type === NodeTypes.IF) {\r\n          key += sibling.branches.length\r\n        }\r\n      }\r\n\r\n      // Exit callback. Complete the codegenNode when all children have been\r\n      // transformed.\r\n      return () => {\r\n        if (isRoot) {\r\n          ifNode.codegenNode = createCodegenNodeForBranch(\r\n            branch,\r\n            key,\r\n            context,\r\n          ) as IfConditionalExpression\r\n        } else {\r\n          // attach this branch's codegen node to the v-if root.\r\n          const parentCondition = getParentCondition(ifNode.codegenNode!)\r\n          parentCondition.alternate = createCodegenNodeForBranch(\r\n            branch,\r\n            key + ifNode.branches.length - 1,\r\n            context,\r\n          )\r\n        }\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processIf(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (\r\n    node: IfNode,\r\n    branch: IfBranchNode,\r\n    isRoot: boolean,\r\n  ) => (() => void) | undefined,\r\n) {\r\n  if (\r\n    dir.name !== 'else' &&\r\n    (!dir.exp || !(dir.exp as SimpleExpressionNode).content.trim())\r\n  ) {\r\n    const loc = dir.exp ? dir.exp.loc : node.loc\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_IF_NO_EXPRESSION, dir.loc),\r\n    )\r\n    dir.exp = createSimpleExpression(`true`, false, loc)\r\n  }\r\n\r\n  if (!__BROWSER__ && context.prefixIdentifiers && dir.exp) {\r\n    // dir.exp can only be simple expression because vIf transform is applied\r\n    // before expression transform.\r\n    dir.exp = processExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (__DEV__ && __BROWSER__ && dir.exp) {\r\n    validateBrowserExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (dir.name === 'if') {\r\n    const branch = createIfBranch(node, dir)\r\n    const ifNode: IfNode = {\r\n      type: NodeTypes.IF,\r\n      loc: node.loc,\r\n      branches: [branch],\r\n    }\r\n    context.replaceNode(ifNode)\r\n    if (processCodegen) {\r\n      return processCodegen(ifNode, branch, true)\r\n    }\r\n  } else {\r\n    // locate the adjacent v-if\r\n    const siblings = context.parent!.children\r\n    const comments = []\r\n    let i = siblings.indexOf(node)\r\n    while (i-- >= -1) {\r\n      const sibling = siblings[i]\r\n      if (sibling && sibling.type === NodeTypes.COMMENT) {\r\n        context.removeNode(sibling)\r\n        __DEV__ && comments.unshift(sibling)\r\n        continue\r\n      }\r\n\r\n      if (\r\n        sibling &&\r\n        sibling.type === NodeTypes.TEXT &&\r\n        !sibling.content.trim().length\r\n      ) {\r\n        context.removeNode(sibling)\r\n        continue\r\n      }\r\n\r\n      if (sibling && sibling.type === NodeTypes.IF) {\r\n        // Check if v-else was followed by v-else-if\r\n        if (\r\n          dir.name === 'else-if' &&\r\n          sibling.branches[sibling.branches.length - 1].condition === undefined\r\n        ) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc),\r\n          )\r\n        }\r\n\r\n        // move the node to the if node's branches\r\n        context.removeNode()\r\n        const branch = createIfBranch(node, dir)\r\n        if (\r\n          __DEV__ &&\r\n          comments.length &&\r\n          // #3619 ignore comments if the v-if is direct child of <transition>\r\n          !(\r\n            context.parent &&\r\n            context.parent.type === NodeTypes.ELEMENT &&\r\n            (context.parent.tag === 'transition' ||\r\n              context.parent.tag === 'Transition')\r\n          )\r\n        ) {\r\n          branch.children = [...comments, ...branch.children]\r\n        }\r\n\r\n        // check if user is forcing same key on different branches\r\n        if (__DEV__ || !__BROWSER__) {\r\n          const key = branch.userKey\r\n          if (key) {\r\n            sibling.branches.forEach(({ userKey }) => {\r\n              if (isSameKey(userKey, key)) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_IF_SAME_KEY,\r\n                    branch.userKey!.loc,\r\n                  ),\r\n                )\r\n              }\r\n            })\r\n          }\r\n        }\r\n\r\n        sibling.branches.push(branch)\r\n        const onExit = processCodegen && processCodegen(sibling, branch, false)\r\n        // since the branch was removed, it will not be traversed.\r\n        // make sure to traverse here.\r\n        traverseNode(branch, context)\r\n        // call on exit\r\n        if (onExit) onExit()\r\n        // make sure to reset currentNode after traversal to indicate this\r\n        // node has been removed.\r\n        context.currentNode = null\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc),\r\n        )\r\n      }\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction createIfBranch(node: ElementNode, dir: DirectiveNode): IfBranchNode {\r\n  const isTemplateIf = node.tagType === ElementTypes.TEMPLATE\r\n  return {\r\n    type: NodeTypes.IF_BRANCH,\r\n    loc: node.loc,\r\n    condition: dir.name === 'else' ? undefined : dir.exp,\r\n    children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\r\n    userKey: findProp(node, `key`),\r\n    isTemplateIf,\r\n  }\r\n}\r\n\r\nfunction createCodegenNodeForBranch(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext,\r\n): IfConditionalExpression | BlockCodegenNode | MemoExpression {\r\n  if (branch.condition) {\r\n    return createConditionalExpression(\r\n      branch.condition,\r\n      createChildrenCodegenNode(branch, keyIndex, context),\r\n      // make sure to pass in asBlock: true so that the comment node call\r\n      // closes the current block.\r\n      createCallExpression(context.helper(CREATE_COMMENT), [\r\n        __DEV__ ? '\"v-if\"' : '\"\"',\r\n        'true',\r\n      ]),\r\n    ) as IfConditionalExpression\r\n  } else {\r\n    return createChildrenCodegenNode(branch, keyIndex, context)\r\n  }\r\n}\r\n\r\nfunction createChildrenCodegenNode(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext,\r\n): BlockCodegenNode | MemoExpression {\r\n  const { helper } = context\r\n  const keyProperty = createObjectProperty(\r\n    `key`,\r\n    createSimpleExpression(\r\n      `${keyIndex}`,\r\n      false,\r\n      locStub,\r\n      ConstantTypes.CAN_HOIST,\r\n    ),\r\n  )\r\n  const { children } = branch\r\n  const firstChild = children[0]\r\n  const needFragmentWrapper =\r\n    children.length !== 1 || firstChild.type !== NodeTypes.ELEMENT\r\n  if (needFragmentWrapper) {\r\n    if (children.length === 1 && firstChild.type === NodeTypes.FOR) {\r\n      // optimize away nested fragments when child is a ForNode\r\n      const vnodeCall = firstChild.codegenNode!\r\n      injectProp(vnodeCall, keyProperty, context)\r\n      return vnodeCall\r\n    } else {\r\n      let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n      let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n      // check if the fragment actually contains a single valid child with\r\n      // the rest being comments\r\n      if (\r\n        __DEV__ &&\r\n        !branch.isTemplateIf &&\r\n        children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n      ) {\r\n        patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n        patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n      }\r\n\r\n      return createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        createObjectExpression([keyProperty]),\r\n        children,\r\n        patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true,\r\n        false,\r\n        false /* isComponent */,\r\n        branch.loc,\r\n      )\r\n    }\r\n  } else {\r\n    const ret = (firstChild as ElementNode).codegenNode as\r\n      | BlockCodegenNode\r\n      | MemoExpression\r\n    const vnodeCall = getMemoedVNodeCall(ret)\r\n    // Change createVNode to createBlock.\r\n    if (vnodeCall.type === NodeTypes.VNODE_CALL) {\r\n      convertToBlock(vnodeCall, context)\r\n    }\r\n    // inject branch key\r\n    injectProp(vnodeCall, keyProperty, context)\r\n    return ret\r\n  }\r\n}\r\n\r\nfunction isSameKey(\r\n  a: AttributeNode | DirectiveNode | undefined,\r\n  b: AttributeNode | DirectiveNode,\r\n): boolean {\r\n  if (!a || a.type !== b.type) {\r\n    return false\r\n  }\r\n  if (a.type === NodeTypes.ATTRIBUTE) {\r\n    if (a.value!.content !== (b as AttributeNode).value!.content) {\r\n      return false\r\n    }\r\n  } else {\r\n    // directive\r\n    const exp = a.exp!\r\n    const branchExp = (b as DirectiveNode).exp!\r\n    if (exp.type !== branchExp.type) {\r\n      return false\r\n    }\r\n    if (\r\n      exp.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n      exp.isStatic !== (branchExp as SimpleExpressionNode).isStatic ||\r\n      exp.content !== (branchExp as SimpleExpressionNode).content\r\n    ) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParentCondition(\r\n  node: IfConditionalExpression | CacheExpression,\r\n): IfConditionalExpression {\r\n  while (true) {\r\n    if (node.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n      if (node.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n        node = node.alternate\r\n      } else {\r\n        return node\r\n      }\r\n    } else if (node.type === NodeTypes.JS_CACHE_EXPRESSION) {\r\n      node = node.value as IfConditionalExpression\r\n    }\r\n  }\r\n}\r\n","import {\r\n  type TransformContext,\r\n  createStructuralDirectiveTransform,\r\n} from '../transform'\r\nimport {\r\n  type BlockCodegenNode,\r\n  ConstantTypes,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  type ExpressionNode,\r\n  type ForCodegenNode,\r\n  type ForIteratorExpression,\r\n  type ForNode,\r\n  type ForParseResult,\r\n  type ForRenderListExpression,\r\n  NodeTypes,\r\n  type PlainElementNode,\r\n  type RenderSlotCall,\r\n  type SimpleExpressionNode,\r\n  type SlotOutletNode,\r\n  type VNodeCall,\r\n  createBlockStatement,\r\n  createCallExpression,\r\n  createCompoundExpression,\r\n  createFunctionExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createVNodeCall,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n} from '../ast'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport {\r\n  findDir,\r\n  findProp,\r\n  injectProp,\r\n  isSlotOutlet,\r\n  isTemplateNode,\r\n} from '../utils'\r\nimport {\r\n  FRAGMENT,\r\n  IS_MEMO_SAME,\r\n  OPEN_BLOCK,\r\n  RENDER_LIST,\r\n} from '../runtimeHelpers'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { PatchFlagNames, PatchFlags } from '@vue/shared'\r\n\r\nexport const transformFor = createStructuralDirectiveTransform(\r\n  'for',\r\n  (node, dir, context) => {\r\n    const { helper, removeHelper } = context\r\n    return processFor(node, dir, context, forNode => {\r\n      // create the loop render function expression now, and add the\r\n      // iterator on exit after all children have been traversed\r\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n        forNode.source,\r\n      ]) as ForRenderListExpression\r\n      const isTemplate = isTemplateNode(node)\r\n      const memo = findDir(node, 'memo')\r\n      const keyProp = findProp(node, `key`)\r\n      const keyExp =\r\n        keyProp &&\r\n        (keyProp.type === NodeTypes.ATTRIBUTE\r\n          ? createSimpleExpression(keyProp.value!.content, true)\r\n          : keyProp.exp!)\r\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp!) : null\r\n\r\n      if (!__BROWSER__ && isTemplate) {\r\n        // #2085 / #5288 process :key and v-memo expressions need to be\r\n        // processed on `<template v-for>`. In this case the node is discarded\r\n        // and never traversed so its binding expressions won't be processed\r\n        // by the normal transforms.\r\n        if (memo) {\r\n          memo.exp = processExpression(\r\n            memo.exp! as SimpleExpressionNode,\r\n            context,\r\n          )\r\n        }\r\n        if (keyProperty && keyProp!.type !== NodeTypes.ATTRIBUTE) {\r\n          keyProperty.value = processExpression(\r\n            keyProperty.value as SimpleExpressionNode,\r\n            context,\r\n          )\r\n        }\r\n      }\r\n\r\n      const isStableFragment =\r\n        forNode.source.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        forNode.source.constType > ConstantTypes.NOT_CONSTANT\r\n      const fragmentFlag = isStableFragment\r\n        ? PatchFlags.STABLE_FRAGMENT\r\n        : keyProp\r\n          ? PatchFlags.KEYED_FRAGMENT\r\n          : PatchFlags.UNKEYED_FRAGMENT\r\n\r\n      forNode.codegenNode = createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        undefined,\r\n        renderExp,\r\n        fragmentFlag +\r\n          (__DEV__ ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true /* isBlock */,\r\n        !isStableFragment /* disableTracking */,\r\n        false /* isComponent */,\r\n        node.loc,\r\n      ) as ForCodegenNode\r\n\r\n      return () => {\r\n        // finish the codegen now that all children have been traversed\r\n        let childBlock: BlockCodegenNode\r\n        const { children } = forNode\r\n\r\n        // check <template v-for> key placement\r\n        if ((__DEV__ || !__BROWSER__) && isTemplate) {\r\n          node.children.some(c => {\r\n            if (c.type === NodeTypes.ELEMENT) {\r\n              const key = findProp(c, 'key')\r\n              if (key) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n                    key.loc,\r\n                  ),\r\n                )\r\n                return true\r\n              }\r\n            }\r\n          })\r\n        }\r\n\r\n        const needFragmentWrapper =\r\n          children.length !== 1 || children[0].type !== NodeTypes.ELEMENT\r\n        const slotOutlet = isSlotOutlet(node)\r\n          ? node\r\n          : isTemplate &&\r\n              node.children.length === 1 &&\r\n              isSlotOutlet(node.children[0])\r\n            ? (node.children[0] as SlotOutletNode) // api-extractor somehow fails to infer this\r\n            : null\r\n\r\n        if (slotOutlet) {\r\n          // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n          childBlock = slotOutlet.codegenNode as RenderSlotCall\r\n          if (isTemplate && keyProperty) {\r\n            // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n            // we need to inject the key to the renderSlot() call.\r\n            // the props for renderSlot is passed as the 3rd argument.\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n        } else if (needFragmentWrapper) {\r\n          // <template v-for=\"...\"> with text or multi-elements\r\n          // should generate a fragment block for each loop\r\n          childBlock = createVNodeCall(\r\n            context,\r\n            helper(FRAGMENT),\r\n            keyProperty ? createObjectExpression([keyProperty]) : undefined,\r\n            node.children,\r\n            PatchFlags.STABLE_FRAGMENT +\r\n              (__DEV__\r\n                ? ` /* ${PatchFlagNames[PatchFlags.STABLE_FRAGMENT]} */`\r\n                : ``),\r\n            undefined,\r\n            undefined,\r\n            true,\r\n            undefined,\r\n            false /* isComponent */,\r\n          )\r\n        } else {\r\n          // Normal element v-for. Directly use the child's codegenNode\r\n          // but mark it as a block.\r\n          childBlock = (children[0] as PlainElementNode)\r\n            .codegenNode as VNodeCall\r\n          if (isTemplate && keyProperty) {\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n          if (childBlock.isBlock !== !isStableFragment) {\r\n            if (childBlock.isBlock) {\r\n              // switch from block to vnode\r\n              removeHelper(OPEN_BLOCK)\r\n              removeHelper(\r\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent),\r\n              )\r\n            } else {\r\n              // switch from vnode to block\r\n              removeHelper(\r\n                getVNodeHelper(context.inSSR, childBlock.isComponent),\r\n              )\r\n            }\r\n          }\r\n          childBlock.isBlock = !isStableFragment\r\n          if (childBlock.isBlock) {\r\n            helper(OPEN_BLOCK)\r\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent))\r\n          } else {\r\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent))\r\n          }\r\n        }\r\n\r\n        if (memo) {\r\n          const loop = createFunctionExpression(\r\n            createForLoopParams(forNode.parseResult, [\r\n              createSimpleExpression(`_cached`),\r\n            ]),\r\n          )\r\n          loop.body = createBlockStatement([\r\n            createCompoundExpression([`const _memo = (`, memo.exp!, `)`]),\r\n            createCompoundExpression([\r\n              `if (_cached`,\r\n              ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n              ` && ${context.helperString(\r\n                IS_MEMO_SAME,\r\n              )}(_cached, _memo)) return _cached`,\r\n            ]),\r\n            createCompoundExpression([`const _item = `, childBlock as any]),\r\n            createSimpleExpression(`_item.memo = _memo`),\r\n            createSimpleExpression(`return _item`),\r\n          ])\r\n          renderExp.arguments.push(\r\n            loop as ForIteratorExpression,\r\n            createSimpleExpression(`_cache`),\r\n            createSimpleExpression(String(context.cached++)),\r\n          )\r\n        } else {\r\n          renderExp.arguments.push(\r\n            createFunctionExpression(\r\n              createForLoopParams(forNode.parseResult),\r\n              childBlock,\r\n              true /* force newline */,\r\n            ) as ForIteratorExpression,\r\n          )\r\n        }\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processFor(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (forNode: ForNode) => (() => void) | undefined,\r\n) {\r\n  if (!dir.exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_NO_EXPRESSION, dir.loc),\r\n    )\r\n    return\r\n  }\r\n\r\n  const parseResult = dir.forParseResult\r\n\r\n  if (!parseResult) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, dir.loc),\r\n    )\r\n    return\r\n  }\r\n\r\n  finalizeForParseResult(parseResult, context)\r\n\r\n  const { addIdentifiers, removeIdentifiers, scopes } = context\r\n  const { source, value, key, index } = parseResult\r\n\r\n  const forNode: ForNode = {\r\n    type: NodeTypes.FOR,\r\n    loc: dir.loc,\r\n    source,\r\n    valueAlias: value,\r\n    keyAlias: key,\r\n    objectIndexAlias: index,\r\n    parseResult,\r\n    children: isTemplateNode(node) ? node.children : [node],\r\n  }\r\n\r\n  context.replaceNode(forNode)\r\n\r\n  // bookkeeping\r\n  scopes.vFor++\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    // scope management\r\n    // inject identifiers to context\r\n    value && addIdentifiers(value)\r\n    key && addIdentifiers(key)\r\n    index && addIdentifiers(index)\r\n  }\r\n\r\n  const onExit = processCodegen && processCodegen(forNode)\r\n\r\n  return () => {\r\n    scopes.vFor--\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      value && removeIdentifiers(value)\r\n      key && removeIdentifiers(key)\r\n      index && removeIdentifiers(index)\r\n    }\r\n    if (onExit) onExit()\r\n  }\r\n}\r\n\r\nexport function finalizeForParseResult(\r\n  result: ForParseResult,\r\n  context: TransformContext,\r\n) {\r\n  if (result.finalized) return\r\n\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    result.source = processExpression(\r\n      result.source as SimpleExpressionNode,\r\n      context,\r\n    )\r\n    if (result.key) {\r\n      result.key = processExpression(\r\n        result.key as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n    if (result.index) {\r\n      result.index = processExpression(\r\n        result.index as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n    if (result.value) {\r\n      result.value = processExpression(\r\n        result.value as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n  }\r\n  if (__DEV__ && __BROWSER__) {\r\n    validateBrowserExpression(result.source as SimpleExpressionNode, context)\r\n    if (result.key) {\r\n      validateBrowserExpression(\r\n        result.key as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n    if (result.index) {\r\n      validateBrowserExpression(\r\n        result.index as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n    if (result.value) {\r\n      validateBrowserExpression(\r\n        result.value as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n  }\r\n  result.finalized = true\r\n}\r\n\r\nexport function createForLoopParams(\r\n  { value, key, index }: ForParseResult,\r\n  memoArgs: ExpressionNode[] = [],\r\n): ExpressionNode[] {\r\n  return createParamsList([value, key, index, ...memoArgs])\r\n}\r\n\r\nfunction createParamsList(\r\n  args: (ExpressionNode | undefined)[],\r\n): ExpressionNode[] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i]) break\r\n  }\r\n  return args\r\n    .slice(0, i + 1)\r\n    .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false))\r\n}\r\n","import {\r\n  type CallExpression,\r\n  type ConditionalExpression,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  type FunctionExpression,\r\n  NodeTypes,\r\n  type ObjectExpression,\r\n  type Property,\r\n  type SlotsExpression,\r\n  type SourceLocation,\r\n  type TemplateChildNode,\r\n  createArrayExpression,\r\n  createCallExpression,\r\n  createConditionalExpression,\r\n  createFunctionExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n} from '../ast'\r\nimport type { NodeTransform, TransformContext } from '../transform'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport {\r\n  assert,\r\n  findDir,\r\n  hasScopeRef,\r\n  isStaticExp,\r\n  isTemplateNode,\r\n  isVSlot,\r\n} from '../utils'\r\nimport { CREATE_SLOTS, RENDER_LIST, WITH_CTX } from '../runtimeHelpers'\r\nimport { createForLoopParams, finalizeForParseResult } from './vFor'\r\nimport { SlotFlags, slotFlagsText } from '@vue/shared'\r\n\r\nconst defaultFallback = createSimpleExpression(`undefined`, false)\r\n\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nexport const trackSlotScopes: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    (node.tagType === ElementTypes.COMPONENT ||\r\n      node.tagType === ElementTypes.TEMPLATE)\r\n  ) {\r\n    // We are only checking non-empty v-slot here\r\n    // since we only care about slots that introduce scope variables.\r\n    const vSlot = findDir(node, 'slot')\r\n    if (vSlot) {\r\n      const slotProps = vSlot.exp\r\n      if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        slotProps && context.addIdentifiers(slotProps)\r\n      }\r\n      context.scopes.vSlot++\r\n      return () => {\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n          slotProps && context.removeIdentifiers(slotProps)\r\n        }\r\n        context.scopes.vSlot--\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nexport const trackVForSlotScopes: NodeTransform = (node, context) => {\r\n  let vFor\r\n  if (\r\n    isTemplateNode(node) &&\r\n    node.props.some(isVSlot) &&\r\n    (vFor = findDir(node, 'for'))\r\n  ) {\r\n    const result = vFor.forParseResult\r\n    if (result) {\r\n      finalizeForParseResult(result, context)\r\n      const { value, key, index } = result\r\n      const { addIdentifiers, removeIdentifiers } = context\r\n      value && addIdentifiers(value)\r\n      key && addIdentifiers(key)\r\n      index && addIdentifiers(index)\r\n\r\n      return () => {\r\n        value && removeIdentifiers(value)\r\n        key && removeIdentifiers(key)\r\n        index && removeIdentifiers(index)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type SlotFnBuilder = (\r\n  slotProps: ExpressionNode | undefined,\r\n  vFor: DirectiveNode | undefined,\r\n  slotChildren: TemplateChildNode[],\r\n  loc: SourceLocation,\r\n) => FunctionExpression\r\n\r\nconst buildClientSlotFn: SlotFnBuilder = (props, _vForExp, children, loc) =>\r\n  createFunctionExpression(\r\n    props,\r\n    children,\r\n    false /* newline */,\r\n    true /* isSlot */,\r\n    children.length ? children[0].loc : loc,\r\n  )\r\n\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nexport function buildSlots(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  buildSlotFn: SlotFnBuilder = buildClientSlotFn,\r\n): {\r\n  slots: SlotsExpression\r\n  hasDynamicSlots: boolean\r\n} {\r\n  context.helper(WITH_CTX)\r\n\r\n  const { children, loc } = node\r\n  const slotsProperties: Property[] = []\r\n  const dynamicSlots: (ConditionalExpression | CallExpression)[] = []\r\n\r\n  // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n  // since it likely uses a scope variable.\r\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0\r\n  // with `prefixIdentifiers: true`, this can be further optimized to make\r\n  // it dynamic only when the slot actually uses the scope variables.\r\n  if (!__BROWSER__ && !context.ssr && context.prefixIdentifiers) {\r\n    hasDynamicSlots = hasScopeRef(node, context.identifiers)\r\n  }\r\n\r\n  // 1. Check for slot with slotProps on component itself.\r\n  //    <Comp v-slot=\"{ prop }\"/>\r\n  const onComponentSlot = findDir(node, 'slot', true)\r\n  if (onComponentSlot) {\r\n    const { arg, exp } = onComponentSlot\r\n    if (arg && !isStaticExp(arg)) {\r\n      hasDynamicSlots = true\r\n    }\r\n    slotsProperties.push(\r\n      createObjectProperty(\r\n        arg || createSimpleExpression('default', true),\r\n        buildSlotFn(exp, undefined, children, loc),\r\n      ),\r\n    )\r\n  }\r\n\r\n  // 2. Iterate through children and check for template slots\r\n  //    <template v-slot:foo=\"{ prop }\">\r\n  let hasTemplateSlots = false\r\n  let hasNamedDefaultSlot = false\r\n  const implicitDefaultChildren: TemplateChildNode[] = []\r\n  const seenSlotNames = new Set<string>()\r\n  let conditionalBranchIndex = 0\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const slotElement = children[i]\r\n    let slotDir\r\n\r\n    if (\r\n      !isTemplateNode(slotElement) ||\r\n      !(slotDir = findDir(slotElement, 'slot', true))\r\n    ) {\r\n      // not a <template v-slot>, skip.\r\n      if (slotElement.type !== NodeTypes.COMMENT) {\r\n        implicitDefaultChildren.push(slotElement)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (onComponentSlot) {\r\n      // already has on-component slot - this is incorrect usage.\r\n      context.onError(\r\n        createCompilerError(ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE, slotDir.loc),\r\n      )\r\n      break\r\n    }\r\n\r\n    hasTemplateSlots = true\r\n    const { children: slotChildren, loc: slotLoc } = slotElement\r\n    const {\r\n      arg: slotName = createSimpleExpression(`default`, true),\r\n      exp: slotProps,\r\n      loc: dirLoc,\r\n    } = slotDir\r\n\r\n    // check if name is dynamic.\r\n    let staticSlotName: string | undefined\r\n    if (isStaticExp(slotName)) {\r\n      staticSlotName = slotName ? slotName.content : `default`\r\n    } else {\r\n      hasDynamicSlots = true\r\n    }\r\n\r\n    const vFor = findDir(slotElement, 'for')\r\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc)\r\n\r\n    // check if this slot is conditional (v-if/v-for)\r\n    let vIf: DirectiveNode | undefined\r\n    let vElse: DirectiveNode | undefined\r\n    if ((vIf = findDir(slotElement, 'if'))) {\r\n      hasDynamicSlots = true\r\n      dynamicSlots.push(\r\n        createConditionalExpression(\r\n          vIf.exp!,\r\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\r\n          defaultFallback,\r\n        ),\r\n      )\r\n    } else if (\r\n      (vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))\r\n    ) {\r\n      // find adjacent v-if\r\n      let j = i\r\n      let prev\r\n      while (j--) {\r\n        prev = children[j]\r\n        if (prev.type !== NodeTypes.COMMENT) {\r\n          break\r\n        }\r\n      }\r\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n        // remove node\r\n        children.splice(i, 1)\r\n        i--\r\n        __TEST__ && assert(dynamicSlots.length > 0)\r\n        // attach this slot to previous conditional\r\n        let conditional = dynamicSlots[\r\n          dynamicSlots.length - 1\r\n        ] as ConditionalExpression\r\n        while (\r\n          conditional.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n        ) {\r\n          conditional = conditional.alternate\r\n        }\r\n        conditional.alternate = vElse.exp\r\n          ? createConditionalExpression(\r\n              vElse.exp,\r\n              buildDynamicSlot(\r\n                slotName,\r\n                slotFunction,\r\n                conditionalBranchIndex++,\r\n              ),\r\n              defaultFallback,\r\n            )\r\n          : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++)\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, vElse.loc),\r\n        )\r\n      }\r\n    } else if (vFor) {\r\n      hasDynamicSlots = true\r\n      const parseResult = vFor.forParseResult\r\n      if (parseResult) {\r\n        finalizeForParseResult(parseResult, context)\r\n        // Render the dynamic slots as an array and add it to the createSlot()\r\n        // args. The runtime knows how to handle it appropriately.\r\n        dynamicSlots.push(\r\n          createCallExpression(context.helper(RENDER_LIST), [\r\n            parseResult.source,\r\n            createFunctionExpression(\r\n              createForLoopParams(parseResult),\r\n              buildDynamicSlot(slotName, slotFunction),\r\n              true /* force newline */,\r\n            ),\r\n          ]),\r\n        )\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(\r\n            ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION,\r\n            vFor.loc,\r\n          ),\r\n        )\r\n      }\r\n    } else {\r\n      // check duplicate static names\r\n      if (staticSlotName) {\r\n        if (seenSlotNames.has(staticSlotName)) {\r\n          context.onError(\r\n            createCompilerError(\r\n              ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n              dirLoc,\r\n            ),\r\n          )\r\n          continue\r\n        }\r\n        seenSlotNames.add(staticSlotName)\r\n        if (staticSlotName === 'default') {\r\n          hasNamedDefaultSlot = true\r\n        }\r\n      }\r\n      slotsProperties.push(createObjectProperty(slotName, slotFunction))\r\n    }\r\n  }\r\n\r\n  if (!onComponentSlot) {\r\n    const buildDefaultSlotProperty = (\r\n      props: ExpressionNode | undefined,\r\n      children: TemplateChildNode[],\r\n    ) => {\r\n      const fn = buildSlotFn(props, undefined, children, loc)\r\n      if (__COMPAT__ && context.compatConfig) {\r\n        fn.isNonScopedSlot = true\r\n      }\r\n      return createObjectProperty(`default`, fn)\r\n    }\r\n\r\n    if (!hasTemplateSlots) {\r\n      // implicit default slot (on component)\r\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children))\r\n    } else if (\r\n      implicitDefaultChildren.length &&\r\n      // #3766\r\n      // with whitespace: 'preserve', whitespaces between slots will end up in\r\n      // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n      implicitDefaultChildren.some(node => isNonWhitespaceContent(node))\r\n    ) {\r\n      // implicit default slot (mixed with named slots)\r\n      if (hasNamedDefaultSlot) {\r\n        context.onError(\r\n          createCompilerError(\r\n            ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n            implicitDefaultChildren[0].loc,\r\n          ),\r\n        )\r\n      } else {\r\n        slotsProperties.push(\r\n          buildDefaultSlotProperty(undefined, implicitDefaultChildren),\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const slotFlag = hasDynamicSlots\r\n    ? SlotFlags.DYNAMIC\r\n    : hasForwardedSlots(node.children)\r\n      ? SlotFlags.FORWARDED\r\n      : SlotFlags.STABLE\r\n\r\n  let slots = createObjectExpression(\r\n    slotsProperties.concat(\r\n      createObjectProperty(\r\n        `_`,\r\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n        // 1 = compiled and static = can skip normalization AND diff as optimized\r\n        createSimpleExpression(\r\n          slotFlag + (__DEV__ ? ` /* ${slotFlagsText[slotFlag]} */` : ``),\r\n          false,\r\n        ),\r\n      ),\r\n    ),\r\n    loc,\r\n  ) as SlotsExpression\r\n  if (dynamicSlots.length) {\r\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n      slots,\r\n      createArrayExpression(dynamicSlots),\r\n    ]) as SlotsExpression\r\n  }\r\n\r\n  return {\r\n    slots,\r\n    hasDynamicSlots,\r\n  }\r\n}\r\n\r\nfunction buildDynamicSlot(\r\n  name: ExpressionNode,\r\n  fn: FunctionExpression,\r\n  index?: number,\r\n): ObjectExpression {\r\n  const props = [\r\n    createObjectProperty(`name`, name),\r\n    createObjectProperty(`fn`, fn),\r\n  ]\r\n  if (index != null) {\r\n    props.push(\r\n      createObjectProperty(`key`, createSimpleExpression(String(index), true)),\r\n    )\r\n  }\r\n  return createObjectExpression(props)\r\n}\r\n\r\nfunction hasForwardedSlots(children: TemplateChildNode[]): boolean {\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    switch (child.type) {\r\n      case NodeTypes.ELEMENT:\r\n        if (\r\n          child.tagType === ElementTypes.SLOT ||\r\n          hasForwardedSlots(child.children)\r\n        ) {\r\n          return true\r\n        }\r\n        break\r\n      case NodeTypes.IF:\r\n        if (hasForwardedSlots(child.branches)) return true\r\n        break\r\n      case NodeTypes.IF_BRANCH:\r\n      case NodeTypes.FOR:\r\n        if (hasForwardedSlots(child.children)) return true\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction isNonWhitespaceContent(node: TemplateChildNode): boolean {\r\n  if (node.type !== NodeTypes.TEXT && node.type !== NodeTypes.TEXT_CALL)\r\n    return true\r\n  return node.type === NodeTypes.TEXT\r\n    ? !!node.content.trim()\r\n    : isNonWhitespaceContent(node.content)\r\n}\r\n","import type { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  type ArrayExpression,\r\n  type CallExpression,\r\n  type ComponentNode,\r\n  ConstantTypes,\r\n  type DirectiveArguments,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  type JSChildNode,\r\n  NodeTypes,\r\n  type ObjectExpression,\r\n  type Property,\r\n  type TemplateTextChildNode,\r\n  type VNodeCall,\r\n  createArrayExpression,\r\n  createCallExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createVNodeCall,\r\n} from '../ast'\r\nimport {\r\n  PatchFlagNames,\r\n  PatchFlags,\r\n  camelize,\r\n  capitalize,\r\n  isBuiltInDirective,\r\n  isObject,\r\n  isOn,\r\n  isReservedProp,\r\n  isSymbol,\r\n} from '@vue/shared'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport {\r\n  GUARD_REACTIVE_PROPS,\r\n  KEEP_ALIVE,\r\n  MERGE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_PROPS,\r\n  NORMALIZE_STYLE,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DIRECTIVE,\r\n  RESOLVE_DYNAMIC_COMPONENT,\r\n  SUSPENSE,\r\n  TELEPORT,\r\n  TO_HANDLERS,\r\n  UNREF,\r\n} from '../runtimeHelpers'\r\nimport {\r\n  findProp,\r\n  isCoreComponent,\r\n  isStaticArgOf,\r\n  isStaticExp,\r\n  toValidAssetId,\r\n} from '../utils'\r\nimport { buildSlots } from './vSlot'\r\nimport { getConstantType } from './hoistStatic'\r\nimport { BindingTypes } from '../options'\r\nimport {\r\n  CompilerDeprecationTypes,\r\n  checkCompatEnabled,\r\n  isCompatEnabled,\r\n} from '../compat/compatConfig'\r\n\r\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap<DirectiveNode, symbol>()\r\n\r\n// generate a JavaScript AST for this element's codegen\r\nexport const transformElement: NodeTransform = (node, context) => {\r\n  // perform the work on exit, after all child expressions have been\r\n  // processed and merged.\r\n  return function postTransformElement() {\r\n    node = context.currentNode!\r\n\r\n    if (\r\n      !(\r\n        node.type === NodeTypes.ELEMENT &&\r\n        (node.tagType === ElementTypes.ELEMENT ||\r\n          node.tagType === ElementTypes.COMPONENT)\r\n      )\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const { tag, props } = node\r\n    const isComponent = node.tagType === ElementTypes.COMPONENT\r\n\r\n    // The goal of the transform is to create a codegenNode implementing the\r\n    // VNodeCall interface.\r\n    let vnodeTag = isComponent\r\n      ? resolveComponentType(node as ComponentNode, context)\r\n      : `\"${tag}\"`\r\n\r\n    const isDynamicComponent =\r\n      isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT\r\n\r\n    let vnodeProps: VNodeCall['props']\r\n    let vnodeChildren: VNodeCall['children']\r\n    let vnodePatchFlag: VNodeCall['patchFlag']\r\n    let patchFlag: number = 0\r\n    let vnodeDynamicProps: VNodeCall['dynamicProps']\r\n    let dynamicPropNames: string[] | undefined\r\n    let vnodeDirectives: VNodeCall['directives']\r\n\r\n    let shouldUseBlock =\r\n      // dynamic component may resolve to plain elements\r\n      isDynamicComponent ||\r\n      vnodeTag === TELEPORT ||\r\n      vnodeTag === SUSPENSE ||\r\n      (!isComponent &&\r\n        // <svg> and <foreignObject> must be forced into blocks so that block\r\n        // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n        // This is technically web-specific, but splitting the logic out of core\r\n        // leads to too much unnecessary complexity.\r\n        (tag === 'svg' || tag === 'foreignObject'))\r\n\r\n    // props\r\n    if (props.length > 0) {\r\n      const propsBuildResult = buildProps(\r\n        node,\r\n        context,\r\n        undefined,\r\n        isComponent,\r\n        isDynamicComponent,\r\n      )\r\n      vnodeProps = propsBuildResult.props\r\n      patchFlag = propsBuildResult.patchFlag\r\n      dynamicPropNames = propsBuildResult.dynamicPropNames\r\n      const directives = propsBuildResult.directives\r\n      vnodeDirectives =\r\n        directives && directives.length\r\n          ? (createArrayExpression(\r\n              directives.map(dir => buildDirectiveArgs(dir, context)),\r\n            ) as DirectiveArguments)\r\n          : undefined\r\n\r\n      if (propsBuildResult.shouldUseBlock) {\r\n        shouldUseBlock = true\r\n      }\r\n    }\r\n\r\n    // children\r\n    if (node.children.length > 0) {\r\n      if (vnodeTag === KEEP_ALIVE) {\r\n        // Although a built-in component, we compile KeepAlive with raw children\r\n        // instead of slot functions so that it can be used inside Transition\r\n        // or other Transition-wrapping HOCs.\r\n        // To ensure correct updates with block optimizations, we need to:\r\n        // 1. Force keep-alive into a block. This avoids its children being\r\n        //    collected by a parent block.\r\n        shouldUseBlock = true\r\n        // 2. Force keep-alive to always be updated, since it uses raw children.\r\n        patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        if (__DEV__ && node.children.length > 1) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN, {\r\n              start: node.children[0].loc.start,\r\n              end: node.children[node.children.length - 1].loc.end,\r\n              source: '',\r\n            }),\r\n          )\r\n        }\r\n      }\r\n\r\n      const shouldBuildAsSlots =\r\n        isComponent &&\r\n        // Teleport is not a real component and has dedicated runtime handling\r\n        vnodeTag !== TELEPORT &&\r\n        // explained above.\r\n        vnodeTag !== KEEP_ALIVE\r\n\r\n      if (shouldBuildAsSlots) {\r\n        const { slots, hasDynamicSlots } = buildSlots(node, context)\r\n        vnodeChildren = slots\r\n        if (hasDynamicSlots) {\r\n          patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n        const child = node.children[0]\r\n        const type = child.type\r\n        // check for dynamic text children\r\n        const hasDynamicTextChild =\r\n          type === NodeTypes.INTERPOLATION ||\r\n          type === NodeTypes.COMPOUND_EXPRESSION\r\n        if (\r\n          hasDynamicTextChild &&\r\n          getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n        ) {\r\n          patchFlag |= PatchFlags.TEXT\r\n        }\r\n        // pass directly if the only child is a text node\r\n        // (plain / interpolation / expression)\r\n        if (hasDynamicTextChild || type === NodeTypes.TEXT) {\r\n          vnodeChildren = child as TemplateTextChildNode\r\n        } else {\r\n          vnodeChildren = node.children\r\n        }\r\n      } else {\r\n        vnodeChildren = node.children\r\n      }\r\n    }\r\n\r\n    // patchFlag & dynamicPropNames\r\n    if (patchFlag !== 0) {\r\n      if (__DEV__) {\r\n        if (patchFlag < 0) {\r\n          // special flags (negative and mutually exclusive)\r\n          vnodePatchFlag =\r\n            patchFlag + ` /* ${PatchFlagNames[patchFlag as PatchFlags]} */`\r\n        } else {\r\n          // bitwise flags\r\n          const flagNames = Object.keys(PatchFlagNames)\r\n            .map(Number)\r\n            .filter(n => n > 0 && patchFlag & n)\r\n            .map(n => PatchFlagNames[n as PatchFlags])\r\n            .join(`, `)\r\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`\r\n        }\r\n      } else {\r\n        vnodePatchFlag = String(patchFlag)\r\n      }\r\n      if (dynamicPropNames && dynamicPropNames.length) {\r\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames)\r\n      }\r\n    }\r\n\r\n    node.codegenNode = createVNodeCall(\r\n      context,\r\n      vnodeTag,\r\n      vnodeProps,\r\n      vnodeChildren,\r\n      vnodePatchFlag,\r\n      vnodeDynamicProps,\r\n      vnodeDirectives,\r\n      !!shouldUseBlock,\r\n      false /* disableTracking */,\r\n      isComponent,\r\n      node.loc,\r\n    )\r\n  }\r\n}\r\n\r\nexport function resolveComponentType(\r\n  node: ComponentNode,\r\n  context: TransformContext,\r\n  ssr = false,\r\n) {\r\n  let { tag } = node\r\n\r\n  // 1. dynamic component\r\n  const isExplicitDynamic = isComponentTag(tag)\r\n  const isProp = findProp(node, 'is')\r\n  if (isProp) {\r\n    if (\r\n      isExplicitDynamic ||\r\n      (__COMPAT__ &&\r\n        isCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n          context,\r\n        ))\r\n    ) {\r\n      const exp =\r\n        isProp.type === NodeTypes.ATTRIBUTE\r\n          ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n          : isProp.exp\r\n      if (exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n          exp,\r\n        ])\r\n      }\r\n    } else if (\r\n      isProp.type === NodeTypes.ATTRIBUTE &&\r\n      isProp.value!.content.startsWith('vue:')\r\n    ) {\r\n      // <button is=\"vue:xxx\">\r\n      // if not <component>, only is value that starts with \"vue:\" will be\r\n      // treated as component by the parse phase and reach here, unless it's\r\n      // compat mode where all is values are considered components\r\n      tag = isProp.value!.content.slice(4)\r\n    }\r\n  }\r\n\r\n  // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag)\r\n  if (builtIn) {\r\n    // built-ins are simply fallthroughs / have special handling during ssr\r\n    // so we don't need to import their runtime equivalents\r\n    if (!ssr) context.helper(builtIn)\r\n    return builtIn\r\n  }\r\n\r\n  // 3. user component (from setup bindings)\r\n  // this is skipped in browser build since browser builds do not perform\r\n  // binding analysis.\r\n  if (!__BROWSER__) {\r\n    const fromSetup = resolveSetupReference(tag, context)\r\n    if (fromSetup) {\r\n      return fromSetup\r\n    }\r\n    const dotIndex = tag.indexOf('.')\r\n    if (dotIndex > 0) {\r\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context)\r\n      if (ns) {\r\n        return ns + tag.slice(dotIndex)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 4. Self referencing component (inferred from filename)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.selfName &&\r\n    capitalize(camelize(tag)) === context.selfName\r\n  ) {\r\n    context.helper(RESOLVE_COMPONENT)\r\n    // codegen.ts has special check for __self postfix when generating\r\n    // component imports, which will pass additional `maybeSelfReference` flag\r\n    // to `resolveComponent`.\r\n    context.components.add(tag + `__self`)\r\n    return toValidAssetId(tag, `component`)\r\n  }\r\n\r\n  // 5. user component (resolve)\r\n  context.helper(RESOLVE_COMPONENT)\r\n  context.components.add(tag)\r\n  return toValidAssetId(tag, `component`)\r\n}\r\n\r\nfunction resolveSetupReference(name: string, context: TransformContext) {\r\n  const bindings = context.bindingMetadata\r\n  if (!bindings || bindings.__isScriptSetup === false) {\r\n    return\r\n  }\r\n\r\n  const camelName = camelize(name)\r\n  const PascalName = capitalize(camelName)\r\n  const checkType = (type: BindingTypes) => {\r\n    if (bindings[name] === type) {\r\n      return name\r\n    }\r\n    if (bindings[camelName] === type) {\r\n      return camelName\r\n    }\r\n    if (bindings[PascalName] === type) {\r\n      return PascalName\r\n    }\r\n  }\r\n\r\n  const fromConst =\r\n    checkType(BindingTypes.SETUP_CONST) ||\r\n    checkType(BindingTypes.SETUP_REACTIVE_CONST) ||\r\n    checkType(BindingTypes.LITERAL_CONST)\r\n  if (fromConst) {\r\n    return context.inline\r\n      ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\r\n        fromConst\r\n      : `$setup[${JSON.stringify(fromConst)}]`\r\n  }\r\n\r\n  const fromMaybeRef =\r\n    checkType(BindingTypes.SETUP_LET) ||\r\n    checkType(BindingTypes.SETUP_REF) ||\r\n    checkType(BindingTypes.SETUP_MAYBE_REF)\r\n  if (fromMaybeRef) {\r\n    return context.inline\r\n      ? // setup scope bindings that may be refs need to be unrefed\r\n        `${context.helperString(UNREF)}(${fromMaybeRef})`\r\n      : `$setup[${JSON.stringify(fromMaybeRef)}]`\r\n  }\r\n\r\n  const fromProps = checkType(BindingTypes.PROPS)\r\n  if (fromProps) {\r\n    return `${context.helperString(UNREF)}(${\r\n      context.inline ? '__props' : '$props'\r\n    }[${JSON.stringify(fromProps)}])`\r\n  }\r\n}\r\n\r\nexport type PropsExpression = ObjectExpression | CallExpression | ExpressionNode\r\n\r\nexport function buildProps(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  props: ElementNode['props'] = node.props,\r\n  isComponent: boolean,\r\n  isDynamicComponent: boolean,\r\n  ssr = false,\r\n): {\r\n  props: PropsExpression | undefined\r\n  directives: DirectiveNode[]\r\n  patchFlag: number\r\n  dynamicPropNames: string[]\r\n  shouldUseBlock: boolean\r\n} {\r\n  const { tag, loc: elementLoc, children } = node\r\n  let properties: ObjectExpression['properties'] = []\r\n  const mergeArgs: PropsExpression[] = []\r\n  const runtimeDirectives: DirectiveNode[] = []\r\n  const hasChildren = children.length > 0\r\n  let shouldUseBlock = false\r\n\r\n  // patchFlag analysis\r\n  let patchFlag = 0\r\n  let hasRef = false\r\n  let hasClassBinding = false\r\n  let hasStyleBinding = false\r\n  let hasHydrationEventBinding = false\r\n  let hasDynamicKeys = false\r\n  let hasVnodeHook = false\r\n  const dynamicPropNames: string[] = []\r\n\r\n  const pushMergeArg = (arg?: PropsExpression) => {\r\n    if (properties.length) {\r\n      mergeArgs.push(\r\n        createObjectExpression(dedupeProperties(properties), elementLoc),\r\n      )\r\n      properties = []\r\n    }\r\n    if (arg) mergeArgs.push(arg)\r\n  }\r\n\r\n  const analyzePatchFlag = ({ key, value }: Property) => {\r\n    if (isStaticExp(key)) {\r\n      const name = key.content\r\n      const isEventHandler = isOn(name)\r\n      if (\r\n        isEventHandler &&\r\n        (!isComponent || isDynamicComponent) &&\r\n        // omit the flag for click handlers because hydration gives click\r\n        // dedicated fast path.\r\n        name.toLowerCase() !== 'onclick' &&\r\n        // omit v-model handlers\r\n        name !== 'onUpdate:modelValue' &&\r\n        // omit onVnodeXXX hooks\r\n        !isReservedProp(name)\r\n      ) {\r\n        hasHydrationEventBinding = true\r\n      }\r\n\r\n      if (isEventHandler && isReservedProp(name)) {\r\n        hasVnodeHook = true\r\n      }\r\n\r\n      if (isEventHandler && value.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n        // handler wrapped with internal helper e.g. withModifiers(fn)\r\n        // extract the actual expression\r\n        value = value.arguments[0] as JSChildNode\r\n      }\r\n\r\n      if (\r\n        value.type === NodeTypes.JS_CACHE_EXPRESSION ||\r\n        ((value.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n          value.type === NodeTypes.COMPOUND_EXPRESSION) &&\r\n          getConstantType(value, context) > 0)\r\n      ) {\r\n        // skip if the prop is a cached handler or has constant value\r\n        return\r\n      }\r\n\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n      } else if (name === 'class') {\r\n        hasClassBinding = true\r\n      } else if (name === 'style') {\r\n        hasStyleBinding = true\r\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n\r\n      // treat the dynamic class and style binding of the component as dynamic props\r\n      if (\r\n        isComponent &&\r\n        (name === 'class' || name === 'style') &&\r\n        !dynamicPropNames.includes(name)\r\n      ) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n    } else {\r\n      hasDynamicKeys = true\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < props.length; i++) {\r\n    // static attribute\r\n    const prop = props[i]\r\n    if (prop.type === NodeTypes.ATTRIBUTE) {\r\n      const { loc, name, nameLoc, value } = prop\r\n      let isStatic = true\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n        if (context.scopes.vFor > 0) {\r\n          properties.push(\r\n            createObjectProperty(\r\n              createSimpleExpression('ref_for', true),\r\n              createSimpleExpression('true'),\r\n            ),\r\n          )\r\n        }\r\n        // in inline mode there is no setupState object, so we can't use string\r\n        // keys to set the ref. Instead, we need to transform it to pass the\r\n        // actual ref instead.\r\n        if (!__BROWSER__ && value && context.inline) {\r\n          const binding = context.bindingMetadata[value.content]\r\n          if (\r\n            binding === BindingTypes.SETUP_LET ||\r\n            binding === BindingTypes.SETUP_REF ||\r\n            binding === BindingTypes.SETUP_MAYBE_REF\r\n          ) {\r\n            isStatic = false\r\n            properties.push(\r\n              createObjectProperty(\r\n                createSimpleExpression('ref_key', true),\r\n                createSimpleExpression(value.content, true, value.loc),\r\n              ),\r\n            )\r\n          }\r\n        }\r\n      }\r\n      // skip is on <component>, or is=\"vue:xxx\"\r\n      if (\r\n        name === 'is' &&\r\n        (isComponentTag(tag) ||\r\n          (value && value.content.startsWith('vue:')) ||\r\n          (__COMPAT__ &&\r\n            isCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n              context,\r\n            )))\r\n      ) {\r\n        continue\r\n      }\r\n      properties.push(\r\n        createObjectProperty(\r\n          createSimpleExpression(name, true, nameLoc),\r\n          createSimpleExpression(\r\n            value ? value.content : '',\r\n            isStatic,\r\n            value ? value.loc : loc,\r\n          ),\r\n        ),\r\n      )\r\n    } else {\r\n      // directives\r\n      const { name, arg, exp, loc, modifiers } = prop\r\n      const isVBind = name === 'bind'\r\n      const isVOn = name === 'on'\r\n\r\n      // skip v-slot - it is handled by its dedicated transform.\r\n      if (name === 'slot') {\r\n        if (!isComponent) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_V_SLOT_MISPLACED, loc),\r\n          )\r\n        }\r\n        continue\r\n      }\r\n      // skip v-once/v-memo - they are handled by dedicated transforms.\r\n      if (name === 'once' || name === 'memo') {\r\n        continue\r\n      }\r\n      // skip v-is and :is on <component>\r\n      if (\r\n        name === 'is' ||\r\n        (isVBind &&\r\n          isStaticArgOf(arg, 'is') &&\r\n          (isComponentTag(tag) ||\r\n            (__COMPAT__ &&\r\n              isCompatEnabled(\r\n                CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n                context,\r\n              ))))\r\n      ) {\r\n        continue\r\n      }\r\n      // skip v-on in SSR compilation\r\n      if (isVOn && ssr) {\r\n        continue\r\n      }\r\n\r\n      if (\r\n        // #938: elements with dynamic keys should be forced into blocks\r\n        (isVBind && isStaticArgOf(arg, 'key')) ||\r\n        // inline before-update hooks need to force block so that it is invoked\r\n        // before children\r\n        (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))\r\n      ) {\r\n        shouldUseBlock = true\r\n      }\r\n\r\n      if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n        properties.push(\r\n          createObjectProperty(\r\n            createSimpleExpression('ref_for', true),\r\n            createSimpleExpression('true'),\r\n          ),\r\n        )\r\n      }\r\n\r\n      // special case for v-bind and v-on with no argument\r\n      if (!arg && (isVBind || isVOn)) {\r\n        hasDynamicKeys = true\r\n        if (exp) {\r\n          if (isVBind) {\r\n            // have to merge early for compat build check\r\n            pushMergeArg()\r\n            if (__COMPAT__) {\r\n              // 2.x v-bind object order compat\r\n              if (__DEV__) {\r\n                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                  if (arg.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n                    return arg.properties.some(({ key }) => {\r\n                      if (\r\n                        key.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n                        !key.isStatic\r\n                      ) {\r\n                        return true\r\n                      }\r\n                      return (\r\n                        key.content !== 'class' &&\r\n                        key.content !== 'style' &&\r\n                        !isOn(key.content)\r\n                      )\r\n                    })\r\n                  } else {\r\n                    // dynamic expression\r\n                    return true\r\n                  }\r\n                })\r\n                if (hasOverridableKeys) {\r\n                  checkCompatEnabled(\r\n                    CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                    context,\r\n                    loc,\r\n                  )\r\n                }\r\n              }\r\n\r\n              if (\r\n                isCompatEnabled(\r\n                  CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                  context,\r\n                )\r\n              ) {\r\n                mergeArgs.unshift(exp)\r\n                continue\r\n              }\r\n            }\r\n\r\n            mergeArgs.push(exp)\r\n          } else {\r\n            // v-on=\"obj\" -> toHandlers(obj)\r\n            pushMergeArg({\r\n              type: NodeTypes.JS_CALL_EXPRESSION,\r\n              loc,\r\n              callee: context.helper(TO_HANDLERS),\r\n              arguments: isComponent ? [exp] : [exp, `true`],\r\n            })\r\n          }\r\n        } else {\r\n          context.onError(\r\n            createCompilerError(\r\n              isVBind\r\n                ? ErrorCodes.X_V_BIND_NO_EXPRESSION\r\n                : ErrorCodes.X_V_ON_NO_EXPRESSION,\r\n              loc,\r\n            ),\r\n          )\r\n        }\r\n        continue\r\n      }\r\n\r\n      // force hydration for v-bind with .prop modifier\r\n      if (isVBind && modifiers.includes('prop')) {\r\n        patchFlag |= PatchFlags.NEED_HYDRATION\r\n      }\r\n\r\n      const directiveTransform = context.directiveTransforms[name]\r\n      if (directiveTransform) {\r\n        // has built-in directive transform.\r\n        const { props, needRuntime } = directiveTransform(prop, node, context)\r\n        !ssr && props.forEach(analyzePatchFlag)\r\n        if (isVOn && arg && !isStaticExp(arg)) {\r\n          pushMergeArg(createObjectExpression(props, elementLoc))\r\n        } else {\r\n          properties.push(...props)\r\n        }\r\n        if (needRuntime) {\r\n          runtimeDirectives.push(prop)\r\n          if (isSymbol(needRuntime)) {\r\n            directiveImportMap.set(prop, needRuntime)\r\n          }\r\n        }\r\n      } else if (!isBuiltInDirective(name)) {\r\n        // no built-in transform, this is a user custom directive.\r\n        runtimeDirectives.push(prop)\r\n        // custom dirs may use beforeUpdate so they need to force blocks\r\n        // to ensure before-update gets called before children update\r\n        if (hasChildren) {\r\n          shouldUseBlock = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let propsExpression: PropsExpression | undefined = undefined\r\n\r\n  // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n  if (mergeArgs.length) {\r\n    // close up any not-yet-merged props\r\n    pushMergeArg()\r\n    if (mergeArgs.length > 1) {\r\n      propsExpression = createCallExpression(\r\n        context.helper(MERGE_PROPS),\r\n        mergeArgs,\r\n        elementLoc,\r\n      )\r\n    } else {\r\n      // single v-bind with nothing else - no need for a mergeProps call\r\n      propsExpression = mergeArgs[0]\r\n    }\r\n  } else if (properties.length) {\r\n    propsExpression = createObjectExpression(\r\n      dedupeProperties(properties),\r\n      elementLoc,\r\n    )\r\n  }\r\n\r\n  // patchFlag analysis\r\n  if (hasDynamicKeys) {\r\n    patchFlag |= PatchFlags.FULL_PROPS\r\n  } else {\r\n    if (hasClassBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.CLASS\r\n    }\r\n    if (hasStyleBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.STYLE\r\n    }\r\n    if (dynamicPropNames.length) {\r\n      patchFlag |= PatchFlags.PROPS\r\n    }\r\n    if (hasHydrationEventBinding) {\r\n      patchFlag |= PatchFlags.NEED_HYDRATION\r\n    }\r\n  }\r\n  if (\r\n    !shouldUseBlock &&\r\n    (patchFlag === 0 || patchFlag === PatchFlags.NEED_HYDRATION) &&\r\n    (hasRef || hasVnodeHook || runtimeDirectives.length > 0)\r\n  ) {\r\n    patchFlag |= PatchFlags.NEED_PATCH\r\n  }\r\n\r\n  // pre-normalize props, SSR is skipped for now\r\n  if (!context.inSSR && propsExpression) {\r\n    switch (propsExpression.type) {\r\n      case NodeTypes.JS_OBJECT_EXPRESSION:\r\n        // means that there is no v-bind,\r\n        // but still need to deal with dynamic key binding\r\n        let classKeyIndex = -1\r\n        let styleKeyIndex = -1\r\n        let hasDynamicKey = false\r\n\r\n        for (let i = 0; i < propsExpression.properties.length; i++) {\r\n          const key = propsExpression.properties[i].key\r\n          if (isStaticExp(key)) {\r\n            if (key.content === 'class') {\r\n              classKeyIndex = i\r\n            } else if (key.content === 'style') {\r\n              styleKeyIndex = i\r\n            }\r\n          } else if (!key.isHandlerKey) {\r\n            hasDynamicKey = true\r\n          }\r\n        }\r\n\r\n        const classProp = propsExpression.properties[classKeyIndex]\r\n        const styleProp = propsExpression.properties[styleKeyIndex]\r\n\r\n        // no dynamic key\r\n        if (!hasDynamicKey) {\r\n          if (classProp && !isStaticExp(classProp.value)) {\r\n            classProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_CLASS),\r\n              [classProp.value],\r\n            )\r\n          }\r\n          if (\r\n            styleProp &&\r\n            // the static style is compiled into an object,\r\n            // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n            (hasStyleBinding ||\r\n              (styleProp.value.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n                styleProp.value.content.trim()[0] === `[`) ||\r\n              // v-bind:style and style both exist,\r\n              // v-bind:style with static literal object\r\n              styleProp.value.type === NodeTypes.JS_ARRAY_EXPRESSION)\r\n          ) {\r\n            styleProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_STYLE),\r\n              [styleProp.value],\r\n            )\r\n          }\r\n        } else {\r\n          // dynamic key binding, wrap with `normalizeProps`\r\n          propsExpression = createCallExpression(\r\n            context.helper(NORMALIZE_PROPS),\r\n            [propsExpression],\r\n          )\r\n        }\r\n        break\r\n      case NodeTypes.JS_CALL_EXPRESSION:\r\n        // mergeProps call, do nothing\r\n        break\r\n      default:\r\n        // single v-bind\r\n        propsExpression = createCallExpression(\r\n          context.helper(NORMALIZE_PROPS),\r\n          [\r\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n              propsExpression,\r\n            ]),\r\n          ],\r\n        )\r\n        break\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: propsExpression,\r\n    directives: runtimeDirectives,\r\n    patchFlag,\r\n    dynamicPropNames,\r\n    shouldUseBlock,\r\n  }\r\n}\r\n\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties: Property[]): Property[] {\r\n  const knownProps: Map<string, Property> = new Map()\r\n  const deduped: Property[] = []\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const prop = properties[i]\r\n    // dynamic keys are always allowed\r\n    if (prop.key.type === NodeTypes.COMPOUND_EXPRESSION || !prop.key.isStatic) {\r\n      deduped.push(prop)\r\n      continue\r\n    }\r\n    const name = prop.key.content\r\n    const existing = knownProps.get(name)\r\n    if (existing) {\r\n      if (name === 'style' || name === 'class' || isOn(name)) {\r\n        mergeAsArray(existing, prop)\r\n      }\r\n      // unexpected duplicate, should have emitted error during parse\r\n    } else {\r\n      knownProps.set(name, prop)\r\n      deduped.push(prop)\r\n    }\r\n  }\r\n  return deduped\r\n}\r\n\r\nfunction mergeAsArray(existing: Property, incoming: Property) {\r\n  if (existing.value.type === NodeTypes.JS_ARRAY_EXPRESSION) {\r\n    existing.value.elements.push(incoming.value)\r\n  } else {\r\n    existing.value = createArrayExpression(\r\n      [existing.value, incoming.value],\r\n      existing.loc,\r\n    )\r\n  }\r\n}\r\n\r\nexport function buildDirectiveArgs(\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n): ArrayExpression {\r\n  const dirArgs: ArrayExpression['elements'] = []\r\n  const runtime = directiveImportMap.get(dir)\r\n  if (runtime) {\r\n    // built-in directive with runtime\r\n    dirArgs.push(context.helperString(runtime))\r\n  } else {\r\n    // user directive.\r\n    // see if we have directives exposed via <script setup>\r\n    const fromSetup =\r\n      !__BROWSER__ && resolveSetupReference('v-' + dir.name, context)\r\n    if (fromSetup) {\r\n      dirArgs.push(fromSetup)\r\n    } else {\r\n      // inject statement for resolving directive\r\n      context.helper(RESOLVE_DIRECTIVE)\r\n      context.directives.add(dir.name)\r\n      dirArgs.push(toValidAssetId(dir.name, `directive`))\r\n    }\r\n  }\r\n  const { loc } = dir\r\n  if (dir.exp) dirArgs.push(dir.exp)\r\n  if (dir.arg) {\r\n    if (!dir.exp) {\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    dirArgs.push(dir.arg)\r\n  }\r\n  if (Object.keys(dir.modifiers).length) {\r\n    if (!dir.arg) {\r\n      if (!dir.exp) {\r\n        dirArgs.push(`void 0`)\r\n      }\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    const trueExpression = createSimpleExpression(`true`, false, loc)\r\n    dirArgs.push(\r\n      createObjectExpression(\r\n        dir.modifiers.map(modifier =>\r\n          createObjectProperty(modifier, trueExpression),\r\n        ),\r\n        loc,\r\n      ),\r\n    )\r\n  }\r\n  return createArrayExpression(dirArgs, dir.loc)\r\n}\r\n\r\nfunction stringifyDynamicPropNames(props: string[]): string {\r\n  let propsNamesString = `[`\r\n  for (let i = 0, l = props.length; i < l; i++) {\r\n    propsNamesString += JSON.stringify(props[i])\r\n    if (i < l - 1) propsNamesString += ', '\r\n  }\r\n  return propsNamesString + `]`\r\n}\r\n\r\nfunction isComponentTag(tag: string) {\r\n  return tag === 'component' || tag === 'Component'\r\n}\r\n","import type { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  type CallExpression,\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  type SlotOutletNode,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n} from '../ast'\r\nimport { isSlotOutlet, isStaticArgOf, isStaticExp } from '../utils'\r\nimport { type PropsExpression, buildProps } from './transformElement'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport { RENDER_SLOT } from '../runtimeHelpers'\r\nimport { camelize } from '@vue/shared'\r\n\r\nexport const transformSlotOutlet: NodeTransform = (node, context) => {\r\n  if (isSlotOutlet(node)) {\r\n    const { children, loc } = node\r\n    const { slotName, slotProps } = processSlotOutlet(node, context)\r\n\r\n    const slotArgs: CallExpression['arguments'] = [\r\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n      slotName,\r\n      '{}',\r\n      'undefined',\r\n      'true',\r\n    ]\r\n    let expectedLen = 2\r\n\r\n    if (slotProps) {\r\n      slotArgs[2] = slotProps\r\n      expectedLen = 3\r\n    }\r\n\r\n    if (children.length) {\r\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc)\r\n      expectedLen = 4\r\n    }\r\n\r\n    if (context.scopeId && !context.slotted) {\r\n      expectedLen = 5\r\n    }\r\n    slotArgs.splice(expectedLen) // remove unused arguments\r\n\r\n    node.codegenNode = createCallExpression(\r\n      context.helper(RENDER_SLOT),\r\n      slotArgs,\r\n      loc,\r\n    )\r\n  }\r\n}\r\n\r\ninterface SlotOutletProcessResult {\r\n  slotName: string | ExpressionNode\r\n  slotProps: PropsExpression | undefined\r\n}\r\n\r\nexport function processSlotOutlet(\r\n  node: SlotOutletNode,\r\n  context: TransformContext,\r\n): SlotOutletProcessResult {\r\n  let slotName: string | ExpressionNode = `\"default\"`\r\n  let slotProps: PropsExpression | undefined = undefined\r\n\r\n  const nonNameProps = []\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.value) {\r\n        if (p.name === 'name') {\r\n          slotName = JSON.stringify(p.value.content)\r\n        } else {\r\n          p.name = camelize(p.name)\r\n          nonNameProps.push(p)\r\n        }\r\n      }\r\n    } else {\r\n      if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n        if (p.exp) slotName = p.exp\r\n      } else {\r\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n          p.arg.content = camelize(p.arg.content)\r\n        }\r\n        nonNameProps.push(p)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (nonNameProps.length > 0) {\r\n    const { props, directives } = buildProps(\r\n      node,\r\n      context,\r\n      nonNameProps,\r\n      false,\r\n      false,\r\n    )\r\n    slotProps = props\r\n\r\n    if (directives.length) {\r\n      context.onError(\r\n        createCompilerError(\r\n          ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n          directives[0].loc,\r\n        ),\r\n      )\r\n    }\r\n  }\r\n\r\n  return {\r\n    slotName,\r\n    slotProps,\r\n  }\r\n}\r\n","import type { DirectiveTransform, DirectiveTransformResult } from '../transform'\r\nimport {\r\n  type DirectiveNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  createCompoundExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n} from '../ast'\r\nimport { camelize, toHandlerKey } from '@vue/shared'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { hasScopeRef, isMemberExpression } from '../utils'\r\nimport { TO_HANDLER_KEY } from '../runtimeHelpers'\r\n\r\nconst fnExpRE =\r\n  /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/\r\n\r\nexport interface VOnDirectiveNode extends DirectiveNode {\r\n  // v-on without arg is handled directly in ./transformElements.ts due to it affecting\r\n  // codegen for the entire props object. This transform here is only for v-on\r\n  // *with* args.\r\n  arg: ExpressionNode\r\n  // exp is guaranteed to be a simple expression here because v-on w/ arg is\r\n  // skipped by transformExpression as a special case.\r\n  exp: SimpleExpressionNode | undefined\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (\r\n  dir,\r\n  node,\r\n  context,\r\n  augmentor,\r\n) => {\r\n  const { loc, modifiers, arg } = dir as VOnDirectiveNode\r\n  if (!dir.exp && !modifiers.length) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_ON_NO_EXPRESSION, loc))\r\n  }\r\n  let eventName: ExpressionNode\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      let rawName = arg.content\r\n      if (__DEV__ && rawName.startsWith('vnode')) {\r\n        context.onError(createCompilerError(ErrorCodes.X_VNODE_HOOKS, arg.loc))\r\n      }\r\n      if (rawName.startsWith('vue:')) {\r\n        rawName = `vnode-${rawName.slice(4)}`\r\n      }\r\n      const eventString =\r\n        node.tagType !== ElementTypes.ELEMENT ||\r\n        rawName.startsWith('vnode') ||\r\n        !/[A-Z]/.test(rawName)\r\n          ? // for non-element and vnode lifecycle event listeners, auto convert\r\n            // it to camelCase. See issue #2249\r\n            toHandlerKey(camelize(rawName))\r\n          : // preserve case for plain element listeners that have uppercase\r\n            // letters, as these may be custom elements' custom events\r\n            `on:${rawName}`\r\n      eventName = createSimpleExpression(eventString, true, arg.loc)\r\n    } else {\r\n      // #2388\r\n      eventName = createCompoundExpression([\r\n        `${context.helperString(TO_HANDLER_KEY)}(`,\r\n        arg,\r\n        `)`,\r\n      ])\r\n    }\r\n  } else {\r\n    // already a compound expression.\r\n    eventName = arg\r\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`)\r\n    eventName.children.push(`)`)\r\n  }\r\n\r\n  // handler processing\r\n  let exp: ExpressionNode | undefined = dir.exp as\r\n    | SimpleExpressionNode\r\n    | undefined\r\n  if (exp && !exp.content.trim()) {\r\n    exp = undefined\r\n  }\r\n  let shouldCache: boolean = context.cacheHandlers && !exp && !context.inVOnce\r\n  if (exp) {\r\n    const isMemberExp = isMemberExpression(exp.content, context)\r\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content))\r\n    const hasMultipleStatements = exp.content.includes(`;`)\r\n\r\n    // process the expression since it's been skipped\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      isInlineStatement && context.addIdentifiers(`$event`)\r\n      exp = dir.exp = processExpression(\r\n        exp,\r\n        context,\r\n        false,\r\n        hasMultipleStatements,\r\n      )\r\n      isInlineStatement && context.removeIdentifiers(`$event`)\r\n      // with scope analysis, the function is hoistable if it has no reference\r\n      // to scope variables.\r\n      shouldCache =\r\n        context.cacheHandlers &&\r\n        // unnecessary to cache inside v-once\r\n        !context.inVOnce &&\r\n        // runtime constants don't need to be cached\r\n        // (this is analyzed by compileScript in SFC <script setup>)\r\n        !(exp.type === NodeTypes.SIMPLE_EXPRESSION && exp.constType > 0) &&\r\n        // #1541 bail if this is a member exp handler passed to a component -\r\n        // we need to use the original function to preserve arity,\r\n        // e.g. <transition> relies on checking cb.length to determine\r\n        // transition end handling. Inline function is ok since its arity\r\n        // is preserved even when cached.\r\n        !(isMemberExp && node.tagType === ElementTypes.COMPONENT) &&\r\n        // bail if the function references closure variables (v-for, v-slot)\r\n        // it must be passed fresh to avoid stale values.\r\n        !hasScopeRef(exp, context.identifiers)\r\n      // If the expression is optimizable and is a member expression pointing\r\n      // to a function, turn it into invocation (and wrap in an arrow function\r\n      // below) so that it always accesses the latest value when called - thus\r\n      // avoiding the need to be patched.\r\n      if (shouldCache && isMemberExp) {\r\n        if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          exp.content = `${exp.content} && ${exp.content}(...args)`\r\n        } else {\r\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`]\r\n        }\r\n      }\r\n    }\r\n\r\n    if (__DEV__ && __BROWSER__) {\r\n      validateBrowserExpression(\r\n        exp as SimpleExpressionNode,\r\n        context,\r\n        false,\r\n        hasMultipleStatements,\r\n      )\r\n    }\r\n\r\n    if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n      // wrap inline statement in a function expression\r\n      exp = createCompoundExpression([\r\n        `${\r\n          isInlineStatement\r\n            ? !__BROWSER__ && context.isTS\r\n              ? `($event: any)`\r\n              : `$event`\r\n            : `${\r\n                !__BROWSER__ && context.isTS ? `\\n//@ts-ignore\\n` : ``\r\n              }(...args)`\r\n        } => ${hasMultipleStatements ? `{` : `(`}`,\r\n        exp,\r\n        hasMultipleStatements ? `}` : `)`,\r\n      ])\r\n    }\r\n  }\r\n\r\n  let ret: DirectiveTransformResult = {\r\n    props: [\r\n      createObjectProperty(\r\n        eventName,\r\n        exp || createSimpleExpression(`() => {}`, false, loc),\r\n      ),\r\n    ],\r\n  }\r\n\r\n  // apply extended compiler augmentor\r\n  if (augmentor) {\r\n    ret = augmentor(ret)\r\n  }\r\n\r\n  if (shouldCache) {\r\n    // cache handlers so that it's always the same handler being passed down.\r\n    // this avoids unnecessary re-renders when users use inline handlers on\r\n    // components.\r\n    ret.props[0].value = context.cache(ret.props[0].value)\r\n  }\r\n\r\n  // mark the key as handler for props normalization check\r\n  ret.props.forEach(p => (p.key.isHandlerKey = true))\r\n  return ret\r\n}\r\n","import type { DirectiveTransform } from '../transform'\r\nimport {\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n} from '../ast'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport { camelize } from '@vue/shared'\r\nimport { CAMELIZE } from '../runtimeHelpers'\r\nimport { processExpression } from './transformExpression'\r\n\r\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nexport const transformBind: DirectiveTransform = (dir, _node, context) => {\r\n  const { modifiers, loc } = dir\r\n  const arg = dir.arg!\r\n\r\n  // :arg is replaced by :arg=\"arg\"\r\n  let { exp } = dir\r\n  if (!exp && arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    const propName = camelize(arg.content)\r\n    exp = dir.exp = createSimpleExpression(propName, false, arg.loc)\r\n    if (!__BROWSER__) {\r\n      exp = dir.exp = processExpression(exp, context)\r\n    }\r\n  }\r\n\r\n  if (arg.type !== NodeTypes.SIMPLE_EXPRESSION) {\r\n    arg.children.unshift(`(`)\r\n    arg.children.push(`) || \"\"`)\r\n  } else if (!arg.isStatic) {\r\n    arg.content = `${arg.content} || \"\"`\r\n  }\r\n\r\n  // .sync is replaced by v-model:arg\r\n  if (modifiers.includes('camel')) {\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      if (arg.isStatic) {\r\n        arg.content = camelize(arg.content)\r\n      } else {\r\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`\r\n      }\r\n    } else {\r\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`)\r\n      arg.children.push(`)`)\r\n    }\r\n  }\r\n\r\n  if (!context.inSSR) {\r\n    if (modifiers.includes('prop')) {\r\n      injectPrefix(arg, '.')\r\n    }\r\n    if (modifiers.includes('attr')) {\r\n      injectPrefix(arg, '^')\r\n    }\r\n  }\r\n\r\n  if (\r\n    !exp ||\r\n    (exp.type === NodeTypes.SIMPLE_EXPRESSION && !exp.content.trim())\r\n  ) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_BIND_NO_EXPRESSION, loc))\r\n    return {\r\n      props: [createObjectProperty(arg, createSimpleExpression('', true, loc))],\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: [createObjectProperty(arg, exp)],\r\n  }\r\n}\r\n\r\nconst injectPrefix = (arg: ExpressionNode, prefix: string) => {\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      arg.content = prefix + arg.content\r\n    } else {\r\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``\r\n    }\r\n  } else {\r\n    arg.children.unshift(`'${prefix}' + (`)\r\n    arg.children.push(`)`)\r\n  }\r\n}\r\n","import type { NodeTransform } from '../transform'\r\nimport {\r\n  type CallExpression,\r\n  type CompoundExpressionNode,\r\n  ConstantTypes,\r\n  ElementTypes,\r\n  NodeTypes,\r\n  createCallExpression,\r\n  createCompoundExpression,\r\n} from '../ast'\r\nimport { isText } from '../utils'\r\nimport { CREATE_TEXT } from '../runtimeHelpers'\r\nimport { PatchFlagNames, PatchFlags } from '@vue/shared'\r\nimport { getConstantType } from './hoistStatic'\r\n\r\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nexport const transformText: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ROOT ||\r\n    node.type === NodeTypes.ELEMENT ||\r\n    node.type === NodeTypes.FOR ||\r\n    node.type === NodeTypes.IF_BRANCH\r\n  ) {\r\n    // perform the transform on node exit so that all expressions have already\r\n    // been processed.\r\n    return () => {\r\n      const children = node.children\r\n      let currentContainer: CompoundExpressionNode | undefined = undefined\r\n      let hasText = false\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child)) {\r\n          hasText = true\r\n          for (let j = i + 1; j < children.length; j++) {\r\n            const next = children[j]\r\n            if (isText(next)) {\r\n              if (!currentContainer) {\r\n                currentContainer = children[i] = createCompoundExpression(\r\n                  [child],\r\n                  child.loc,\r\n                )\r\n              }\r\n              // merge adjacent text node into current\r\n              currentContainer.children.push(` + `, next)\r\n              children.splice(j, 1)\r\n              j--\r\n            } else {\r\n              currentContainer = undefined\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        !hasText ||\r\n        // if this is a plain element with a single text child, leave it\r\n        // as-is since the runtime has dedicated fast path for this by directly\r\n        // setting textContent of the element.\r\n        // for component root it's always normalized anyway.\r\n        (children.length === 1 &&\r\n          (node.type === NodeTypes.ROOT ||\r\n            (node.type === NodeTypes.ELEMENT &&\r\n              node.tagType === ElementTypes.ELEMENT &&\r\n              // #3756\r\n              // custom directives can potentially add DOM elements arbitrarily,\r\n              // we need to avoid setting textContent of the element at runtime\r\n              // to avoid accidentally overwriting the DOM elements added\r\n              // by the user through custom directives.\r\n              !node.props.find(\r\n                p =>\r\n                  p.type === NodeTypes.DIRECTIVE &&\r\n                  !context.directiveTransforms[p.name],\r\n              ) &&\r\n              // in compat mode, <template> tags with no special directives\r\n              // will be rendered as a fragment so its children must be\r\n              // converted into vnodes.\r\n              !(__COMPAT__ && node.tag === 'template'))))\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n      // runtime normalization.\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n          const callArgs: CallExpression['arguments'] = []\r\n          // createTextVNode defaults to single whitespace, so if it is a\r\n          // single space the code could be an empty call to save bytes.\r\n          if (child.type !== NodeTypes.TEXT || child.content !== ' ') {\r\n            callArgs.push(child)\r\n          }\r\n          // mark dynamic text with flag so it gets patched inside a block\r\n          if (\r\n            !context.ssr &&\r\n            getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n          ) {\r\n            callArgs.push(\r\n              PatchFlags.TEXT +\r\n                (__DEV__ ? ` /* ${PatchFlagNames[PatchFlags.TEXT]} */` : ``),\r\n            )\r\n          }\r\n          children[i] = {\r\n            type: NodeTypes.TEXT_CALL,\r\n            content: child,\r\n            loc: child.loc,\r\n            codegenNode: createCallExpression(\r\n              context.helper(CREATE_TEXT),\r\n              callArgs,\r\n            ),\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { NodeTransform } from '../transform'\r\nimport { findDir } from '../utils'\r\nimport { type ElementNode, type ForNode, type IfNode, NodeTypes } from '../ast'\r\nimport { SET_BLOCK_TRACKING } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformOnce: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT && findDir(node, 'once', true)) {\r\n    if (seen.has(node) || context.inVOnce || context.inSSR) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    context.inVOnce = true\r\n    context.helper(SET_BLOCK_TRACKING)\r\n    return () => {\r\n      context.inVOnce = false\r\n      const cur = context.currentNode as ElementNode | IfNode | ForNode\r\n      if (cur.codegenNode) {\r\n        cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { DirectiveTransform } from '../transform'\r\nimport {\r\n  ConstantTypes,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  type Property,\r\n  createCompoundExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n} from '../ast'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport {\r\n  hasScopeRef,\r\n  isMemberExpression,\r\n  isSimpleIdentifier,\r\n  isStaticExp,\r\n} from '../utils'\r\nimport { IS_REF } from '../runtimeHelpers'\r\nimport { BindingTypes } from '../options'\r\nimport { camelize } from '@vue/shared'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, arg } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_NO_EXPRESSION, dir.loc),\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  // we assume v-model directives are always parsed\r\n  // (not artificially created by a transform)\r\n  const rawExp = exp.loc.source\r\n  const expString =\r\n    exp.type === NodeTypes.SIMPLE_EXPRESSION ? exp.content : rawExp\r\n\r\n  // im SFC <script setup> inline mode, the exp may have been transformed into\r\n  // _unref(exp)\r\n  const bindingType = context.bindingMetadata[rawExp]\r\n\r\n  // check props\r\n  if (\r\n    bindingType === BindingTypes.PROPS ||\r\n    bindingType === BindingTypes.PROPS_ALIASED\r\n  ) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_MODEL_ON_PROPS, exp.loc))\r\n    return createTransformProps()\r\n  }\r\n\r\n  const maybeRef =\r\n    !__BROWSER__ &&\r\n    context.inline &&\r\n    (bindingType === BindingTypes.SETUP_LET ||\r\n      bindingType === BindingTypes.SETUP_REF ||\r\n      bindingType === BindingTypes.SETUP_MAYBE_REF)\r\n\r\n  if (\r\n    !expString.trim() ||\r\n    (!isMemberExpression(expString, context) && !maybeRef)\r\n  ) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION, exp.loc),\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    isSimpleIdentifier(expString) &&\r\n    context.identifiers[expString]\r\n  ) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE, exp.loc),\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  const propName = arg ? arg : createSimpleExpression('modelValue', true)\r\n  const eventName = arg\r\n    ? isStaticExp(arg)\r\n      ? `onUpdate:${camelize(arg.content)}`\r\n      : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n    : `onUpdate:modelValue`\r\n\r\n  let assignmentExp: ExpressionNode\r\n  const eventArg = context.isTS ? `($event: any)` : `$event`\r\n  if (maybeRef) {\r\n    if (bindingType === BindingTypes.SETUP_REF) {\r\n      // v-model used on known ref.\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => ((`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `).value = $event)`,\r\n      ])\r\n    } else {\r\n      // v-model used on a potentially ref binding in <script setup> inline mode.\r\n      // the assignment needs to check whether the binding is actually a ref.\r\n      const altAssignment =\r\n        bindingType === BindingTypes.SETUP_LET ? `${rawExp} = $event` : `null`\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `).value = $event : ${altAssignment})`,\r\n      ])\r\n    }\r\n  } else {\r\n    assignmentExp = createCompoundExpression([\r\n      `${eventArg} => ((`,\r\n      exp,\r\n      `) = $event)`,\r\n    ])\r\n  }\r\n\r\n  const props = [\r\n    // modelValue: foo\r\n    createObjectProperty(propName, dir.exp!),\r\n    // \"onUpdate:modelValue\": $event => (foo = $event)\r\n    createObjectProperty(eventName, assignmentExp),\r\n  ]\r\n\r\n  // cache v-model handler if applicable (when it doesn't refer any scope vars)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    !context.inVOnce &&\r\n    context.cacheHandlers &&\r\n    !hasScopeRef(exp, context.identifiers)\r\n  ) {\r\n    props[1].value = context.cache(props[1].value)\r\n  }\r\n\r\n  // modelModifiers: { foo: true, \"bar-baz\": true }\r\n  if (dir.modifiers.length && node.tagType === ElementTypes.COMPONENT) {\r\n    const modifiers = dir.modifiers\r\n      .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n      .join(`, `)\r\n    const modifiersKey = arg\r\n      ? isStaticExp(arg)\r\n        ? `${arg.content}Modifiers`\r\n        : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n      : `modelModifiers`\r\n    props.push(\r\n      createObjectProperty(\r\n        modifiersKey,\r\n        createSimpleExpression(\r\n          `{ ${modifiers} }`,\r\n          false,\r\n          dir.loc,\r\n          ConstantTypes.CAN_HOIST,\r\n        ),\r\n      ),\r\n    )\r\n  }\r\n\r\n  return createTransformProps(props)\r\n}\r\n\r\nfunction createTransformProps(props: Property[] = []) {\r\n  return { props }\r\n}\r\n","import type { NodeTransform } from '../transform'\r\nimport { findDir } from '../utils'\r\nimport {\r\n  ElementTypes,\r\n  type MemoExpression,\r\n  NodeTypes,\r\n  type PlainElementNode,\r\n  convertToBlock,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n} from '../ast'\r\nimport { WITH_MEMO } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformMemo: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    const dir = findDir(node, 'memo')\r\n    if (!dir || seen.has(node)) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    return () => {\r\n      const codegenNode =\r\n        node.codegenNode ||\r\n        (context.currentNode as PlainElementNode).codegenNode\r\n      if (codegenNode && codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        // non-component sub tree should be turned into a block\r\n        if (node.tagType !== ElementTypes.COMPONENT) {\r\n          convertToBlock(codegenNode, context)\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n          dir.exp!,\r\n          createFunctionExpression(undefined, codegenNode),\r\n          `_cache`,\r\n          String(context.cached++),\r\n        ]) as MemoExpression\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { CompilerOptions } from './options'\r\nimport { baseParse } from './parser'\r\nimport {\r\n  type DirectiveTransform,\r\n  type NodeTransform,\r\n  transform,\r\n} from './transform'\r\nimport { type CodegenResult, generate } from './codegen'\r\nimport type { RootNode } from './ast'\r\nimport { extend, isString } from '@vue/shared'\r\nimport { transformIf } from './transforms/vIf'\r\nimport { transformFor } from './transforms/vFor'\r\nimport { transformExpression } from './transforms/transformExpression'\r\nimport { transformSlotOutlet } from './transforms/transformSlotOutlet'\r\nimport { transformElement } from './transforms/transformElement'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformBind } from './transforms/vBind'\r\nimport { trackSlotScopes, trackVForSlotScopes } from './transforms/vSlot'\r\nimport { transformText } from './transforms/transformText'\r\nimport { transformOnce } from './transforms/vOnce'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformFilter } from './compat/transformFilter'\r\nimport { ErrorCodes, createCompilerError, defaultOnError } from './errors'\r\nimport { transformMemo } from './transforms/vMemo'\r\n\r\nexport type TransformPreset = [\r\n  NodeTransform[],\r\n  Record<string, DirectiveTransform>,\r\n]\r\n\r\nexport function getBaseTransformPreset(\r\n  prefixIdentifiers?: boolean,\r\n): TransformPreset {\r\n  return [\r\n    [\r\n      transformOnce,\r\n      transformIf,\r\n      transformMemo,\r\n      transformFor,\r\n      ...(__COMPAT__ ? [transformFilter] : []),\r\n      ...(!__BROWSER__ && prefixIdentifiers\r\n        ? [\r\n            // order is important\r\n            trackVForSlotScopes,\r\n            transformExpression,\r\n          ]\r\n        : __BROWSER__ && __DEV__\r\n          ? [transformExpression]\r\n          : []),\r\n      transformSlotOutlet,\r\n      transformElement,\r\n      trackSlotScopes,\r\n      transformText,\r\n    ],\r\n    {\r\n      on: transformOn,\r\n      bind: transformBind,\r\n      model: transformModel,\r\n    },\r\n  ]\r\n}\r\n\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nexport function baseCompile(\r\n  source: string | RootNode,\r\n  options: CompilerOptions = {},\r\n): CodegenResult {\r\n  const onError = options.onError || defaultOnError\r\n  const isModuleMode = options.mode === 'module'\r\n  /* istanbul ignore if */\r\n  if (__BROWSER__) {\r\n    if (options.prefixIdentifiers === true) {\r\n      onError(createCompilerError(ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED))\r\n    } else if (isModuleMode) {\r\n      onError(createCompilerError(ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED))\r\n    }\r\n  }\r\n\r\n  const prefixIdentifiers =\r\n    !__BROWSER__ && (options.prefixIdentifiers === true || isModuleMode)\r\n  if (!prefixIdentifiers && options.cacheHandlers) {\r\n    onError(createCompilerError(ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED))\r\n  }\r\n  if (options.scopeId && !isModuleMode) {\r\n    onError(createCompilerError(ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED))\r\n  }\r\n\r\n  const resolvedOptions = extend({}, options, {\r\n    prefixIdentifiers,\r\n  })\r\n  // 解析html判断（词法语法分析），最后会生成一个树形结构\r\n  const ast = isString(source) ? baseParse(source, resolvedOptions) : source\r\n  const [nodeTransforms, directiveTransforms] =\r\n    getBaseTransformPreset(prefixIdentifiers)\r\n\r\n  if (!__BROWSER__ && options.isTS) {\r\n    const { expressionPlugins } = options\r\n    if (!expressionPlugins || !expressionPlugins.includes('typescript')) {\r\n      options.expressionPlugins = [...(expressionPlugins || []), 'typescript']\r\n    }\r\n  }\r\n\r\n  transform(\r\n    ast,\r\n    extend({}, resolvedOptions, {\r\n      nodeTransforms: [\r\n        ...nodeTransforms,\r\n        ...(options.nodeTransforms || []), // user transforms\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        directiveTransforms,\r\n        options.directiveTransforms || {}, // user transforms\r\n      ),\r\n    }),\r\n  )\r\n\r\n  return generate(ast, resolvedOptions)\r\n}\r\n","import type {\r\n  ElementNode,\r\n  Namespace,\r\n  Namespaces,\r\n  ParentNode,\r\n  TemplateChildNode,\r\n} from './ast'\r\nimport type { CompilerError } from './errors'\r\nimport type {\r\n  DirectiveTransform,\r\n  NodeTransform,\r\n  TransformContext,\r\n} from './transform'\r\nimport type { CompilerCompatOptions } from './compat/compatConfig'\r\nimport type { ParserPlugin } from '@babel/parser'\r\n\r\nexport interface ErrorHandlingOptions {\r\n  onWarn?: (warning: CompilerError) => void\r\n  onError?: (error: CompilerError) => void\r\n}\r\n\r\nexport interface ParserOptions\r\n  extends ErrorHandlingOptions,\r\n    CompilerCompatOptions {\r\n  /**\r\n   * Base mode is platform agnostic and only parses HTML-like template syntax,\r\n   * treating all tags the same way. Specific tag parsing behavior can be\r\n   * configured by higher-level compilers.\r\n   *\r\n   * HTML mode adds additional logic for handling special parsing behavior in\r\n   * `<script>`, `<style>`,`<title>` and `<textarea>`.\r\n   * The logic is handled inside compiler-core for efficiency.\r\n   *\r\n   * SFC mode treats content of all root-level tags except `<template>` as plain\r\n   * text.\r\n   */\r\n  parseMode?: 'base' | 'html' | 'sfc'\r\n  /**\r\n   * Specify the root namespace to use when parsing a template.\r\n   * Defaults to `Namespaces.HTML` (0).\r\n   */\r\n  ns?: Namespaces\r\n  /**\r\n   * e.g. platform native elements, e.g. `<div>` for browsers\r\n   */\r\n  isNativeTag?: (tag: string) => boolean\r\n  /**\r\n   * e.g. native elements that can self-close, e.g. `<img>`, `<br>`, `<hr>`\r\n   */\r\n  isVoidTag?: (tag: string) => boolean\r\n  /**\r\n   * e.g. elements that should preserve whitespace inside, e.g. `<pre>`\r\n   */\r\n  isPreTag?: (tag: string) => boolean\r\n  /**\r\n   * Platform-specific built-in components e.g. `<Transition>`\r\n   */\r\n  isBuiltInComponent?: (tag: string) => symbol | void\r\n  /**\r\n   * Separate option for end users to extend the native elements list\r\n   */\r\n  isCustomElement?: (tag: string) => boolean | void\r\n  /**\r\n   * Get tag namespace\r\n   */\r\n  getNamespace?: (\r\n    tag: string,\r\n    parent: ElementNode | undefined,\r\n    rootNamespace: Namespace,\r\n  ) => Namespace\r\n  /**\r\n   * @default ['{{', '}}']\r\n   */\r\n  delimiters?: [string, string]\r\n  /**\r\n   * Whitespace handling strategy\r\n   */\r\n  whitespace?: 'preserve' | 'condense'\r\n  /**\r\n   * Only used for DOM compilers that runs in the browser.\r\n   * In non-browser builds, this option is ignored.\r\n   */\r\n  decodeEntities?: (rawText: string, asAttr: boolean) => string\r\n  /**\r\n   * Whether to keep comments in the templates AST.\r\n   * This defaults to `true` in development and `false` in production builds.\r\n   */\r\n  comments?: boolean\r\n  /**\r\n   * Parse JavaScript expressions with Babel.\r\n   * @default false\r\n   */\r\n  prefixIdentifiers?: boolean\r\n  /**\r\n   * A list of parser plugins to enable for `@babel/parser`, which is used to\r\n   * parse expressions in bindings and interpolations.\r\n   * https://babeljs.io/docs/en/next/babel-parser#plugins\r\n   */\r\n  expressionPlugins?: ParserPlugin[]\r\n}\r\n\r\nexport type HoistTransform = (\r\n  children: TemplateChildNode[],\r\n  context: TransformContext,\r\n  parent: ParentNode,\r\n) => void\r\n\r\nexport enum BindingTypes {\r\n  /**\r\n   * returned from data()\r\n   */\r\n  DATA = 'data',\r\n  /**\r\n   * declared as a prop\r\n   */\r\n  PROPS = 'props',\r\n  /**\r\n   * a local alias of a `<script setup>` destructured prop.\r\n   * the original is stored in __propsAliases of the bindingMetadata object.\r\n   */\r\n  PROPS_ALIASED = 'props-aliased',\r\n  /**\r\n   * a let binding (may or may not be a ref)\r\n   */\r\n  SETUP_LET = 'setup-let',\r\n  /**\r\n   * a const binding that can never be a ref.\r\n   * these bindings don't need `unref()` calls when processed in inlined\r\n   * template expressions.\r\n   */\r\n  SETUP_CONST = 'setup-const',\r\n  /**\r\n   * a const binding that does not need `unref()`, but may be mutated.\r\n   */\r\n  SETUP_REACTIVE_CONST = 'setup-reactive-const',\r\n  /**\r\n   * a const binding that may be a ref.\r\n   */\r\n  SETUP_MAYBE_REF = 'setup-maybe-ref',\r\n  /**\r\n   * bindings that are guaranteed to be refs\r\n   */\r\n  SETUP_REF = 'setup-ref',\r\n  /**\r\n   * declared by other options, e.g. computed, inject\r\n   */\r\n  OPTIONS = 'options',\r\n  /**\r\n   * a literal constant, e.g. 'foo', 1, true\r\n   */\r\n  LITERAL_CONST = 'literal-const',\r\n}\r\n\r\nexport type BindingMetadata = {\r\n  [key: string]: BindingTypes | undefined\r\n} & {\r\n  __isScriptSetup?: boolean\r\n  __propsAliases?: Record<string, string>\r\n}\r\n\r\ninterface SharedTransformCodegenOptions {\r\n  /**\r\n   * Transform expressions like {{ foo }} to `_ctx.foo`.\r\n   * If this option is false, the generated code will be wrapped in a\r\n   * `with (this) { ... }` block.\r\n   * - This is force-enabled in module mode, since modules are by default strict\r\n   * and cannot use `with`\r\n   * @default mode === 'module'\r\n   */\r\n  prefixIdentifiers?: boolean\r\n  /**\r\n   * Control whether generate SSR-optimized render functions instead.\r\n   * The resulting function must be attached to the component via the\r\n   * `ssrRender` option instead of `render`.\r\n   *\r\n   * When compiler generates code for SSR's fallback branch, we need to set it to false:\r\n   *  - context.ssr = false\r\n   *\r\n   * see `subTransform` in `ssrTransformComponent.ts`\r\n   */\r\n  ssr?: boolean\r\n  /**\r\n   * Indicates whether the compiler generates code for SSR,\r\n   * it is always true when generating code for SSR,\r\n   * regardless of whether we are generating code for SSR's fallback branch,\r\n   * this means that when the compiler generates code for SSR's fallback branch:\r\n   *  - context.ssr = false\r\n   *  - context.inSSR = true\r\n   */\r\n  inSSR?: boolean\r\n  /**\r\n   * Optional binding metadata analyzed from script - used to optimize\r\n   * binding access when `prefixIdentifiers` is enabled.\r\n   */\r\n  bindingMetadata?: BindingMetadata\r\n  /**\r\n   * Compile the function for inlining inside setup().\r\n   * This allows the function to directly access setup() local bindings.\r\n   */\r\n  inline?: boolean\r\n  /**\r\n   * Indicates that transforms and codegen should try to output valid TS code\r\n   */\r\n  isTS?: boolean\r\n  /**\r\n   * Filename for source map generation.\r\n   * Also used for self-recursive reference in templates\r\n   * @default 'template.vue.html'\r\n   */\r\n  filename?: string\r\n}\r\n\r\nexport interface TransformOptions\r\n  extends SharedTransformCodegenOptions,\r\n    ErrorHandlingOptions,\r\n    CompilerCompatOptions {\r\n  /**\r\n   * An array of node transforms to be applied to every AST node.\r\n   */\r\n  nodeTransforms?: NodeTransform[]\r\n  /**\r\n   * An object of { name: transform } to be applied to every directive attribute\r\n   * node found on element nodes.\r\n   */\r\n  directiveTransforms?: Record<string, DirectiveTransform | undefined>\r\n  /**\r\n   * An optional hook to transform a node being hoisted.\r\n   * used by compiler-dom to turn hoisted nodes into stringified HTML vnodes.\r\n   * @default null\r\n   */\r\n  transformHoist?: HoistTransform | null\r\n  /**\r\n   * If the pairing runtime provides additional built-in elements, use this to\r\n   * mark them as built-in so the compiler will generate component vnodes\r\n   * for them.\r\n   */\r\n  isBuiltInComponent?: (tag: string) => symbol | void\r\n  /**\r\n   * Used by some transforms that expects only native elements\r\n   */\r\n  isCustomElement?: (tag: string) => boolean | void\r\n  /**\r\n   * Transform expressions like {{ foo }} to `_ctx.foo`.\r\n   * If this option is false, the generated code will be wrapped in a\r\n   * `with (this) { ... }` block.\r\n   * - This is force-enabled in module mode, since modules are by default strict\r\n   * and cannot use `with`\r\n   * @default mode === 'module'\r\n   */\r\n  prefixIdentifiers?: boolean\r\n  /**\r\n   * Hoist static VNodes and props objects to `_hoisted_x` constants\r\n   * @default false\r\n   */\r\n  hoistStatic?: boolean\r\n  /**\r\n   * Cache v-on handlers to avoid creating new inline functions on each render,\r\n   * also avoids the need for dynamically patching the handlers by wrapping it.\r\n   * e.g `@click=\"foo\"` by default is compiled to `{ onClick: foo }`. With this\r\n   * option it's compiled to:\r\n   * ```js\r\n   * { onClick: _cache[0] || (_cache[0] = e => _ctx.foo(e)) }\r\n   * ```\r\n   * - Requires \"prefixIdentifiers\" to be enabled because it relies on scope\r\n   * analysis to determine if a handler is safe to cache.\r\n   * @default false\r\n   */\r\n  cacheHandlers?: boolean\r\n  /**\r\n   * A list of parser plugins to enable for `@babel/parser`, which is used to\r\n   * parse expressions in bindings and interpolations.\r\n   * https://babeljs.io/docs/en/next/babel-parser#plugins\r\n   */\r\n  expressionPlugins?: ParserPlugin[]\r\n  /**\r\n   * SFC scoped styles ID\r\n   */\r\n  scopeId?: string | null\r\n  /**\r\n   * Indicates this SFC template has used :slotted in its styles\r\n   * Defaults to `true` for backwards compatibility - SFC tooling should set it\r\n   * to `false` if no `:slotted` usage is detected in `<style>`\r\n   */\r\n  slotted?: boolean\r\n  /**\r\n   * SFC `<style vars>` injection string\r\n   * Should already be an object expression, e.g. `{ 'xxxx-color': color }`\r\n   * needed to render inline CSS variables on component root\r\n   */\r\n  ssrCssVars?: string\r\n  /**\r\n   * Whether to compile the template assuming it needs to handle HMR.\r\n   * Some edge cases may need to generate different code for HMR to work\r\n   * correctly, e.g. #6938, #7138\r\n   */\r\n  hmr?: boolean\r\n}\r\n\r\nexport interface CodegenOptions extends SharedTransformCodegenOptions {\r\n  /**\r\n   * - `module` mode will generate ES module import statements for helpers\r\n   * and export the render function as the default export.\r\n   * - `function` mode will generate a single `const { helpers... } = Vue`\r\n   * statement and return the render function. It expects `Vue` to be globally\r\n   * available (or passed by wrapping the code with an IIFE). It is meant to be\r\n   * used with `new Function(code)()` to generate a render function at runtime.\r\n   * @default 'function'\r\n   */\r\n  mode?: 'module' | 'function'\r\n  /**\r\n   * Generate source map?\r\n   * @default false\r\n   */\r\n  sourceMap?: boolean\r\n  /**\r\n   * SFC scoped styles ID\r\n   */\r\n  scopeId?: string | null\r\n  /**\r\n   * Option to optimize helper import bindings via variable assignment\r\n   * (only used for webpack code-split)\r\n   * @default false\r\n   */\r\n  optimizeImports?: boolean\r\n  /**\r\n   * Customize where to import runtime helpers from.\r\n   * @default 'vue'\r\n   */\r\n  runtimeModuleName?: string\r\n  /**\r\n   * Customize where to import ssr runtime helpers from/**\r\n   * @default 'vue/server-renderer'\r\n   */\r\n  ssrRuntimeModuleName?: string\r\n  /**\r\n   * Customize the global variable name of `Vue` to get helpers from\r\n   * in function mode\r\n   * @default 'Vue'\r\n   */\r\n  runtimeGlobalName?: string\r\n}\r\n\r\nexport type CompilerOptions = ParserOptions & TransformOptions & CodegenOptions\r\n","import type { DirectiveTransform } from '../transform'\r\n\r\nexport const noopDirectiveTransform: DirectiveTransform = () => ({ props: [] })\r\n","import { registerRuntimeHelpers } from '@vue/compiler-core'\r\n\r\nexport const V_MODEL_RADIO = Symbol(__DEV__ ? `vModelRadio` : ``)\r\nexport const V_MODEL_CHECKBOX = Symbol(__DEV__ ? `vModelCheckbox` : ``)\r\nexport const V_MODEL_TEXT = Symbol(__DEV__ ? `vModelText` : ``)\r\nexport const V_MODEL_SELECT = Symbol(__DEV__ ? `vModelSelect` : ``)\r\nexport const V_MODEL_DYNAMIC = Symbol(__DEV__ ? `vModelDynamic` : ``)\r\n\r\nexport const V_ON_WITH_MODIFIERS = Symbol(__DEV__ ? `vOnModifiersGuard` : ``)\r\nexport const V_ON_WITH_KEYS = Symbol(__DEV__ ? `vOnKeysGuard` : ``)\r\n\r\nexport const V_SHOW = Symbol(__DEV__ ? `vShow` : ``)\r\n\r\nexport const TRANSITION = Symbol(__DEV__ ? `Transition` : ``)\r\nexport const TRANSITION_GROUP = Symbol(__DEV__ ? `TransitionGroup` : ``)\r\n\r\nregisterRuntimeHelpers({\r\n  [V_MODEL_RADIO]: `vModelRadio`,\r\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n  [V_MODEL_TEXT]: `vModelText`,\r\n  [V_MODEL_SELECT]: `vModelSelect`,\r\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n  [V_ON_WITH_KEYS]: `withKeys`,\r\n  [V_SHOW]: `vShow`,\r\n  [TRANSITION]: `Transition`,\r\n  [TRANSITION_GROUP]: `TransitionGroup`,\r\n})\r\n","import { Namespaces, NodeTypes, type ParserOptions } from '@vue/compiler-core'\r\nimport { isHTMLTag, isMathMLTag, isSVGTag, isVoidTag } from '@vue/shared'\r\nimport { TRANSITION, TRANSITION_GROUP } from './runtimeHelpers'\r\nimport { decodeHtmlBrowser } from './decodeHtmlBrowser'\r\n\r\nexport const parserOptions: ParserOptions = {\r\n  parseMode: 'html',\r\n  isVoidTag,\r\n  isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag) || isMathMLTag(tag),\r\n  isPreTag: tag => tag === 'pre',\r\n  decodeEntities: __BROWSER__ ? decodeHtmlBrowser : undefined,\r\n\r\n  isBuiltInComponent: tag => {\r\n    if (tag === 'Transition' || tag === 'transition') {\r\n      return TRANSITION\r\n    } else if (tag === 'TransitionGroup' || tag === 'transition-group') {\r\n      return TRANSITION_GROUP\r\n    }\r\n  },\r\n\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n  getNamespace(tag, parent, rootNamespace) {\r\n    let ns = parent ? parent.ns : rootNamespace\r\n    if (parent && ns === Namespaces.MATH_ML) {\r\n      if (parent.tag === 'annotation-xml') {\r\n        if (tag === 'svg') {\r\n          return Namespaces.SVG\r\n        }\r\n        if (\r\n          parent.props.some(\r\n            a =>\r\n              a.type === NodeTypes.ATTRIBUTE &&\r\n              a.name === 'encoding' &&\r\n              a.value != null &&\r\n              (a.value.content === 'text/html' ||\r\n                a.value.content === 'application/xhtml+xml'),\r\n          )\r\n        ) {\r\n          ns = Namespaces.HTML\r\n        }\r\n      } else if (\r\n        /^m(?:[ions]|text)$/.test(parent.tag) &&\r\n        tag !== 'mglyph' &&\r\n        tag !== 'malignmark'\r\n      ) {\r\n        ns = Namespaces.HTML\r\n      }\r\n    } else if (parent && ns === Namespaces.SVG) {\r\n      if (\r\n        parent.tag === 'foreignObject' ||\r\n        parent.tag === 'desc' ||\r\n        parent.tag === 'title'\r\n      ) {\r\n        ns = Namespaces.HTML\r\n      }\r\n    }\r\n\r\n    if (ns === Namespaces.HTML) {\r\n      if (tag === 'svg') {\r\n        return Namespaces.SVG\r\n      }\r\n      if (tag === 'math') {\r\n        return Namespaces.MATH_ML\r\n      }\r\n    }\r\n    return ns\r\n  },\r\n}\r\n","import {\r\n  ConstantTypes,\r\n  type NodeTransform,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  type SourceLocation,\r\n  createSimpleExpression,\r\n} from '@vue/compiler-core'\r\nimport { parseStringStyle } from '@vue/shared'\r\n\r\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nexport const transformStyle: NodeTransform = node => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    node.props.forEach((p, i) => {\r\n      if (p.type === NodeTypes.ATTRIBUTE && p.name === 'style' && p.value) {\r\n        // replace p with an expression node\r\n        node.props[i] = {\r\n          type: NodeTypes.DIRECTIVE,\r\n          name: `bind`,\r\n          arg: createSimpleExpression(`style`, true, p.loc),\r\n          exp: parseInlineCSS(p.value.content, p.loc),\r\n          modifiers: [],\r\n          loc: p.loc,\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst parseInlineCSS = (\r\n  cssText: string,\r\n  loc: SourceLocation,\r\n): SimpleExpressionNode => {\r\n  const normalized = parseStringStyle(cssText)\r\n  return createSimpleExpression(\r\n    JSON.stringify(normalized),\r\n    false,\r\n    loc,\r\n    ConstantTypes.CAN_STRINGIFY,\r\n  )\r\n}\r\n","import {\r\n  type CompilerError,\r\n  ErrorCodes,\r\n  type SourceLocation,\r\n  createCompilerError,\r\n} from '@vue/compiler-core'\r\n\r\nexport interface DOMCompilerError extends CompilerError {\r\n  code: DOMErrorCodes\r\n}\r\n\r\nexport function createDOMCompilerError(\r\n  code: DOMErrorCodes,\r\n  loc?: SourceLocation,\r\n) {\r\n  return createCompilerError(\r\n    code,\r\n    loc,\r\n    __DEV__ || !__BROWSER__ ? DOMErrorMessages : undefined,\r\n  ) as DOMCompilerError\r\n}\r\n\r\nexport enum DOMErrorCodes {\r\n  X_V_HTML_NO_EXPRESSION = 53 /* ErrorCodes.__EXTEND_POINT__ */,\r\n  X_V_HTML_WITH_CHILDREN,\r\n  X_V_TEXT_NO_EXPRESSION,\r\n  X_V_TEXT_WITH_CHILDREN,\r\n  X_V_MODEL_ON_INVALID_ELEMENT,\r\n  X_V_MODEL_ARG_ON_ELEMENT,\r\n  X_V_MODEL_ON_FILE_INPUT_ELEMENT,\r\n  X_V_MODEL_UNNECESSARY_VALUE,\r\n  X_V_SHOW_NO_EXPRESSION,\r\n  X_TRANSITION_INVALID_CHILDREN,\r\n  X_IGNORED_SIDE_EFFECT_TAG,\r\n  __EXTEND_POINT__,\r\n}\r\n\r\nif (__TEST__) {\r\n  // esbuild cannot infer enum increments if first value is from another\r\n  // file, so we have to manually keep them in sync. this check ensures it\r\n  // errors out if there are collisions.\r\n  if (DOMErrorCodes.X_V_HTML_NO_EXPRESSION < ErrorCodes.__EXTEND_POINT__) {\r\n    throw new Error(\r\n      `DOMErrorCodes need to be updated to ${\r\n        ErrorCodes.__EXTEND_POINT__ + 1\r\n      } to match extension point from core ErrorCodes.`,\r\n    )\r\n  }\r\n}\r\n\r\nexport const DOMErrorMessages: { [code: number]: string } = {\r\n  [DOMErrorCodes.X_V_HTML_NO_EXPRESSION]: `v-html is missing expression.`,\r\n  [DOMErrorCodes.X_V_HTML_WITH_CHILDREN]: `v-html will override element children.`,\r\n  [DOMErrorCodes.X_V_TEXT_NO_EXPRESSION]: `v-text is missing expression.`,\r\n  [DOMErrorCodes.X_V_TEXT_WITH_CHILDREN]: `v-text will override element children.`,\r\n  [DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n  [DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT]: `v-model argument is not supported on plain elements.`,\r\n  [DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n  [DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n  [DOMErrorCodes.X_V_SHOW_NO_EXPRESSION]: `v-show is missing expression.`,\r\n  [DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN]: `<Transition> expects exactly one child element or component.`,\r\n  [DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`,\r\n}\r\n","import {\r\n  type DirectiveTransform,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n} from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\n\r\nexport const transformVHtml: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_NO_EXPRESSION, loc),\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_WITH_CHILDREN, loc),\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`innerHTML`, true, loc),\r\n        exp || createSimpleExpression('', true),\r\n      ),\r\n    ],\r\n  }\r\n}\r\n","import {\r\n  type DirectiveTransform,\r\n  TO_DISPLAY_STRING,\r\n  createCallExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  getConstantType,\r\n} from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\n\r\nexport const transformVText: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_NO_EXPRESSION, loc),\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_WITH_CHILDREN, loc),\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`textContent`, true),\r\n        exp\r\n          ? getConstantType(exp, context) > 0\r\n            ? exp\r\n            : createCallExpression(\r\n                context.helperString(TO_DISPLAY_STRING),\r\n                [exp],\r\n                loc,\r\n              )\r\n          : createSimpleExpression('', true),\r\n      ),\r\n    ],\r\n  }\r\n}\r\n","import {\r\n  type DirectiveTransform,\r\n  ElementTypes,\r\n  NodeTypes,\r\n  transformModel as baseTransform,\r\n  findDir,\r\n  findProp,\r\n  hasDynamicKeyVBind,\r\n  isStaticArgOf,\r\n} from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\nimport {\r\n  V_MODEL_CHECKBOX,\r\n  V_MODEL_DYNAMIC,\r\n  V_MODEL_RADIO,\r\n  V_MODEL_SELECT,\r\n  V_MODEL_TEXT,\r\n} from '../runtimeHelpers'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const baseResult = baseTransform(dir, node, context)\r\n  // base transform has errors OR component v-model (only need props)\r\n  if (!baseResult.props.length || node.tagType === ElementTypes.COMPONENT) {\r\n    return baseResult\r\n  }\r\n\r\n  if (dir.arg) {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT,\r\n        dir.arg.loc,\r\n      ),\r\n    )\r\n  }\r\n\r\n  function checkDuplicatedValue() {\r\n    const value = findDir(node, 'bind')\r\n    if (value && isStaticArgOf(value.arg, 'value')) {\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE,\r\n          value.loc,\r\n        ),\r\n      )\r\n    }\r\n  }\r\n\r\n  const { tag } = node\r\n  const isCustomElement = context.isCustomElement(tag)\r\n  if (\r\n    tag === 'input' ||\r\n    tag === 'textarea' ||\r\n    tag === 'select' ||\r\n    isCustomElement\r\n  ) {\r\n    let directiveToUse = V_MODEL_TEXT\r\n    let isInvalidType = false\r\n    if (tag === 'input' || isCustomElement) {\r\n      const type = findProp(node, `type`)\r\n      if (type) {\r\n        if (type.type === NodeTypes.DIRECTIVE) {\r\n          // :type=\"foo\"\r\n          directiveToUse = V_MODEL_DYNAMIC\r\n        } else if (type.value) {\r\n          switch (type.value.content) {\r\n            case 'radio':\r\n              directiveToUse = V_MODEL_RADIO\r\n              break\r\n            case 'checkbox':\r\n              directiveToUse = V_MODEL_CHECKBOX\r\n              break\r\n            case 'file':\r\n              isInvalidType = true\r\n              context.onError(\r\n                createDOMCompilerError(\r\n                  DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT,\r\n                  dir.loc,\r\n                ),\r\n              )\r\n              break\r\n            default:\r\n              // text type\r\n              __DEV__ && checkDuplicatedValue()\r\n              break\r\n          }\r\n        }\r\n      } else if (hasDynamicKeyVBind(node)) {\r\n        // element has bindings with dynamic keys, which can possibly contain\r\n        // \"type\".\r\n        directiveToUse = V_MODEL_DYNAMIC\r\n      } else {\r\n        // text type\r\n        __DEV__ && checkDuplicatedValue()\r\n      }\r\n    } else if (tag === 'select') {\r\n      directiveToUse = V_MODEL_SELECT\r\n    } else {\r\n      // textarea\r\n      __DEV__ && checkDuplicatedValue()\r\n    }\r\n    // inject runtime directive\r\n    // by returning the helper symbol via needRuntime\r\n    // the import will replaced a resolveDirective call.\r\n    if (!isInvalidType) {\r\n      baseResult.needRuntime = context.helper(directiveToUse)\r\n    }\r\n  } else {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT,\r\n        dir.loc,\r\n      ),\r\n    )\r\n  }\r\n\r\n  // native vmodel doesn't need the `modelValue` props since they are also\r\n  // passed to the runtime as `binding.value`. removing it reduces code size.\r\n  baseResult.props = baseResult.props.filter(\r\n    p =>\r\n      !(\r\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        p.key.content === 'modelValue'\r\n      ),\r\n  )\r\n\r\n  return baseResult\r\n}\r\n","import {\r\n  CompilerDeprecationTypes,\r\n  type DirectiveTransform,\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  type SourceLocation,\r\n  type TransformContext,\r\n  transformOn as baseTransform,\r\n  checkCompatEnabled,\r\n  createCallExpression,\r\n  createCompoundExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  isStaticExp,\r\n} from '@vue/compiler-core'\r\nimport { V_ON_WITH_KEYS, V_ON_WITH_MODIFIERS } from '../runtimeHelpers'\r\nimport { capitalize, makeMap } from '@vue/shared'\r\n\r\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`)\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n  // event propagation management\r\n  `stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`,\r\n)\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right')\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(\r\n  `onkeyup,onkeydown,onkeypress`,\r\n  true,\r\n)\r\n\r\nconst resolveModifiers = (\r\n  key: ExpressionNode,\r\n  modifiers: string[],\r\n  context: TransformContext,\r\n  loc: SourceLocation,\r\n) => {\r\n  const keyModifiers = []\r\n  const nonKeyModifiers = []\r\n  const eventOptionModifiers = []\r\n\r\n  for (let i = 0; i < modifiers.length; i++) {\r\n    const modifier = modifiers[i]\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      modifier === 'native' &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_V_ON_NATIVE,\r\n        context,\r\n        loc,\r\n      )\r\n    ) {\r\n      eventOptionModifiers.push(modifier)\r\n    } else if (isEventOptionModifier(modifier)) {\r\n      // eventOptionModifiers: modifiers for addEventListener() options,\r\n      // e.g. .passive & .capture\r\n      eventOptionModifiers.push(modifier)\r\n    } else {\r\n      // runtimeModifiers: modifiers that needs runtime guards\r\n      if (maybeKeyModifier(modifier)) {\r\n        if (isStaticExp(key)) {\r\n          if (isKeyboardEvent((key as SimpleExpressionNode).content)) {\r\n            keyModifiers.push(modifier)\r\n          } else {\r\n            nonKeyModifiers.push(modifier)\r\n          }\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n          nonKeyModifiers.push(modifier)\r\n        }\r\n      } else {\r\n        if (isNonKeyModifier(modifier)) {\r\n          nonKeyModifiers.push(modifier)\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    keyModifiers,\r\n    nonKeyModifiers,\r\n    eventOptionModifiers,\r\n  }\r\n}\r\n\r\nconst transformClick = (key: ExpressionNode, event: string) => {\r\n  const isStaticClick =\r\n    isStaticExp(key) && key.content.toLowerCase() === 'onclick'\r\n  return isStaticClick\r\n    ? createSimpleExpression(event, true)\r\n    : key.type !== NodeTypes.SIMPLE_EXPRESSION\r\n      ? createCompoundExpression([\r\n          `(`,\r\n          key,\r\n          `) === \"onClick\" ? \"${event}\" : (`,\r\n          key,\r\n          `)`,\r\n        ])\r\n      : key\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (dir, node, context) => {\r\n  return baseTransform(dir, node, context, baseResult => {\r\n    const { modifiers } = dir\r\n    if (!modifiers.length) return baseResult\r\n\r\n    let { key, value: handlerExp } = baseResult.props[0]\r\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } =\r\n      resolveModifiers(key, modifiers, context, dir.loc)\r\n\r\n    // normalize click.right and click.middle since they don't actually fire\r\n    if (nonKeyModifiers.includes('right')) {\r\n      key = transformClick(key, `onContextmenu`)\r\n    }\r\n    if (nonKeyModifiers.includes('middle')) {\r\n      key = transformClick(key, `onMouseup`)\r\n    }\r\n\r\n    if (nonKeyModifiers.length) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n        handlerExp,\r\n        JSON.stringify(nonKeyModifiers),\r\n      ])\r\n    }\r\n\r\n    if (\r\n      keyModifiers.length &&\r\n      // if event name is dynamic, always wrap with keys guard\r\n      (!isStaticExp(key) || isKeyboardEvent(key.content))\r\n    ) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n        handlerExp,\r\n        JSON.stringify(keyModifiers),\r\n      ])\r\n    }\r\n\r\n    if (eventOptionModifiers.length) {\r\n      const modifierPostfix = eventOptionModifiers.map(capitalize).join('')\r\n      key = isStaticExp(key)\r\n        ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n        : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`])\r\n    }\r\n\r\n    return {\r\n      props: [createObjectProperty(key, handlerExp)],\r\n    }\r\n  })\r\n}\r\n","import type { DirectiveTransform } from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\nimport { V_SHOW } from '../runtimeHelpers'\r\n\r\nexport const transformShow: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_SHOW_NO_EXPRESSION, loc),\r\n    )\r\n  }\r\n\r\n  return {\r\n    props: [],\r\n    needRuntime: context.helper(V_SHOW),\r\n  }\r\n}\r\n","import {\r\n  type ComponentNode,\r\n  ElementTypes,\r\n  type IfBranchNode,\r\n  type NodeTransform,\r\n  NodeTypes,\r\n} from '@vue/compiler-core'\r\nimport { TRANSITION } from '../runtimeHelpers'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\n\r\nexport const transformTransition: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.COMPONENT\r\n  ) {\r\n    const component = context.isBuiltInComponent(node.tag)\r\n    if (component === TRANSITION) {\r\n      return () => {\r\n        if (!node.children.length) {\r\n          return\r\n        }\r\n\r\n        // warn multiple transition children\r\n        if (hasMultipleChildren(node)) {\r\n          context.onError(\r\n            createDOMCompilerError(\r\n              DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN,\r\n              {\r\n                start: node.children[0].loc.start,\r\n                end: node.children[node.children.length - 1].loc.end,\r\n                source: '',\r\n              },\r\n            ),\r\n          )\r\n        }\r\n\r\n        // check if it's s single child w/ v-show\r\n        // if yes, inject \"persisted: true\" to the transition props\r\n        const child = node.children[0]\r\n        if (child.type === NodeTypes.ELEMENT) {\r\n          for (const p of child.props) {\r\n            if (p.type === NodeTypes.DIRECTIVE && p.name === 'show') {\r\n              node.props.push({\r\n                type: NodeTypes.ATTRIBUTE,\r\n                name: 'persisted',\r\n                nameLoc: node.loc,\r\n                value: undefined,\r\n                loc: node.loc,\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hasMultipleChildren(node: ComponentNode | IfBranchNode): boolean {\r\n  // #1352 filter out potential comment nodes.\r\n  const children = (node.children = node.children.filter(\r\n    c =>\r\n      c.type !== NodeTypes.COMMENT &&\r\n      !(c.type === NodeTypes.TEXT && !c.content.trim()),\r\n  ))\r\n  const child = children[0]\r\n  return (\r\n    children.length !== 1 ||\r\n    child.type === NodeTypes.FOR ||\r\n    (child.type === NodeTypes.IF && child.branches.some(hasMultipleChildren))\r\n  )\r\n}\r\n","/**\r\n * This module is Node-only.\r\n */\r\nimport {\r\n  CREATE_STATIC,\r\n  ConstantTypes,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  type HoistTransform,\r\n  type JSChildNode,\r\n  Namespaces,\r\n  NodeTypes,\r\n  type PlainElementNode,\r\n  type SimpleExpressionNode,\r\n  type TemplateChildNode,\r\n  type TextCallNode,\r\n  type TransformContext,\r\n  createCallExpression,\r\n} from '@vue/compiler-core'\r\nimport {\r\n  escapeHtml,\r\n  isBooleanAttr,\r\n  isKnownHtmlAttr,\r\n  isKnownSvgAttr,\r\n  isString,\r\n  isSymbol,\r\n  isVoidTag,\r\n  makeMap,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n  stringifyStyle,\r\n  toDisplayString,\r\n} from '@vue/shared'\r\n\r\nexport enum StringifyThresholds {\r\n  ELEMENT_WITH_BINDING_COUNT = 5,\r\n  NODE_COUNT = 20,\r\n}\r\n\r\ntype StringifiableNode = PlainElementNode | TextCallNode\r\n\r\n/**\r\n * Regex for replacing placeholders for embedded constant variables\r\n * (e.g. import URL string constants generated by compiler-sfc)\r\n */\r\nconst expReplaceRE = /__VUE_EXP_START__(.*?)__VUE_EXP_END__/g\r\n\r\n/**\r\n * Turn eligible hoisted static trees into stringified static nodes, e.g.\r\n *\r\n * ```js\r\n * const _hoisted_1 = createStaticVNode(`<div class=\"foo\">bar</div>`)\r\n * ```\r\n *\r\n * A single static vnode can contain stringified content for **multiple**\r\n * consecutive nodes (element and plain text), called a \"chunk\".\r\n * `@vue/runtime-dom` will create the content via innerHTML in a hidden\r\n * container element and insert all the nodes in place. The call must also\r\n * provide the number of nodes contained in the chunk so that during hydration\r\n * we can know how many nodes the static vnode should adopt.\r\n *\r\n * The optimization scans a children list that contains hoisted nodes, and\r\n * tries to find the largest chunk of consecutive hoisted nodes before running\r\n * into a non-hoisted node or the end of the list. A chunk is then converted\r\n * into a single static vnode and replaces the hoisted expression of the first\r\n * node in the chunk. Other nodes in the chunk are considered \"merged\" and\r\n * therefore removed from both the hoist list and the children array.\r\n *\r\n * This optimization is only performed in Node.js.\r\n */\r\nexport const stringifyStatic: HoistTransform = (children, context, parent) => {\r\n  // bail stringification for slot content\r\n  if (context.scopes.vSlot > 0) {\r\n    return\r\n  }\r\n\r\n  let nc = 0 // current node count\r\n  let ec = 0 // current element with binding count\r\n  const currentChunk: StringifiableNode[] = []\r\n\r\n  const stringifyCurrentChunk = (currentIndex: number): number => {\r\n    if (\r\n      nc >= StringifyThresholds.NODE_COUNT ||\r\n      ec >= StringifyThresholds.ELEMENT_WITH_BINDING_COUNT\r\n    ) {\r\n      // combine all currently eligible nodes into a single static vnode call\r\n      const staticCall = createCallExpression(context.helper(CREATE_STATIC), [\r\n        JSON.stringify(\r\n          currentChunk.map(node => stringifyNode(node, context)).join(''),\r\n        ).replace(expReplaceRE, `\" + $1 + \"`),\r\n        // the 2nd argument indicates the number of DOM nodes this static vnode\r\n        // will insert / hydrate\r\n        String(currentChunk.length),\r\n      ])\r\n      // replace the first node's hoisted expression with the static vnode call\r\n      replaceHoist(currentChunk[0], staticCall, context)\r\n\r\n      if (currentChunk.length > 1) {\r\n        for (let i = 1; i < currentChunk.length; i++) {\r\n          // for the merged nodes, set their hoisted expression to null\r\n          replaceHoist(currentChunk[i], null, context)\r\n        }\r\n\r\n        // also remove merged nodes from children\r\n        const deleteCount = currentChunk.length - 1\r\n        children.splice(currentIndex - currentChunk.length + 1, deleteCount)\r\n        return deleteCount\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  let i = 0\r\n  for (; i < children.length; i++) {\r\n    const child = children[i]\r\n    const hoisted = getHoistedNode(child)\r\n    if (hoisted) {\r\n      // presence of hoisted means child must be a stringifiable node\r\n      const node = child as StringifiableNode\r\n      const result = analyzeNode(node)\r\n      if (result) {\r\n        // node is stringifiable, record state\r\n        nc += result[0]\r\n        ec += result[1]\r\n        currentChunk.push(node)\r\n        continue\r\n      }\r\n    }\r\n    // we only reach here if we ran into a node that is not stringifiable\r\n    // check if currently analyzed nodes meet criteria for stringification.\r\n    // adjust iteration index\r\n    i -= stringifyCurrentChunk(i)\r\n    // reset state\r\n    nc = 0\r\n    ec = 0\r\n    currentChunk.length = 0\r\n  }\r\n  // in case the last node was also stringifiable\r\n  stringifyCurrentChunk(i)\r\n}\r\n\r\nconst getHoistedNode = (node: TemplateChildNode) =>\r\n  ((node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.ELEMENT) ||\r\n    node.type == NodeTypes.TEXT_CALL) &&\r\n  node.codegenNode &&\r\n  node.codegenNode.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n  node.codegenNode.hoisted\r\n\r\nconst dataAriaRE = /^(data|aria)-/\r\nconst isStringifiableAttr = (name: string, ns: Namespaces) => {\r\n  return (\r\n    (ns === Namespaces.HTML\r\n      ? isKnownHtmlAttr(name)\r\n      : ns === Namespaces.SVG\r\n        ? isKnownSvgAttr(name)\r\n        : false) || dataAriaRE.test(name)\r\n  )\r\n}\r\n\r\nconst replaceHoist = (\r\n  node: StringifiableNode,\r\n  replacement: JSChildNode | null,\r\n  context: TransformContext,\r\n) => {\r\n  const hoistToReplace = (node.codegenNode as SimpleExpressionNode).hoisted!\r\n  context.hoists[context.hoists.indexOf(hoistToReplace)] = replacement\r\n}\r\n\r\nconst isNonStringifiable = /*#__PURE__*/ makeMap(\r\n  `caption,thead,tr,th,tbody,td,tfoot,colgroup,col`,\r\n)\r\n\r\n/**\r\n * for a hoisted node, analyze it and return:\r\n * - false: bailed (contains non-stringifiable props or runtime constant)\r\n * - [nc, ec] where\r\n *   - nc is the number of nodes inside\r\n *   - ec is the number of element with bindings inside\r\n */\r\nfunction analyzeNode(node: StringifiableNode): [number, number] | false {\r\n  if (node.type === NodeTypes.ELEMENT && isNonStringifiable(node.tag)) {\r\n    return false\r\n  }\r\n\r\n  if (node.type === NodeTypes.TEXT_CALL) {\r\n    return [1, 0]\r\n  }\r\n\r\n  let nc = 1 // node count\r\n  let ec = node.props.length > 0 ? 1 : 0 // element w/ binding count\r\n  let bailed = false\r\n  const bail = (): false => {\r\n    bailed = true\r\n    return false\r\n  }\r\n\r\n  // TODO: check for cases where using innerHTML will result in different\r\n  // output compared to imperative node insertions.\r\n  // probably only need to check for most common case\r\n  // i.e. non-phrasing-content tags inside `<p>`\r\n  function walk(node: ElementNode): boolean {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n      const p = node.props[i]\r\n      // bail on non-attr bindings\r\n      if (\r\n        p.type === NodeTypes.ATTRIBUTE &&\r\n        !isStringifiableAttr(p.name, node.ns)\r\n      ) {\r\n        return bail()\r\n      }\r\n      if (p.type === NodeTypes.DIRECTIVE && p.name === 'bind') {\r\n        // bail on non-attr bindings\r\n        if (\r\n          p.arg &&\r\n          (p.arg.type === NodeTypes.COMPOUND_EXPRESSION ||\r\n            (p.arg.isStatic && !isStringifiableAttr(p.arg.content, node.ns)))\r\n        ) {\r\n          return bail()\r\n        }\r\n        if (\r\n          p.exp &&\r\n          (p.exp.type === NodeTypes.COMPOUND_EXPRESSION ||\r\n            p.exp.constType < ConstantTypes.CAN_STRINGIFY)\r\n        ) {\r\n          return bail()\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < node.children.length; i++) {\r\n      nc++\r\n      const child = node.children[i]\r\n      if (child.type === NodeTypes.ELEMENT) {\r\n        if (child.props.length > 0) {\r\n          ec++\r\n        }\r\n        walk(child)\r\n        if (bailed) {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  return walk(node) ? [nc, ec] : false\r\n}\r\n\r\nfunction stringifyNode(\r\n  node: string | TemplateChildNode,\r\n  context: TransformContext,\r\n): string {\r\n  if (isString(node)) {\r\n    return node\r\n  }\r\n  if (isSymbol(node)) {\r\n    return ``\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      return stringifyElement(node, context)\r\n    case NodeTypes.TEXT:\r\n      return escapeHtml(node.content)\r\n    case NodeTypes.COMMENT:\r\n      return `<!--${escapeHtml(node.content)}-->`\r\n    case NodeTypes.INTERPOLATION:\r\n      return escapeHtml(toDisplayString(evaluateConstant(node.content)))\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      return escapeHtml(evaluateConstant(node))\r\n    case NodeTypes.TEXT_CALL:\r\n      return stringifyNode(node.content, context)\r\n    default:\r\n      // static trees will not contain if/for nodes\r\n      return ''\r\n  }\r\n}\r\n\r\nfunction stringifyElement(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n): string {\r\n  let res = `<${node.tag}`\r\n  let innerHTML = ''\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      res += ` ${p.name}`\r\n      if (p.value) {\r\n        res += `=\"${escapeHtml(p.value.content)}\"`\r\n      }\r\n    } else if (p.type === NodeTypes.DIRECTIVE) {\r\n      if (p.name === 'bind') {\r\n        const exp = p.exp as SimpleExpressionNode\r\n        if (exp.content[0] === '_') {\r\n          // internally generated string constant references\r\n          // e.g. imported URL strings via compiler-sfc transformAssetUrl plugin\r\n          res += ` ${\r\n            (p.arg as SimpleExpressionNode).content\r\n          }=\"__VUE_EXP_START__${exp.content}__VUE_EXP_END__\"`\r\n          continue\r\n        }\r\n        // #6568\r\n        if (\r\n          isBooleanAttr((p.arg as SimpleExpressionNode).content) &&\r\n          exp.content === 'false'\r\n        ) {\r\n          continue\r\n        }\r\n        // constant v-bind, e.g. :foo=\"1\"\r\n        let evaluated = evaluateConstant(exp)\r\n        if (evaluated != null) {\r\n          const arg = p.arg && (p.arg as SimpleExpressionNode).content\r\n          if (arg === 'class') {\r\n            evaluated = normalizeClass(evaluated)\r\n          } else if (arg === 'style') {\r\n            evaluated = stringifyStyle(normalizeStyle(evaluated))\r\n          }\r\n          res += ` ${(p.arg as SimpleExpressionNode).content}=\"${escapeHtml(\r\n            evaluated,\r\n          )}\"`\r\n        }\r\n      } else if (p.name === 'html') {\r\n        // #5439 v-html with constant value\r\n        // not sure why would anyone do this but it can happen\r\n        innerHTML = evaluateConstant(p.exp as SimpleExpressionNode)\r\n      } else if (p.name === 'text') {\r\n        innerHTML = escapeHtml(\r\n          toDisplayString(evaluateConstant(p.exp as SimpleExpressionNode)),\r\n        )\r\n      }\r\n    }\r\n  }\r\n  if (context.scopeId) {\r\n    res += ` ${context.scopeId}`\r\n  }\r\n  res += `>`\r\n  if (innerHTML) {\r\n    res += innerHTML\r\n  } else {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n      res += stringifyNode(node.children[i], context)\r\n    }\r\n  }\r\n  if (!isVoidTag(node.tag)) {\r\n    res += `</${node.tag}>`\r\n  }\r\n  return res\r\n}\r\n\r\n// __UNSAFE__\r\n// Reason: eval.\r\n// It's technically safe to eval because only constant expressions are possible\r\n// here, e.g. `{{ 1 }}` or `{{ 'foo' }}`\r\n// in addition, constant exps bail on presence of parens so you can't even\r\n// run JSFuck in here. But we mark it unsafe for security review purposes.\r\n// (see compiler-core/src/transforms/transformExpression)\r\nfunction evaluateConstant(exp: ExpressionNode): string {\r\n  if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    return new Function(`return (${exp.content})`)()\r\n  } else {\r\n    // compound\r\n    let res = ``\r\n    exp.children.forEach(c => {\r\n      if (isString(c) || isSymbol(c)) {\r\n        return\r\n      }\r\n      if (c.type === NodeTypes.TEXT) {\r\n        res += c.content\r\n      } else if (c.type === NodeTypes.INTERPOLATION) {\r\n        res += toDisplayString(evaluateConstant(c.content))\r\n      } else {\r\n        res += evaluateConstant(c)\r\n      }\r\n    })\r\n    return res\r\n  }\r\n}\r\n","import { ElementTypes, type NodeTransform, NodeTypes } from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\n\r\nexport const ignoreSideEffectTags: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    (node.tag === 'script' || node.tag === 'style')\r\n  ) {\r\n    __DEV__ &&\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG,\r\n          node.loc,\r\n        ),\r\n      )\r\n    context.removeNode()\r\n  }\r\n}\r\n","import {\r\n  type CodegenResult,\r\n  type CompilerOptions,\r\n  type DirectiveTransform,\r\n  type NodeTransform,\r\n  type ParserOptions,\r\n  type RootNode,\r\n  baseCompile,\r\n  baseParse,\r\n  noopDirectiveTransform,\r\n} from '@vue/compiler-core'\r\nimport { parserOptions } from './parserOptions'\r\nimport { transformStyle } from './transforms/transformStyle'\r\nimport { transformVHtml } from './transforms/vHtml'\r\nimport { transformVText } from './transforms/vText'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformShow } from './transforms/vShow'\r\nimport { transformTransition } from './transforms/Transition'\r\nimport { stringifyStatic } from './transforms/stringifyStatic'\r\nimport { ignoreSideEffectTags } from './transforms/ignoreSideEffectTags'\r\nimport { extend } from '@vue/shared'\r\n\r\nexport { parserOptions }\r\n\r\nexport const DOMNodeTransforms: NodeTransform[] = [\r\n  transformStyle,\r\n  ...(__DEV__ ? [transformTransition] : []),\r\n]\r\n\r\nexport const DOMDirectiveTransforms: Record<string, DirectiveTransform> = {\r\n  cloak: noopDirectiveTransform,\r\n  html: transformVHtml,\r\n  text: transformVText,\r\n  model: transformModel, // override compiler-core\r\n  on: transformOn, // override compiler-core\r\n  show: transformShow,\r\n}\r\n\r\nexport function compile(\r\n  src: string | RootNode,\r\n  options: CompilerOptions = {},\r\n): CodegenResult {\r\n  return baseCompile(\r\n    src,\r\n    extend({}, parserOptions, options, {\r\n      nodeTransforms: [\r\n        // ignore <script> and <tag>\r\n        // this is not put inside DOMNodeTransforms because that list is used\r\n        // by compiler-ssr to generate vnode fallback branches\r\n        ignoreSideEffectTags,\r\n        ...DOMNodeTransforms,\r\n        ...(options.nodeTransforms || []),\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        DOMDirectiveTransforms,\r\n        options.directiveTransforms || {},\r\n      ),\r\n      transformHoist: __BROWSER__ ? null : stringifyStatic,\r\n    }),\r\n  )\r\n}\r\n\r\nexport function parse(template: string, options: ParserOptions = {}): RootNode {\r\n  return baseParse(template, extend({}, parserOptions, options))\r\n}\r\n\r\nexport * from './runtimeHelpers'\r\nexport { transformStyle } from './transforms/transformStyle'\r\nexport {\r\n  createDOMCompilerError,\r\n  DOMErrorCodes,\r\n  DOMErrorMessages,\r\n} from './errors'\r\nexport * from '@vue/compiler-core'\r\n","import type {\r\n  CallExpression,\r\n  Expression,\r\n  Identifier,\r\n  ImportDefaultSpecifier,\r\n  ImportNamespaceSpecifier,\r\n  ImportSpecifier,\r\n  Node,\r\n  StringLiteral,\r\n} from '@babel/types'\r\nimport path from 'path'\r\n\r\nexport const UNKNOWN_TYPE = 'Unknown'\r\n\r\nexport function resolveObjectKey(node: Node, computed: boolean) {\r\n  switch (node.type) {\r\n    case 'StringLiteral':\r\n    case 'NumericLiteral':\r\n      return String(node.value)\r\n    case 'Identifier':\r\n      if (!computed) return node.name\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport function concatStrings(strs: Array<string | null | undefined | false>) {\r\n  return strs.filter((s): s is string => !!s).join(', ')\r\n}\r\n\r\nexport function isLiteralNode(node: Node) {\r\n  return node.type.endsWith('Literal')\r\n}\r\n\r\nexport function isCallOf(\r\n  node: Node | null | undefined,\r\n  test: string | ((id: string) => boolean) | null | undefined,\r\n): node is CallExpression {\r\n  return !!(\r\n    node &&\r\n    test &&\r\n    node.type === 'CallExpression' &&\r\n    node.callee.type === 'Identifier' &&\r\n    (typeof test === 'string'\r\n      ? node.callee.name === test\r\n      : test(node.callee.name))\r\n  )\r\n}\r\n\r\nexport function toRuntimeTypeString(types: string[]) {\r\n  return types.length > 1 ? `[${types.join(', ')}]` : types[0]\r\n}\r\n\r\nexport function getImportedName(\r\n  specifier:\r\n    | ImportSpecifier\r\n    | ImportDefaultSpecifier\r\n    | ImportNamespaceSpecifier,\r\n) {\r\n  if (specifier.type === 'ImportSpecifier')\r\n    return specifier.imported.type === 'Identifier'\r\n      ? specifier.imported.name\r\n      : specifier.imported.value\r\n  else if (specifier.type === 'ImportNamespaceSpecifier') return '*'\r\n  return 'default'\r\n}\r\n\r\nexport function getId(node: Identifier | StringLiteral): string\r\nexport function getId(node: Expression): string | null\r\nexport function getId(node: Expression) {\r\n  return node.type === 'Identifier'\r\n    ? node.name\r\n    : node.type === 'StringLiteral'\r\n      ? node.value\r\n      : null\r\n}\r\n\r\nconst identity = (str: string) => str\r\nconst fileNameLowerCaseRegExp = /[^\\u0130\\u0131\\u00DFa-z0-9\\\\/:\\-_\\. ]+/g\r\nconst toLowerCase = (str: string) => str.toLowerCase()\r\n\r\nfunction toFileNameLowerCase(x: string) {\r\n  return fileNameLowerCaseRegExp.test(x)\r\n    ? x.replace(fileNameLowerCaseRegExp, toLowerCase)\r\n    : x\r\n}\r\n\r\n/**\r\n * We need `getCanonicalFileName` when creating ts module resolution cache,\r\n * but TS does not expose it directly. This implementation is repllicated from\r\n * the TS source code.\r\n */\r\nexport function createGetCanonicalFileName(useCaseSensitiveFileNames: boolean) {\r\n  return useCaseSensitiveFileNames ? identity : toFileNameLowerCase\r\n}\r\n\r\n// in the browser build, the polyfill doesn't expose posix, but defaults to\r\n// posix behavior.\r\nconst normalize = (path.posix || path).normalize\r\nconst windowsSlashRE = /\\\\/g\r\nexport function normalizePath(p: string) {\r\n  return normalize(p.replace(windowsSlashRE, '/'))\r\n}\r\n\r\nexport const joinPaths = (path.posix || path).join\r\n\r\n/**\r\n * key may contain symbols\r\n * e.g. onUpdate:modelValue -> \"onUpdate:modelValue\"\r\n */\r\nexport const propNameEscapeSymbolsRE = /[ !\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~\\-]/\r\n\r\nexport function getEscapedPropName(key: string) {\r\n  return propNameEscapeSymbolsRE.test(key) ? JSON.stringify(key) : key\r\n}\r\n\r\nexport const cssVarNameEscapeSymbolsRE = /[ !\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~]/g\r\n\r\nexport function getEscapedCssVarName(key: string, doubleEscape: boolean) {\r\n  return key.replace(cssVarNameEscapeSymbolsRE, s =>\r\n    doubleEscape ? `\\\\\\\\${s}` : `\\\\${s}`,\r\n  )\r\n}\r\n","'use strict';\n\nfunction pad (hash, len) {\n  while (hash.length < len) {\n    hash = '0' + hash;\n  }\n  return hash;\n}\n\nfunction fold (hash, text) {\n  var i;\n  var chr;\n  var len;\n  if (text.length === 0) {\n    return hash;\n  }\n  for (i = 0, len = text.length; i < len; i++) {\n    chr = text.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0;\n  }\n  return hash < 0 ? hash * -2 : hash;\n}\n\nfunction foldObject (hash, o, seen) {\n  return Object.keys(o).sort().reduce(foldKey, hash);\n  function foldKey (hash, key) {\n    return foldValue(hash, o[key], key, seen);\n  }\n}\n\nfunction foldValue (input, value, key, seen) {\n  var hash = fold(fold(fold(input, key), toString(value)), typeof value);\n  if (value === null) {\n    return fold(hash, 'null');\n  }\n  if (value === undefined) {\n    return fold(hash, 'undefined');\n  }\n  if (typeof value === 'object' || typeof value === 'function') {\n    if (seen.indexOf(value) !== -1) {\n      return fold(hash, '[Circular]' + key);\n    }\n    seen.push(value);\n\n    var objHash = foldObject(hash, value, seen)\n\n    if (!('valueOf' in value) || typeof value.valueOf !== 'function') {\n      return objHash;\n    }\n\n    try {\n      return fold(objHash, String(value.valueOf()))\n    } catch (err) {\n      return fold(objHash, '[valueOf exception]' + (err.stack || err.message))\n    }\n  }\n  return fold(hash, value.toString());\n}\n\nfunction toString (o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction sum (o) {\n  return pad(foldValue(0, o, '', []).toString(16), 8);\n}\n\nmodule.exports = sum;\n","import {\r\n  type BindingMetadata,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  createRoot,\r\n  createSimpleExpression,\r\n  createTransformContext,\r\n  processExpression,\r\n} from '@vue/compiler-dom'\r\nimport type { SFCDescriptor } from '../parse'\r\nimport { getEscapedCssVarName } from '../script/utils'\r\nimport type { PluginCreator } from 'postcss'\r\nimport hash from 'hash-sum'\r\n\r\nexport const CSS_VARS_HELPER = `useCssVars`\r\n\r\nexport function genCssVarsFromList(\r\n  vars: string[],\r\n  id: string,\r\n  isProd: boolean,\r\n  isSSR = false,\r\n): string {\r\n  return `{\\n  ${vars\r\n    .map(\r\n      key =>\r\n        `\"${isSSR ? `--` : ``}${genVarName(id, key, isProd, isSSR)}\": (${key})`,\r\n    )\r\n    .join(',\\n  ')}\\n}`\r\n}\r\n\r\nfunction genVarName(\r\n  id: string,\r\n  raw: string,\r\n  isProd: boolean,\r\n  isSSR = false,\r\n): string {\r\n  if (isProd) {\r\n    return hash(id + raw)\r\n  } else {\r\n    // escape ASCII Punctuation & Symbols\r\n    // #7823 need to double-escape in SSR because the attributes are rendered\r\n    // into an HTML string\r\n    return `${id}-${getEscapedCssVarName(raw, isSSR)}`\r\n  }\r\n}\r\n\r\nfunction normalizeExpression(exp: string) {\r\n  exp = exp.trim()\r\n  if (\r\n    (exp[0] === `'` && exp[exp.length - 1] === `'`) ||\r\n    (exp[0] === `\"` && exp[exp.length - 1] === `\"`)\r\n  ) {\r\n    return exp.slice(1, -1)\r\n  }\r\n  return exp\r\n}\r\n\r\nconst vBindRE = /v-bind\\s*\\(/g\r\n\r\nexport function parseCssVars(sfc: SFCDescriptor): string[] {\r\n  const vars: string[] = []\r\n  sfc.styles.forEach(style => {\r\n    let match\r\n    // ignore v-bind() in comments, eg /* ... */\r\n    // and // (Less, Sass and Stylus all support the use of // to comment)\r\n    const content = style.content.replace(/\\/\\*([\\s\\S]*?)\\*\\/|\\/\\/.*/g, '')\r\n    while ((match = vBindRE.exec(content))) {\r\n      const start = match.index + match[0].length\r\n      const end = lexBinding(content, start)\r\n      if (end !== null) {\r\n        const variable = normalizeExpression(content.slice(start, end))\r\n        if (!vars.includes(variable)) {\r\n          vars.push(variable)\r\n        }\r\n      }\r\n    }\r\n  })\r\n  return vars\r\n}\r\n\r\nenum LexerState {\r\n  inParens,\r\n  inSingleQuoteString,\r\n  inDoubleQuoteString,\r\n}\r\n\r\nfunction lexBinding(content: string, start: number): number | null {\r\n  let state: LexerState = LexerState.inParens\r\n  let parenDepth = 0\r\n\r\n  for (let i = start; i < content.length; i++) {\r\n    const char = content.charAt(i)\r\n    switch (state) {\r\n      case LexerState.inParens:\r\n        if (char === `'`) {\r\n          state = LexerState.inSingleQuoteString\r\n        } else if (char === `\"`) {\r\n          state = LexerState.inDoubleQuoteString\r\n        } else if (char === `(`) {\r\n          parenDepth++\r\n        } else if (char === `)`) {\r\n          if (parenDepth > 0) {\r\n            parenDepth--\r\n          } else {\r\n            return i\r\n          }\r\n        }\r\n        break\r\n      case LexerState.inSingleQuoteString:\r\n        if (char === `'`) {\r\n          state = LexerState.inParens\r\n        }\r\n        break\r\n      case LexerState.inDoubleQuoteString:\r\n        if (char === `\"`) {\r\n          state = LexerState.inParens\r\n        }\r\n        break\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\n// for compileStyle\r\nexport interface CssVarsPluginOptions {\r\n  id: string\r\n  isProd: boolean\r\n}\r\n\r\nexport const cssVarsPlugin: PluginCreator<CssVarsPluginOptions> = opts => {\r\n  const { id, isProd } = opts!\r\n  return {\r\n    postcssPlugin: 'vue-sfc-vars',\r\n    Declaration(decl) {\r\n      // rewrite CSS variables\r\n      const value = decl.value\r\n      if (vBindRE.test(value)) {\r\n        vBindRE.lastIndex = 0\r\n        let transformed = ''\r\n        let lastIndex = 0\r\n        let match\r\n        while ((match = vBindRE.exec(value))) {\r\n          const start = match.index + match[0].length\r\n          const end = lexBinding(value, start)\r\n          if (end !== null) {\r\n            const variable = normalizeExpression(value.slice(start, end))\r\n            transformed +=\r\n              value.slice(lastIndex, match.index) +\r\n              `var(--${genVarName(id, variable, isProd)})`\r\n            lastIndex = end + 1\r\n          }\r\n        }\r\n        decl.value = transformed + value.slice(lastIndex)\r\n      }\r\n    },\r\n  }\r\n}\r\ncssVarsPlugin.postcss = true\r\n\r\nexport function genCssVarsCode(\r\n  vars: string[],\r\n  bindings: BindingMetadata,\r\n  id: string,\r\n  isProd: boolean,\r\n) {\r\n  const varsExp = genCssVarsFromList(vars, id, isProd)\r\n  const exp = createSimpleExpression(varsExp, false)\r\n  const context = createTransformContext(createRoot([]), {\r\n    prefixIdentifiers: true,\r\n    inline: true,\r\n    bindingMetadata: bindings.__isScriptSetup === false ? undefined : bindings,\r\n  })\r\n  const transformed = processExpression(exp, context)\r\n  const transformedString =\r\n    transformed.type === NodeTypes.SIMPLE_EXPRESSION\r\n      ? transformed.content\r\n      : transformed.children\r\n          .map(c => {\r\n            return typeof c === 'string'\r\n              ? c\r\n              : (c as SimpleExpressionNode).content\r\n          })\r\n          .join('')\r\n\r\n  return `_${CSS_VARS_HELPER}(_ctx => (${transformedString}))`\r\n}\r\n\r\n// <script setup> already gets the calls injected as part of the transform\r\n// this is only for single normal <script>\r\nexport function genNormalScriptCssVarsCode(\r\n  cssVars: string[],\r\n  bindings: BindingMetadata,\r\n  id: string,\r\n  isProd: boolean,\r\n  defaultVar: string,\r\n): string {\r\n  return (\r\n    `\\nimport { ${CSS_VARS_HELPER} as _${CSS_VARS_HELPER} } from 'vue'\\n` +\r\n    `const __injectCSSVars__ = () => {\\n${genCssVarsCode(\r\n      cssVars,\r\n      bindings,\r\n      id,\r\n      isProd,\r\n    )}}\\n` +\r\n    `const __setup__ = ${defaultVar}.setup\\n` +\r\n    `${defaultVar}.setup = __setup__\\n` +\r\n    `  ? (props, ctx) => { __injectCSSVars__();return __setup__(props, ctx) }\\n` +\r\n    `  : __injectCSSVars__\\n`\r\n  )\r\n}\r\n","import { LRUCache } from 'lru-cache'\r\n\r\nexport function createCache<T extends {}>(\r\n  max = 500,\r\n): Map<string, T> | LRUCache<string, T> {\r\n  if (__GLOBAL__ || __ESM_BROWSER__) {\r\n    return new Map<string, T>()\r\n  }\r\n  return new LRUCache({ max })\r\n}\r\n","import type { SFCDescriptor } from '../parse'\r\nimport {\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  type TemplateChildNode,\r\n  parserOptions,\r\n  walkIdentifiers,\r\n} from '@vue/compiler-dom'\r\nimport { createCache } from '../cache'\r\nimport { camelize, capitalize, isBuiltInDirective } from '@vue/shared'\r\n\r\n/**\r\n * Check if an import is used in the SFC's template. This is used to determine\r\n * the properties that should be included in the object returned from setup()\r\n * when not using inline mode.\r\n */\r\nexport function isImportUsed(local: string, sfc: SFCDescriptor): boolean {\r\n  return resolveTemplateUsedIdentifiers(sfc).has(local)\r\n}\r\n\r\nconst templateUsageCheckCache = createCache<Set<string>>()\r\n\r\nfunction resolveTemplateUsedIdentifiers(sfc: SFCDescriptor): Set<string> {\r\n  const { content, ast } = sfc.template!\r\n  const cached = templateUsageCheckCache.get(content)\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  const ids = new Set<string>()\r\n\r\n  ast!.children.forEach(walk)\r\n\r\n  function walk(node: TemplateChildNode) {\r\n    switch (node.type) {\r\n      case NodeTypes.ELEMENT:\r\n        let tag = node.tag\r\n        if (tag.includes('.')) tag = tag.split('.')[0].trim()\r\n        if (\r\n          !parserOptions.isNativeTag!(tag) &&\r\n          !parserOptions.isBuiltInComponent!(tag)\r\n        ) {\r\n          ids.add(camelize(tag))\r\n          ids.add(capitalize(camelize(tag)))\r\n        }\r\n        for (let i = 0; i < node.props.length; i++) {\r\n          const prop = node.props[i]\r\n          if (prop.type === NodeTypes.DIRECTIVE) {\r\n            if (!isBuiltInDirective(prop.name)) {\r\n              ids.add(`v${capitalize(camelize(prop.name))}`)\r\n            }\r\n\r\n            // process dynamic directive arguments\r\n            if (prop.arg && !(prop.arg as SimpleExpressionNode).isStatic) {\r\n              extractIdentifiers(ids, prop.arg)\r\n            }\r\n\r\n            if (prop.name === 'for') {\r\n              extractIdentifiers(ids, prop.forParseResult!.source)\r\n            } else if (prop.exp) {\r\n              extractIdentifiers(ids, prop.exp)\r\n            }\r\n          }\r\n          if (\r\n            prop.type === NodeTypes.ATTRIBUTE &&\r\n            prop.name === 'ref' &&\r\n            prop.value?.content\r\n          ) {\r\n            ids.add(prop.value.content)\r\n          }\r\n        }\r\n        node.children.forEach(walk)\r\n        break\r\n      case NodeTypes.INTERPOLATION:\r\n        extractIdentifiers(ids, node.content)\r\n        break\r\n    }\r\n  }\r\n\r\n  templateUsageCheckCache.set(content, ids)\r\n  return ids\r\n}\r\n\r\nfunction extractIdentifiers(ids: Set<string>, node: ExpressionNode) {\r\n  if (node.ast) {\r\n    walkIdentifiers(node.ast, n => ids.add(n.name))\r\n  } else if (node.ast === null) {\r\n    ids.add((node as SimpleExpressionNode).content)\r\n  }\r\n}\r\n","import {\r\n  type BindingMetadata,\r\n  type CompilerError,\r\n  type ElementNode,\r\n  NodeTypes,\r\n  type ParserOptions,\r\n  type RootNode,\r\n  type SourceLocation,\r\n  createRoot,\r\n} from '@vue/compiler-core'\r\nimport * as CompilerDOM from '@vue/compiler-dom'\r\nimport { type RawSourceMap, SourceMapGenerator } from 'source-map-js'\r\nimport type { TemplateCompiler } from './compileTemplate'\r\nimport { parseCssVars } from './style/cssVars'\r\nimport { createCache } from './cache'\r\nimport type { ImportBinding } from './compileScript'\r\nimport { isImportUsed } from './script/importUsageCheck'\r\n\r\nexport const DEFAULT_FILENAME = 'anonymous.vue'\r\n\r\nexport interface SFCParseOptions {\r\n  filename?: string\r\n  sourceMap?: boolean\r\n  sourceRoot?: string\r\n  pad?: boolean | 'line' | 'space'\r\n  ignoreEmpty?: boolean\r\n  compiler?: TemplateCompiler\r\n  templateParseOptions?: ParserOptions\r\n  /**\r\n   * TODO remove in 3.5\r\n   * @deprecated use `templateParseOptions: { prefixIdentifiers: false }` instead\r\n   */\r\n  parseExpressions?: boolean\r\n}\r\n\r\nexport interface SFCBlock {\r\n  type: string\r\n  content: string\r\n  attrs: Record<string, string | true>\r\n  loc: SourceLocation\r\n  map?: RawSourceMap\r\n  lang?: string\r\n  src?: string\r\n}\r\n\r\nexport interface SFCTemplateBlock extends SFCBlock {\r\n  type: 'template'\r\n  ast?: RootNode\r\n}\r\n\r\nexport interface SFCScriptBlock extends SFCBlock {\r\n  type: 'script'\r\n  setup?: string | boolean\r\n  bindings?: BindingMetadata\r\n  imports?: Record<string, ImportBinding>\r\n  scriptAst?: import('@babel/types').Statement[]\r\n  scriptSetupAst?: import('@babel/types').Statement[]\r\n  warnings?: string[]\r\n  /**\r\n   * Fully resolved dependency file paths (unix slashes) with imported types\r\n   * used in macros, used for HMR cache busting in @vitejs/plugin-vue and\r\n   * vue-loader.\r\n   */\r\n  deps?: string[]\r\n}\r\n\r\nexport interface SFCStyleBlock extends SFCBlock {\r\n  type: 'style'\r\n  scoped?: boolean\r\n  module?: string | boolean\r\n}\r\n\r\nexport interface SFCDescriptor {\r\n  filename: string\r\n  source: string\r\n  template: SFCTemplateBlock | null\r\n  script: SFCScriptBlock | null\r\n  scriptSetup: SFCScriptBlock | null\r\n  styles: SFCStyleBlock[]\r\n  customBlocks: SFCBlock[]\r\n  cssVars: string[]\r\n  /**\r\n   * whether the SFC uses :slotted() modifier.\r\n   * this is used as a compiler optimization hint.\r\n   */\r\n  slotted: boolean\r\n\r\n  /**\r\n   * compare with an existing descriptor to determine whether HMR should perform\r\n   * a reload vs. re-render.\r\n   *\r\n   * Note: this comparison assumes the prev/next script are already identical,\r\n   * and only checks the special case where <script setup lang=\"ts\"> unused import\r\n   * pruning result changes due to template changes.\r\n   */\r\n  shouldForceReload: (prevImports: Record<string, ImportBinding>) => boolean\r\n}\r\n\r\nexport interface SFCParseResult {\r\n  descriptor: SFCDescriptor\r\n  errors: (CompilerError | SyntaxError)[]\r\n}\r\n\r\nexport const parseCache = createCache<SFCParseResult>()\r\n\r\nfunction genCacheKey(source: string, options: SFCParseOptions): string {\r\n  return (\r\n    source +\r\n    JSON.stringify(\r\n      {\r\n        ...options,\r\n        compiler: { parse: options.compiler?.parse },\r\n      },\r\n      (_, val) => (typeof val === 'function' ? val.toString() : val),\r\n    )\r\n  )\r\n}\r\n\r\nexport function parse(\r\n  source: string,\r\n  options: SFCParseOptions = {},\r\n): SFCParseResult {\r\n  const sourceKey = genCacheKey(source, options)\r\n  const cache = parseCache.get(sourceKey)\r\n  if (cache) {\r\n    return cache\r\n  }\r\n\r\n  const {\r\n    sourceMap = true,\r\n    filename = DEFAULT_FILENAME,\r\n    sourceRoot = '',\r\n    pad = false,\r\n    ignoreEmpty = true,\r\n    compiler = CompilerDOM,\r\n    templateParseOptions = {},\r\n    parseExpressions = true,\r\n  } = options\r\n\r\n  const descriptor: SFCDescriptor = {\r\n    filename,\r\n    source,\r\n    template: null,\r\n    script: null,\r\n    scriptSetup: null,\r\n    styles: [],\r\n    customBlocks: [],\r\n    cssVars: [],\r\n    slotted: false,\r\n    shouldForceReload: prevImports => hmrShouldReload(prevImports, descriptor),\r\n  }\r\n\r\n  const errors: (CompilerError | SyntaxError)[] = []\r\n  const ast = compiler.parse(source, {\r\n    parseMode: 'sfc',\r\n    prefixIdentifiers: parseExpressions,\r\n    ...templateParseOptions,\r\n    onError: e => {\r\n      errors.push(e)\r\n    },\r\n  })\r\n  ast.children.forEach(node => {\r\n    if (node.type !== NodeTypes.ELEMENT) {\r\n      return\r\n    }\r\n    // we only want to keep the nodes that are not empty\r\n    // (when the tag is not a template)\r\n    if (\r\n      ignoreEmpty &&\r\n      node.tag !== 'template' &&\r\n      isEmpty(node) &&\r\n      !hasSrc(node)\r\n    ) {\r\n      return\r\n    }\r\n    switch (node.tag) {\r\n      case 'template':\r\n        if (!descriptor.template) {\r\n          const templateBlock = (descriptor.template = createBlock(\r\n            node,\r\n            source,\r\n            false,\r\n          ) as SFCTemplateBlock)\r\n\r\n          if (!templateBlock.attrs.src) {\r\n            templateBlock.ast = createRoot(node.children, source)\r\n          }\r\n\r\n          // warn against 2.x <template functional>\r\n          if (templateBlock.attrs.functional) {\r\n            const err = new SyntaxError(\r\n              `<template functional> is no longer supported in Vue 3, since ` +\r\n                `functional components no longer have significant performance ` +\r\n                `difference from stateful ones. Just use a normal <template> ` +\r\n                `instead.`,\r\n            ) as CompilerError\r\n            err.loc = node.props.find(\r\n              p => p.type === NodeTypes.ATTRIBUTE && p.name === 'functional',\r\n            )!.loc\r\n            errors.push(err)\r\n          }\r\n        } else {\r\n          errors.push(createDuplicateBlockError(node))\r\n        }\r\n        break\r\n      case 'script':\r\n        const scriptBlock = createBlock(node, source, pad) as SFCScriptBlock\r\n        const isSetup = !!scriptBlock.attrs.setup\r\n        if (isSetup && !descriptor.scriptSetup) {\r\n          descriptor.scriptSetup = scriptBlock\r\n          break\r\n        }\r\n        if (!isSetup && !descriptor.script) {\r\n          descriptor.script = scriptBlock\r\n          break\r\n        }\r\n        errors.push(createDuplicateBlockError(node, isSetup))\r\n        break\r\n      case 'style':\r\n        const styleBlock = createBlock(node, source, pad) as SFCStyleBlock\r\n        if (styleBlock.attrs.vars) {\r\n          errors.push(\r\n            new SyntaxError(\r\n              `<style vars> has been replaced by a new proposal: ` +\r\n                `https://github.com/vuejs/rfcs/pull/231`,\r\n            ),\r\n          )\r\n        }\r\n        descriptor.styles.push(styleBlock)\r\n        break\r\n      default:\r\n        descriptor.customBlocks.push(createBlock(node, source, pad))\r\n        break\r\n    }\r\n  })\r\n  if (!descriptor.template && !descriptor.script && !descriptor.scriptSetup) {\r\n    errors.push(\r\n      new SyntaxError(\r\n        `At least one <template> or <script> is required in a single file component.`,\r\n      ),\r\n    )\r\n  }\r\n  if (descriptor.scriptSetup) {\r\n    if (descriptor.scriptSetup.src) {\r\n      errors.push(\r\n        new SyntaxError(\r\n          `<script setup> cannot use the \"src\" attribute because ` +\r\n            `its syntax will be ambiguous outside of the component.`,\r\n        ),\r\n      )\r\n      descriptor.scriptSetup = null\r\n    }\r\n    if (descriptor.script && descriptor.script.src) {\r\n      errors.push(\r\n        new SyntaxError(\r\n          `<script> cannot use the \"src\" attribute when <script setup> is ` +\r\n            `also present because they must be processed together.`,\r\n        ),\r\n      )\r\n      descriptor.script = null\r\n    }\r\n  }\r\n\r\n  // dedent pug/jade templates\r\n  let templateColumnOffset = 0\r\n  if (\r\n    descriptor.template &&\r\n    (descriptor.template.lang === 'pug' || descriptor.template.lang === 'jade')\r\n  ) {\r\n    ;[descriptor.template.content, templateColumnOffset] = dedent(\r\n      descriptor.template.content,\r\n    )\r\n  }\r\n\r\n  if (sourceMap) {\r\n    const genMap = (block: SFCBlock | null, columnOffset = 0) => {\r\n      if (block && !block.src) {\r\n        block.map = generateSourceMap(\r\n          filename,\r\n          source,\r\n          block.content,\r\n          sourceRoot,\r\n          !pad || block.type === 'template' ? block.loc.start.line - 1 : 0,\r\n          columnOffset,\r\n        )\r\n      }\r\n    }\r\n    genMap(descriptor.template, templateColumnOffset)\r\n    genMap(descriptor.script)\r\n    descriptor.styles.forEach(s => genMap(s))\r\n    descriptor.customBlocks.forEach(s => genMap(s))\r\n  }\r\n\r\n  // parse CSS vars\r\n  descriptor.cssVars = parseCssVars(descriptor)\r\n\r\n  // check if the SFC uses :slotted\r\n  const slottedRE = /(?:::v-|:)slotted\\(/\r\n  descriptor.slotted = descriptor.styles.some(\r\n    s => s.scoped && slottedRE.test(s.content),\r\n  )\r\n\r\n  const result = {\r\n    descriptor,\r\n    errors,\r\n  }\r\n  parseCache.set(sourceKey, result)\r\n  return result\r\n}\r\n\r\nfunction createDuplicateBlockError(\r\n  node: ElementNode,\r\n  isScriptSetup = false,\r\n): CompilerError {\r\n  const err = new SyntaxError(\r\n    `Single file component can contain only one <${node.tag}${\r\n      isScriptSetup ? ` setup` : ``\r\n    }> element`,\r\n  ) as CompilerError\r\n  err.loc = node.loc\r\n  return err\r\n}\r\n\r\nfunction createBlock(\r\n  node: ElementNode,\r\n  source: string,\r\n  pad: SFCParseOptions['pad'],\r\n): SFCBlock {\r\n  const type = node.tag\r\n  const loc = node.innerLoc!\r\n  const attrs: Record<string, string | true> = {}\r\n  const block: SFCBlock = {\r\n    type,\r\n    content: source.slice(loc.start.offset, loc.end.offset),\r\n    loc,\r\n    attrs,\r\n  }\r\n  if (pad) {\r\n    block.content = padContent(source, block, pad) + block.content\r\n  }\r\n  node.props.forEach(p => {\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      const name = p.name\r\n      attrs[name] = p.value ? p.value.content || true : true\r\n      if (name === 'lang') {\r\n        block.lang = p.value && p.value.content\r\n      } else if (name === 'src') {\r\n        block.src = p.value && p.value.content\r\n      } else if (type === 'style') {\r\n        if (name === 'scoped') {\r\n          ;(block as SFCStyleBlock).scoped = true\r\n        } else if (name === 'module') {\r\n          ;(block as SFCStyleBlock).module = attrs[name]\r\n        }\r\n      } else if (type === 'script' && name === 'setup') {\r\n        ;(block as SFCScriptBlock).setup = attrs.setup\r\n      }\r\n    }\r\n  })\r\n  return block\r\n}\r\n\r\nconst splitRE = /\\r?\\n/g\r\nconst emptyRE = /^(?:\\/\\/)?\\s*$/\r\nconst replaceRE = /./g\r\n\r\nfunction generateSourceMap(\r\n  filename: string,\r\n  source: string,\r\n  generated: string,\r\n  sourceRoot: string,\r\n  lineOffset: number,\r\n  columnOffset: number,\r\n): RawSourceMap {\r\n  const map = new SourceMapGenerator({\r\n    file: filename.replace(/\\\\/g, '/'),\r\n    sourceRoot: sourceRoot.replace(/\\\\/g, '/'),\r\n  })\r\n  map.setSourceContent(filename, source)\r\n  map._sources.add(filename)\r\n  generated.split(splitRE).forEach((line, index) => {\r\n    if (!emptyRE.test(line)) {\r\n      const originalLine = index + 1 + lineOffset\r\n      const generatedLine = index + 1\r\n      for (let i = 0; i < line.length; i++) {\r\n        if (!/\\s/.test(line[i])) {\r\n          map._mappings.add({\r\n            originalLine,\r\n            originalColumn: i + columnOffset,\r\n            generatedLine,\r\n            generatedColumn: i,\r\n            source: filename,\r\n            // @ts-expect-error\r\n            name: null,\r\n          })\r\n        }\r\n      }\r\n    }\r\n  })\r\n  return map.toJSON()\r\n}\r\n\r\nfunction padContent(\r\n  content: string,\r\n  block: SFCBlock,\r\n  pad: SFCParseOptions['pad'],\r\n): string {\r\n  content = content.slice(0, block.loc.start.offset)\r\n  if (pad === 'space') {\r\n    return content.replace(replaceRE, ' ')\r\n  } else {\r\n    const offset = content.split(splitRE).length\r\n    const padChar = block.type === 'script' && !block.lang ? '//\\n' : '\\n'\r\n    return Array(offset).join(padChar)\r\n  }\r\n}\r\n\r\nfunction hasSrc(node: ElementNode) {\r\n  return node.props.some(p => {\r\n    if (p.type !== NodeTypes.ATTRIBUTE) {\r\n      return false\r\n    }\r\n    return p.name === 'src'\r\n  })\r\n}\r\n\r\n/**\r\n * Returns true if the node has no children\r\n * once the empty text nodes (trimmed content) have been filtered out.\r\n */\r\nfunction isEmpty(node: ElementNode) {\r\n  for (let i = 0; i < node.children.length; i++) {\r\n    const child = node.children[i]\r\n    if (child.type !== NodeTypes.TEXT || child.content.trim() !== '') {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * Note: this comparison assumes the prev/next script are already identical,\r\n * and only checks the special case where <script setup lang=\"ts\"> unused import\r\n * pruning result changes due to template changes.\r\n */\r\nexport function hmrShouldReload(\r\n  prevImports: Record<string, ImportBinding>,\r\n  next: SFCDescriptor,\r\n): boolean {\r\n  if (\r\n    !next.scriptSetup ||\r\n    (next.scriptSetup.lang !== 'ts' && next.scriptSetup.lang !== 'tsx')\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  // for each previous import, check if its used status remain the same based on\r\n  // the next descriptor's template\r\n  for (const key in prevImports) {\r\n    // if an import was previous unused, but now is used, we need to force\r\n    // reload so that the script now includes that import.\r\n    if (!prevImports[key].isUsedInTemplate && isImportUsed(key, next)) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Dedent a string.\r\n *\r\n * This removes any whitespace that is common to all lines in the string from\r\n * each line in the string.\r\n */\r\nfunction dedent(s: string): [string, number] {\r\n  const lines = s.split('\\n')\r\n  const minIndent = lines.reduce(function (minIndent, line) {\r\n    if (line.trim() === '') {\r\n      return minIndent\r\n    }\r\n    const indent = line.match(/^\\s*/)?.[0]?.length || 0\r\n    return Math.min(indent, minIndent)\r\n  }, Infinity)\r\n  if (minIndent === 0) {\r\n    return [s, minIndent]\r\n  }\r\n  return [\r\n    lines\r\n      .map(function (line) {\r\n        return line.slice(minIndent)\r\n      })\r\n      .join('\\n'),\r\n    minIndent,\r\n  ]\r\n}\r\n","import { type UrlWithStringQuery, parse as uriParse } from 'url'\r\nimport { isString } from '@vue/shared'\r\n\r\nexport function isRelativeUrl(url: string): boolean {\r\n  const firstChar = url.charAt(0)\r\n  return firstChar === '.' || firstChar === '~' || firstChar === '@'\r\n}\r\n\r\nconst externalRE = /^(https?:)?\\/\\//\r\nexport function isExternalUrl(url: string): boolean {\r\n  return externalRE.test(url)\r\n}\r\n\r\nconst dataUrlRE = /^\\s*data:/i\r\nexport function isDataUrl(url: string): boolean {\r\n  return dataUrlRE.test(url)\r\n}\r\n\r\n/**\r\n * Parses string url into URL object.\r\n */\r\nexport function parseUrl(url: string): UrlWithStringQuery {\r\n  const firstChar = url.charAt(0)\r\n  if (firstChar === '~') {\r\n    const secondChar = url.charAt(1)\r\n    url = url.slice(secondChar === '/' ? 2 : 1)\r\n  }\r\n  return parseUriParts(url)\r\n}\r\n\r\n/**\r\n * vuejs/component-compiler-utils#22 Support uri fragment in transformed require\r\n * @param urlString - an url as a string\r\n */\r\nfunction parseUriParts(urlString: string): UrlWithStringQuery {\r\n  // A TypeError is thrown if urlString is not a string\r\n  // @see https://nodejs.org/api/url.html#url_url_parse_urlstring_parsequerystring_slashesdenotehost\r\n  return uriParse(isString(urlString) ? urlString : '', false, true)\r\n}\r\n","import path from 'path'\r\nimport {\r\n  ConstantTypes,\r\n  type ExpressionNode,\r\n  type NodeTransform,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  type SourceLocation,\r\n  type TransformContext,\r\n  createSimpleExpression,\r\n} from '@vue/compiler-core'\r\nimport {\r\n  isDataUrl,\r\n  isExternalUrl,\r\n  isRelativeUrl,\r\n  parseUrl,\r\n} from './templateUtils'\r\nimport { isArray } from '@vue/shared'\r\n\r\nexport interface AssetURLTagConfig {\r\n  [name: string]: string[]\r\n}\r\n\r\nexport interface AssetURLOptions {\r\n  /**\r\n   * If base is provided, instead of transforming relative asset urls into\r\n   * imports, they will be directly rewritten to absolute urls.\r\n   */\r\n  base?: string | null\r\n  /**\r\n   * If true, also processes absolute urls.\r\n   */\r\n  includeAbsolute?: boolean\r\n  tags?: AssetURLTagConfig\r\n}\r\n\r\nexport const defaultAssetUrlOptions: Required<AssetURLOptions> = {\r\n  base: null,\r\n  includeAbsolute: false,\r\n  tags: {\r\n    video: ['src', 'poster'],\r\n    source: ['src'],\r\n    img: ['src'],\r\n    image: ['xlink:href', 'href'],\r\n    use: ['xlink:href', 'href'],\r\n  },\r\n}\r\n\r\nexport const normalizeOptions = (\r\n  options: AssetURLOptions | AssetURLTagConfig,\r\n): Required<AssetURLOptions> => {\r\n  if (Object.keys(options).some(key => isArray((options as any)[key]))) {\r\n    // legacy option format which directly passes in tags config\r\n    return {\r\n      ...defaultAssetUrlOptions,\r\n      tags: options as any,\r\n    }\r\n  }\r\n  return {\r\n    ...defaultAssetUrlOptions,\r\n    ...options,\r\n  }\r\n}\r\n\r\nexport const createAssetUrlTransformWithOptions = (\r\n  options: Required<AssetURLOptions>,\r\n): NodeTransform => {\r\n  return (node, context) =>\r\n    (transformAssetUrl as Function)(node, context, options)\r\n}\r\n\r\n/**\r\n * A `@vue/compiler-core` plugin that transforms relative asset urls into\r\n * either imports or absolute urls.\r\n *\r\n * ``` js\r\n * // Before\r\n * createVNode('img', { src: './logo.png' })\r\n *\r\n * // After\r\n * import _imports_0 from './logo.png'\r\n * createVNode('img', { src: _imports_0 })\r\n * ```\r\n */\r\nexport const transformAssetUrl: NodeTransform = (\r\n  node,\r\n  context,\r\n  options: AssetURLOptions = defaultAssetUrlOptions,\r\n) => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    if (!node.props.length) {\r\n      return\r\n    }\r\n\r\n    const tags = options.tags || defaultAssetUrlOptions.tags\r\n    const attrs = tags[node.tag]\r\n    const wildCardAttrs = tags['*']\r\n    if (!attrs && !wildCardAttrs) {\r\n      return\r\n    }\r\n\r\n    const assetAttrs = (attrs || []).concat(wildCardAttrs || [])\r\n    node.props.forEach((attr, index) => {\r\n      if (\r\n        attr.type !== NodeTypes.ATTRIBUTE ||\r\n        !assetAttrs.includes(attr.name) ||\r\n        !attr.value ||\r\n        isExternalUrl(attr.value.content) ||\r\n        isDataUrl(attr.value.content) ||\r\n        attr.value.content[0] === '#' ||\r\n        (!options.includeAbsolute && !isRelativeUrl(attr.value.content))\r\n      ) {\r\n        return\r\n      }\r\n\r\n      const url = parseUrl(attr.value.content)\r\n      if (options.base && attr.value.content[0] === '.') {\r\n        // explicit base - directly rewrite relative urls into absolute url\r\n        // to avoid generating extra imports\r\n        // Allow for full hostnames provided in options.base\r\n        const base = parseUrl(options.base)\r\n        const protocol = base.protocol || ''\r\n        const host = base.host ? protocol + '//' + base.host : ''\r\n        const basePath = base.path || '/'\r\n\r\n        // when packaged in the browser, path will be using the posix-\r\n        // only version provided by rollup-plugin-node-builtins.\r\n        attr.value.content =\r\n          host +\r\n          (path.posix || path).join(basePath, url.path + (url.hash || ''))\r\n        return\r\n      }\r\n\r\n      // otherwise, transform the url into an import.\r\n      // this assumes a bundler will resolve the import into the correct\r\n      // absolute url (e.g. webpack file-loader)\r\n      const exp = getImportsExpressionExp(url.path, url.hash, attr.loc, context)\r\n      node.props[index] = {\r\n        type: NodeTypes.DIRECTIVE,\r\n        name: 'bind',\r\n        arg: createSimpleExpression(attr.name, true, attr.loc),\r\n        exp,\r\n        modifiers: [],\r\n        loc: attr.loc,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction getImportsExpressionExp(\r\n  path: string | null,\r\n  hash: string | null,\r\n  loc: SourceLocation,\r\n  context: TransformContext,\r\n): ExpressionNode {\r\n  if (path) {\r\n    let name: string\r\n    let exp: SimpleExpressionNode\r\n    const existingIndex = context.imports.findIndex(i => i.path === path)\r\n    if (existingIndex > -1) {\r\n      name = `_imports_${existingIndex}`\r\n      exp = context.imports[existingIndex].exp as SimpleExpressionNode\r\n    } else {\r\n      name = `_imports_${context.imports.length}`\r\n      exp = createSimpleExpression(\r\n        name,\r\n        false,\r\n        loc,\r\n        ConstantTypes.CAN_STRINGIFY,\r\n      )\r\n\r\n      // We need to ensure the path is not encoded (to %2F),\r\n      // so we decode it back in case it is encoded\r\n      context.imports.push({\r\n        exp,\r\n        path: decodeURIComponent(path),\r\n      })\r\n    }\r\n\r\n    if (!hash) {\r\n      return exp\r\n    }\r\n\r\n    const hashExp = `${name} + '${hash}'`\r\n    const finalExp = createSimpleExpression(\r\n      hashExp,\r\n      false,\r\n      loc,\r\n      ConstantTypes.CAN_STRINGIFY,\r\n    )\r\n\r\n    if (!context.hoistStatic) {\r\n      return finalExp\r\n    }\r\n\r\n    const existingHoistIndex = context.hoists.findIndex(h => {\r\n      return (\r\n        h &&\r\n        h.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        !h.isStatic &&\r\n        h.content === hashExp\r\n      )\r\n    })\r\n    if (existingHoistIndex > -1) {\r\n      return createSimpleExpression(\r\n        `_hoisted_${existingHoistIndex + 1}`,\r\n        false,\r\n        loc,\r\n        ConstantTypes.CAN_STRINGIFY,\r\n      )\r\n    }\r\n    return context.hoist(finalExp)\r\n  } else {\r\n    return createSimpleExpression(`''`, false, loc, ConstantTypes.CAN_STRINGIFY)\r\n  }\r\n}\r\n","import path from 'path'\r\nimport {\r\n  ConstantTypes,\r\n  type ExpressionNode,\r\n  type NodeTransform,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  createCompoundExpression,\r\n  createSimpleExpression,\r\n} from '@vue/compiler-core'\r\nimport {\r\n  isDataUrl,\r\n  isExternalUrl,\r\n  isRelativeUrl,\r\n  parseUrl,\r\n} from './templateUtils'\r\nimport {\r\n  type AssetURLOptions,\r\n  defaultAssetUrlOptions,\r\n} from './transformAssetUrl'\r\n\r\nconst srcsetTags = ['img', 'source']\r\n\r\ninterface ImageCandidate {\r\n  url: string\r\n  descriptor: string\r\n}\r\n\r\n// http://w3c.github.io/html/semantics-embedded-content.html#ref-for-image-candidate-string-5\r\nconst escapedSpaceCharacters = /( |\\\\t|\\\\n|\\\\f|\\\\r)+/g\r\n\r\nexport const createSrcsetTransformWithOptions = (\r\n  options: Required<AssetURLOptions>,\r\n): NodeTransform => {\r\n  return (node, context) =>\r\n    (transformSrcset as Function)(node, context, options)\r\n}\r\n\r\nexport const transformSrcset: NodeTransform = (\r\n  node,\r\n  context,\r\n  options: Required<AssetURLOptions> = defaultAssetUrlOptions,\r\n) => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    if (srcsetTags.includes(node.tag) && node.props.length) {\r\n      node.props.forEach((attr, index) => {\r\n        if (attr.name === 'srcset' && attr.type === NodeTypes.ATTRIBUTE) {\r\n          if (!attr.value) return\r\n          const value = attr.value.content\r\n          if (!value) return\r\n          const imageCandidates: ImageCandidate[] = value.split(',').map(s => {\r\n            // The attribute value arrives here with all whitespace, except\r\n            // normal spaces, represented by escape sequences\r\n            const [url, descriptor] = s\r\n              .replace(escapedSpaceCharacters, ' ')\r\n              .trim()\r\n              .split(' ', 2)\r\n            return { url, descriptor }\r\n          })\r\n\r\n          // data urls contains comma after the encoding so we need to re-merge\r\n          // them\r\n          for (let i = 0; i < imageCandidates.length; i++) {\r\n            const { url } = imageCandidates[i]\r\n            if (isDataUrl(url)) {\r\n              imageCandidates[i + 1].url =\r\n                url + ',' + imageCandidates[i + 1].url\r\n              imageCandidates.splice(i, 1)\r\n            }\r\n          }\r\n\r\n          const shouldProcessUrl = (url: string) => {\r\n            return (\r\n              !isExternalUrl(url) &&\r\n              !isDataUrl(url) &&\r\n              (options.includeAbsolute || isRelativeUrl(url))\r\n            )\r\n          }\r\n          // When srcset does not contain any qualified URLs, skip transforming\r\n          if (!imageCandidates.some(({ url }) => shouldProcessUrl(url))) {\r\n            return\r\n          }\r\n\r\n          if (options.base) {\r\n            const base = options.base\r\n            const set: string[] = []\r\n            let needImportTransform = false\r\n\r\n            imageCandidates.forEach(candidate => {\r\n              let { url, descriptor } = candidate\r\n              descriptor = descriptor ? ` ${descriptor}` : ``\r\n              if (url[0] === '.') {\r\n                candidate.url = (path.posix || path).join(base, url)\r\n                set.push(candidate.url + descriptor)\r\n              } else if (shouldProcessUrl(url)) {\r\n                needImportTransform = true\r\n              } else {\r\n                set.push(url + descriptor)\r\n              }\r\n            })\r\n\r\n            if (!needImportTransform) {\r\n              attr.value.content = set.join(', ')\r\n              return\r\n            }\r\n          }\r\n\r\n          const compoundExpression = createCompoundExpression([], attr.loc)\r\n          imageCandidates.forEach(({ url, descriptor }, index) => {\r\n            if (shouldProcessUrl(url)) {\r\n              const { path } = parseUrl(url)\r\n              let exp: SimpleExpressionNode\r\n              if (path) {\r\n                const existingImportsIndex = context.imports.findIndex(\r\n                  i => i.path === path,\r\n                )\r\n                if (existingImportsIndex > -1) {\r\n                  exp = createSimpleExpression(\r\n                    `_imports_${existingImportsIndex}`,\r\n                    false,\r\n                    attr.loc,\r\n                    ConstantTypes.CAN_STRINGIFY,\r\n                  )\r\n                } else {\r\n                  exp = createSimpleExpression(\r\n                    `_imports_${context.imports.length}`,\r\n                    false,\r\n                    attr.loc,\r\n                    ConstantTypes.CAN_STRINGIFY,\r\n                  )\r\n                  context.imports.push({ exp, path })\r\n                }\r\n                compoundExpression.children.push(exp)\r\n              }\r\n            } else {\r\n              const exp = createSimpleExpression(\r\n                `\"${url}\"`,\r\n                false,\r\n                attr.loc,\r\n                ConstantTypes.CAN_STRINGIFY,\r\n              )\r\n              compoundExpression.children.push(exp)\r\n            }\r\n            const isNotLast = imageCandidates.length - 1 > index\r\n            if (descriptor && isNotLast) {\r\n              compoundExpression.children.push(` + ' ${descriptor}, ' + `)\r\n            } else if (descriptor) {\r\n              compoundExpression.children.push(` + ' ${descriptor}'`)\r\n            } else if (isNotLast) {\r\n              compoundExpression.children.push(` + ', ' + `)\r\n            }\r\n          })\r\n\r\n          let exp: ExpressionNode = compoundExpression\r\n          if (context.hoistStatic) {\r\n            exp = context.hoist(compoundExpression)\r\n            exp.constType = ConstantTypes.CAN_STRINGIFY\r\n          }\r\n\r\n          node.props[index] = {\r\n            type: NodeTypes.DIRECTIVE,\r\n            name: 'bind',\r\n            arg: createSimpleExpression('srcset', true, attr.loc),\r\n            exp,\r\n            modifiers: [],\r\n            loc: attr.loc,\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { registerRuntimeHelpers } from '@vue/compiler-dom'\r\n\r\nexport const SSR_INTERPOLATE = Symbol(`ssrInterpolate`)\r\nexport const SSR_RENDER_VNODE = Symbol(`ssrRenderVNode`)\r\nexport const SSR_RENDER_COMPONENT = Symbol(`ssrRenderComponent`)\r\nexport const SSR_RENDER_SLOT = Symbol(`ssrRenderSlot`)\r\nexport const SSR_RENDER_SLOT_INNER = Symbol(`ssrRenderSlotInner`)\r\nexport const SSR_RENDER_CLASS = Symbol(`ssrRenderClass`)\r\nexport const SSR_RENDER_STYLE = Symbol(`ssrRenderStyle`)\r\nexport const SSR_RENDER_ATTRS = Symbol(`ssrRenderAttrs`)\r\nexport const SSR_RENDER_ATTR = Symbol(`ssrRenderAttr`)\r\nexport const SSR_RENDER_DYNAMIC_ATTR = Symbol(`ssrRenderDynamicAttr`)\r\nexport const SSR_RENDER_LIST = Symbol(`ssrRenderList`)\r\nexport const SSR_INCLUDE_BOOLEAN_ATTR = Symbol(`ssrIncludeBooleanAttr`)\r\nexport const SSR_LOOSE_EQUAL = Symbol(`ssrLooseEqual`)\r\nexport const SSR_LOOSE_CONTAIN = Symbol(`ssrLooseContain`)\r\nexport const SSR_RENDER_DYNAMIC_MODEL = Symbol(`ssrRenderDynamicModel`)\r\nexport const SSR_GET_DYNAMIC_MODEL_PROPS = Symbol(`ssrGetDynamicModelProps`)\r\nexport const SSR_RENDER_TELEPORT = Symbol(`ssrRenderTeleport`)\r\nexport const SSR_RENDER_SUSPENSE = Symbol(`ssrRenderSuspense`)\r\nexport const SSR_GET_DIRECTIVE_PROPS = Symbol(`ssrGetDirectiveProps`)\r\n\r\nexport const ssrHelpers = {\r\n  [SSR_INTERPOLATE]: `ssrInterpolate`,\r\n  [SSR_RENDER_VNODE]: `ssrRenderVNode`,\r\n  [SSR_RENDER_COMPONENT]: `ssrRenderComponent`,\r\n  [SSR_RENDER_SLOT]: `ssrRenderSlot`,\r\n  [SSR_RENDER_SLOT_INNER]: `ssrRenderSlotInner`,\r\n  [SSR_RENDER_CLASS]: `ssrRenderClass`,\r\n  [SSR_RENDER_STYLE]: `ssrRenderStyle`,\r\n  [SSR_RENDER_ATTRS]: `ssrRenderAttrs`,\r\n  [SSR_RENDER_ATTR]: `ssrRenderAttr`,\r\n  [SSR_RENDER_DYNAMIC_ATTR]: `ssrRenderDynamicAttr`,\r\n  [SSR_RENDER_LIST]: `ssrRenderList`,\r\n  [SSR_INCLUDE_BOOLEAN_ATTR]: `ssrIncludeBooleanAttr`,\r\n  [SSR_LOOSE_EQUAL]: `ssrLooseEqual`,\r\n  [SSR_LOOSE_CONTAIN]: `ssrLooseContain`,\r\n  [SSR_RENDER_DYNAMIC_MODEL]: `ssrRenderDynamicModel`,\r\n  [SSR_GET_DYNAMIC_MODEL_PROPS]: `ssrGetDynamicModelProps`,\r\n  [SSR_RENDER_TELEPORT]: `ssrRenderTeleport`,\r\n  [SSR_RENDER_SUSPENSE]: `ssrRenderSuspense`,\r\n  [SSR_GET_DIRECTIVE_PROPS]: `ssrGetDirectiveProps`,\r\n}\r\n\r\n// Note: these are helpers imported from @vue/server-renderer\r\n// make sure the names match!\r\nregisterRuntimeHelpers(ssrHelpers)\r\n","import {\r\n  type BlockStatement,\r\n  type IfBranchNode,\r\n  type IfNode,\r\n  NodeTypes,\r\n  createBlockStatement,\r\n  createCallExpression,\r\n  createIfStatement,\r\n  createStructuralDirectiveTransform,\r\n  processIf,\r\n} from '@vue/compiler-dom'\r\nimport {\r\n  type SSRTransformContext,\r\n  processChildrenAsStatement,\r\n} from '../ssrCodegenTransform'\r\n\r\n// Plugin for the first transform pass, which simply constructs the AST node\r\nexport const ssrTransformIf = createStructuralDirectiveTransform(\r\n  /^(if|else|else-if)$/,\r\n  processIf,\r\n)\r\n\r\n// This is called during the 2nd transform pass to construct the SSR-specific\r\n// codegen nodes.\r\nexport function ssrProcessIf(\r\n  node: IfNode,\r\n  context: SSRTransformContext,\r\n  disableNestedFragments = false,\r\n) {\r\n  const [rootBranch] = node.branches\r\n  const ifStatement = createIfStatement(\r\n    rootBranch.condition!,\r\n    processIfBranch(rootBranch, context, disableNestedFragments),\r\n  )\r\n  context.pushStatement(ifStatement)\r\n\r\n  let currentIf = ifStatement\r\n  for (let i = 1; i < node.branches.length; i++) {\r\n    const branch = node.branches[i]\r\n    const branchBlockStatement = processIfBranch(\r\n      branch,\r\n      context,\r\n      disableNestedFragments,\r\n    )\r\n    if (branch.condition) {\r\n      // else-if\r\n      currentIf = currentIf.alternate = createIfStatement(\r\n        branch.condition,\r\n        branchBlockStatement,\r\n      )\r\n    } else {\r\n      // else\r\n      currentIf.alternate = branchBlockStatement\r\n    }\r\n  }\r\n\r\n  if (!currentIf.alternate) {\r\n    currentIf.alternate = createBlockStatement([\r\n      createCallExpression(`_push`, ['`<!---->`']),\r\n    ])\r\n  }\r\n}\r\n\r\nfunction processIfBranch(\r\n  branch: IfBranchNode,\r\n  context: SSRTransformContext,\r\n  disableNestedFragments = false,\r\n): BlockStatement {\r\n  const { children } = branch\r\n  const needFragmentWrapper =\r\n    !disableNestedFragments &&\r\n    (children.length !== 1 || children[0].type !== NodeTypes.ELEMENT) &&\r\n    // optimize away nested fragments when the only child is a ForNode\r\n    !(children.length === 1 && children[0].type === NodeTypes.FOR)\r\n  return processChildrenAsStatement(branch, context, needFragmentWrapper)\r\n}\r\n","import {\r\n  type ForNode,\r\n  NodeTypes,\r\n  createCallExpression,\r\n  createForLoopParams,\r\n  createFunctionExpression,\r\n  createStructuralDirectiveTransform,\r\n  processFor,\r\n} from '@vue/compiler-dom'\r\nimport {\r\n  type SSRTransformContext,\r\n  processChildrenAsStatement,\r\n} from '../ssrCodegenTransform'\r\nimport { SSR_RENDER_LIST } from '../runtimeHelpers'\r\n\r\n// Plugin for the first transform pass, which simply constructs the AST node\r\nexport const ssrTransformFor = createStructuralDirectiveTransform(\r\n  'for',\r\n  processFor,\r\n)\r\n\r\n// This is called during the 2nd transform pass to construct the SSR-specific\r\n// codegen nodes.\r\nexport function ssrProcessFor(\r\n  node: ForNode,\r\n  context: SSRTransformContext,\r\n  disableNestedFragments = false,\r\n) {\r\n  const needFragmentWrapper =\r\n    !disableNestedFragments &&\r\n    (node.children.length !== 1 || node.children[0].type !== NodeTypes.ELEMENT)\r\n  const renderLoop = createFunctionExpression(\r\n    createForLoopParams(node.parseResult),\r\n  )\r\n  renderLoop.body = processChildrenAsStatement(\r\n    node,\r\n    context,\r\n    needFragmentWrapper,\r\n  )\r\n  // v-for always renders a fragment unless explicitly disabled\r\n  if (!disableNestedFragments) {\r\n    context.pushStringPart(`<!--[-->`)\r\n  }\r\n  context.pushStatement(\r\n    createCallExpression(context.helper(SSR_RENDER_LIST), [\r\n      node.source,\r\n      renderLoop,\r\n    ]),\r\n  )\r\n  if (!disableNestedFragments) {\r\n    context.pushStringPart(`<!--]-->`)\r\n  }\r\n}\r\n","import {\r\n  ElementTypes,\r\n  type NodeTransform,\r\n  NodeTypes,\r\n  type SlotOutletNode,\r\n  TRANSITION,\r\n  TRANSITION_GROUP,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n  isSlotOutlet,\r\n  processSlotOutlet,\r\n  resolveComponentType,\r\n} from '@vue/compiler-dom'\r\nimport { SSR_RENDER_SLOT, SSR_RENDER_SLOT_INNER } from '../runtimeHelpers'\r\nimport {\r\n  type SSRTransformContext,\r\n  processChildrenAsStatement,\r\n} from '../ssrCodegenTransform'\r\n\r\nexport const ssrTransformSlotOutlet: NodeTransform = (node, context) => {\r\n  if (isSlotOutlet(node)) {\r\n    const { slotName, slotProps } = processSlotOutlet(node, context)\r\n\r\n    const args = [\r\n      `_ctx.$slots`,\r\n      slotName,\r\n      slotProps || `{}`,\r\n      // fallback content placeholder. will be replaced in the process phase\r\n      `null`,\r\n      `_push`,\r\n      `_parent`,\r\n    ]\r\n\r\n    // inject slot scope id if current template uses :slotted\r\n    if (context.scopeId && context.slotted !== false) {\r\n      args.push(`\"${context.scopeId}-s\"`)\r\n    }\r\n\r\n    let method = SSR_RENDER_SLOT\r\n\r\n    // #3989, #9933\r\n    // check if this is a single slot inside a transition wrapper - since\r\n    // transition/transition-group will unwrap the slot fragment into vnode(s) at runtime,\r\n    // we need to avoid rendering the slot as a fragment.\r\n    const parent = context.parent\r\n    let componentType\r\n    if (\r\n      parent &&\r\n      parent.type === NodeTypes.ELEMENT &&\r\n      parent.tagType === ElementTypes.COMPONENT &&\r\n      ((componentType = resolveComponentType(parent, context, true)) ===\r\n        TRANSITION ||\r\n        componentType === TRANSITION_GROUP) &&\r\n      parent.children.filter(c => c.type === NodeTypes.ELEMENT).length === 1\r\n    ) {\r\n      method = SSR_RENDER_SLOT_INNER\r\n      if (!(context.scopeId && context.slotted !== false)) {\r\n        args.push('null')\r\n      }\r\n      args.push('true')\r\n    }\r\n\r\n    node.ssrCodegenNode = createCallExpression(context.helper(method), args)\r\n  }\r\n}\r\n\r\nexport function ssrProcessSlotOutlet(\r\n  node: SlotOutletNode,\r\n  context: SSRTransformContext,\r\n) {\r\n  const renderCall = node.ssrCodegenNode!\r\n\r\n  // has fallback content\r\n  if (node.children.length) {\r\n    const fallbackRenderFn = createFunctionExpression([])\r\n    fallbackRenderFn.body = processChildrenAsStatement(node, context)\r\n    // _renderSlot(slots, name, props, fallback, ...)\r\n    renderCall.arguments[3] = fallbackRenderFn\r\n  }\r\n\r\n  // Forwarded <slot/>. Merge slot scope ids\r\n  if (context.withSlotScopeId) {\r\n    const slotScopeId = renderCall.arguments[6]\r\n    renderCall.arguments[6] = slotScopeId\r\n      ? `${slotScopeId as string} + _scopeId`\r\n      : `_scopeId`\r\n  }\r\n\r\n  context.pushStatement(node.ssrCodegenNode!)\r\n}\r\n","import {\r\n  type CompilerError,\r\n  DOMErrorCodes,\r\n  type SourceLocation,\r\n  createCompilerError,\r\n} from '@vue/compiler-dom'\r\n\r\nexport interface SSRCompilerError extends CompilerError {\r\n  code: SSRErrorCodes\r\n}\r\n\r\nexport function createSSRCompilerError(\r\n  code: SSRErrorCodes,\r\n  loc?: SourceLocation,\r\n) {\r\n  return createCompilerError(code, loc, SSRErrorMessages) as SSRCompilerError\r\n}\r\n\r\nexport enum SSRErrorCodes {\r\n  X_SSR_UNSAFE_ATTR_NAME = 65 /* DOMErrorCodes.__EXTEND_POINT__ */,\r\n  X_SSR_NO_TELEPORT_TARGET,\r\n  X_SSR_INVALID_AST_NODE,\r\n}\r\n\r\nif (__TEST__) {\r\n  // esbuild cannot infer enum increments if first value is from another\r\n  // file, so we have to manually keep them in sync. this check ensures it\r\n  // errors out if there are collisions.\r\n  if (SSRErrorCodes.X_SSR_UNSAFE_ATTR_NAME < DOMErrorCodes.__EXTEND_POINT__) {\r\n    throw new Error(\r\n      `SSRErrorCodes need to be updated to ${\r\n        DOMErrorCodes.__EXTEND_POINT__ + 1\r\n      } to match extension point from core DOMErrorCodes.`,\r\n    )\r\n  }\r\n}\r\n\r\nexport const SSRErrorMessages: { [code: number]: string } = {\r\n  [SSRErrorCodes.X_SSR_UNSAFE_ATTR_NAME]: `Unsafe attribute name for SSR.`,\r\n  [SSRErrorCodes.X_SSR_NO_TELEPORT_TARGET]: `Missing the 'to' prop on teleport element.`,\r\n  [SSRErrorCodes.X_SSR_INVALID_AST_NODE]: `Invalid AST node during SSR transform.`,\r\n}\r\n","import {\r\n  type ComponentNode,\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n  createSimpleExpression,\r\n  findProp,\r\n} from '@vue/compiler-dom'\r\nimport {\r\n  type SSRTransformContext,\r\n  processChildrenAsStatement,\r\n} from '../ssrCodegenTransform'\r\nimport { SSRErrorCodes, createSSRCompilerError } from '../errors'\r\nimport { SSR_RENDER_TELEPORT } from '../runtimeHelpers'\r\n\r\n// Note: this is a 2nd-pass codegen transform.\r\nexport function ssrProcessTeleport(\r\n  node: ComponentNode,\r\n  context: SSRTransformContext,\r\n) {\r\n  const targetProp = findProp(node, 'to')\r\n  if (!targetProp) {\r\n    context.onError(\r\n      createSSRCompilerError(SSRErrorCodes.X_SSR_NO_TELEPORT_TARGET, node.loc),\r\n    )\r\n    return\r\n  }\r\n\r\n  let target: ExpressionNode | undefined\r\n  if (targetProp.type === NodeTypes.ATTRIBUTE) {\r\n    target =\r\n      targetProp.value && createSimpleExpression(targetProp.value.content, true)\r\n  } else {\r\n    target = targetProp.exp\r\n  }\r\n  if (!target) {\r\n    context.onError(\r\n      createSSRCompilerError(\r\n        SSRErrorCodes.X_SSR_NO_TELEPORT_TARGET,\r\n        targetProp.loc,\r\n      ),\r\n    )\r\n    return\r\n  }\r\n\r\n  const disabledProp = findProp(node, 'disabled', false, true /* allow empty */)\r\n  const disabled = disabledProp\r\n    ? disabledProp.type === NodeTypes.ATTRIBUTE\r\n      ? `true`\r\n      : disabledProp.exp || `false`\r\n    : `false`\r\n\r\n  const contentRenderFn = createFunctionExpression(\r\n    [`_push`],\r\n    undefined, // Body is added later\r\n    true, // newline\r\n    false, // isSlot\r\n    node.loc,\r\n  )\r\n  contentRenderFn.body = processChildrenAsStatement(node, context)\r\n  context.pushStatement(\r\n    createCallExpression(context.helper(SSR_RENDER_TELEPORT), [\r\n      `_push`,\r\n      contentRenderFn,\r\n      target,\r\n      disabled,\r\n      `_parent`,\r\n    ]),\r\n  )\r\n}\r\n","import {\r\n  type ComponentNode,\r\n  type FunctionExpression,\r\n  type SlotsExpression,\r\n  type TemplateChildNode,\r\n  type TransformContext,\r\n  buildSlots,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n} from '@vue/compiler-dom'\r\nimport {\r\n  type SSRTransformContext,\r\n  processChildrenAsStatement,\r\n} from '../ssrCodegenTransform'\r\nimport { SSR_RENDER_SUSPENSE } from '../runtimeHelpers'\r\n\r\nconst wipMap = new WeakMap<ComponentNode, WIPEntry>()\r\n\r\ninterface WIPEntry {\r\n  slotsExp: SlotsExpression\r\n  wipSlots: Array<{\r\n    fn: FunctionExpression\r\n    children: TemplateChildNode[]\r\n  }>\r\n}\r\n\r\n// phase 1\r\nexport function ssrTransformSuspense(\r\n  node: ComponentNode,\r\n  context: TransformContext,\r\n) {\r\n  return () => {\r\n    if (node.children.length) {\r\n      const wipEntry: WIPEntry = {\r\n        slotsExp: null!, // to be immediately set\r\n        wipSlots: [],\r\n      }\r\n      wipMap.set(node, wipEntry)\r\n      wipEntry.slotsExp = buildSlots(\r\n        node,\r\n        context,\r\n        (_props, _vForExp, children, loc) => {\r\n          const fn = createFunctionExpression(\r\n            [],\r\n            undefined, // no return, assign body later\r\n            true, // newline\r\n            false, // suspense slots are not treated as normal slots\r\n            loc,\r\n          )\r\n          wipEntry.wipSlots.push({\r\n            fn,\r\n            children,\r\n          })\r\n          return fn\r\n        },\r\n      ).slots\r\n    }\r\n  }\r\n}\r\n\r\n// phase 2\r\nexport function ssrProcessSuspense(\r\n  node: ComponentNode,\r\n  context: SSRTransformContext,\r\n) {\r\n  // complete wip slots with ssr code\r\n  const wipEntry = wipMap.get(node)\r\n  if (!wipEntry) {\r\n    return\r\n  }\r\n  const { slotsExp, wipSlots } = wipEntry\r\n  for (let i = 0; i < wipSlots.length; i++) {\r\n    const slot = wipSlots[i]\r\n    slot.fn.body = processChildrenAsStatement(slot, context)\r\n  }\r\n  // _push(ssrRenderSuspense(slots))\r\n  context.pushStatement(\r\n    createCallExpression(context.helper(SSR_RENDER_SUSPENSE), [\r\n      `_push`,\r\n      slotsExp,\r\n    ]),\r\n  )\r\n}\r\n","import {\r\n  type ArrayExpression,\r\n  type AttributeNode,\r\n  type CallExpression,\r\n  type DirectiveNode,\r\n  ElementTypes,\r\n  ErrorCodes,\r\n  type ExpressionNode,\r\n  type InterpolationNode,\r\n  type JSChildNode,\r\n  MERGE_PROPS,\r\n  type NodeTransform,\r\n  NodeTypes,\r\n  type PlainElementNode,\r\n  type PropsExpression,\r\n  type TemplateLiteral,\r\n  type TextNode,\r\n  type TransformContext,\r\n  buildDirectiveArgs,\r\n  buildProps,\r\n  createArrayExpression,\r\n  createAssignmentExpression,\r\n  createCallExpression,\r\n  createCompilerError,\r\n  createConditionalExpression,\r\n  createInterpolation,\r\n  createSequenceExpression,\r\n  createSimpleExpression,\r\n  createTemplateLiteral,\r\n  hasDynamicKeyVBind,\r\n  isStaticArgOf,\r\n  isStaticExp,\r\n} from '@vue/compiler-dom'\r\nimport {\r\n  NO,\r\n  escapeHtml,\r\n  isBooleanAttr,\r\n  isBuiltInDirective,\r\n  isSSRSafeAttrName,\r\n  propsToAttrMap,\r\n} from '@vue/shared'\r\nimport { SSRErrorCodes, createSSRCompilerError } from '../errors'\r\nimport {\r\n  SSR_GET_DIRECTIVE_PROPS,\r\n  SSR_GET_DYNAMIC_MODEL_PROPS,\r\n  SSR_INCLUDE_BOOLEAN_ATTR,\r\n  SSR_INTERPOLATE,\r\n  SSR_RENDER_ATTR,\r\n  SSR_RENDER_ATTRS,\r\n  SSR_RENDER_CLASS,\r\n  SSR_RENDER_DYNAMIC_ATTR,\r\n  SSR_RENDER_STYLE,\r\n} from '../runtimeHelpers'\r\nimport {\r\n  type SSRTransformContext,\r\n  processChildren,\r\n} from '../ssrCodegenTransform'\r\n\r\n// for directives with children overwrite (e.g. v-html & v-text), we need to\r\n// store the raw children so that they can be added in the 2nd pass.\r\nconst rawChildrenMap = new WeakMap<\r\n  PlainElementNode,\r\n  TemplateLiteral['elements'][0]\r\n>()\r\n\r\nexport const ssrTransformElement: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type !== NodeTypes.ELEMENT ||\r\n    node.tagType !== ElementTypes.ELEMENT\r\n  ) {\r\n    return\r\n  }\r\n\r\n  return function ssrPostTransformElement() {\r\n    // element\r\n    // generate the template literal representing the open tag.\r\n    const openTag: TemplateLiteral['elements'] = [`<${node.tag}`]\r\n    // some tags need to be passed to runtime for special checks\r\n    const needTagForRuntime =\r\n      node.tag === 'textarea' || node.tag.indexOf('-') > 0\r\n\r\n    // v-bind=\"obj\", v-bind:[key] and custom directives can potentially\r\n    // overwrite other static attrs and can affect final rendering result,\r\n    // so when they are present we need to bail out to full `renderAttrs`\r\n    const hasDynamicVBind = hasDynamicKeyVBind(node)\r\n    const hasCustomDir = node.props.some(\r\n      p => p.type === NodeTypes.DIRECTIVE && !isBuiltInDirective(p.name),\r\n    )\r\n    const needMergeProps = hasDynamicVBind || hasCustomDir\r\n    if (needMergeProps) {\r\n      const { props, directives } = buildProps(\r\n        node,\r\n        context,\r\n        node.props,\r\n        false /* isComponent */,\r\n        false /* isDynamicComponent */,\r\n        true /* ssr */,\r\n      )\r\n      if (props || directives.length) {\r\n        const mergedProps = buildSSRProps(props, directives, context)\r\n        const propsExp = createCallExpression(\r\n          context.helper(SSR_RENDER_ATTRS),\r\n          [mergedProps],\r\n        )\r\n\r\n        if (node.tag === 'textarea') {\r\n          const existingText = node.children[0] as\r\n            | TextNode\r\n            | InterpolationNode\r\n            | undefined\r\n          // If interpolation, this is dynamic <textarea> content, potentially\r\n          // injected by v-model and takes higher priority than v-bind value\r\n          if (!existingText || existingText.type !== NodeTypes.INTERPOLATION) {\r\n            // <textarea> with dynamic v-bind. We don't know if the final props\r\n            // will contain .value, so we will have to do something special:\r\n            // assign the merged props to a temp variable, and check whether\r\n            // it contains value (if yes, render is as children).\r\n            const tempId = `_temp${context.temps++}`\r\n            propsExp.arguments = [\r\n              createAssignmentExpression(\r\n                createSimpleExpression(tempId, false),\r\n                mergedProps,\r\n              ),\r\n            ]\r\n            rawChildrenMap.set(\r\n              node,\r\n              createCallExpression(context.helper(SSR_INTERPOLATE), [\r\n                createConditionalExpression(\r\n                  createSimpleExpression(`\"value\" in ${tempId}`, false),\r\n                  createSimpleExpression(`${tempId}.value`, false),\r\n                  createSimpleExpression(\r\n                    existingText ? existingText.content : ``,\r\n                    true,\r\n                  ),\r\n                  false,\r\n                ),\r\n              ]),\r\n            )\r\n          }\r\n        } else if (node.tag === 'input') {\r\n          // <input v-bind=\"obj\" v-model>\r\n          // we need to determine the props to render for the dynamic v-model\r\n          // and merge it with the v-bind expression.\r\n          const vModel = findVModel(node)\r\n          if (vModel) {\r\n            // 1. save the props (san v-model) in a temp variable\r\n            const tempId = `_temp${context.temps++}`\r\n            const tempExp = createSimpleExpression(tempId, false)\r\n            propsExp.arguments = [\r\n              createSequenceExpression([\r\n                createAssignmentExpression(tempExp, mergedProps),\r\n                createCallExpression(context.helper(MERGE_PROPS), [\r\n                  tempExp,\r\n                  createCallExpression(\r\n                    context.helper(SSR_GET_DYNAMIC_MODEL_PROPS),\r\n                    [\r\n                      tempExp, // existing props\r\n                      vModel.exp!, // model\r\n                    ],\r\n                  ),\r\n                ]),\r\n              ]),\r\n            ]\r\n          }\r\n        }\r\n\r\n        if (needTagForRuntime) {\r\n          propsExp.arguments.push(`\"${node.tag}\"`)\r\n        }\r\n\r\n        openTag.push(propsExp)\r\n      }\r\n    }\r\n\r\n    // book keeping static/dynamic class merging.\r\n    let dynamicClassBinding: CallExpression | undefined = undefined\r\n    let staticClassBinding: string | undefined = undefined\r\n    // all style bindings are converted to dynamic by transformStyle.\r\n    // but we need to make sure to merge them.\r\n    let dynamicStyleBinding: CallExpression | undefined = undefined\r\n\r\n    for (let i = 0; i < node.props.length; i++) {\r\n      const prop = node.props[i]\r\n      // ignore true-value/false-value on input\r\n      if (node.tag === 'input' && isTrueFalseValue(prop)) {\r\n        continue\r\n      }\r\n      // special cases with children override\r\n      if (prop.type === NodeTypes.DIRECTIVE) {\r\n        if (prop.name === 'html' && prop.exp) {\r\n          rawChildrenMap.set(node, prop.exp)\r\n        } else if (prop.name === 'text' && prop.exp) {\r\n          node.children = [createInterpolation(prop.exp, prop.loc)]\r\n        } else if (prop.name === 'slot') {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_V_SLOT_MISPLACED, prop.loc),\r\n          )\r\n        } else if (isTextareaWithValue(node, prop) && prop.exp) {\r\n          if (!needMergeProps) {\r\n            node.children = [createInterpolation(prop.exp, prop.loc)]\r\n          }\r\n        } else if (!needMergeProps && prop.name !== 'on') {\r\n          // Directive transforms.\r\n          const directiveTransform = context.directiveTransforms[prop.name]\r\n          if (directiveTransform) {\r\n            const { props, ssrTagParts } = directiveTransform(\r\n              prop,\r\n              node,\r\n              context,\r\n            )\r\n            if (ssrTagParts) {\r\n              openTag.push(...ssrTagParts)\r\n            }\r\n            for (let j = 0; j < props.length; j++) {\r\n              const { key, value } = props[j]\r\n              if (isStaticExp(key)) {\r\n                let attrName = key.content\r\n                // static key attr\r\n                if (attrName === 'key' || attrName === 'ref') {\r\n                  continue\r\n                }\r\n                if (attrName === 'class') {\r\n                  openTag.push(\r\n                    ` class=\"`,\r\n                    (dynamicClassBinding = createCallExpression(\r\n                      context.helper(SSR_RENDER_CLASS),\r\n                      [value],\r\n                    )),\r\n                    `\"`,\r\n                  )\r\n                } else if (attrName === 'style') {\r\n                  if (dynamicStyleBinding) {\r\n                    // already has style binding, merge into it.\r\n                    mergeCall(dynamicStyleBinding, value)\r\n                  } else {\r\n                    openTag.push(\r\n                      ` style=\"`,\r\n                      (dynamicStyleBinding = createCallExpression(\r\n                        context.helper(SSR_RENDER_STYLE),\r\n                        [value],\r\n                      )),\r\n                      `\"`,\r\n                    )\r\n                  }\r\n                } else {\r\n                  attrName =\r\n                    node.tag.indexOf('-') > 0\r\n                      ? attrName // preserve raw name on custom elements\r\n                      : propsToAttrMap[attrName] || attrName.toLowerCase()\r\n                  if (isBooleanAttr(attrName)) {\r\n                    openTag.push(\r\n                      createConditionalExpression(\r\n                        createCallExpression(\r\n                          context.helper(SSR_INCLUDE_BOOLEAN_ATTR),\r\n                          [value],\r\n                        ),\r\n                        createSimpleExpression(' ' + attrName, true),\r\n                        createSimpleExpression('', true),\r\n                        false /* no newline */,\r\n                      ),\r\n                    )\r\n                  } else if (isSSRSafeAttrName(attrName)) {\r\n                    openTag.push(\r\n                      createCallExpression(context.helper(SSR_RENDER_ATTR), [\r\n                        key,\r\n                        value,\r\n                      ]),\r\n                    )\r\n                  } else {\r\n                    context.onError(\r\n                      createSSRCompilerError(\r\n                        SSRErrorCodes.X_SSR_UNSAFE_ATTR_NAME,\r\n                        key.loc,\r\n                      ),\r\n                    )\r\n                  }\r\n                }\r\n              } else {\r\n                // dynamic key attr\r\n                // this branch is only encountered for custom directive\r\n                // transforms that returns properties with dynamic keys\r\n                const args: CallExpression['arguments'] = [key, value]\r\n                if (needTagForRuntime) {\r\n                  args.push(`\"${node.tag}\"`)\r\n                }\r\n                openTag.push(\r\n                  createCallExpression(\r\n                    context.helper(SSR_RENDER_DYNAMIC_ATTR),\r\n                    args,\r\n                  ),\r\n                )\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // special case: value on <textarea>\r\n        const name = prop.name\r\n        if (node.tag === 'textarea' && name === 'value' && prop.value) {\r\n          rawChildrenMap.set(node, escapeHtml(prop.value.content))\r\n        } else if (!needMergeProps) {\r\n          if (name === 'key' || name === 'ref') {\r\n            continue\r\n          }\r\n          // static prop\r\n          if (name === 'class' && prop.value) {\r\n            staticClassBinding = JSON.stringify(prop.value.content)\r\n          }\r\n          openTag.push(\r\n            ` ${prop.name}` +\r\n              (prop.value ? `=\"${escapeHtml(prop.value.content)}\"` : ``),\r\n          )\r\n        }\r\n      }\r\n    }\r\n\r\n    // handle co-existence of dynamic + static class bindings\r\n    if (dynamicClassBinding && staticClassBinding) {\r\n      mergeCall(dynamicClassBinding, staticClassBinding)\r\n      removeStaticBinding(openTag, 'class')\r\n    }\r\n\r\n    if (context.scopeId) {\r\n      openTag.push(` ${context.scopeId}`)\r\n    }\r\n\r\n    node.ssrCodegenNode = createTemplateLiteral(openTag)\r\n  }\r\n}\r\n\r\nexport function buildSSRProps(\r\n  props: PropsExpression | undefined,\r\n  directives: DirectiveNode[],\r\n  context: TransformContext,\r\n): JSChildNode {\r\n  let mergePropsArgs: JSChildNode[] = []\r\n  if (props) {\r\n    if (props.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n      // already a mergeProps call\r\n      mergePropsArgs = props.arguments as JSChildNode[]\r\n    } else {\r\n      mergePropsArgs.push(props)\r\n    }\r\n  }\r\n  if (directives.length) {\r\n    for (const dir of directives) {\r\n      mergePropsArgs.push(\r\n        createCallExpression(context.helper(SSR_GET_DIRECTIVE_PROPS), [\r\n          `_ctx`,\r\n          ...buildDirectiveArgs(dir, context).elements,\r\n        ] as JSChildNode[]),\r\n      )\r\n    }\r\n  }\r\n\r\n  return mergePropsArgs.length > 1\r\n    ? createCallExpression(context.helper(MERGE_PROPS), mergePropsArgs)\r\n    : mergePropsArgs[0]\r\n}\r\n\r\nfunction isTrueFalseValue(prop: DirectiveNode | AttributeNode) {\r\n  if (prop.type === NodeTypes.DIRECTIVE) {\r\n    return (\r\n      prop.name === 'bind' &&\r\n      prop.arg &&\r\n      isStaticExp(prop.arg) &&\r\n      (prop.arg.content === 'true-value' || prop.arg.content === 'false-value')\r\n    )\r\n  } else {\r\n    return prop.name === 'true-value' || prop.name === 'false-value'\r\n  }\r\n}\r\n\r\nfunction isTextareaWithValue(\r\n  node: PlainElementNode,\r\n  prop: DirectiveNode,\r\n): boolean {\r\n  return !!(\r\n    node.tag === 'textarea' &&\r\n    prop.name === 'bind' &&\r\n    isStaticArgOf(prop.arg, 'value')\r\n  )\r\n}\r\n\r\nfunction mergeCall(call: CallExpression, arg: string | JSChildNode) {\r\n  const existing = call.arguments[0] as ExpressionNode | ArrayExpression\r\n  if (existing.type === NodeTypes.JS_ARRAY_EXPRESSION) {\r\n    existing.elements.push(arg)\r\n  } else {\r\n    call.arguments[0] = createArrayExpression([existing, arg])\r\n  }\r\n}\r\n\r\nfunction removeStaticBinding(\r\n  tag: TemplateLiteral['elements'],\r\n  binding: string,\r\n) {\r\n  const regExp = new RegExp(`^ ${binding}=\".+\"$`)\r\n\r\n  const i = tag.findIndex(e => typeof e === 'string' && regExp.test(e))\r\n\r\n  if (i > -1) {\r\n    tag.splice(i, 1)\r\n  }\r\n}\r\n\r\nfunction findVModel(node: PlainElementNode): DirectiveNode | undefined {\r\n  return node.props.find(\r\n    p => p.type === NodeTypes.DIRECTIVE && p.name === 'model' && p.exp,\r\n  ) as DirectiveNode | undefined\r\n}\r\n\r\nexport function ssrProcessElement(\r\n  node: PlainElementNode,\r\n  context: SSRTransformContext,\r\n) {\r\n  const isVoidTag = context.options.isVoidTag || NO\r\n  const elementsToAdd = node.ssrCodegenNode!.elements\r\n  for (let j = 0; j < elementsToAdd.length; j++) {\r\n    context.pushStringPart(elementsToAdd[j])\r\n  }\r\n\r\n  // Handle slot scopeId\r\n  if (context.withSlotScopeId) {\r\n    context.pushStringPart(createSimpleExpression(`_scopeId`, false))\r\n  }\r\n\r\n  // close open tag\r\n  context.pushStringPart(`>`)\r\n\r\n  const rawChildren = rawChildrenMap.get(node)\r\n  if (rawChildren) {\r\n    context.pushStringPart(rawChildren)\r\n  } else if (node.children.length) {\r\n    processChildren(node, context)\r\n  }\r\n\r\n  if (!isVoidTag(node.tag)) {\r\n    // push closing tag\r\n    context.pushStringPart(`</${node.tag}>`)\r\n  }\r\n}\r\n","import {\r\n  type AttributeNode,\r\n  type ComponentNode,\r\n  type DirectiveNode,\r\n  type JSChildNode,\r\n  NodeTypes,\r\n  type TransformContext,\r\n  buildProps,\r\n  createCallExpression,\r\n  findProp,\r\n} from '@vue/compiler-dom'\r\nimport { SSR_RENDER_ATTRS } from '../runtimeHelpers'\r\nimport {\r\n  type SSRTransformContext,\r\n  processChildren,\r\n} from '../ssrCodegenTransform'\r\nimport { buildSSRProps } from './ssrTransformElement'\r\n\r\nconst wipMap = new WeakMap<ComponentNode, WIPEntry>()\r\n\r\ninterface WIPEntry {\r\n  tag: AttributeNode | DirectiveNode\r\n  propsExp: string | JSChildNode | null\r\n  scopeId: string | null\r\n}\r\n\r\n// phase 1: build props\r\nexport function ssrTransformTransitionGroup(\r\n  node: ComponentNode,\r\n  context: TransformContext,\r\n) {\r\n  return () => {\r\n    const tag = findProp(node, 'tag')\r\n    if (tag) {\r\n      const otherProps = node.props.filter(p => p !== tag)\r\n      const { props, directives } = buildProps(\r\n        node,\r\n        context,\r\n        otherProps,\r\n        true /* isComponent */,\r\n        false /* isDynamicComponent */,\r\n        true /* ssr (skip event listeners) */,\r\n      )\r\n      let propsExp = null\r\n      if (props || directives.length) {\r\n        propsExp = createCallExpression(context.helper(SSR_RENDER_ATTRS), [\r\n          buildSSRProps(props, directives, context),\r\n        ])\r\n      }\r\n      wipMap.set(node, {\r\n        tag,\r\n        propsExp,\r\n        scopeId: context.scopeId || null,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// phase 2: process children\r\nexport function ssrProcessTransitionGroup(\r\n  node: ComponentNode,\r\n  context: SSRTransformContext,\r\n) {\r\n  const entry = wipMap.get(node)\r\n  if (entry) {\r\n    const { tag, propsExp, scopeId } = entry\r\n    if (tag.type === NodeTypes.DIRECTIVE) {\r\n      // dynamic :tag\r\n      context.pushStringPart(`<`)\r\n      context.pushStringPart(tag.exp!)\r\n      if (propsExp) {\r\n        context.pushStringPart(propsExp)\r\n      }\r\n      if (scopeId) {\r\n        context.pushStringPart(` ${scopeId}`)\r\n      }\r\n      context.pushStringPart(`>`)\r\n\r\n      processChildren(\r\n        node,\r\n        context,\r\n        false,\r\n        /**\r\n         * TransitionGroup has the special runtime behavior of flattening and\r\n         * concatenating all children into a single fragment (in order for them to\r\n         * be patched using the same key map) so we need to account for that here\r\n         * by disabling nested fragment wrappers from being generated.\r\n         */\r\n        true,\r\n      )\r\n      context.pushStringPart(`</`)\r\n      context.pushStringPart(tag.exp!)\r\n      context.pushStringPart(`>`)\r\n    } else {\r\n      // static tag\r\n      context.pushStringPart(`<${tag.value!.content}`)\r\n      if (propsExp) {\r\n        context.pushStringPart(propsExp)\r\n      }\r\n      if (scopeId) {\r\n        context.pushStringPart(` ${scopeId}`)\r\n      }\r\n      context.pushStringPart(`>`)\r\n      processChildren(node, context, false, true)\r\n      context.pushStringPart(`</${tag.value!.content}>`)\r\n    }\r\n  } else {\r\n    // fragment\r\n    processChildren(node, context, true, true)\r\n  }\r\n}\r\n","import {\r\n  type ComponentNode,\r\n  NodeTypes,\r\n  type TransformContext,\r\n  findProp,\r\n} from '@vue/compiler-dom'\r\nimport {\r\n  type SSRTransformContext,\r\n  processChildren,\r\n} from '../ssrCodegenTransform'\r\n\r\nconst wipMap = new WeakMap<ComponentNode, Boolean>()\r\n\r\nexport function ssrTransformTransition(\r\n  node: ComponentNode,\r\n  context: TransformContext,\r\n) {\r\n  return () => {\r\n    const appear = findProp(node, 'appear', false, true)\r\n    wipMap.set(node, !!appear)\r\n  }\r\n}\r\n\r\nexport function ssrProcessTransition(\r\n  node: ComponentNode,\r\n  context: SSRTransformContext,\r\n) {\r\n  // #5351: filter out comment children inside transition\r\n  node.children = node.children.filter(c => c.type !== NodeTypes.COMMENT)\r\n\r\n  const appear = wipMap.get(node)\r\n  if (appear) {\r\n    context.pushStringPart(`<template>`)\r\n    processChildren(node, context, false, true)\r\n    context.pushStringPart(`</template>`)\r\n  } else {\r\n    processChildren(node, context, false, true)\r\n  }\r\n}\r\n","import {\r\n  CREATE_VNODE,\r\n  type CallExpression,\r\n  type CompilerOptions,\r\n  type ComponentNode,\r\n  DOMDirectiveTransforms,\r\n  DOMNodeTransforms,\r\n  type DirectiveNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  type FunctionExpression,\r\n  type JSChildNode,\r\n  Namespaces,\r\n  type NodeTransform,\r\n  NodeTypes,\r\n  RESOLVE_DYNAMIC_COMPONENT,\r\n  type ReturnStatement,\r\n  type RootNode,\r\n  SUSPENSE,\r\n  type SlotFnBuilder,\r\n  TELEPORT,\r\n  TRANSITION,\r\n  TRANSITION_GROUP,\r\n  type TemplateChildNode,\r\n  type TemplateNode,\r\n  type TransformContext,\r\n  type TransformOptions,\r\n  buildProps,\r\n  buildSlots,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n  createIfStatement,\r\n  createReturnStatement,\r\n  createRoot,\r\n  createSimpleExpression,\r\n  createTransformContext,\r\n  getBaseTransformPreset,\r\n  locStub,\r\n  resolveComponentType,\r\n  stringifyExpression,\r\n  traverseNode,\r\n} from '@vue/compiler-dom'\r\nimport { SSR_RENDER_COMPONENT, SSR_RENDER_VNODE } from '../runtimeHelpers'\r\nimport {\r\n  type SSRTransformContext,\r\n  processChildren,\r\n  processChildrenAsStatement,\r\n} from '../ssrCodegenTransform'\r\nimport { ssrProcessTeleport } from './ssrTransformTeleport'\r\nimport {\r\n  ssrProcessSuspense,\r\n  ssrTransformSuspense,\r\n} from './ssrTransformSuspense'\r\nimport {\r\n  ssrProcessTransitionGroup,\r\n  ssrTransformTransitionGroup,\r\n} from './ssrTransformTransitionGroup'\r\nimport { extend, isArray, isObject, isPlainObject, isSymbol } from '@vue/shared'\r\nimport { buildSSRProps } from './ssrTransformElement'\r\nimport {\r\n  ssrProcessTransition,\r\n  ssrTransformTransition,\r\n} from './ssrTransformTransition'\r\n\r\n// We need to construct the slot functions in the 1st pass to ensure proper\r\n// scope tracking, but the children of each slot cannot be processed until\r\n// the 2nd pass, so we store the WIP slot functions in a weakMap during the 1st\r\n// pass and complete them in the 2nd pass.\r\nconst wipMap = new WeakMap<ComponentNode, WIPSlotEntry[]>()\r\n\r\nconst WIP_SLOT = Symbol()\r\n\r\ninterface WIPSlotEntry {\r\n  type: typeof WIP_SLOT\r\n  fn: FunctionExpression\r\n  children: TemplateChildNode[]\r\n  vnodeBranch: ReturnStatement\r\n}\r\n\r\nconst componentTypeMap = new WeakMap<\r\n  ComponentNode,\r\n  string | symbol | CallExpression\r\n>()\r\n\r\n// ssr component transform is done in two phases:\r\n// In phase 1. we use `buildSlot` to analyze the children of the component into\r\n// WIP slot functions (it must be done in phase 1 because `buildSlot` relies on\r\n// the core transform context).\r\n// In phase 2. we convert the WIP slots from phase 1 into ssr-specific codegen\r\n// nodes.\r\nexport const ssrTransformComponent: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type !== NodeTypes.ELEMENT ||\r\n    node.tagType !== ElementTypes.COMPONENT\r\n  ) {\r\n    return\r\n  }\r\n\r\n  const component = resolveComponentType(node, context, true /* ssr */)\r\n  const isDynamicComponent =\r\n    isObject(component) && component.callee === RESOLVE_DYNAMIC_COMPONENT\r\n  componentTypeMap.set(node, component)\r\n\r\n  if (isSymbol(component)) {\r\n    if (component === SUSPENSE) {\r\n      return ssrTransformSuspense(node, context)\r\n    } else if (component === TRANSITION_GROUP) {\r\n      return ssrTransformTransitionGroup(node, context)\r\n    } else if (component === TRANSITION) {\r\n      return ssrTransformTransition(node, context)\r\n    }\r\n    return // other built-in components: fallthrough\r\n  }\r\n\r\n  // Build the fallback vnode-based branch for the component's slots.\r\n  // We need to clone the node into a fresh copy and use the buildSlots' logic\r\n  // to get access to the children of each slot. We then compile them with\r\n  // a child transform pipeline using vnode-based transforms (instead of ssr-\r\n  // based ones), and save the result branch (a ReturnStatement) in an array.\r\n  // The branch is retrieved when processing slots again in ssr mode.\r\n  const vnodeBranches: ReturnStatement[] = []\r\n  const clonedNode = clone(node)\r\n\r\n  return function ssrPostTransformComponent() {\r\n    // Using the cloned node, build the normal VNode-based branches (for\r\n    // fallback in case the child is render-fn based). Store them in an array\r\n    // for later use.\r\n    if (clonedNode.children.length) {\r\n      buildSlots(clonedNode, context, (props, vFor, children) => {\r\n        vnodeBranches.push(\r\n          createVNodeSlotBranch(props, vFor, children, context),\r\n        )\r\n        return createFunctionExpression(undefined)\r\n      })\r\n    }\r\n\r\n    let propsExp: string | JSChildNode = `null`\r\n    if (node.props.length) {\r\n      // note we are not passing ssr: true here because for components, v-on\r\n      // handlers should still be passed\r\n      const { props, directives } = buildProps(\r\n        node,\r\n        context,\r\n        undefined,\r\n        true,\r\n        isDynamicComponent,\r\n      )\r\n      if (props || directives.length) {\r\n        propsExp = buildSSRProps(props, directives, context)\r\n      }\r\n    }\r\n\r\n    const wipEntries: WIPSlotEntry[] = []\r\n    wipMap.set(node, wipEntries)\r\n\r\n    const buildSSRSlotFn: SlotFnBuilder = (props, _vForExp, children, loc) => {\r\n      const param0 = (props && stringifyExpression(props)) || `_`\r\n      const fn = createFunctionExpression(\r\n        [param0, `_push`, `_parent`, `_scopeId`],\r\n        undefined, // no return, assign body later\r\n        true, // newline\r\n        true, // isSlot\r\n        loc,\r\n      )\r\n      wipEntries.push({\r\n        type: WIP_SLOT,\r\n        fn,\r\n        children,\r\n        // also collect the corresponding vnode branch built earlier\r\n        vnodeBranch: vnodeBranches[wipEntries.length],\r\n      })\r\n      return fn\r\n    }\r\n\r\n    const slots = node.children.length\r\n      ? buildSlots(node, context, buildSSRSlotFn).slots\r\n      : `null`\r\n\r\n    if (typeof component !== 'string') {\r\n      // dynamic component that resolved to a `resolveDynamicComponent` call\r\n      // expression - since the resolved result may be a plain element (string)\r\n      // or a VNode, handle it with `renderVNode`.\r\n      node.ssrCodegenNode = createCallExpression(\r\n        context.helper(SSR_RENDER_VNODE),\r\n        [\r\n          `_push`,\r\n          createCallExpression(context.helper(CREATE_VNODE), [\r\n            component,\r\n            propsExp,\r\n            slots,\r\n          ]),\r\n          `_parent`,\r\n        ],\r\n      )\r\n    } else {\r\n      node.ssrCodegenNode = createCallExpression(\r\n        context.helper(SSR_RENDER_COMPONENT),\r\n        [component, propsExp, slots, `_parent`],\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport function ssrProcessComponent(\r\n  node: ComponentNode,\r\n  context: SSRTransformContext,\r\n  parent: { children: TemplateChildNode[] },\r\n) {\r\n  const component = componentTypeMap.get(node)!\r\n  if (!node.ssrCodegenNode) {\r\n    // this is a built-in component that fell-through.\r\n    if (component === TELEPORT) {\r\n      return ssrProcessTeleport(node, context)\r\n    } else if (component === SUSPENSE) {\r\n      return ssrProcessSuspense(node, context)\r\n    } else if (component === TRANSITION_GROUP) {\r\n      return ssrProcessTransitionGroup(node, context)\r\n    } else {\r\n      // real fall-through: Transition / KeepAlive\r\n      // just render its children.\r\n      // #5352: if is at root level of a slot, push an empty string.\r\n      // this does not affect the final output, but avoids all-comment slot\r\n      // content of being treated as empty by ssrRenderSlot().\r\n      if ((parent as WIPSlotEntry).type === WIP_SLOT) {\r\n        context.pushStringPart(``)\r\n      }\r\n      if (component === TRANSITION) {\r\n        return ssrProcessTransition(node, context)\r\n      }\r\n      processChildren(node, context)\r\n    }\r\n  } else {\r\n    // finish up slot function expressions from the 1st pass.\r\n    const wipEntries = wipMap.get(node) || []\r\n    for (let i = 0; i < wipEntries.length; i++) {\r\n      const { fn, vnodeBranch } = wipEntries[i]\r\n      // For each slot, we generate two branches: one SSR-optimized branch and\r\n      // one normal vnode-based branch. The branches are taken based on the\r\n      // presence of the 2nd `_push` argument (which is only present if the slot\r\n      // is called by `_ssrRenderSlot`.\r\n      fn.body = createIfStatement(\r\n        createSimpleExpression(`_push`, false),\r\n        processChildrenAsStatement(\r\n          wipEntries[i],\r\n          context,\r\n          false,\r\n          true /* withSlotScopeId */,\r\n        ),\r\n        vnodeBranch,\r\n      )\r\n    }\r\n\r\n    // component is inside a slot, inherit slot scope Id\r\n    if (context.withSlotScopeId) {\r\n      node.ssrCodegenNode.arguments.push(`_scopeId`)\r\n    }\r\n\r\n    if (typeof component === 'string') {\r\n      // static component\r\n      context.pushStatement(\r\n        createCallExpression(`_push`, [node.ssrCodegenNode]),\r\n      )\r\n    } else {\r\n      // dynamic component (`resolveDynamicComponent` call)\r\n      // the codegen node is a `renderVNode` call\r\n      context.pushStatement(node.ssrCodegenNode)\r\n    }\r\n  }\r\n}\r\n\r\nexport const rawOptionsMap = new WeakMap<RootNode, CompilerOptions>()\r\n\r\nconst [baseNodeTransforms, baseDirectiveTransforms] =\r\n  getBaseTransformPreset(true)\r\nconst vnodeNodeTransforms = [...baseNodeTransforms, ...DOMNodeTransforms]\r\nconst vnodeDirectiveTransforms = {\r\n  ...baseDirectiveTransforms,\r\n  ...DOMDirectiveTransforms,\r\n}\r\n\r\nfunction createVNodeSlotBranch(\r\n  slotProps: ExpressionNode | undefined,\r\n  vFor: DirectiveNode | undefined,\r\n  children: TemplateChildNode[],\r\n  parentContext: TransformContext,\r\n): ReturnStatement {\r\n  // apply a sub-transform using vnode-based transforms.\r\n  const rawOptions = rawOptionsMap.get(parentContext.root)!\r\n\r\n  const subOptions = {\r\n    ...rawOptions,\r\n    // overwrite with vnode-based transforms\r\n    nodeTransforms: [\r\n      ...vnodeNodeTransforms,\r\n      ...(rawOptions.nodeTransforms || []),\r\n    ],\r\n    directiveTransforms: {\r\n      ...vnodeDirectiveTransforms,\r\n      ...(rawOptions.directiveTransforms || {}),\r\n    },\r\n  }\r\n\r\n  // wrap the children with a wrapper template for proper children treatment.\r\n  // important: provide v-slot=\"props\" and v-for=\"exp\" on the wrapper for\r\n  // proper scope analysis\r\n  const wrapperProps: TemplateNode['props'] = []\r\n  if (slotProps) {\r\n    wrapperProps.push({\r\n      type: NodeTypes.DIRECTIVE,\r\n      name: 'slot',\r\n      exp: slotProps,\r\n      arg: undefined,\r\n      modifiers: [],\r\n      loc: locStub,\r\n    })\r\n  }\r\n  if (vFor) {\r\n    wrapperProps.push(extend({}, vFor))\r\n  }\r\n  const wrapperNode: TemplateNode = {\r\n    type: NodeTypes.ELEMENT,\r\n    ns: Namespaces.HTML,\r\n    tag: 'template',\r\n    tagType: ElementTypes.TEMPLATE,\r\n    props: wrapperProps,\r\n    children,\r\n    loc: locStub,\r\n    codegenNode: undefined,\r\n  }\r\n  subTransform(wrapperNode, subOptions, parentContext)\r\n  return createReturnStatement(children)\r\n}\r\n\r\nfunction subTransform(\r\n  node: TemplateChildNode,\r\n  options: TransformOptions,\r\n  parentContext: TransformContext,\r\n) {\r\n  const childRoot = createRoot([node])\r\n  const childContext = createTransformContext(childRoot, options)\r\n  // this sub transform is for vnode fallback branch so it should be handled\r\n  // like normal render functions\r\n  childContext.ssr = false\r\n  // inherit parent scope analysis state\r\n  childContext.scopes = { ...parentContext.scopes }\r\n  childContext.identifiers = { ...parentContext.identifiers }\r\n  childContext.imports = parentContext.imports\r\n  // traverse\r\n  traverseNode(childRoot, childContext)\r\n  // merge helpers/components/directives into parent context\r\n  ;(['helpers', 'components', 'directives'] as const).forEach(key => {\r\n    childContext[key].forEach((value: any, helperKey: any) => {\r\n      if (key === 'helpers') {\r\n        const parentCount = parentContext.helpers.get(helperKey)\r\n        if (parentCount === undefined) {\r\n          parentContext.helpers.set(helperKey, value)\r\n        } else {\r\n          parentContext.helpers.set(helperKey, value + parentCount)\r\n        }\r\n      } else {\r\n        ;(parentContext[key] as any).add(value)\r\n      }\r\n    })\r\n  })\r\n  // imports/hoists are not merged because:\r\n  // - imports are only used for asset urls and should be consistent between\r\n  //   node/client branches\r\n  // - hoists are not enabled for the client branch here\r\n}\r\n\r\nfunction clone(v: any): any {\r\n  if (isArray(v)) {\r\n    return v.map(clone)\r\n  } else if (isPlainObject(v)) {\r\n    const res: any = {}\r\n    for (const key in v) {\r\n      res[key] = clone(v[key as keyof typeof v])\r\n    }\r\n    return res\r\n  } else {\r\n    return v\r\n  }\r\n}\r\n","import {\r\n  type BlockStatement,\r\n  type CallExpression,\r\n  type CompilerOptions,\r\n  ElementTypes,\r\n  type IfStatement,\r\n  NodeTypes,\r\n  type RootNode,\r\n  type TemplateChildNode,\r\n  type TemplateLiteral,\r\n  createBlockStatement,\r\n  createCallExpression,\r\n  createCompoundExpression,\r\n  createRoot,\r\n  createSimpleExpression,\r\n  createTemplateLiteral,\r\n  createTransformContext,\r\n  isText,\r\n  processExpression,\r\n} from '@vue/compiler-dom'\r\nimport { escapeHtml, isString } from '@vue/shared'\r\nimport { SSR_INTERPOLATE, ssrHelpers } from './runtimeHelpers'\r\nimport { ssrProcessIf } from './transforms/ssrVIf'\r\nimport { ssrProcessFor } from './transforms/ssrVFor'\r\nimport { ssrProcessSlotOutlet } from './transforms/ssrTransformSlotOutlet'\r\nimport { ssrProcessComponent } from './transforms/ssrTransformComponent'\r\nimport { ssrProcessElement } from './transforms/ssrTransformElement'\r\nimport { SSRErrorCodes, createSSRCompilerError } from './errors'\r\n\r\n// Because SSR codegen output is completely different from client-side output\r\n// (e.g. multiple elements can be concatenated into a single template literal\r\n// instead of each getting a corresponding call), we need to apply an extra\r\n// transform pass to convert the template AST into a fresh JS AST before\r\n// passing it to codegen.\r\n\r\nexport function ssrCodegenTransform(ast: RootNode, options: CompilerOptions) {\r\n  const context = createSSRTransformContext(ast, options)\r\n\r\n  // inject SFC <style> CSS variables\r\n  // we do this instead of inlining the expression to ensure the vars are\r\n  // only resolved once per render\r\n  if (options.ssrCssVars) {\r\n    const cssContext = createTransformContext(createRoot([]), options)\r\n    const varsExp = processExpression(\r\n      createSimpleExpression(options.ssrCssVars, false),\r\n      cssContext,\r\n    )\r\n    context.body.push(\r\n      createCompoundExpression([`const _cssVars = { style: `, varsExp, `}`]),\r\n    )\r\n    Array.from(cssContext.helpers.keys()).forEach(helper => {\r\n      ast.helpers.add(helper)\r\n    })\r\n  }\r\n\r\n  const isFragment =\r\n    ast.children.length > 1 && ast.children.some(c => !isText(c))\r\n  processChildren(ast, context, isFragment)\r\n  ast.codegenNode = createBlockStatement(context.body)\r\n\r\n  // Finalize helpers.\r\n  // We need to separate helpers imported from 'vue' vs. '@vue/server-renderer'\r\n  ast.ssrHelpers = Array.from(\r\n    new Set([\r\n      ...Array.from(ast.helpers).filter(h => h in ssrHelpers),\r\n      ...context.helpers,\r\n    ]),\r\n  )\r\n\r\n  ast.helpers = new Set(Array.from(ast.helpers).filter(h => !(h in ssrHelpers)))\r\n}\r\n\r\nexport type SSRTransformContext = ReturnType<typeof createSSRTransformContext>\r\n\r\nfunction createSSRTransformContext(\r\n  root: RootNode,\r\n  options: CompilerOptions,\r\n  helpers: Set<symbol> = new Set(),\r\n  withSlotScopeId = false,\r\n) {\r\n  const body: BlockStatement['body'] = []\r\n  let currentString: TemplateLiteral | null = null\r\n\r\n  return {\r\n    root,\r\n    options,\r\n    body,\r\n    helpers,\r\n    withSlotScopeId,\r\n    onError:\r\n      options.onError ||\r\n      (e => {\r\n        throw e\r\n      }),\r\n    helper<T extends symbol>(name: T): T {\r\n      helpers.add(name)\r\n      return name\r\n    },\r\n    pushStringPart(part: TemplateLiteral['elements'][0]) {\r\n      if (!currentString) {\r\n        const currentCall = createCallExpression(`_push`)\r\n        body.push(currentCall)\r\n        currentString = createTemplateLiteral([])\r\n        currentCall.arguments.push(currentString)\r\n      }\r\n      const bufferedElements = currentString.elements\r\n      const lastItem = bufferedElements[bufferedElements.length - 1]\r\n      if (isString(part) && isString(lastItem)) {\r\n        bufferedElements[bufferedElements.length - 1] += part\r\n      } else {\r\n        bufferedElements.push(part)\r\n      }\r\n    },\r\n    pushStatement(statement: IfStatement | CallExpression) {\r\n      // close current string\r\n      currentString = null\r\n      body.push(statement)\r\n    },\r\n  }\r\n}\r\n\r\nfunction createChildContext(\r\n  parent: SSRTransformContext,\r\n  withSlotScopeId = parent.withSlotScopeId,\r\n): SSRTransformContext {\r\n  // ensure child inherits parent helpers\r\n  return createSSRTransformContext(\r\n    parent.root,\r\n    parent.options,\r\n    parent.helpers,\r\n    withSlotScopeId,\r\n  )\r\n}\r\n\r\ninterface Container {\r\n  children: TemplateChildNode[]\r\n}\r\n\r\nexport function processChildren(\r\n  parent: Container,\r\n  context: SSRTransformContext,\r\n  asFragment = false,\r\n  disableNestedFragments = false,\r\n) {\r\n  if (asFragment) {\r\n    context.pushStringPart(`<!--[-->`)\r\n  }\r\n  const { children } = parent\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    switch (child.type) {\r\n      case NodeTypes.ELEMENT:\r\n        switch (child.tagType) {\r\n          case ElementTypes.ELEMENT:\r\n            ssrProcessElement(child, context)\r\n            break\r\n          case ElementTypes.COMPONENT:\r\n            ssrProcessComponent(child, context, parent)\r\n            break\r\n          case ElementTypes.SLOT:\r\n            ssrProcessSlotOutlet(child, context)\r\n            break\r\n          case ElementTypes.TEMPLATE:\r\n            // TODO\r\n            break\r\n          default:\r\n            context.onError(\r\n              createSSRCompilerError(\r\n                SSRErrorCodes.X_SSR_INVALID_AST_NODE,\r\n                (child as any).loc,\r\n              ),\r\n            )\r\n            // make sure we exhaust all possible types\r\n            const exhaustiveCheck: never = child\r\n            return exhaustiveCheck\r\n        }\r\n        break\r\n      case NodeTypes.TEXT:\r\n        context.pushStringPart(escapeHtml(child.content))\r\n        break\r\n      case NodeTypes.COMMENT:\r\n        // no need to escape comment here because the AST can only\r\n        // contain valid comments.\r\n        context.pushStringPart(`<!--${child.content}-->`)\r\n        break\r\n      case NodeTypes.INTERPOLATION:\r\n        context.pushStringPart(\r\n          createCallExpression(context.helper(SSR_INTERPOLATE), [\r\n            child.content,\r\n          ]),\r\n        )\r\n        break\r\n      case NodeTypes.IF:\r\n        ssrProcessIf(child, context, disableNestedFragments)\r\n        break\r\n      case NodeTypes.FOR:\r\n        ssrProcessFor(child, context, disableNestedFragments)\r\n        break\r\n      case NodeTypes.IF_BRANCH:\r\n        // no-op - handled by ssrProcessIf\r\n        break\r\n      case NodeTypes.TEXT_CALL:\r\n      case NodeTypes.COMPOUND_EXPRESSION:\r\n        // no-op - these two types can never appear as template child node since\r\n        // `transformText` is not used during SSR compile.\r\n        break\r\n      default:\r\n        context.onError(\r\n          createSSRCompilerError(\r\n            SSRErrorCodes.X_SSR_INVALID_AST_NODE,\r\n            (child as any).loc,\r\n          ),\r\n        )\r\n        // make sure we exhaust all possible types\r\n        const exhaustiveCheck: never = child\r\n        return exhaustiveCheck\r\n    }\r\n  }\r\n  if (asFragment) {\r\n    context.pushStringPart(`<!--]-->`)\r\n  }\r\n}\r\n\r\nexport function processChildrenAsStatement(\r\n  parent: Container,\r\n  parentContext: SSRTransformContext,\r\n  asFragment = false,\r\n  withSlotScopeId = parentContext.withSlotScopeId,\r\n): BlockStatement {\r\n  const childContext = createChildContext(parentContext, withSlotScopeId)\r\n  processChildren(parent, childContext, asFragment)\r\n  return createBlockStatement(childContext.body)\r\n}\r\n","import {\r\n  DOMErrorCodes,\r\n  type DirectiveTransform,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  type PlainElementNode,\r\n  createCallExpression,\r\n  createConditionalExpression,\r\n  createDOMCompilerError,\r\n  createInterpolation,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  findProp,\r\n  hasDynamicKeyVBind,\r\n  transformModel,\r\n} from '@vue/compiler-dom'\r\nimport {\r\n  SSR_INCLUDE_BOOLEAN_ATTR,\r\n  SSR_LOOSE_CONTAIN,\r\n  SSR_LOOSE_EQUAL,\r\n  SSR_RENDER_DYNAMIC_MODEL,\r\n} from '../runtimeHelpers'\r\nimport type { DirectiveTransformResult } from 'packages/compiler-core/src/transform'\r\n\r\nexport const ssrTransformModel: DirectiveTransform = (dir, node, context) => {\r\n  const model = dir.exp!\r\n\r\n  function checkDuplicatedValue() {\r\n    const value = findProp(node, 'value')\r\n    if (value) {\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE,\r\n          value.loc,\r\n        ),\r\n      )\r\n    }\r\n  }\r\n\r\n  function processOption(plainNode: PlainElementNode) {\r\n    if (plainNode.tag === 'option') {\r\n      if (plainNode.props.findIndex(p => p.name === 'selected') === -1) {\r\n        const value = findValueBinding(plainNode)\r\n        plainNode.ssrCodegenNode!.elements.push(\r\n          createConditionalExpression(\r\n            createCallExpression(context.helper(SSR_INCLUDE_BOOLEAN_ATTR), [\r\n              createConditionalExpression(\r\n                createCallExpression(`Array.isArray`, [model]),\r\n                createCallExpression(context.helper(SSR_LOOSE_CONTAIN), [\r\n                  model,\r\n                  value,\r\n                ]),\r\n                createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\r\n                  model,\r\n                  value,\r\n                ]),\r\n              ),\r\n            ]),\r\n            createSimpleExpression(' selected', true),\r\n            createSimpleExpression('', true),\r\n            false /* no newline */,\r\n          ),\r\n        )\r\n      }\r\n    } else if (plainNode.tag === 'optgroup') {\r\n      plainNode.children.forEach(option =>\r\n        processOption(option as PlainElementNode),\r\n      )\r\n    }\r\n  }\r\n\r\n  if (node.tagType === ElementTypes.ELEMENT) {\r\n    const res: DirectiveTransformResult = { props: [] }\r\n    const defaultProps = [\r\n      // default value binding for text type inputs\r\n      createObjectProperty(`value`, model),\r\n    ]\r\n    if (node.tag === 'input') {\r\n      const type = findProp(node, 'type')\r\n      if (type) {\r\n        const value = findValueBinding(node)\r\n        if (type.type === NodeTypes.DIRECTIVE) {\r\n          // dynamic type\r\n          res.ssrTagParts = [\r\n            createCallExpression(context.helper(SSR_RENDER_DYNAMIC_MODEL), [\r\n              type.exp!,\r\n              model,\r\n              value,\r\n            ]),\r\n          ]\r\n        } else if (type.value) {\r\n          // static type\r\n          switch (type.value.content) {\r\n            case 'radio':\r\n              res.props = [\r\n                createObjectProperty(\r\n                  `checked`,\r\n                  createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\r\n                    model,\r\n                    value,\r\n                  ]),\r\n                ),\r\n              ]\r\n              break\r\n            case 'checkbox':\r\n              const trueValueBinding = findProp(node, 'true-value')\r\n              if (trueValueBinding) {\r\n                const trueValue =\r\n                  trueValueBinding.type === NodeTypes.ATTRIBUTE\r\n                    ? JSON.stringify(trueValueBinding.value!.content)\r\n                    : trueValueBinding.exp!\r\n                res.props = [\r\n                  createObjectProperty(\r\n                    `checked`,\r\n                    createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\r\n                      model,\r\n                      trueValue,\r\n                    ]),\r\n                  ),\r\n                ]\r\n              } else {\r\n                res.props = [\r\n                  createObjectProperty(\r\n                    `checked`,\r\n                    createConditionalExpression(\r\n                      createCallExpression(`Array.isArray`, [model]),\r\n                      createCallExpression(context.helper(SSR_LOOSE_CONTAIN), [\r\n                        model,\r\n                        value,\r\n                      ]),\r\n                      model,\r\n                    ),\r\n                  ),\r\n                ]\r\n              }\r\n              break\r\n            case 'file':\r\n              context.onError(\r\n                createDOMCompilerError(\r\n                  DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT,\r\n                  dir.loc,\r\n                ),\r\n              )\r\n              break\r\n            default:\r\n              checkDuplicatedValue()\r\n              res.props = defaultProps\r\n              break\r\n          }\r\n        }\r\n      } else if (hasDynamicKeyVBind(node)) {\r\n        // dynamic type due to dynamic v-bind\r\n        // NOOP, handled in ssrTransformElement due to need to rewrite\r\n        // the entire props expression\r\n      } else {\r\n        // text type\r\n        checkDuplicatedValue()\r\n        res.props = defaultProps\r\n      }\r\n    } else if (node.tag === 'textarea') {\r\n      checkDuplicatedValue()\r\n      node.children = [createInterpolation(model, model.loc)]\r\n    } else if (node.tag === 'select') {\r\n      node.children.forEach(child => {\r\n        if (child.type === NodeTypes.ELEMENT) {\r\n          processOption(child as PlainElementNode)\r\n        }\r\n      })\r\n    } else {\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT,\r\n          dir.loc,\r\n        ),\r\n      )\r\n    }\r\n\r\n    return res\r\n  } else {\r\n    // component v-model\r\n    return transformModel(dir, node, context)\r\n  }\r\n}\r\n\r\nfunction findValueBinding(node: PlainElementNode): ExpressionNode {\r\n  const valueBinding = findProp(node, 'value')\r\n  return valueBinding\r\n    ? valueBinding.type === NodeTypes.DIRECTIVE\r\n      ? valueBinding.exp!\r\n      : createSimpleExpression(valueBinding.value!.content, true)\r\n    : createSimpleExpression(`null`, false)\r\n}\r\n","import {\r\n  DOMErrorCodes,\r\n  type DirectiveTransform,\r\n  createConditionalExpression,\r\n  createDOMCompilerError,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n} from '@vue/compiler-dom'\r\n\r\nexport const ssrTransformShow: DirectiveTransform = (dir, node, context) => {\r\n  if (!dir.exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_SHOW_NO_EXPRESSION),\r\n    )\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        `style`,\r\n        createConditionalExpression(\r\n          dir.exp!,\r\n          createSimpleExpression(`null`, false),\r\n          createObjectExpression([\r\n            createObjectProperty(\r\n              `display`,\r\n              createSimpleExpression(`none`, true),\r\n            ),\r\n          ]),\r\n          false /* no newline */,\r\n        ),\r\n      ),\r\n    ],\r\n  }\r\n}\r\n","import {\r\n  ElementTypes,\r\n  type NodeTransform,\r\n  NodeTypes,\r\n  type ParentNode,\r\n  type RootNode,\r\n  type TemplateChildNode,\r\n  createSimpleExpression,\r\n  findDir,\r\n  locStub,\r\n} from '@vue/compiler-dom'\r\n\r\nconst filterChild = (node: ParentNode) =>\r\n  node.children.filter(n => n.type !== NodeTypes.COMMENT)\r\n\r\nconst hasSingleChild = (node: ParentNode): boolean =>\r\n  filterChild(node).length === 1\r\n\r\nexport const ssrInjectFallthroughAttrs: NodeTransform = (node, context) => {\r\n  // _attrs is provided as a function argument.\r\n  // mark it as a known identifier so that it doesn't get prefixed by\r\n  // transformExpression.\r\n  if (node.type === NodeTypes.ROOT) {\r\n    context.identifiers._attrs = 1\r\n  }\r\n\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.COMPONENT &&\r\n    (node.tag === 'transition' ||\r\n      node.tag === 'Transition' ||\r\n      node.tag === 'KeepAlive' ||\r\n      node.tag === 'keep-alive')\r\n  ) {\r\n    const rootChildren = filterChild(context.root)\r\n    if (rootChildren.length === 1 && rootChildren[0] === node) {\r\n      if (hasSingleChild(node)) {\r\n        injectFallthroughAttrs(node.children[0])\r\n      }\r\n      return\r\n    }\r\n  }\r\n\r\n  const parent = context.parent\r\n  if (!parent || parent.type !== NodeTypes.ROOT) {\r\n    return\r\n  }\r\n\r\n  if (node.type === NodeTypes.IF_BRANCH && hasSingleChild(node)) {\r\n    // detect cases where the parent v-if is not the only root level node\r\n    let hasEncounteredIf = false\r\n    for (const c of filterChild(parent)) {\r\n      if (\r\n        c.type === NodeTypes.IF ||\r\n        (c.type === NodeTypes.ELEMENT && findDir(c, 'if'))\r\n      ) {\r\n        // multiple root v-if\r\n        if (hasEncounteredIf) return\r\n        hasEncounteredIf = true\r\n      } else if (\r\n        // node before v-if\r\n        !hasEncounteredIf ||\r\n        // non else nodes\r\n        !(c.type === NodeTypes.ELEMENT && findDir(c, /else/, true))\r\n      ) {\r\n        return\r\n      }\r\n    }\r\n    injectFallthroughAttrs(node.children[0])\r\n  } else if (hasSingleChild(parent)) {\r\n    injectFallthroughAttrs(node)\r\n  }\r\n}\r\n\r\nfunction injectFallthroughAttrs(node: RootNode | TemplateChildNode) {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    (node.tagType === ElementTypes.ELEMENT ||\r\n      node.tagType === ElementTypes.COMPONENT) &&\r\n    !findDir(node, 'for')\r\n  ) {\r\n    node.props.push({\r\n      type: NodeTypes.DIRECTIVE,\r\n      name: 'bind',\r\n      arg: undefined,\r\n      exp: createSimpleExpression(`_attrs`, false),\r\n      modifiers: [],\r\n      loc: locStub,\r\n    })\r\n  }\r\n}\r\n","import {\r\n  ElementTypes,\r\n  type NodeTransform,\r\n  NodeTypes,\r\n  type RootNode,\r\n  type TemplateChildNode,\r\n  createSimpleExpression,\r\n  findDir,\r\n  locStub,\r\n} from '@vue/compiler-dom'\r\n\r\nexport const ssrInjectCssVars: NodeTransform = (node, context) => {\r\n  if (!context.ssrCssVars) {\r\n    return\r\n  }\r\n\r\n  // _cssVars is initialized once per render function\r\n  // the code is injected in ssrCodegenTransform when creating the\r\n  // ssr transform context\r\n  if (node.type === NodeTypes.ROOT) {\r\n    context.identifiers._cssVars = 1\r\n  }\r\n\r\n  const parent = context.parent\r\n  if (!parent || parent.type !== NodeTypes.ROOT) {\r\n    return\r\n  }\r\n\r\n  if (node.type === NodeTypes.IF_BRANCH) {\r\n    for (const child of node.children) {\r\n      injectCssVars(child)\r\n    }\r\n  } else {\r\n    injectCssVars(node)\r\n  }\r\n}\r\n\r\nfunction injectCssVars(node: RootNode | TemplateChildNode) {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    (node.tagType === ElementTypes.ELEMENT ||\r\n      node.tagType === ElementTypes.COMPONENT) &&\r\n    !findDir(node, 'for')\r\n  ) {\r\n    if (node.tag === 'suspense' || node.tag === 'Suspense') {\r\n      for (const child of node.children) {\r\n        if (\r\n          child.type === NodeTypes.ELEMENT &&\r\n          child.tagType === ElementTypes.TEMPLATE\r\n        ) {\r\n          // suspense slot\r\n          child.children.forEach(injectCssVars)\r\n        } else {\r\n          injectCssVars(child)\r\n        }\r\n      }\r\n    } else {\r\n      node.props.push({\r\n        type: NodeTypes.DIRECTIVE,\r\n        name: 'bind',\r\n        arg: undefined,\r\n        exp: createSimpleExpression(`_cssVars`, false),\r\n        modifiers: [],\r\n        loc: locStub,\r\n      })\r\n    }\r\n  }\r\n}\r\n","import {\r\n  type CodegenResult,\r\n  type CompilerOptions,\r\n  type RootNode,\r\n  baseParse,\r\n  generate,\r\n  noopDirectiveTransform,\r\n  parserOptions,\r\n  trackSlotScopes,\r\n  trackVForSlotScopes,\r\n  transform,\r\n  transformBind,\r\n  transformExpression,\r\n  transformOn,\r\n  transformStyle,\r\n} from '@vue/compiler-dom'\r\nimport { ssrCodegenTransform } from './ssrCodegenTransform'\r\nimport { ssrTransformElement } from './transforms/ssrTransformElement'\r\nimport {\r\n  rawOptionsMap,\r\n  ssrTransformComponent,\r\n} from './transforms/ssrTransformComponent'\r\nimport { ssrTransformSlotOutlet } from './transforms/ssrTransformSlotOutlet'\r\nimport { ssrTransformIf } from './transforms/ssrVIf'\r\nimport { ssrTransformFor } from './transforms/ssrVFor'\r\nimport { ssrTransformModel } from './transforms/ssrVModel'\r\nimport { ssrTransformShow } from './transforms/ssrVShow'\r\nimport { ssrInjectFallthroughAttrs } from './transforms/ssrInjectFallthroughAttrs'\r\nimport { ssrInjectCssVars } from './transforms/ssrInjectCssVars'\r\n\r\nexport function compile(\r\n  source: string | RootNode,\r\n  options: CompilerOptions = {},\r\n): CodegenResult {\r\n  options = {\r\n    ...options,\r\n    ...parserOptions,\r\n    ssr: true,\r\n    inSSR: true,\r\n    scopeId: options.mode === 'function' ? null : options.scopeId,\r\n    // always prefix since compiler-ssr doesn't have size concern\r\n    prefixIdentifiers: true,\r\n    // disable optimizations that are unnecessary for ssr\r\n    cacheHandlers: false,\r\n    hoistStatic: false,\r\n  }\r\n\r\n  const ast = typeof source === 'string' ? baseParse(source, options) : source\r\n\r\n  // Save raw options for AST. This is needed when performing sub-transforms\r\n  // on slot vnode branches.\r\n  rawOptionsMap.set(ast, options)\r\n\r\n  transform(ast, {\r\n    ...options,\r\n    hoistStatic: false,\r\n    nodeTransforms: [\r\n      ssrTransformIf,\r\n      ssrTransformFor,\r\n      trackVForSlotScopes,\r\n      transformExpression,\r\n      ssrTransformSlotOutlet,\r\n      ssrInjectFallthroughAttrs,\r\n      ssrInjectCssVars,\r\n      ssrTransformElement,\r\n      ssrTransformComponent,\r\n      trackSlotScopes,\r\n      transformStyle,\r\n      ...(options.nodeTransforms || []), // user transforms\r\n    ],\r\n    directiveTransforms: {\r\n      // reusing core v-bind\r\n      bind: transformBind,\r\n      on: transformOn,\r\n      // model and show have dedicated SSR handling\r\n      model: ssrTransformModel,\r\n      show: ssrTransformShow,\r\n      // the following are ignored during SSR\r\n      // on: noopDirectiveTransform,\r\n      cloak: noopDirectiveTransform,\r\n      once: noopDirectiveTransform,\r\n      memo: noopDirectiveTransform,\r\n      ...(options.directiveTransforms || {}), // user transforms\r\n    },\r\n  })\r\n\r\n  // traverse the template AST and convert into SSR codegen AST\r\n  // by replacing ast.codegenNode.\r\n  ssrCodegenTransform(ast, options)\r\n\r\n  return generate(ast, options)\r\n}\r\n","const hasWarned: Record<string, boolean> = {}\r\n\r\nexport function warnOnce(msg: string) {\r\n  const isNodeProd =\r\n    typeof process !== 'undefined' && process.env.NODE_ENV === 'production'\r\n  if (!isNodeProd && !__TEST__ && !hasWarned[msg]) {\r\n    hasWarned[msg] = true\r\n    warn(msg)\r\n  }\r\n}\r\n\r\nexport function warn(msg: string) {\r\n  console.warn(\r\n    `\\x1b[1m\\x1b[33m[@vue/compiler-sfc]\\x1b[0m\\x1b[33m ${msg}\\x1b[0m\\n`,\r\n  )\r\n}\r\n","import {\r\n  type CodegenResult,\r\n  type CompilerError,\r\n  type CompilerOptions,\r\n  type ElementNode,\r\n  type NodeTransform,\r\n  NodeTypes,\r\n  type ParserOptions,\r\n  type RootNode,\r\n  createRoot,\r\n} from '@vue/compiler-core'\r\nimport {\r\n  type RawSourceMap,\r\n  SourceMapConsumer,\r\n  SourceMapGenerator,\r\n} from 'source-map-js'\r\nimport {\r\n  type AssetURLOptions,\r\n  type AssetURLTagConfig,\r\n  createAssetUrlTransformWithOptions,\r\n  normalizeOptions,\r\n  transformAssetUrl,\r\n} from './template/transformAssetUrl'\r\nimport {\r\n  createSrcsetTransformWithOptions,\r\n  transformSrcset,\r\n} from './template/transformSrcset'\r\nimport { generateCodeFrame, isObject } from '@vue/shared'\r\nimport * as CompilerDOM from '@vue/compiler-dom'\r\nimport * as CompilerSSR from '@vue/compiler-ssr'\r\nimport consolidate from '@vue/consolidate'\r\nimport { warnOnce } from './warn'\r\nimport { genCssVarsFromList } from './style/cssVars'\r\n\r\nexport interface TemplateCompiler {\r\n  compile(source: string | RootNode, options: CompilerOptions): CodegenResult\r\n  parse(template: string, options: ParserOptions): RootNode\r\n}\r\n\r\nexport interface SFCTemplateCompileResults {\r\n  code: string\r\n  ast?: RootNode\r\n  preamble?: string\r\n  source: string\r\n  tips: string[]\r\n  errors: (string | CompilerError)[]\r\n  map?: RawSourceMap\r\n}\r\n\r\nexport interface SFCTemplateCompileOptions {\r\n  source: string\r\n  ast?: RootNode\r\n  filename: string\r\n  id: string\r\n  scoped?: boolean\r\n  slotted?: boolean\r\n  isProd?: boolean\r\n  ssr?: boolean\r\n  ssrCssVars?: string[]\r\n  inMap?: RawSourceMap\r\n  compiler?: TemplateCompiler\r\n  compilerOptions?: CompilerOptions\r\n  preprocessLang?: string\r\n  preprocessOptions?: any\r\n  /**\r\n   * In some cases, compiler-sfc may not be inside the project root (e.g. when\r\n   * linked or globally installed). In such cases a custom `require` can be\r\n   * passed to correctly resolve the preprocessors.\r\n   */\r\n  preprocessCustomRequire?: (id: string) => any\r\n  /**\r\n   * Configure what tags/attributes to transform into asset url imports,\r\n   * or disable the transform altogether with `false`.\r\n   */\r\n  transformAssetUrls?: AssetURLOptions | AssetURLTagConfig | boolean\r\n}\r\n\r\ninterface PreProcessor {\r\n  render(\r\n    source: string,\r\n    options: any,\r\n    cb: (err: Error | null, res: string) => void,\r\n  ): void\r\n}\r\n\r\nfunction preprocess(\r\n  { source, filename, preprocessOptions }: SFCTemplateCompileOptions,\r\n  preprocessor: PreProcessor,\r\n): string {\r\n  // Consolidate exposes a callback based API, but the callback is in fact\r\n  // called synchronously for most templating engines. In our case, we have to\r\n  // expose a synchronous API so that it is usable in Jest transforms (which\r\n  // have to be sync because they are applied via Node.js require hooks)\r\n  let res: string = ''\r\n  let err: Error | null = null\r\n\r\n  preprocessor.render(\r\n    source,\r\n    { filename, ...preprocessOptions },\r\n    (_err, _res) => {\r\n      if (_err) err = _err\r\n      res = _res\r\n    },\r\n  )\r\n\r\n  if (err) throw err\r\n  return res\r\n}\r\n\r\nexport function compileTemplate(\r\n  options: SFCTemplateCompileOptions,\r\n): SFCTemplateCompileResults {\r\n  const { preprocessLang, preprocessCustomRequire } = options\r\n\r\n  if (\r\n    (__ESM_BROWSER__ || __GLOBAL__) &&\r\n    preprocessLang &&\r\n    !preprocessCustomRequire\r\n  ) {\r\n    throw new Error(\r\n      `[@vue/compiler-sfc] Template preprocessing in the browser build must ` +\r\n        `provide the \\`preprocessCustomRequire\\` option to return the in-browser ` +\r\n        `version of the preprocessor in the shape of { render(): string }.`,\r\n    )\r\n  }\r\n\r\n  const preprocessor = preprocessLang\r\n    ? preprocessCustomRequire\r\n      ? preprocessCustomRequire(preprocessLang)\r\n      : __ESM_BROWSER__\r\n        ? undefined\r\n        : consolidate[preprocessLang as keyof typeof consolidate]\r\n    : false\r\n  if (preprocessor) {\r\n    try {\r\n      return doCompileTemplate({\r\n        ...options,\r\n        source: preprocess(options, preprocessor),\r\n        ast: undefined, // invalidate AST if template goes through preprocessor\r\n      })\r\n    } catch (e: any) {\r\n      return {\r\n        code: `export default function render() {}`,\r\n        source: options.source,\r\n        tips: [],\r\n        errors: [e],\r\n      }\r\n    }\r\n  } else if (preprocessLang) {\r\n    return {\r\n      code: `export default function render() {}`,\r\n      source: options.source,\r\n      tips: [\r\n        `Component ${options.filename} uses lang ${preprocessLang} for template. Please install the language preprocessor.`,\r\n      ],\r\n      errors: [\r\n        `Component ${options.filename} uses lang ${preprocessLang} for template, however it is not installed.`,\r\n      ],\r\n    }\r\n  } else {\r\n    return doCompileTemplate(options)\r\n  }\r\n}\r\n\r\nfunction doCompileTemplate({\r\n  filename,\r\n  id,\r\n  scoped,\r\n  slotted,\r\n  inMap,\r\n  source,\r\n  ast: inAST,\r\n  ssr = false,\r\n  ssrCssVars,\r\n  isProd = false,\r\n  compiler,\r\n  compilerOptions = {},\r\n  transformAssetUrls,\r\n}: SFCTemplateCompileOptions): SFCTemplateCompileResults {\r\n  const errors: CompilerError[] = []\r\n  const warnings: CompilerError[] = []\r\n\r\n  let nodeTransforms: NodeTransform[] = []\r\n  if (isObject(transformAssetUrls)) {\r\n    const assetOptions = normalizeOptions(transformAssetUrls)\r\n    nodeTransforms = [\r\n      createAssetUrlTransformWithOptions(assetOptions),\r\n      createSrcsetTransformWithOptions(assetOptions),\r\n    ]\r\n  } else if (transformAssetUrls !== false) {\r\n    nodeTransforms = [transformAssetUrl, transformSrcset]\r\n  }\r\n\r\n  if (ssr && !ssrCssVars) {\r\n    warnOnce(\r\n      `compileTemplate is called with \\`ssr: true\\` but no ` +\r\n        `corresponding \\`cssVars\\` option.\\`.`,\r\n    )\r\n  }\r\n  if (!id) {\r\n    warnOnce(`compileTemplate now requires the \\`id\\` option.\\`.`)\r\n    id = ''\r\n  }\r\n\r\n  const shortId = id.replace(/^data-v-/, '')\r\n  const longId = `data-v-${shortId}`\r\n\r\n  const defaultCompiler = ssr ? (CompilerSSR as TemplateCompiler) : CompilerDOM\r\n  compiler = compiler || defaultCompiler\r\n\r\n  if (compiler !== defaultCompiler) {\r\n    // user using custom compiler, this means we cannot reuse the AST from\r\n    // the descriptor as they might be different.\r\n    inAST = undefined\r\n  }\r\n\r\n  if (inAST?.transformed) {\r\n    // If input AST has already been transformed, then it cannot be reused.\r\n    // We need to parse a fresh one. Can't just use `source` here since we need\r\n    // the AST location info to be relative to the entire SFC.\r\n    const newAST = (ssr ? CompilerDOM : compiler).parse(inAST.source, {\r\n      prefixIdentifiers: true,\r\n      ...compilerOptions,\r\n      parseMode: 'sfc',\r\n      onError: e => errors.push(e),\r\n    })\r\n    const template = newAST.children.find(\r\n      node => node.type === NodeTypes.ELEMENT && node.tag === 'template',\r\n    ) as ElementNode\r\n    inAST = createRoot(template.children, inAST.source)\r\n  }\r\n\r\n  let { code, ast, preamble, map } = compiler.compile(inAST || source, {\r\n    mode: 'module',\r\n    prefixIdentifiers: true,\r\n    hoistStatic: true,\r\n    cacheHandlers: true,\r\n    ssrCssVars:\r\n      ssr && ssrCssVars && ssrCssVars.length\r\n        ? genCssVarsFromList(ssrCssVars, shortId, isProd, true)\r\n        : '',\r\n    scopeId: scoped ? longId : undefined,\r\n    slotted,\r\n    sourceMap: true,\r\n    ...compilerOptions,\r\n    hmr: !isProd,\r\n    nodeTransforms: nodeTransforms.concat(compilerOptions.nodeTransforms || []),\r\n    filename,\r\n    onError: e => errors.push(e),\r\n    onWarn: w => warnings.push(w),\r\n  })\r\n\r\n  // inMap should be the map produced by ./parse.ts which is a simple line-only\r\n  // mapping. If it is present, we need to adjust the final map and errors to\r\n  // reflect the original line numbers.\r\n  if (inMap && !inAST) {\r\n    if (map) {\r\n      map = mapLines(inMap, map)\r\n    }\r\n    if (errors.length) {\r\n      patchErrors(errors, source, inMap)\r\n    }\r\n  }\r\n\r\n  const tips = warnings.map(w => {\r\n    let msg = w.message\r\n    if (w.loc) {\r\n      msg += `\\n${generateCodeFrame(\r\n        inAST?.source || source,\r\n        w.loc.start.offset,\r\n        w.loc.end.offset,\r\n      )}`\r\n    }\r\n    return msg\r\n  })\r\n\r\n  return { code, ast, preamble, source, errors, tips, map }\r\n}\r\n\r\nfunction mapLines(oldMap: RawSourceMap, newMap: RawSourceMap): RawSourceMap {\r\n  if (!oldMap) return newMap\r\n  if (!newMap) return oldMap\r\n\r\n  const oldMapConsumer = new SourceMapConsumer(oldMap)\r\n  const newMapConsumer = new SourceMapConsumer(newMap)\r\n  const mergedMapGenerator = new SourceMapGenerator()\r\n\r\n  newMapConsumer.eachMapping(m => {\r\n    if (m.originalLine == null) {\r\n      return\r\n    }\r\n\r\n    const origPosInOldMap = oldMapConsumer.originalPositionFor({\r\n      line: m.originalLine,\r\n      column: m.originalColumn,\r\n    })\r\n\r\n    if (origPosInOldMap.source == null) {\r\n      return\r\n    }\r\n\r\n    mergedMapGenerator.addMapping({\r\n      generated: {\r\n        line: m.generatedLine,\r\n        column: m.generatedColumn,\r\n      },\r\n      original: {\r\n        line: origPosInOldMap.line, // map line\r\n        // use current column, since the oldMap produced by @vue/compiler-sfc\r\n        // does not\r\n        column: m.originalColumn,\r\n      },\r\n      source: origPosInOldMap.source,\r\n      name: origPosInOldMap.name,\r\n    })\r\n  })\r\n\r\n  // source-map's type definition is incomplete\r\n  const generator = mergedMapGenerator as any\r\n  ;(oldMapConsumer as any).sources.forEach((sourceFile: string) => {\r\n    generator._sources.add(sourceFile)\r\n    const sourceContent = oldMapConsumer.sourceContentFor(sourceFile)\r\n    if (sourceContent != null) {\r\n      mergedMapGenerator.setSourceContent(sourceFile, sourceContent)\r\n    }\r\n  })\r\n\r\n  generator._sourceRoot = oldMap.sourceRoot\r\n  generator._file = oldMap.file\r\n  return generator.toJSON()\r\n}\r\n\r\nfunction patchErrors(\r\n  errors: CompilerError[],\r\n  source: string,\r\n  inMap: RawSourceMap,\r\n) {\r\n  const originalSource = inMap.sourcesContent![0]\r\n  const offset = originalSource.indexOf(source)\r\n  const lineOffset = originalSource.slice(0, offset).split(/\\r?\\n/).length - 1\r\n  errors.forEach(err => {\r\n    if (err.loc) {\r\n      err.loc.start.line += lineOffset\r\n      err.loc.start.offset += offset\r\n      if (err.loc.end !== err.loc.start) {\r\n        err.loc.end.line += lineOffset\r\n        err.loc.end.offset += offset\r\n      }\r\n    }\r\n  })\r\n}\r\n","let tty = require(\"tty\")\n\nlet isColorSupported =\n\t!(\"NO_COLOR\" in process.env || process.argv.includes(\"--no-color\")) &&\n\t(\"FORCE_COLOR\" in process.env ||\n\t\tprocess.argv.includes(\"--color\") ||\n\t\tprocess.platform === \"win32\" ||\n\t\t(tty.isatty(1) && process.env.TERM !== \"dumb\") ||\n\t\t\"CI\" in process.env)\n\nlet formatter =\n\t(open, close, replace = open) =>\n\tinput => {\n\t\tlet string = \"\" + input\n\t\tlet index = string.indexOf(close, open.length)\n\t\treturn ~index\n\t\t\t? open + replaceClose(string, close, replace, index) + close\n\t\t\t: open + string + close\n\t}\n\nlet replaceClose = (string, close, replace, index) => {\n\tlet start = string.substring(0, index) + replace\n\tlet end = string.substring(index + close.length)\n\tlet nextIndex = end.indexOf(close)\n\treturn ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end\n}\n\nlet createColors = (enabled = isColorSupported) => ({\n\tisColorSupported: enabled,\n\treset: enabled ? s => `\\x1b[0m${s}\\x1b[0m` : String,\n\tbold: enabled ? formatter(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\") : String,\n\tdim: enabled ? formatter(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\") : String,\n\titalic: enabled ? formatter(\"\\x1b[3m\", \"\\x1b[23m\") : String,\n\tunderline: enabled ? formatter(\"\\x1b[4m\", \"\\x1b[24m\") : String,\n\tinverse: enabled ? formatter(\"\\x1b[7m\", \"\\x1b[27m\") : String,\n\thidden: enabled ? formatter(\"\\x1b[8m\", \"\\x1b[28m\") : String,\n\tstrikethrough: enabled ? formatter(\"\\x1b[9m\", \"\\x1b[29m\") : String,\n\tblack: enabled ? formatter(\"\\x1b[30m\", \"\\x1b[39m\") : String,\n\tred: enabled ? formatter(\"\\x1b[31m\", \"\\x1b[39m\") : String,\n\tgreen: enabled ? formatter(\"\\x1b[32m\", \"\\x1b[39m\") : String,\n\tyellow: enabled ? formatter(\"\\x1b[33m\", \"\\x1b[39m\") : String,\n\tblue: enabled ? formatter(\"\\x1b[34m\", \"\\x1b[39m\") : String,\n\tmagenta: enabled ? formatter(\"\\x1b[35m\", \"\\x1b[39m\") : String,\n\tcyan: enabled ? formatter(\"\\x1b[36m\", \"\\x1b[39m\") : String,\n\twhite: enabled ? formatter(\"\\x1b[37m\", \"\\x1b[39m\") : String,\n\tgray: enabled ? formatter(\"\\x1b[90m\", \"\\x1b[39m\") : String,\n\tbgBlack: enabled ? formatter(\"\\x1b[40m\", \"\\x1b[49m\") : String,\n\tbgRed: enabled ? formatter(\"\\x1b[41m\", \"\\x1b[49m\") : String,\n\tbgGreen: enabled ? formatter(\"\\x1b[42m\", \"\\x1b[49m\") : String,\n\tbgYellow: enabled ? formatter(\"\\x1b[43m\", \"\\x1b[49m\") : String,\n\tbgBlue: enabled ? formatter(\"\\x1b[44m\", \"\\x1b[49m\") : String,\n\tbgMagenta: enabled ? formatter(\"\\x1b[45m\", \"\\x1b[49m\") : String,\n\tbgCyan: enabled ? formatter(\"\\x1b[46m\", \"\\x1b[49m\") : String,\n\tbgWhite: enabled ? formatter(\"\\x1b[47m\", \"\\x1b[49m\") : String,\n})\n\nmodule.exports = createColors()\nmodule.exports.createColors = createColors\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  }\n}\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet tokenizer = require('./tokenize')\n\nlet Input\n\nfunction registerInput(dependant) {\n  Input = dependant\n}\n\nconst HIGHLIGHT_THEME = {\n  ';': pico.yellow,\n  ':': pico.yellow,\n  '(': pico.cyan,\n  ')': pico.cyan,\n  '[': pico.yellow,\n  ']': pico.yellow,\n  '{': pico.yellow,\n  '}': pico.yellow,\n  'at-word': pico.cyan,\n  'brackets': pico.cyan,\n  'call': pico.cyan,\n  'class': pico.yellow,\n  'comment': pico.gray,\n  'hash': pico.magenta,\n  'string': pico.green\n}\n\nfunction getTokenType([type, value], processor) {\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class'\n    }\n    if (value[0] === '#') {\n      return 'hash'\n    }\n  }\n\n  if (!processor.endOfFile()) {\n    let next = processor.nextToken()\n    processor.back(next)\n    if (next[0] === 'brackets' || next[0] === '(') return 'call'\n  }\n\n  return type\n}\n\nfunction terminalHighlight(css) {\n  let processor = tokenizer(new Input(css), { ignoreErrors: true })\n  let result = ''\n  while (!processor.endOfFile()) {\n    let token = processor.nextToken()\n    let color = HIGHLIGHT_THEME[getTokenType(token, processor)]\n    if (color) {\n      result += token[1]\n        .split(/\\r?\\n/)\n        .map(i => color(i))\n        .join('\\n')\n    } else {\n      result += token[1]\n    }\n  }\n  return result\n}\n\nterminalHighlight.registerInput = registerInput\n\nmodule.exports = terminalHighlight\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n","'use strict'\n\nconst DEFAULT_RAW = {\n  after: '\\n',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  beforeDecl: '\\n',\n  beforeOpen: ' ',\n  beforeRule: '\\n',\n  colon: ': ',\n  commentLeft: ' ',\n  commentRight: ' ',\n  emptyBody: '',\n  indent: '    ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  positionBy(opts, stringRepresentation) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index, stringRepresentation)\n    } else if (opts.word) {\n      stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index, stringRepresentation)\n    }\n    return pos\n  }\n\n  positionInside(index, stringRepresentation) {\n    let string = stringRepresentation || this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { column, line }\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    }\n    let end = this.source.end\n      ? {\n        column: this.source.end.column + 1,\n        line: this.source.end.line\n      }\n      : {\n        column: start.column + 1,\n        line: start.line\n      }\n\n    if (opts.word) {\n      let stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index, stringRepresentation)\n        end = this.positionInside(index + opts.word.length, stringRepresentation)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { column: start.column + 1, line: start.line }\n    }\n\n    return { end, start }\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nmodule.exports = { nanoid, customAlphabet }\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { isAbsolute, resolve } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { column: origin.column, line: origin.line },\n        origin.endLine === undefined\n          ? origin.column\n          : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { column, line },\n        endLine === undefined ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { column, endColumn, endLine, line, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    }\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ column, line })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, relative, resolve, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.originalCSS = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n\n    this.memoizedFileURLs = new Map()\n    this.memoizedPaths = new Map()\n    this.memoizedURLs = new Map()\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/\\n*?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>'\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: ''\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  path(file) {\n    if (this.mapOpts.absolute) return file\n    if (file.charCodeAt(0) === 60 /* `<` */) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    let cached = this.memoizedPaths.get(file)\n    if (cached) return cached\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    let path = relative(from, file)\n    this.memoizedPaths.set(file, path)\n\n    return path\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.originalCSS, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path)\n    if (cached) return cached\n\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString()\n      this.memoizedFileURLs.set(path, fileURL)\n\n      return fileURL\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path)\n    if (cached) return cached\n\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n    this.memoizedURLs.set(path, url)\n\n    return url\n  }\n}\n\nmodule.exports = MapGenerator\n","'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet Declaration = require('./declaration')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule, Root\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist)\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist)\n    let type = existIndex === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nContainer.registerRoot = dependant => {\n  Root = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  } else if (node.type === 'root') {\n    Object.setPrototypeOf(node, Root.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n","/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n","'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n","'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n","'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n","'use strict'\n\nlet list = {\n  comma(string) {\n    return list.split(string, [','], true)\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { column: 1, line: 1, offset: 0 } }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          node.source.end.offset++\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n              node.source.end.offset++\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        node.source.end.offset++\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n    node.source.end.offset++\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n    node.source.end.offset++\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current.source.end.offset++\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.root.source.end = this.getPosition(this.tokenizer.position())\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { raw, value }\n    }\n    node[prop] = value\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  // Errors\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n}\n\nmodule.exports = Parser\n","'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n}\n\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n}\n\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, postcss, result: this.result }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this.css\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n","'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet parse = require('./parse')\nconst Result = require('./result')\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    } else {\n      map.clearAnnotation();\n      this.result.css = map.css;\n    }\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this._css\n  }\n\n  warnings() {\n    return []\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get messages() {\n    return []\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n","'use strict'\n\nlet NoWorkResult = require('./no-work-result')\nlet LazyResult = require('./lazy-result')\nlet Document = require('./document')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.33'\n    this.plugins = this.normalize(plugins)\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n\n  process(css, opts = {}) {\n    if (\n      !this.plugins.length &&\n      !opts.parser &&\n      !opts.stringifier &&\n      !opts.syntax\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n","import postcss from './postcss.js'\n\nexport default postcss\n\nexport const stringify = postcss.stringify\nexport const fromJSON = postcss.fromJSON\nexport const plugin = postcss.plugin\nexport const parse = postcss.parse\nexport const list = postcss.list\n\nexport const document = postcss.document\nexport const comment = postcss.comment\nexport const atRule = postcss.atRule\nexport const rule = postcss.rule\nexport const decl = postcss.decl\nexport const root = postcss.root\n\nexport const CssSyntaxError = postcss.CssSyntaxError\nexport const Declaration = postcss.Declaration\nexport const Container = postcss.Container\nexport const Processor = postcss.Processor\nexport const Document = postcss.Document\nexport const Comment = postcss.Comment\nexport const Warning = postcss.Warning\nexport const AtRule = postcss.AtRule\nexport const Result = postcss.Result\nexport const Input = postcss.Input\nexport const Rule = postcss.Rule\nexport const Root = postcss.Root\nexport const Node = postcss.Node\n","import type { PluginCreator } from 'postcss'\r\n\r\nconst trimPlugin: PluginCreator<{}> = () => {\r\n  return {\r\n    postcssPlugin: 'vue-sfc-trim',\r\n    Once(root) {\r\n      root.walk(({ type, raws }) => {\r\n        if (type === 'rule' || type === 'atrule') {\r\n          if (raws.before) raws.before = '\\n'\r\n          if ('after' in raws && raws.after) raws.after = '\\n'\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n\r\ntrimPlugin.postcss = true\r\nexport default trimPlugin\r\n","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = unesc;\n// Many thanks for this post which made this migration much easier.\n// https://mathiasbynens.be/notes/css-escapes\n\n/**\n * \n * @param {string} str \n * @returns {[string, number]|undefined}\n */\nfunction gobbleHex(str) {\n  var lower = str.toLowerCase();\n  var hex = '';\n  var spaceTerminated = false;\n  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {\n    var code = lower.charCodeAt(i);\n    // check to see if we are dealing with a valid hex char [a-f|0-9]\n    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57;\n    // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\n    spaceTerminated = code === 32;\n    if (!valid) {\n      break;\n    }\n    hex += lower[i];\n  }\n  if (hex.length === 0) {\n    return undefined;\n  }\n  var codePoint = parseInt(hex, 16);\n  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF;\n  // Add special case for\n  // \"If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point\"\n  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point\n  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\n    return [\"\\uFFFD\", hex.length + (spaceTerminated ? 1 : 0)];\n  }\n  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];\n}\nvar CONTAINS_ESCAPE = /\\\\/;\nfunction unesc(str) {\n  var needToProcess = CONTAINS_ESCAPE.test(str);\n  if (!needToProcess) {\n    return str;\n  }\n  var ret = \"\";\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === \"\\\\\") {\n      var gobbled = gobbleHex(str.slice(i + 1, i + 7));\n      if (gobbled !== undefined) {\n        ret += gobbled[0];\n        i += gobbled[1];\n        continue;\n      }\n\n      // Retain a pair of \\\\ if double escaped `\\\\\\\\`\n      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e\n      if (str[i + 1] === \"\\\\\") {\n        ret += \"\\\\\";\n        i++;\n        continue;\n      }\n\n      // if \\\\ is at the end of the string retain it\n      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb\n      if (str.length === i + 1) {\n        ret += str[i];\n      }\n      continue;\n    }\n    ret += str[i];\n  }\n  return ret;\n}\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = getProp;\nfunction getProp(obj) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  while (props.length > 0) {\n    var prop = props.shift();\n    if (!obj[prop]) {\n      return undefined;\n    }\n    obj = obj[prop];\n  }\n  return obj;\n}\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = ensureObject;\nfunction ensureObject(obj) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  while (props.length > 0) {\n    var prop = props.shift();\n    if (!obj[prop]) {\n      obj[prop] = {};\n    }\n    obj = obj[prop];\n  }\n}\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = stripComments;\nfunction stripComments(str) {\n  var s = \"\";\n  var commentStart = str.indexOf(\"/*\");\n  var lastEnd = 0;\n  while (commentStart >= 0) {\n    s = s + str.slice(lastEnd, commentStart);\n    var commentEnd = str.indexOf(\"*/\", commentStart + 2);\n    if (commentEnd < 0) {\n      return s;\n    }\n    lastEnd = commentEnd + 2;\n    commentStart = str.indexOf(\"/*\", lastEnd);\n  }\n  s = s + str.slice(lastEnd);\n  return s;\n}\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.unesc = exports.stripComments = exports.getProp = exports.ensureObject = void 0;\nvar _unesc = _interopRequireDefault(require(\"./unesc\"));\nexports.unesc = _unesc[\"default\"];\nvar _getProp = _interopRequireDefault(require(\"./getProp\"));\nexports.getProp = _getProp[\"default\"];\nvar _ensureObject = _interopRequireDefault(require(\"./ensureObject\"));\nexports.ensureObject = _ensureObject[\"default\"];\nvar _stripComments = _interopRequireDefault(require(\"./stripComments\"));\nexports.stripComments = _stripComments[\"default\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _util = require(\"../util\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nvar cloneNode = function cloneNode(obj, parent) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n  var cloned = new obj.constructor();\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) {\n      continue;\n    }\n    var value = obj[i];\n    var type = typeof value;\n    if (i === 'parent' && type === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(function (j) {\n        return cloneNode(j, cloned);\n      });\n    } else {\n      cloned[i] = cloneNode(value, cloned);\n    }\n  }\n  return cloned;\n};\nvar Node = /*#__PURE__*/function () {\n  function Node(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    Object.assign(this, opts);\n    this.spaces = this.spaces || {};\n    this.spaces.before = this.spaces.before || '';\n    this.spaces.after = this.spaces.after || '';\n  }\n  var _proto = Node.prototype;\n  _proto.remove = function remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = undefined;\n    return this;\n  };\n  _proto.replaceWith = function replaceWith() {\n    if (this.parent) {\n      for (var index in arguments) {\n        this.parent.insertBefore(this, arguments[index]);\n      }\n      this.remove();\n    }\n    return this;\n  };\n  _proto.next = function next() {\n    return this.parent.at(this.parent.index(this) + 1);\n  };\n  _proto.prev = function prev() {\n    return this.parent.at(this.parent.index(this) - 1);\n  };\n  _proto.clone = function clone(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n    var cloned = cloneNode(this);\n    for (var name in overrides) {\n      cloned[name] = overrides[name];\n    }\n    return cloned;\n  }\n\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows non standard syntax to be appended to an existing property\n   * by specifying the escaped value. By specifying the escaped value,\n   * illegal characters are allowed to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped optional. the escaped value of the property.\n   */;\n  _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n    var originalValue = this[name];\n    var originalEscaped = this.raws[name];\n    this[name] = originalValue + value; // this may trigger a setter that updates raws, so it has to be set first.\n    if (originalEscaped || valueEscaped !== value) {\n      this.raws[name] = (originalEscaped || originalValue) + valueEscaped;\n    } else {\n      delete this.raws[name]; // delete any escaped value that was created by the setter.\n    }\n  }\n\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows the escaped value to be specified directly, allowing illegal\n   * characters to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped the escaped value of the property.\n   */;\n  _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n    this.raws[name] = valueEscaped;\n  }\n\n  /**\n   * When you want a value to passed through to CSS directly. This method\n   * deletes the corresponding raw value causing the stringifier to fallback\n   * to the unescaped value.\n   * @param {string} name the property to set.\n   * @param {any} value The value that is both escaped and unescaped.\n   */;\n  _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n    if (this.raws) {\n      delete this.raws[name];\n    }\n  }\n\n  /**\n   *\n   * @param {number} line The number (starting with 1)\n   * @param {number} column The column number (starting with 1)\n   */;\n  _proto.isAtPosition = function isAtPosition(line, column) {\n    if (this.source && this.source.start && this.source.end) {\n      if (this.source.start.line > line) {\n        return false;\n      }\n      if (this.source.end.line < line) {\n        return false;\n      }\n      if (this.source.start.line === line && this.source.start.column > column) {\n        return false;\n      }\n      if (this.source.end.line === line && this.source.end.column < column) {\n        return false;\n      }\n      return true;\n    }\n    return undefined;\n  };\n  _proto.stringifyProperty = function stringifyProperty(name) {\n    return this.raws && this.raws[name] || this[name];\n  };\n  _proto.valueToString = function valueToString() {\n    return String(this.stringifyProperty(\"value\"));\n  };\n  _proto.toString = function toString() {\n    return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join('');\n  };\n  _createClass(Node, [{\n    key: \"rawSpaceBefore\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces && this.spaces.before;\n      }\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.before = raw;\n    }\n  }, {\n    key: \"rawSpaceAfter\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces.after;\n      }\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.after = raw;\n    }\n  }]);\n  return Node;\n}();\nexports[\"default\"] = Node;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.UNIVERSAL = exports.TAG = exports.STRING = exports.SELECTOR = exports.ROOT = exports.PSEUDO = exports.NESTING = exports.ID = exports.COMMENT = exports.COMBINATOR = exports.CLASS = exports.ATTRIBUTE = void 0;\nvar TAG = 'tag';\nexports.TAG = TAG;\nvar STRING = 'string';\nexports.STRING = STRING;\nvar SELECTOR = 'selector';\nexports.SELECTOR = SELECTOR;\nvar ROOT = 'root';\nexports.ROOT = ROOT;\nvar PSEUDO = 'pseudo';\nexports.PSEUDO = PSEUDO;\nvar NESTING = 'nesting';\nexports.NESTING = NESTING;\nvar ID = 'id';\nexports.ID = ID;\nvar COMMENT = 'comment';\nexports.COMMENT = COMMENT;\nvar COMBINATOR = 'combinator';\nexports.COMBINATOR = COMBINATOR;\nvar CLASS = 'class';\nexports.CLASS = CLASS;\nvar ATTRIBUTE = 'attribute';\nexports.ATTRIBUTE = ATTRIBUTE;\nvar UNIVERSAL = 'universal';\nexports.UNIVERSAL = UNIVERSAL;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar types = _interopRequireWildcard(require(\"./types\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Container = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Container, _Node);\n  function Container(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    if (!_this.nodes) {\n      _this.nodes = [];\n    }\n    return _this;\n  }\n  var _proto = Container.prototype;\n  _proto.append = function append(selector) {\n    selector.parent = this;\n    this.nodes.push(selector);\n    return this;\n  };\n  _proto.prepend = function prepend(selector) {\n    selector.parent = this;\n    this.nodes.unshift(selector);\n    return this;\n  };\n  _proto.at = function at(index) {\n    return this.nodes[index];\n  };\n  _proto.index = function index(child) {\n    if (typeof child === 'number') {\n      return child;\n    }\n    return this.nodes.indexOf(child);\n  };\n  _proto.removeChild = function removeChild(child) {\n    child = this.index(child);\n    this.at(child).parent = undefined;\n    this.nodes.splice(child, 1);\n    var index;\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n      if (index >= child) {\n        this.indexes[id] = index - 1;\n      }\n    }\n    return this;\n  };\n  _proto.removeAll = function removeAll() {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.nodes), _step; !(_step = _iterator()).done;) {\n      var node = _step.value;\n      node.parent = undefined;\n    }\n    this.nodes = [];\n    return this;\n  };\n  _proto.empty = function empty() {\n    return this.removeAll();\n  };\n  _proto.insertAfter = function insertAfter(oldNode, newNode) {\n    newNode.parent = this;\n    var oldIndex = this.index(oldNode);\n    this.nodes.splice(oldIndex + 1, 0, newNode);\n    newNode.parent = this;\n    var index;\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n      if (oldIndex <= index) {\n        this.indexes[id] = index + 1;\n      }\n    }\n    return this;\n  };\n  _proto.insertBefore = function insertBefore(oldNode, newNode) {\n    newNode.parent = this;\n    var oldIndex = this.index(oldNode);\n    this.nodes.splice(oldIndex, 0, newNode);\n    newNode.parent = this;\n    var index;\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n      if (index <= oldIndex) {\n        this.indexes[id] = index + 1;\n      }\n    }\n    return this;\n  };\n  _proto._findChildAtPosition = function _findChildAtPosition(line, col) {\n    var found = undefined;\n    this.each(function (node) {\n      if (node.atPosition) {\n        var foundChild = node.atPosition(line, col);\n        if (foundChild) {\n          found = foundChild;\n          return false;\n        }\n      } else if (node.isAtPosition(line, col)) {\n        found = node;\n        return false;\n      }\n    });\n    return found;\n  }\n\n  /**\n   * Return the most specific node at the line and column number given.\n   * The source location is based on the original parsed location, locations aren't\n   * updated as selector nodes are mutated.\n   * \n   * Note that this location is relative to the location of the first character\n   * of the selector, and not the location of the selector in the overall document\n   * when used in conjunction with postcss.\n   *\n   * If not found, returns undefined.\n   * @param {number} line The line number of the node to find. (1-based index)\n   * @param {number} col  The column number of the node to find. (1-based index)\n   */;\n  _proto.atPosition = function atPosition(line, col) {\n    if (this.isAtPosition(line, col)) {\n      return this._findChildAtPosition(line, col) || this;\n    } else {\n      return undefined;\n    }\n  };\n  _proto._inferEndPosition = function _inferEndPosition() {\n    if (this.last && this.last.source && this.last.source.end) {\n      this.source = this.source || {};\n      this.source.end = this.source.end || {};\n      Object.assign(this.source.end, this.last.source.end);\n    }\n  };\n  _proto.each = function each(callback) {\n    if (!this.lastEach) {\n      this.lastEach = 0;\n    }\n    if (!this.indexes) {\n      this.indexes = {};\n    }\n    this.lastEach++;\n    var id = this.lastEach;\n    this.indexes[id] = 0;\n    if (!this.length) {\n      return undefined;\n    }\n    var index, result;\n    while (this.indexes[id] < this.length) {\n      index = this.indexes[id];\n      result = callback(this.at(index), index);\n      if (result === false) {\n        break;\n      }\n      this.indexes[id] += 1;\n    }\n    delete this.indexes[id];\n    if (result === false) {\n      return false;\n    }\n  };\n  _proto.walk = function walk(callback) {\n    return this.each(function (node, i) {\n      var result = callback(node, i);\n      if (result !== false && node.length) {\n        result = node.walk(callback);\n      }\n      if (result === false) {\n        return false;\n      }\n    });\n  };\n  _proto.walkAttributes = function walkAttributes(callback) {\n    var _this2 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.ATTRIBUTE) {\n        return callback.call(_this2, selector);\n      }\n    });\n  };\n  _proto.walkClasses = function walkClasses(callback) {\n    var _this3 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.CLASS) {\n        return callback.call(_this3, selector);\n      }\n    });\n  };\n  _proto.walkCombinators = function walkCombinators(callback) {\n    var _this4 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.COMBINATOR) {\n        return callback.call(_this4, selector);\n      }\n    });\n  };\n  _proto.walkComments = function walkComments(callback) {\n    var _this5 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.COMMENT) {\n        return callback.call(_this5, selector);\n      }\n    });\n  };\n  _proto.walkIds = function walkIds(callback) {\n    var _this6 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.ID) {\n        return callback.call(_this6, selector);\n      }\n    });\n  };\n  _proto.walkNesting = function walkNesting(callback) {\n    var _this7 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.NESTING) {\n        return callback.call(_this7, selector);\n      }\n    });\n  };\n  _proto.walkPseudos = function walkPseudos(callback) {\n    var _this8 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.PSEUDO) {\n        return callback.call(_this8, selector);\n      }\n    });\n  };\n  _proto.walkTags = function walkTags(callback) {\n    var _this9 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.TAG) {\n        return callback.call(_this9, selector);\n      }\n    });\n  };\n  _proto.walkUniversals = function walkUniversals(callback) {\n    var _this10 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.UNIVERSAL) {\n        return callback.call(_this10, selector);\n      }\n    });\n  };\n  _proto.split = function split(callback) {\n    var _this11 = this;\n    var current = [];\n    return this.reduce(function (memo, node, index) {\n      var split = callback.call(_this11, node);\n      current.push(node);\n      if (split) {\n        memo.push(current);\n        current = [];\n      } else if (index === _this11.length - 1) {\n        memo.push(current);\n      }\n      return memo;\n    }, []);\n  };\n  _proto.map = function map(callback) {\n    return this.nodes.map(callback);\n  };\n  _proto.reduce = function reduce(callback, memo) {\n    return this.nodes.reduce(callback, memo);\n  };\n  _proto.every = function every(callback) {\n    return this.nodes.every(callback);\n  };\n  _proto.some = function some(callback) {\n    return this.nodes.some(callback);\n  };\n  _proto.filter = function filter(callback) {\n    return this.nodes.filter(callback);\n  };\n  _proto.sort = function sort(callback) {\n    return this.nodes.sort(callback);\n  };\n  _proto.toString = function toString() {\n    return this.map(String).join('');\n  };\n  _createClass(Container, [{\n    key: \"first\",\n    get: function get() {\n      return this.at(0);\n    }\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this.at(this.length - 1);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.nodes.length;\n    }\n  }]);\n  return Container;\n}(_node[\"default\"]);\nexports[\"default\"] = Container;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _container = _interopRequireDefault(require(\"./container\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Root = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Root, _Container);\n  function Root(opts) {\n    var _this;\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.ROOT;\n    return _this;\n  }\n  var _proto = Root.prototype;\n  _proto.toString = function toString() {\n    var str = this.reduce(function (memo, selector) {\n      memo.push(String(selector));\n      return memo;\n    }, []).join(',');\n    return this.trailingComma ? str + ',' : str;\n  };\n  _proto.error = function error(message, options) {\n    if (this._error) {\n      return this._error(message, options);\n    } else {\n      return new Error(message);\n    }\n  };\n  _createClass(Root, [{\n    key: \"errorGenerator\",\n    set: function set(handler) {\n      this._error = handler;\n    }\n  }]);\n  return Root;\n}(_container[\"default\"]);\nexports[\"default\"] = Root;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _container = _interopRequireDefault(require(\"./container\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Selector = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Selector, _Container);\n  function Selector(opts) {\n    var _this;\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.SELECTOR;\n    return _this;\n  }\n  return Selector;\n}(_container[\"default\"]);\nexports[\"default\"] = Selector;\nmodule.exports = exports.default;","/*! https://mths.be/cssesc v3.0.0 by @mathias */\n'use strict';\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nvar merge = function merge(options, defaults) {\n\tif (!options) {\n\t\treturn defaults;\n\t}\n\tvar result = {};\n\tfor (var key in defaults) {\n\t\t// `if (defaults.hasOwnProperty(key) { … }` is not needed here, since\n\t\t// only recognized option names are used.\n\t\tresult[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];\n\t}\n\treturn result;\n};\n\nvar regexAnySingleEscape = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/;\nvar regexSingleEscape = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/;\nvar regexAlwaysEscape = /['\"\\\\]/;\nvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\n\n// https://mathiasbynens.be/notes/css-escapes#css\nvar cssesc = function cssesc(string, options) {\n\toptions = merge(options, cssesc.options);\n\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\toptions.quotes = 'single';\n\t}\n\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\tvar isIdentifier = options.isIdentifier;\n\n\tvar firstChar = string.charAt(0);\n\tvar output = '';\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar character = string.charAt(counter++);\n\t\tvar codePoint = character.charCodeAt();\n\t\tvar value = void 0;\n\t\t// If it’s not a printable ASCII character…\n\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\n\t\t\t\t// It’s a high surrogate, and there is a next character.\n\t\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t\t// next character is low surrogate\n\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\n\t\t\t\t} else {\n\t\t\t\t\t// It’s an unmatched surrogate; only append this code unit, in case\n\t\t\t\t\t// the next code unit is the high surrogate of a surrogate pair.\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t} else {\n\t\t\tif (options.escapeEverything) {\n\t\t\t\tif (regexAnySingleEscape.test(character)) {\n\t\t\t\t\tvalue = '\\\\' + character;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t}\n\t\t\t} else if (/[\\t\\n\\f\\r\\x0B]/.test(character)) {\n\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t} else if (character == '\\\\' || !isIdentifier && (character == '\"' && quote == character || character == '\\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {\n\t\t\t\tvalue = '\\\\' + character;\n\t\t\t} else {\n\t\t\t\tvalue = character;\n\t\t\t}\n\t\t}\n\t\toutput += value;\n\t}\n\n\tif (isIdentifier) {\n\t\tif (/^-[-\\d]/.test(output)) {\n\t\t\toutput = '\\\\-' + output.slice(1);\n\t\t} else if (/\\d/.test(firstChar)) {\n\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\n\t\t}\n\t}\n\n\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\n\t// since they’re redundant. Note that this is only possible if the escape\n\t// sequence isn’t preceded by an odd number of backslashes.\n\toutput = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {\n\t\tif ($1 && $1.length % 2) {\n\t\t\t// It’s not safe to remove the space, so don’t.\n\t\t\treturn $0;\n\t\t}\n\t\t// Strip the space.\n\t\treturn ($1 || '') + $2;\n\t});\n\n\tif (!isIdentifier && options.wrap) {\n\t\treturn quote + output + quote;\n\t}\n\treturn output;\n};\n\n// Expose default options (so they can be overridden globally).\ncssesc.options = {\n\t'escapeEverything': false,\n\t'isIdentifier': false,\n\t'quotes': 'single',\n\t'wrap': false\n};\n\ncssesc.version = '3.0.0';\n\nmodule.exports = cssesc;\n","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\nvar _util = require(\"../util\");\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar ClassName = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(ClassName, _Node);\n  function ClassName(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.CLASS;\n    _this._constructed = true;\n    return _this;\n  }\n  var _proto = ClassName.prototype;\n  _proto.valueToString = function valueToString() {\n    return '.' + _Node.prototype.valueToString.call(this);\n  };\n  _createClass(ClassName, [{\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(v) {\n      if (this._constructed) {\n        var escaped = (0, _cssesc[\"default\"])(v, {\n          isIdentifier: true\n        });\n        if (escaped !== v) {\n          (0, _util.ensureObject)(this, \"raws\");\n          this.raws.value = escaped;\n        } else if (this.raws) {\n          delete this.raws.value;\n        }\n      }\n      this._value = v;\n    }\n  }]);\n  return ClassName;\n}(_node[\"default\"]);\nexports[\"default\"] = ClassName;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Comment = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Comment, _Node);\n  function Comment(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.COMMENT;\n    return _this;\n  }\n  return Comment;\n}(_node[\"default\"]);\nexports[\"default\"] = Comment;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar ID = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(ID, _Node);\n  function ID(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.ID;\n    return _this;\n  }\n  var _proto = ID.prototype;\n  _proto.valueToString = function valueToString() {\n    return '#' + _Node.prototype.valueToString.call(this);\n  };\n  return ID;\n}(_node[\"default\"]);\nexports[\"default\"] = ID;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\nvar _util = require(\"../util\");\nvar _node = _interopRequireDefault(require(\"./node\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Namespace = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Namespace, _Node);\n  function Namespace() {\n    return _Node.apply(this, arguments) || this;\n  }\n  var _proto = Namespace.prototype;\n  _proto.qualifiedName = function qualifiedName(value) {\n    if (this.namespace) {\n      return this.namespaceString + \"|\" + value;\n    } else {\n      return value;\n    }\n  };\n  _proto.valueToString = function valueToString() {\n    return this.qualifiedName(_Node.prototype.valueToString.call(this));\n  };\n  _createClass(Namespace, [{\n    key: \"namespace\",\n    get: function get() {\n      return this._namespace;\n    },\n    set: function set(namespace) {\n      if (namespace === true || namespace === \"*\" || namespace === \"&\") {\n        this._namespace = namespace;\n        if (this.raws) {\n          delete this.raws.namespace;\n        }\n        return;\n      }\n      var escaped = (0, _cssesc[\"default\"])(namespace, {\n        isIdentifier: true\n      });\n      this._namespace = namespace;\n      if (escaped !== namespace) {\n        (0, _util.ensureObject)(this, \"raws\");\n        this.raws.namespace = escaped;\n      } else if (this.raws) {\n        delete this.raws.namespace;\n      }\n    }\n  }, {\n    key: \"ns\",\n    get: function get() {\n      return this._namespace;\n    },\n    set: function set(namespace) {\n      this.namespace = namespace;\n    }\n  }, {\n    key: \"namespaceString\",\n    get: function get() {\n      if (this.namespace) {\n        var ns = this.stringifyProperty(\"namespace\");\n        if (ns === true) {\n          return '';\n        } else {\n          return ns;\n        }\n      } else {\n        return '';\n      }\n    }\n  }]);\n  return Namespace;\n}(_node[\"default\"]);\nexports[\"default\"] = Namespace;\n;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Tag = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Tag, _Namespace);\n  function Tag(opts) {\n    var _this;\n    _this = _Namespace.call(this, opts) || this;\n    _this.type = _types.TAG;\n    return _this;\n  }\n  return Tag;\n}(_namespace[\"default\"]);\nexports[\"default\"] = Tag;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar String = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(String, _Node);\n  function String(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.STRING;\n    return _this;\n  }\n  return String;\n}(_node[\"default\"]);\nexports[\"default\"] = String;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _container = _interopRequireDefault(require(\"./container\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Pseudo = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Pseudo, _Container);\n  function Pseudo(opts) {\n    var _this;\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.PSEUDO;\n    return _this;\n  }\n  var _proto = Pseudo.prototype;\n  _proto.toString = function toString() {\n    var params = this.length ? '(' + this.map(String).join(',') + ')' : '';\n    return [this.rawSpaceBefore, this.stringifyProperty(\"value\"), params, this.rawSpaceAfter].join('');\n  };\n  return Pseudo;\n}(_container[\"default\"]);\nexports[\"default\"] = Pseudo;\nmodule.exports = exports.default;","\n/**\n * For Node.js, simply re-export the core `util.deprecate` function.\n */\n\nmodule.exports = require('util').deprecate;\n","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nexports.unescapeValue = unescapeValue;\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\nvar _unesc = _interopRequireDefault(require(\"../util/unesc\"));\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\nvar _types = require(\"./types\");\nvar _CSSESC_QUOTE_OPTIONS;\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar deprecate = require(\"util-deprecate\");\nvar WRAPPED_IN_QUOTES = /^('|\")([^]*)\\1$/;\nvar warnOfDeprecatedValueAssignment = deprecate(function () {}, \"Assigning an attribute a value containing characters that might need to be escaped is deprecated. \" + \"Call attribute.setValue() instead.\");\nvar warnOfDeprecatedQuotedAssignment = deprecate(function () {}, \"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\");\nvar warnOfDeprecatedConstructor = deprecate(function () {}, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\nfunction unescapeValue(value) {\n  var deprecatedUsage = false;\n  var quoteMark = null;\n  var unescaped = value;\n  var m = unescaped.match(WRAPPED_IN_QUOTES);\n  if (m) {\n    quoteMark = m[1];\n    unescaped = m[2];\n  }\n  unescaped = (0, _unesc[\"default\"])(unescaped);\n  if (unescaped !== value) {\n    deprecatedUsage = true;\n  }\n  return {\n    deprecatedUsage: deprecatedUsage,\n    unescaped: unescaped,\n    quoteMark: quoteMark\n  };\n}\nfunction handleDeprecatedContructorOpts(opts) {\n  if (opts.quoteMark !== undefined) {\n    return opts;\n  }\n  if (opts.value === undefined) {\n    return opts;\n  }\n  warnOfDeprecatedConstructor();\n  var _unescapeValue = unescapeValue(opts.value),\n    quoteMark = _unescapeValue.quoteMark,\n    unescaped = _unescapeValue.unescaped;\n  if (!opts.raws) {\n    opts.raws = {};\n  }\n  if (opts.raws.value === undefined) {\n    opts.raws.value = opts.value;\n  }\n  opts.value = unescaped;\n  opts.quoteMark = quoteMark;\n  return opts;\n}\nvar Attribute = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Attribute, _Namespace);\n  function Attribute(opts) {\n    var _this;\n    if (opts === void 0) {\n      opts = {};\n    }\n    _this = _Namespace.call(this, handleDeprecatedContructorOpts(opts)) || this;\n    _this.type = _types.ATTRIBUTE;\n    _this.raws = _this.raws || {};\n    Object.defineProperty(_this.raws, 'unquoted', {\n      get: deprecate(function () {\n        return _this.value;\n      }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\"),\n      set: deprecate(function () {\n        return _this.value;\n      }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")\n    });\n    _this._constructed = true;\n    return _this;\n  }\n\n  /**\n   * Returns the Attribute's value quoted such that it would be legal to use\n   * in the value of a css file. The original value's quotation setting\n   * used for stringification is left unchanged. See `setValue(value, options)`\n   * if you want to control the quote settings of a new value for the attribute.\n   *\n   * You can also change the quotation used for the current value by setting quoteMark.\n   *\n   * Options:\n   *   * quoteMark {'\"' | \"'\" | null} - Use this value to quote the value. If this\n   *     option is not set, the original value for quoteMark will be used. If\n   *     indeterminate, a double quote is used. The legal values are:\n   *     * `null` - the value will be unquoted and characters will be escaped as necessary.\n   *     * `'` - the value will be quoted with a single quote and single quotes are escaped.\n   *     * `\"` - the value will be quoted with a double quote and double quotes are escaped.\n   *   * preferCurrentQuoteMark {boolean} - if true, prefer the source quote mark\n   *     over the quoteMark option value.\n   *   * smart {boolean} - if true, will select a quote mark based on the value\n   *     and the other options specified here. See the `smartQuoteMark()`\n   *     method.\n   **/\n  var _proto = Attribute.prototype;\n  _proto.getQuotedValue = function getQuotedValue(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var quoteMark = this._determineQuoteMark(options);\n    var cssescopts = CSSESC_QUOTE_OPTIONS[quoteMark];\n    var escaped = (0, _cssesc[\"default\"])(this._value, cssescopts);\n    return escaped;\n  };\n  _proto._determineQuoteMark = function _determineQuoteMark(options) {\n    return options.smart ? this.smartQuoteMark(options) : this.preferredQuoteMark(options);\n  }\n\n  /**\n   * Set the unescaped value with the specified quotation options. The value\n   * provided must not include any wrapping quote marks -- those quotes will\n   * be interpreted as part of the value and escaped accordingly.\n   */;\n  _proto.setValue = function setValue(value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this._value = value;\n    this._quoteMark = this._determineQuoteMark(options);\n    this._syncRawValue();\n  }\n\n  /**\n   * Intelligently select a quoteMark value based on the value's contents. If\n   * the value is a legal CSS ident, it will not be quoted. Otherwise a quote\n   * mark will be picked that minimizes the number of escapes.\n   *\n   * If there's no clear winner, the quote mark from these options is used,\n   * then the source quote mark (this is inverted if `preferCurrentQuoteMark` is\n   * true). If the quoteMark is unspecified, a double quote is used.\n   *\n   * @param options This takes the quoteMark and preferCurrentQuoteMark options\n   * from the quoteValue method.\n   */;\n  _proto.smartQuoteMark = function smartQuoteMark(options) {\n    var v = this.value;\n    var numSingleQuotes = v.replace(/[^']/g, '').length;\n    var numDoubleQuotes = v.replace(/[^\"]/g, '').length;\n    if (numSingleQuotes + numDoubleQuotes === 0) {\n      var escaped = (0, _cssesc[\"default\"])(v, {\n        isIdentifier: true\n      });\n      if (escaped === v) {\n        return Attribute.NO_QUOTE;\n      } else {\n        var pref = this.preferredQuoteMark(options);\n        if (pref === Attribute.NO_QUOTE) {\n          // pick a quote mark that isn't none and see if it's smaller\n          var quote = this.quoteMark || options.quoteMark || Attribute.DOUBLE_QUOTE;\n          var opts = CSSESC_QUOTE_OPTIONS[quote];\n          var quoteValue = (0, _cssesc[\"default\"])(v, opts);\n          if (quoteValue.length < escaped.length) {\n            return quote;\n          }\n        }\n        return pref;\n      }\n    } else if (numDoubleQuotes === numSingleQuotes) {\n      return this.preferredQuoteMark(options);\n    } else if (numDoubleQuotes < numSingleQuotes) {\n      return Attribute.DOUBLE_QUOTE;\n    } else {\n      return Attribute.SINGLE_QUOTE;\n    }\n  }\n\n  /**\n   * Selects the preferred quote mark based on the options and the current quote mark value.\n   * If you want the quote mark to depend on the attribute value, call `smartQuoteMark(opts)`\n   * instead.\n   */;\n  _proto.preferredQuoteMark = function preferredQuoteMark(options) {\n    var quoteMark = options.preferCurrentQuoteMark ? this.quoteMark : options.quoteMark;\n    if (quoteMark === undefined) {\n      quoteMark = options.preferCurrentQuoteMark ? options.quoteMark : this.quoteMark;\n    }\n    if (quoteMark === undefined) {\n      quoteMark = Attribute.DOUBLE_QUOTE;\n    }\n    return quoteMark;\n  };\n  _proto._syncRawValue = function _syncRawValue() {\n    var rawValue = (0, _cssesc[\"default\"])(this._value, CSSESC_QUOTE_OPTIONS[this.quoteMark]);\n    if (rawValue === this._value) {\n      if (this.raws) {\n        delete this.raws.value;\n      }\n    } else {\n      this.raws.value = rawValue;\n    }\n  };\n  _proto._handleEscapes = function _handleEscapes(prop, value) {\n    if (this._constructed) {\n      var escaped = (0, _cssesc[\"default\"])(value, {\n        isIdentifier: true\n      });\n      if (escaped !== value) {\n        this.raws[prop] = escaped;\n      } else {\n        delete this.raws[prop];\n      }\n    }\n  };\n  _proto._spacesFor = function _spacesFor(name) {\n    var attrSpaces = {\n      before: '',\n      after: ''\n    };\n    var spaces = this.spaces[name] || {};\n    var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};\n    return Object.assign(attrSpaces, spaces, rawSpaces);\n  };\n  _proto._stringFor = function _stringFor(name, spaceName, concat) {\n    if (spaceName === void 0) {\n      spaceName = name;\n    }\n    if (concat === void 0) {\n      concat = defaultAttrConcat;\n    }\n    var attrSpaces = this._spacesFor(spaceName);\n    return concat(this.stringifyProperty(name), attrSpaces);\n  }\n\n  /**\n   * returns the offset of the attribute part specified relative to the\n   * start of the node of the output string.\n   *\n   * * \"ns\" - alias for \"namespace\"\n   * * \"namespace\" - the namespace if it exists.\n   * * \"attribute\" - the attribute name\n   * * \"attributeNS\" - the start of the attribute or its namespace\n   * * \"operator\" - the match operator of the attribute\n   * * \"value\" - The value (string or identifier)\n   * * \"insensitive\" - the case insensitivity flag;\n   * @param part One of the possible values inside an attribute.\n   * @returns -1 if the name is invalid or the value doesn't exist in this attribute.\n   */;\n  _proto.offsetOf = function offsetOf(name) {\n    var count = 1;\n    var attributeSpaces = this._spacesFor(\"attribute\");\n    count += attributeSpaces.before.length;\n    if (name === \"namespace\" || name === \"ns\") {\n      return this.namespace ? count : -1;\n    }\n    if (name === \"attributeNS\") {\n      return count;\n    }\n    count += this.namespaceString.length;\n    if (this.namespace) {\n      count += 1;\n    }\n    if (name === \"attribute\") {\n      return count;\n    }\n    count += this.stringifyProperty(\"attribute\").length;\n    count += attributeSpaces.after.length;\n    var operatorSpaces = this._spacesFor(\"operator\");\n    count += operatorSpaces.before.length;\n    var operator = this.stringifyProperty(\"operator\");\n    if (name === \"operator\") {\n      return operator ? count : -1;\n    }\n    count += operator.length;\n    count += operatorSpaces.after.length;\n    var valueSpaces = this._spacesFor(\"value\");\n    count += valueSpaces.before.length;\n    var value = this.stringifyProperty(\"value\");\n    if (name === \"value\") {\n      return value ? count : -1;\n    }\n    count += value.length;\n    count += valueSpaces.after.length;\n    var insensitiveSpaces = this._spacesFor(\"insensitive\");\n    count += insensitiveSpaces.before.length;\n    if (name === \"insensitive\") {\n      return this.insensitive ? count : -1;\n    }\n    return -1;\n  };\n  _proto.toString = function toString() {\n    var _this2 = this;\n    var selector = [this.rawSpaceBefore, '['];\n    selector.push(this._stringFor('qualifiedAttribute', 'attribute'));\n    if (this.operator && (this.value || this.value === '')) {\n      selector.push(this._stringFor('operator'));\n      selector.push(this._stringFor('value'));\n      selector.push(this._stringFor('insensitiveFlag', 'insensitive', function (attrValue, attrSpaces) {\n        if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {\n          attrSpaces.before = \" \";\n        }\n        return defaultAttrConcat(attrValue, attrSpaces);\n      }));\n    }\n    selector.push(']');\n    selector.push(this.rawSpaceAfter);\n    return selector.join('');\n  };\n  _createClass(Attribute, [{\n    key: \"quoted\",\n    get: function get() {\n      var qm = this.quoteMark;\n      return qm === \"'\" || qm === '\"';\n    },\n    set: function set(value) {\n      warnOfDeprecatedQuotedAssignment();\n    }\n\n    /**\n     * returns a single (`'`) or double (`\"`) quote character if the value is quoted.\n     * returns `null` if the value is not quoted.\n     * returns `undefined` if the quotation state is unknown (this can happen when\n     * the attribute is constructed without specifying a quote mark.)\n     */\n  }, {\n    key: \"quoteMark\",\n    get: function get() {\n      return this._quoteMark;\n    }\n\n    /**\n     * Set the quote mark to be used by this attribute's value.\n     * If the quote mark changes, the raw (escaped) value at `attr.raws.value` of the attribute\n     * value is updated accordingly.\n     *\n     * @param {\"'\" | '\"' | null} quoteMark The quote mark or `null` if the value should be unquoted.\n     */,\n    set: function set(quoteMark) {\n      if (!this._constructed) {\n        this._quoteMark = quoteMark;\n        return;\n      }\n      if (this._quoteMark !== quoteMark) {\n        this._quoteMark = quoteMark;\n        this._syncRawValue();\n      }\n    }\n  }, {\n    key: \"qualifiedAttribute\",\n    get: function get() {\n      return this.qualifiedName(this.raws.attribute || this.attribute);\n    }\n  }, {\n    key: \"insensitiveFlag\",\n    get: function get() {\n      return this.insensitive ? 'i' : '';\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set:\n    /**\n     * Before 3.0, the value had to be set to an escaped value including any wrapped\n     * quote marks. In 3.0, the semantics of `Attribute.value` changed so that the value\n     * is unescaped during parsing and any quote marks are removed.\n     *\n     * Because the ambiguity of this semantic change, if you set `attr.value = newValue`,\n     * a deprecation warning is raised when the new value contains any characters that would\n     * require escaping (including if it contains wrapped quotes).\n     *\n     * Instead, you should call `attr.setValue(newValue, opts)` and pass options that describe\n     * how the new value is quoted.\n     */\n    function set(v) {\n      if (this._constructed) {\n        var _unescapeValue2 = unescapeValue(v),\n          deprecatedUsage = _unescapeValue2.deprecatedUsage,\n          unescaped = _unescapeValue2.unescaped,\n          quoteMark = _unescapeValue2.quoteMark;\n        if (deprecatedUsage) {\n          warnOfDeprecatedValueAssignment();\n        }\n        if (unescaped === this._value && quoteMark === this._quoteMark) {\n          return;\n        }\n        this._value = unescaped;\n        this._quoteMark = quoteMark;\n        this._syncRawValue();\n      } else {\n        this._value = v;\n      }\n    }\n  }, {\n    key: \"insensitive\",\n    get: function get() {\n      return this._insensitive;\n    }\n\n    /**\n     * Set the case insensitive flag.\n     * If the case insensitive flag changes, the raw (escaped) value at `attr.raws.insensitiveFlag`\n     * of the attribute is updated accordingly.\n     *\n     * @param {true | false} insensitive true if the attribute should match case-insensitively.\n     */,\n    set: function set(insensitive) {\n      if (!insensitive) {\n        this._insensitive = false;\n\n        // \"i\" and \"I\" can be used in \"this.raws.insensitiveFlag\" to store the original notation.\n        // When setting `attr.insensitive = false` both should be erased to ensure correct serialization.\n        if (this.raws && (this.raws.insensitiveFlag === 'I' || this.raws.insensitiveFlag === 'i')) {\n          this.raws.insensitiveFlag = undefined;\n        }\n      }\n      this._insensitive = insensitive;\n    }\n  }, {\n    key: \"attribute\",\n    get: function get() {\n      return this._attribute;\n    },\n    set: function set(name) {\n      this._handleEscapes(\"attribute\", name);\n      this._attribute = name;\n    }\n  }]);\n  return Attribute;\n}(_namespace[\"default\"]);\nexports[\"default\"] = Attribute;\nAttribute.NO_QUOTE = null;\nAttribute.SINGLE_QUOTE = \"'\";\nAttribute.DOUBLE_QUOTE = '\"';\nvar CSSESC_QUOTE_OPTIONS = (_CSSESC_QUOTE_OPTIONS = {\n  \"'\": {\n    quotes: 'single',\n    wrap: true\n  },\n  '\"': {\n    quotes: 'double',\n    wrap: true\n  }\n}, _CSSESC_QUOTE_OPTIONS[null] = {\n  isIdentifier: true\n}, _CSSESC_QUOTE_OPTIONS);\nfunction defaultAttrConcat(attrValue, attrSpaces) {\n  return \"\" + attrSpaces.before + attrValue + attrSpaces.after;\n}","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Universal = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Universal, _Namespace);\n  function Universal(opts) {\n    var _this;\n    _this = _Namespace.call(this, opts) || this;\n    _this.type = _types.UNIVERSAL;\n    _this.value = '*';\n    return _this;\n  }\n  return Universal;\n}(_namespace[\"default\"]);\nexports[\"default\"] = Universal;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Combinator = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Combinator, _Node);\n  function Combinator(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.COMBINATOR;\n    return _this;\n  }\n  return Combinator;\n}(_node[\"default\"]);\nexports[\"default\"] = Combinator;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Nesting = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Nesting, _Node);\n  function Nesting(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.NESTING;\n    _this.value = '&';\n    return _this;\n  }\n  return Nesting;\n}(_node[\"default\"]);\nexports[\"default\"] = Nesting;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = sortAscending;\nfunction sortAscending(list) {\n  return list.sort(function (a, b) {\n    return a - b;\n  });\n}\n;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.word = exports.tilde = exports.tab = exports.str = exports.space = exports.slash = exports.singleQuote = exports.semicolon = exports.plus = exports.pipe = exports.openSquare = exports.openParenthesis = exports.newline = exports.greaterThan = exports.feed = exports.equals = exports.doubleQuote = exports.dollar = exports.cr = exports.comment = exports.comma = exports.combinator = exports.colon = exports.closeSquare = exports.closeParenthesis = exports.caret = exports.bang = exports.backslash = exports.at = exports.asterisk = exports.ampersand = void 0;\nvar ampersand = 38; // `&`.charCodeAt(0);\nexports.ampersand = ampersand;\nvar asterisk = 42; // `*`.charCodeAt(0);\nexports.asterisk = asterisk;\nvar at = 64; // `@`.charCodeAt(0);\nexports.at = at;\nvar comma = 44; // `,`.charCodeAt(0);\nexports.comma = comma;\nvar colon = 58; // `:`.charCodeAt(0);\nexports.colon = colon;\nvar semicolon = 59; // `;`.charCodeAt(0);\nexports.semicolon = semicolon;\nvar openParenthesis = 40; // `(`.charCodeAt(0);\nexports.openParenthesis = openParenthesis;\nvar closeParenthesis = 41; // `)`.charCodeAt(0);\nexports.closeParenthesis = closeParenthesis;\nvar openSquare = 91; // `[`.charCodeAt(0);\nexports.openSquare = openSquare;\nvar closeSquare = 93; // `]`.charCodeAt(0);\nexports.closeSquare = closeSquare;\nvar dollar = 36; // `$`.charCodeAt(0);\nexports.dollar = dollar;\nvar tilde = 126; // `~`.charCodeAt(0);\nexports.tilde = tilde;\nvar caret = 94; // `^`.charCodeAt(0);\nexports.caret = caret;\nvar plus = 43; // `+`.charCodeAt(0);\nexports.plus = plus;\nvar equals = 61; // `=`.charCodeAt(0);\nexports.equals = equals;\nvar pipe = 124; // `|`.charCodeAt(0);\nexports.pipe = pipe;\nvar greaterThan = 62; // `>`.charCodeAt(0);\nexports.greaterThan = greaterThan;\nvar space = 32; // ` `.charCodeAt(0);\nexports.space = space;\nvar singleQuote = 39; // `'`.charCodeAt(0);\nexports.singleQuote = singleQuote;\nvar doubleQuote = 34; // `\"`.charCodeAt(0);\nexports.doubleQuote = doubleQuote;\nvar slash = 47; // `/`.charCodeAt(0);\nexports.slash = slash;\nvar bang = 33; // `!`.charCodeAt(0);\nexports.bang = bang;\nvar backslash = 92; // '\\\\'.charCodeAt(0);\nexports.backslash = backslash;\nvar cr = 13; // '\\r'.charCodeAt(0);\nexports.cr = cr;\nvar feed = 12; // '\\f'.charCodeAt(0);\nexports.feed = feed;\nvar newline = 10; // '\\n'.charCodeAt(0);\nexports.newline = newline;\nvar tab = 9; // '\\t'.charCodeAt(0);\n\n// Expose aliases primarily for readability.\nexports.tab = tab;\nvar str = singleQuote;\n\n// No good single character representation!\nexports.str = str;\nvar comment = -1;\nexports.comment = comment;\nvar word = -2;\nexports.word = word;\nvar combinator = -3;\nexports.combinator = combinator;","\"use strict\";\n\nexports.__esModule = true;\nexports.FIELDS = void 0;\nexports[\"default\"] = tokenize;\nvar t = _interopRequireWildcard(require(\"./tokenTypes\"));\nvar _unescapable, _wordDelimiters;\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar unescapable = (_unescapable = {}, _unescapable[t.tab] = true, _unescapable[t.newline] = true, _unescapable[t.cr] = true, _unescapable[t.feed] = true, _unescapable);\nvar wordDelimiters = (_wordDelimiters = {}, _wordDelimiters[t.space] = true, _wordDelimiters[t.tab] = true, _wordDelimiters[t.newline] = true, _wordDelimiters[t.cr] = true, _wordDelimiters[t.feed] = true, _wordDelimiters[t.ampersand] = true, _wordDelimiters[t.asterisk] = true, _wordDelimiters[t.bang] = true, _wordDelimiters[t.comma] = true, _wordDelimiters[t.colon] = true, _wordDelimiters[t.semicolon] = true, _wordDelimiters[t.openParenthesis] = true, _wordDelimiters[t.closeParenthesis] = true, _wordDelimiters[t.openSquare] = true, _wordDelimiters[t.closeSquare] = true, _wordDelimiters[t.singleQuote] = true, _wordDelimiters[t.doubleQuote] = true, _wordDelimiters[t.plus] = true, _wordDelimiters[t.pipe] = true, _wordDelimiters[t.tilde] = true, _wordDelimiters[t.greaterThan] = true, _wordDelimiters[t.equals] = true, _wordDelimiters[t.dollar] = true, _wordDelimiters[t.caret] = true, _wordDelimiters[t.slash] = true, _wordDelimiters);\nvar hex = {};\nvar hexChars = \"0123456789abcdefABCDEF\";\nfor (var i = 0; i < hexChars.length; i++) {\n  hex[hexChars.charCodeAt(i)] = true;\n}\n\n/**\n *  Returns the last index of the bar css word\n * @param {string} css The string in which the word begins\n * @param {number} start The index into the string where word's first letter occurs\n */\nfunction consumeWord(css, start) {\n  var next = start;\n  var code;\n  do {\n    code = css.charCodeAt(next);\n    if (wordDelimiters[code]) {\n      return next - 1;\n    } else if (code === t.backslash) {\n      next = consumeEscape(css, next) + 1;\n    } else {\n      // All other characters are part of the word\n      next++;\n    }\n  } while (next < css.length);\n  return next - 1;\n}\n\n/**\n *  Returns the last index of the escape sequence\n * @param {string} css The string in which the sequence begins\n * @param {number} start The index into the string where escape character (`\\`) occurs.\n */\nfunction consumeEscape(css, start) {\n  var next = start;\n  var code = css.charCodeAt(next + 1);\n  if (unescapable[code]) {\n    // just consume the escape char\n  } else if (hex[code]) {\n    var hexDigits = 0;\n    // consume up to 6 hex chars\n    do {\n      next++;\n      hexDigits++;\n      code = css.charCodeAt(next + 1);\n    } while (hex[code] && hexDigits < 6);\n    // if fewer than 6 hex chars, a trailing space ends the escape\n    if (hexDigits < 6 && code === t.space) {\n      next++;\n    }\n  } else {\n    // the next char is part of the current word\n    next++;\n  }\n  return next;\n}\nvar FIELDS = {\n  TYPE: 0,\n  START_LINE: 1,\n  START_COL: 2,\n  END_LINE: 3,\n  END_COL: 4,\n  START_POS: 5,\n  END_POS: 6\n};\nexports.FIELDS = FIELDS;\nfunction tokenize(input) {\n  var tokens = [];\n  var css = input.css.valueOf();\n  var _css = css,\n    length = _css.length;\n  var offset = -1;\n  var line = 1;\n  var start = 0;\n  var end = 0;\n  var code, content, endColumn, endLine, escaped, escapePos, last, lines, next, nextLine, nextOffset, quote, tokenType;\n  function unclosed(what, fix) {\n    if (input.safe) {\n      // fyi: this is never set to true.\n      css += fix;\n      next = css.length - 1;\n    } else {\n      throw input.error('Unclosed ' + what, line, start - offset, start);\n    }\n  }\n  while (start < length) {\n    code = css.charCodeAt(start);\n    if (code === t.newline) {\n      offset = start;\n      line += 1;\n    }\n    switch (code) {\n      case t.space:\n      case t.tab:\n      case t.newline:\n      case t.cr:\n      case t.feed:\n        next = start;\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n          if (code === t.newline) {\n            offset = next;\n            line += 1;\n          }\n        } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);\n        tokenType = t.space;\n        endLine = line;\n        endColumn = next - offset - 1;\n        end = next;\n        break;\n      case t.plus:\n      case t.greaterThan:\n      case t.tilde:\n      case t.pipe:\n        next = start;\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n        } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);\n        tokenType = t.combinator;\n        endLine = line;\n        endColumn = start - offset;\n        end = next;\n        break;\n\n      // Consume these characters as single tokens.\n      case t.asterisk:\n      case t.ampersand:\n      case t.bang:\n      case t.comma:\n      case t.equals:\n      case t.dollar:\n      case t.caret:\n      case t.openSquare:\n      case t.closeSquare:\n      case t.colon:\n      case t.semicolon:\n      case t.openParenthesis:\n      case t.closeParenthesis:\n        next = start;\n        tokenType = code;\n        endLine = line;\n        endColumn = start - offset;\n        end = next + 1;\n        break;\n      case t.singleQuote:\n      case t.doubleQuote:\n        quote = code === t.singleQuote ? \"'\" : '\"';\n        next = start;\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n          if (next === -1) {\n            unclosed('quote', quote);\n          }\n          escapePos = next;\n          while (css.charCodeAt(escapePos - 1) === t.backslash) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped);\n        tokenType = t.str;\n        endLine = line;\n        endColumn = start - offset;\n        end = next + 1;\n        break;\n      default:\n        if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {\n          next = css.indexOf('*/', start + 2) + 1;\n          if (next === 0) {\n            unclosed('comment', '*/');\n          }\n          content = css.slice(start, next + 1);\n          lines = content.split('\\n');\n          last = lines.length - 1;\n          if (last > 0) {\n            nextLine = line + last;\n            nextOffset = next - lines[last].length;\n          } else {\n            nextLine = line;\n            nextOffset = offset;\n          }\n          tokenType = t.comment;\n          line = nextLine;\n          endLine = nextLine;\n          endColumn = next - nextOffset;\n        } else if (code === t.slash) {\n          next = start;\n          tokenType = code;\n          endLine = line;\n          endColumn = start - offset;\n          end = next + 1;\n        } else {\n          next = consumeWord(css, start);\n          tokenType = t.word;\n          endLine = line;\n          endColumn = next - offset;\n        }\n        end = next + 1;\n        break;\n    }\n\n    // Ensure that the token structure remains consistent\n    tokens.push([tokenType,\n    // [0] Token type\n    line,\n    // [1] Starting line\n    start - offset,\n    // [2] Starting column\n    endLine,\n    // [3] Ending line\n    endColumn,\n    // [4] Ending column\n    start,\n    // [5] Start position / Source index\n    end // [6] End position\n    ]);\n\n    // Reset offset for the next token\n    if (nextOffset) {\n      offset = nextOffset;\n      nextOffset = null;\n    }\n    start = end;\n  }\n  return tokens;\n}","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _root = _interopRequireDefault(require(\"./selectors/root\"));\nvar _selector = _interopRequireDefault(require(\"./selectors/selector\"));\nvar _className = _interopRequireDefault(require(\"./selectors/className\"));\nvar _comment = _interopRequireDefault(require(\"./selectors/comment\"));\nvar _id = _interopRequireDefault(require(\"./selectors/id\"));\nvar _tag = _interopRequireDefault(require(\"./selectors/tag\"));\nvar _string = _interopRequireDefault(require(\"./selectors/string\"));\nvar _pseudo = _interopRequireDefault(require(\"./selectors/pseudo\"));\nvar _attribute = _interopRequireWildcard(require(\"./selectors/attribute\"));\nvar _universal = _interopRequireDefault(require(\"./selectors/universal\"));\nvar _combinator = _interopRequireDefault(require(\"./selectors/combinator\"));\nvar _nesting = _interopRequireDefault(require(\"./selectors/nesting\"));\nvar _sortAscending = _interopRequireDefault(require(\"./sortAscending\"));\nvar _tokenize = _interopRequireWildcard(require(\"./tokenize\"));\nvar tokens = _interopRequireWildcard(require(\"./tokenTypes\"));\nvar types = _interopRequireWildcard(require(\"./selectors/types\"));\nvar _util = require(\"./util\");\nvar _WHITESPACE_TOKENS, _Object$assign;\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nvar WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);\nvar WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));\nfunction tokenStart(token) {\n  return {\n    line: token[_tokenize.FIELDS.START_LINE],\n    column: token[_tokenize.FIELDS.START_COL]\n  };\n}\nfunction tokenEnd(token) {\n  return {\n    line: token[_tokenize.FIELDS.END_LINE],\n    column: token[_tokenize.FIELDS.END_COL]\n  };\n}\nfunction getSource(startLine, startColumn, endLine, endColumn) {\n  return {\n    start: {\n      line: startLine,\n      column: startColumn\n    },\n    end: {\n      line: endLine,\n      column: endColumn\n    }\n  };\n}\nfunction getTokenSource(token) {\n  return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);\n}\nfunction getTokenSourceSpan(startToken, endToken) {\n  if (!startToken) {\n    return undefined;\n  }\n  return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);\n}\nfunction unescapeProp(node, prop) {\n  var value = node[prop];\n  if (typeof value !== \"string\") {\n    return;\n  }\n  if (value.indexOf(\"\\\\\") !== -1) {\n    (0, _util.ensureObject)(node, 'raws');\n    node[prop] = (0, _util.unesc)(value);\n    if (node.raws[prop] === undefined) {\n      node.raws[prop] = value;\n    }\n  }\n  return node;\n}\nfunction indexesOf(array, item) {\n  var i = -1;\n  var indexes = [];\n  while ((i = array.indexOf(item, i + 1)) !== -1) {\n    indexes.push(i);\n  }\n  return indexes;\n}\nfunction uniqs() {\n  var list = Array.prototype.concat.apply([], arguments);\n  return list.filter(function (item, i) {\n    return i === list.indexOf(item);\n  });\n}\nvar Parser = /*#__PURE__*/function () {\n  function Parser(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.rule = rule;\n    this.options = Object.assign({\n      lossy: false,\n      safe: false\n    }, options);\n    this.position = 0;\n    this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;\n    this.tokens = (0, _tokenize[\"default\"])({\n      css: this.css,\n      error: this._errorGenerator(),\n      safe: this.options.safe\n    });\n    var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);\n    this.root = new _root[\"default\"]({\n      source: rootSource\n    });\n    this.root.errorGenerator = this._errorGenerator();\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: {\n          line: 1,\n          column: 1\n        }\n      }\n    });\n    this.root.append(selector);\n    this.current = selector;\n    this.loop();\n  }\n  var _proto = Parser.prototype;\n  _proto._errorGenerator = function _errorGenerator() {\n    var _this = this;\n    return function (message, errorOptions) {\n      if (typeof _this.rule === 'string') {\n        return new Error(message);\n      }\n      return _this.rule.error(message, errorOptions);\n    };\n  };\n  _proto.attribute = function attribute() {\n    var attr = [];\n    var startingToken = this.currToken;\n    this.position++;\n    while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      attr.push(this.currToken);\n      this.position++;\n    }\n    if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      return this.expected('closing square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n    var len = attr.length;\n    var node = {\n      source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),\n      sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n    };\n    if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {\n      return this.expected('attribute', attr[0][_tokenize.FIELDS.START_POS]);\n    }\n    var pos = 0;\n    var spaceBefore = '';\n    var commentBefore = '';\n    var lastAdded = null;\n    var spaceAfterMeaningfulToken = false;\n    while (pos < len) {\n      var token = attr[pos];\n      var content = this.content(token);\n      var next = attr[pos + 1];\n      switch (token[_tokenize.FIELDS.TYPE]) {\n        case tokens.space:\n          // if (\n          //     len === 1 ||\n          //     pos === 0 && this.content(next) === '|'\n          // ) {\n          //     return this.expected('attribute', token[TOKEN.START_POS], content);\n          // }\n          spaceAfterMeaningfulToken = true;\n          if (this.options.lossy) {\n            break;\n          }\n          if (lastAdded) {\n            (0, _util.ensureObject)(node, 'spaces', lastAdded);\n            var prevContent = node.spaces[lastAdded].after || '';\n            node.spaces[lastAdded].after = prevContent + content;\n            var existingComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || null;\n            if (existingComment) {\n              node.raws.spaces[lastAdded].after = existingComment + content;\n            }\n          } else {\n            spaceBefore = spaceBefore + content;\n            commentBefore = commentBefore + content;\n          }\n          break;\n        case tokens.asterisk:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if ((!node.namespace || lastAdded === \"namespace\" && !spaceAfterMeaningfulToken) && next) {\n            if (spaceBefore) {\n              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n            if (commentBefore) {\n              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = spaceBefore;\n              commentBefore = '';\n            }\n            node.namespace = (node.namespace || \"\") + content;\n            var rawValue = (0, _util.getProp)(node, 'raws', 'namespace') || null;\n            if (rawValue) {\n              node.raws.namespace += content;\n            }\n            lastAdded = 'namespace';\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.dollar:\n          if (lastAdded === \"value\") {\n            var oldRawValue = (0, _util.getProp)(node, 'raws', 'value');\n            node.value += \"$\";\n            if (oldRawValue) {\n              node.raws.value = oldRawValue + \"$\";\n            }\n            break;\n          }\n        // Falls through\n        case tokens.caret:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.combinator:\n          if (content === '~' && next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n          if (content !== '|') {\n            spaceAfterMeaningfulToken = false;\n            break;\n          }\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if (!node.namespace && !node.attribute) {\n            node.namespace = true;\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.word:\n          if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals &&\n          // this look-ahead probably fails with comment nodes involved.\n          !node.operator && !node.namespace) {\n            node.namespace = content;\n            lastAdded = 'namespace';\n          } else if (!node.attribute || lastAdded === \"attribute\" && !spaceAfterMeaningfulToken) {\n            if (spaceBefore) {\n              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n            if (commentBefore) {\n              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = commentBefore;\n              commentBefore = '';\n            }\n            node.attribute = (node.attribute || \"\") + content;\n            var _rawValue = (0, _util.getProp)(node, 'raws', 'attribute') || null;\n            if (_rawValue) {\n              node.raws.attribute += content;\n            }\n            lastAdded = 'attribute';\n          } else if (!node.value && node.value !== \"\" || lastAdded === \"value\" && !(spaceAfterMeaningfulToken || node.quoteMark)) {\n            var _unescaped = (0, _util.unesc)(content);\n            var _oldRawValue = (0, _util.getProp)(node, 'raws', 'value') || '';\n            var oldValue = node.value || '';\n            node.value = oldValue + _unescaped;\n            node.quoteMark = null;\n            if (_unescaped !== content || _oldRawValue) {\n              (0, _util.ensureObject)(node, 'raws');\n              node.raws.value = (_oldRawValue || oldValue) + content;\n            }\n            lastAdded = 'value';\n          } else {\n            var insensitive = content === 'i' || content === \"I\";\n            if ((node.value || node.value === '') && (node.quoteMark || spaceAfterMeaningfulToken)) {\n              node.insensitive = insensitive;\n              if (!insensitive || content === \"I\") {\n                (0, _util.ensureObject)(node, 'raws');\n                node.raws.insensitiveFlag = content;\n              }\n              lastAdded = 'insensitive';\n              if (spaceBefore) {\n                (0, _util.ensureObject)(node, 'spaces', 'insensitive');\n                node.spaces.insensitive.before = spaceBefore;\n                spaceBefore = '';\n              }\n              if (commentBefore) {\n                (0, _util.ensureObject)(node, 'raws', 'spaces', 'insensitive');\n                node.raws.spaces.insensitive.before = commentBefore;\n                commentBefore = '';\n              }\n            } else if (node.value || node.value === '') {\n              lastAdded = 'value';\n              node.value += content;\n              if (node.raws.value) {\n                node.raws.value += content;\n              }\n            }\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.str:\n          if (!node.attribute || !node.operator) {\n            return this.error(\"Expected an attribute followed by an operator preceding the string.\", {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n          var _unescapeValue = (0, _attribute.unescapeValue)(content),\n            unescaped = _unescapeValue.unescaped,\n            quoteMark = _unescapeValue.quoteMark;\n          node.value = unescaped;\n          node.quoteMark = quoteMark;\n          lastAdded = 'value';\n          (0, _util.ensureObject)(node, 'raws');\n          node.raws.value = content;\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.equals:\n          if (!node.attribute) {\n            return this.expected('attribute', token[_tokenize.FIELDS.START_POS], content);\n          }\n          if (node.value) {\n            return this.error('Unexpected \"=\" found; an operator was already defined.', {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n          node.operator = node.operator ? node.operator + content : content;\n          lastAdded = 'operator';\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.comment:\n          if (lastAdded) {\n            if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === 'insensitive') {\n              var lastComment = (0, _util.getProp)(node, 'spaces', lastAdded, 'after') || '';\n              var rawLastComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || lastComment;\n              (0, _util.ensureObject)(node, 'raws', 'spaces', lastAdded);\n              node.raws.spaces[lastAdded].after = rawLastComment + content;\n            } else {\n              var lastValue = node[lastAdded] || '';\n              var rawLastValue = (0, _util.getProp)(node, 'raws', lastAdded) || lastValue;\n              (0, _util.ensureObject)(node, 'raws');\n              node.raws[lastAdded] = rawLastValue + content;\n            }\n          } else {\n            commentBefore = commentBefore + content;\n          }\n          break;\n        default:\n          return this.error(\"Unexpected \\\"\" + content + \"\\\" found.\", {\n            index: token[_tokenize.FIELDS.START_POS]\n          });\n      }\n      pos++;\n    }\n    unescapeProp(node, \"attribute\");\n    unescapeProp(node, \"namespace\");\n    this.newNode(new _attribute[\"default\"](node));\n    this.position++;\n  }\n\n  /**\n   * return a node containing meaningless garbage up to (but not including) the specified token position.\n   * if the token position is negative, all remaining tokens are consumed.\n   *\n   * This returns an array containing a single string node if all whitespace,\n   * otherwise an array of comment nodes with space before and after.\n   *\n   * These tokens are not added to the current selector, the caller can add them or use them to amend\n   * a previous node's space metadata.\n   *\n   * In lossy mode, this returns only comments.\n   */;\n  _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {\n    if (stopPosition < 0) {\n      stopPosition = this.tokens.length;\n    }\n    var startPosition = this.position;\n    var nodes = [];\n    var space = \"\";\n    var lastComment = undefined;\n    do {\n      if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\n        if (!this.options.lossy) {\n          space += this.content();\n        }\n      } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {\n        var spaces = {};\n        if (space) {\n          spaces.before = space;\n          space = \"\";\n        }\n        lastComment = new _comment[\"default\"]({\n          value: this.content(),\n          source: getTokenSource(this.currToken),\n          sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n          spaces: spaces\n        });\n        nodes.push(lastComment);\n      }\n    } while (++this.position < stopPosition);\n    if (space) {\n      if (lastComment) {\n        lastComment.spaces.after = space;\n      } else if (!this.options.lossy) {\n        var firstToken = this.tokens[startPosition];\n        var lastToken = this.tokens[this.position - 1];\n        nodes.push(new _string[\"default\"]({\n          value: '',\n          source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),\n          sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n          spaces: {\n            before: space,\n            after: ''\n          }\n        }));\n      }\n    }\n    return nodes;\n  }\n\n  /**\n   *\n   * @param {*} nodes\n   */;\n  _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {\n    var _this2 = this;\n    if (requiredSpace === void 0) {\n      requiredSpace = false;\n    }\n    var space = \"\";\n    var rawSpace = \"\";\n    nodes.forEach(function (n) {\n      var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);\n      var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);\n      space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);\n      rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);\n    });\n    if (rawSpace === space) {\n      rawSpace = undefined;\n    }\n    var result = {\n      space: space,\n      rawSpace: rawSpace\n    };\n    return result;\n  };\n  _proto.isNamedCombinator = function isNamedCombinator(position) {\n    if (position === void 0) {\n      position = this.position;\n    }\n    return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;\n  };\n  _proto.namedCombinator = function namedCombinator() {\n    if (this.isNamedCombinator()) {\n      var nameRaw = this.content(this.tokens[this.position + 1]);\n      var name = (0, _util.unesc)(nameRaw).toLowerCase();\n      var raws = {};\n      if (name !== nameRaw) {\n        raws.value = \"/\" + nameRaw + \"/\";\n      }\n      var node = new _combinator[\"default\"]({\n        value: \"/\" + name + \"/\",\n        source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n        raws: raws\n      });\n      this.position = this.position + 3;\n      return node;\n    } else {\n      this.unexpected();\n    }\n  };\n  _proto.combinator = function combinator() {\n    var _this3 = this;\n    if (this.content() === '|') {\n      return this.namespace();\n    }\n    // We need to decide between a space that's a descendant combinator and meaningless whitespace at the end of a selector.\n    var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);\n    if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {\n      var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n      if (nodes.length > 0) {\n        var last = this.current.last;\n        if (last) {\n          var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes),\n            space = _this$convertWhitespa.space,\n            rawSpace = _this$convertWhitespa.rawSpace;\n          if (rawSpace !== undefined) {\n            last.rawSpaceAfter += rawSpace;\n          }\n          last.spaces.after += space;\n        } else {\n          nodes.forEach(function (n) {\n            return _this3.newNode(n);\n          });\n        }\n      }\n      return;\n    }\n    var firstToken = this.currToken;\n    var spaceOrDescendantSelectorNodes = undefined;\n    if (nextSigTokenPos > this.position) {\n      spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n    }\n    var node;\n    if (this.isNamedCombinator()) {\n      node = this.namedCombinator();\n    } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {\n      node = new _combinator[\"default\"]({\n        value: this.content(),\n        source: getTokenSource(this.currToken),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]\n      });\n      this.position++;\n    } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\n      // pass\n    } else if (!spaceOrDescendantSelectorNodes) {\n      this.unexpected();\n    }\n    if (node) {\n      if (spaceOrDescendantSelectorNodes) {\n        var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),\n          _space = _this$convertWhitespa2.space,\n          _rawSpace = _this$convertWhitespa2.rawSpace;\n        node.spaces.before = _space;\n        node.rawSpaceBefore = _rawSpace;\n      }\n    } else {\n      // descendant combinator\n      var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true),\n        _space2 = _this$convertWhitespa3.space,\n        _rawSpace2 = _this$convertWhitespa3.rawSpace;\n      if (!_rawSpace2) {\n        _rawSpace2 = _space2;\n      }\n      var spaces = {};\n      var raws = {\n        spaces: {}\n      };\n      if (_space2.endsWith(' ') && _rawSpace2.endsWith(' ')) {\n        spaces.before = _space2.slice(0, _space2.length - 1);\n        raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);\n      } else if (_space2.startsWith(' ') && _rawSpace2.startsWith(' ')) {\n        spaces.after = _space2.slice(1);\n        raws.spaces.after = _rawSpace2.slice(1);\n      } else {\n        raws.value = _rawSpace2;\n      }\n      node = new _combinator[\"default\"]({\n        value: ' ',\n        source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),\n        sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n        spaces: spaces,\n        raws: raws\n      });\n    }\n    if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {\n      node.spaces.after = this.optionalSpace(this.content());\n      this.position++;\n    }\n    return this.newNode(node);\n  };\n  _proto.comma = function comma() {\n    if (this.position === this.tokens.length - 1) {\n      this.root.trailingComma = true;\n      this.position++;\n      return;\n    }\n    this.current._inferEndPosition();\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: tokenStart(this.tokens[this.position + 1])\n      }\n    });\n    this.current.parent.append(selector);\n    this.current = selector;\n    this.position++;\n  };\n  _proto.comment = function comment() {\n    var current = this.currToken;\n    this.newNode(new _comment[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.error = function error(message, opts) {\n    throw this.root.error(message, opts);\n  };\n  _proto.missingBackslash = function missingBackslash() {\n    return this.error('Expected a backslash preceding the semicolon.', {\n      index: this.currToken[_tokenize.FIELDS.START_POS]\n    });\n  };\n  _proto.missingParenthesis = function missingParenthesis() {\n    return this.expected('opening parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.missingSquareBracket = function missingSquareBracket() {\n    return this.expected('opening square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.unexpected = function unexpected() {\n    return this.error(\"Unexpected '\" + this.content() + \"'. Escaping special characters with \\\\ may help.\", this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.unexpectedPipe = function unexpectedPipe() {\n    return this.error(\"Unexpected '|'.\", this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.namespace = function namespace() {\n    var before = this.prevToken && this.content(this.prevToken) || true;\n    if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.position++;\n      return this.word(before);\n    } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {\n      this.position++;\n      return this.universal(before);\n    }\n    this.unexpectedPipe();\n  };\n  _proto.nesting = function nesting() {\n    if (this.nextToken) {\n      var nextContent = this.content(this.nextToken);\n      if (nextContent === \"|\") {\n        this.position++;\n        return;\n      }\n    }\n    var current = this.currToken;\n    this.newNode(new _nesting[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.parentheses = function parentheses() {\n    var last = this.current.last;\n    var unbalanced = 1;\n    this.position++;\n    if (last && last.type === types.PSEUDO) {\n      var selector = new _selector[\"default\"]({\n        source: {\n          start: tokenStart(this.tokens[this.position - 1])\n        }\n      });\n      var cache = this.current;\n      last.append(selector);\n      this.current = selector;\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n        if (unbalanced) {\n          this.parse();\n        } else {\n          this.current.source.end = tokenEnd(this.currToken);\n          this.current.parent.source.end = tokenEnd(this.currToken);\n          this.position++;\n        }\n      }\n      this.current = cache;\n    } else {\n      // I think this case should be an error. It's used to implement a basic parse of media queries\n      // but I don't think it's a good idea.\n      var parenStart = this.currToken;\n      var parenValue = \"(\";\n      var parenEnd;\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n        parenEnd = this.currToken;\n        parenValue += this.parseParenthesisToken(this.currToken);\n        this.position++;\n      }\n      if (last) {\n        last.appendToPropertyAndEscape(\"value\", parenValue, parenValue);\n      } else {\n        this.newNode(new _string[\"default\"]({\n          value: parenValue,\n          source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),\n          sourceIndex: parenStart[_tokenize.FIELDS.START_POS]\n        }));\n      }\n    }\n    if (unbalanced) {\n      return this.expected('closing parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n  _proto.pseudo = function pseudo() {\n    var _this4 = this;\n    var pseudoStr = '';\n    var startingToken = this.currToken;\n    while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {\n      pseudoStr += this.content();\n      this.position++;\n    }\n    if (!this.currToken) {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);\n    }\n    if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.splitWord(false, function (first, length) {\n        pseudoStr += first;\n        _this4.newNode(new _pseudo[\"default\"]({\n          value: pseudoStr,\n          source: getTokenSourceSpan(startingToken, _this4.currToken),\n          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n        }));\n        if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          _this4.error('Misplaced parenthesis.', {\n            index: _this4.nextToken[_tokenize.FIELDS.START_POS]\n          });\n        }\n      });\n    } else {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n  _proto.space = function space() {\n    var content = this.content();\n    // Handle space before and after the selector\n    if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function (node) {\n      return node.type === 'comment';\n    })) {\n      this.spaces = this.optionalSpace(content);\n      this.position++;\n    } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n      this.current.last.spaces.after = this.optionalSpace(content);\n      this.position++;\n    } else {\n      this.combinator();\n    }\n  };\n  _proto.string = function string() {\n    var current = this.currToken;\n    this.newNode(new _string[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.universal = function universal(namespace) {\n    var nextToken = this.nextToken;\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n    var current = this.currToken;\n    this.newNode(new _universal[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }), namespace);\n    this.position++;\n  };\n  _proto.splitWord = function splitWord(namespace, firstCallback) {\n    var _this5 = this;\n    var nextToken = this.nextToken;\n    var word = this.content();\n    while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {\n      this.position++;\n      var current = this.content();\n      word += current;\n      if (current.lastIndexOf('\\\\') === current.length - 1) {\n        var next = this.nextToken;\n        if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {\n          word += this.requiredSpace(this.content(next));\n          this.position++;\n        }\n      }\n      nextToken = this.nextToken;\n    }\n    var hasClass = indexesOf(word, '.').filter(function (i) {\n      // Allow escaped dot within class name\n      var escapedDot = word[i - 1] === '\\\\';\n      // Allow decimal numbers percent in @keyframes\n      var isKeyframesPercent = /^\\d+\\.\\d+%$/.test(word);\n      return !escapedDot && !isKeyframesPercent;\n    });\n    var hasId = indexesOf(word, '#').filter(function (i) {\n      return word[i - 1] !== '\\\\';\n    });\n    // Eliminate Sass interpolations from the list of id indexes\n    var interpolations = indexesOf(word, '#{');\n    if (interpolations.length) {\n      hasId = hasId.filter(function (hashIndex) {\n        return !~interpolations.indexOf(hashIndex);\n      });\n    }\n    var indices = (0, _sortAscending[\"default\"])(uniqs([0].concat(hasClass, hasId)));\n    indices.forEach(function (ind, i) {\n      var index = indices[i + 1] || word.length;\n      var value = word.slice(ind, index);\n      if (i === 0 && firstCallback) {\n        return firstCallback.call(_this5, value, indices.length);\n      }\n      var node;\n      var current = _this5.currToken;\n      var sourceIndex = current[_tokenize.FIELDS.START_POS] + indices[i];\n      var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));\n      if (~hasClass.indexOf(ind)) {\n        var classNameOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _className[\"default\"](unescapeProp(classNameOpts, \"value\"));\n      } else if (~hasId.indexOf(ind)) {\n        var idOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _id[\"default\"](unescapeProp(idOpts, \"value\"));\n      } else {\n        var tagOpts = {\n          value: value,\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        unescapeProp(tagOpts, \"value\");\n        node = new _tag[\"default\"](tagOpts);\n      }\n      _this5.newNode(node, namespace);\n      // Ensure that the namespace is used only once\n      namespace = null;\n    });\n    this.position++;\n  };\n  _proto.word = function word(namespace) {\n    var nextToken = this.nextToken;\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n    return this.splitWord(namespace);\n  };\n  _proto.loop = function loop() {\n    while (this.position < this.tokens.length) {\n      this.parse(true);\n    }\n    this.current._inferEndPosition();\n    return this.root;\n  };\n  _proto.parse = function parse(throwOnParenthesis) {\n    switch (this.currToken[_tokenize.FIELDS.TYPE]) {\n      case tokens.space:\n        this.space();\n        break;\n      case tokens.comment:\n        this.comment();\n        break;\n      case tokens.openParenthesis:\n        this.parentheses();\n        break;\n      case tokens.closeParenthesis:\n        if (throwOnParenthesis) {\n          this.missingParenthesis();\n        }\n        break;\n      case tokens.openSquare:\n        this.attribute();\n        break;\n      case tokens.dollar:\n      case tokens.caret:\n      case tokens.equals:\n      case tokens.word:\n        this.word();\n        break;\n      case tokens.colon:\n        this.pseudo();\n        break;\n      case tokens.comma:\n        this.comma();\n        break;\n      case tokens.asterisk:\n        this.universal();\n        break;\n      case tokens.ampersand:\n        this.nesting();\n        break;\n      case tokens.slash:\n      case tokens.combinator:\n        this.combinator();\n        break;\n      case tokens.str:\n        this.string();\n        break;\n      // These cases throw; no break needed.\n      case tokens.closeSquare:\n        this.missingSquareBracket();\n      case tokens.semicolon:\n        this.missingBackslash();\n      default:\n        this.unexpected();\n    }\n  }\n\n  /**\n   * Helpers\n   */;\n  _proto.expected = function expected(description, index, found) {\n    if (Array.isArray(description)) {\n      var last = description.pop();\n      description = description.join(', ') + \" or \" + last;\n    }\n    var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';\n    if (!found) {\n      return this.error(\"Expected \" + an + \" \" + description + \".\", {\n        index: index\n      });\n    }\n    return this.error(\"Expected \" + an + \" \" + description + \", found \\\"\" + found + \"\\\" instead.\", {\n      index: index\n    });\n  };\n  _proto.requiredSpace = function requiredSpace(space) {\n    return this.options.lossy ? ' ' : space;\n  };\n  _proto.optionalSpace = function optionalSpace(space) {\n    return this.options.lossy ? '' : space;\n  };\n  _proto.lossySpace = function lossySpace(space, required) {\n    if (this.options.lossy) {\n      return required ? ' ' : '';\n    } else {\n      return space;\n    }\n  };\n  _proto.parseParenthesisToken = function parseParenthesisToken(token) {\n    var content = this.content(token);\n    if (token[_tokenize.FIELDS.TYPE] === tokens.space) {\n      return this.requiredSpace(content);\n    } else {\n      return content;\n    }\n  };\n  _proto.newNode = function newNode(node, namespace) {\n    if (namespace) {\n      if (/^ +$/.test(namespace)) {\n        if (!this.options.lossy) {\n          this.spaces = (this.spaces || '') + namespace;\n        }\n        namespace = true;\n      }\n      node.namespace = namespace;\n      unescapeProp(node, \"namespace\");\n    }\n    if (this.spaces) {\n      node.spaces.before = this.spaces;\n      this.spaces = '';\n    }\n    return this.current.append(node);\n  };\n  _proto.content = function content(token) {\n    if (token === void 0) {\n      token = this.currToken;\n    }\n    return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);\n  };\n  /**\n   * returns the index of the next non-whitespace, non-comment token.\n   * returns -1 if no meaningful token is found.\n   */\n  _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {\n    if (startPosition === void 0) {\n      startPosition = this.position + 1;\n    }\n    var searchPosition = startPosition;\n    while (searchPosition < this.tokens.length) {\n      if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {\n        searchPosition++;\n        continue;\n      } else {\n        return searchPosition;\n      }\n    }\n    return -1;\n  };\n  _createClass(Parser, [{\n    key: \"currToken\",\n    get: function get() {\n      return this.tokens[this.position];\n    }\n  }, {\n    key: \"nextToken\",\n    get: function get() {\n      return this.tokens[this.position + 1];\n    }\n  }, {\n    key: \"prevToken\",\n    get: function get() {\n      return this.tokens[this.position - 1];\n    }\n  }]);\n  return Parser;\n}();\nexports[\"default\"] = Parser;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _parser = _interopRequireDefault(require(\"./parser\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Processor = /*#__PURE__*/function () {\n  function Processor(func, options) {\n    this.func = func || function noop() {};\n    this.funcRes = null;\n    this.options = options;\n  }\n  var _proto = Processor.prototype;\n  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var merged = Object.assign({}, this.options, options);\n    if (merged.updateSelector === false) {\n      return false;\n    } else {\n      return typeof rule !== \"string\";\n    }\n  };\n  _proto._isLossy = function _isLossy(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var merged = Object.assign({}, this.options, options);\n    if (merged.lossless === false) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  _proto._root = function _root(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\n    return parser.root;\n  };\n  _proto._parseOptions = function _parseOptions(options) {\n    return {\n      lossy: this._isLossy(options)\n    };\n  };\n  _proto._run = function _run(rule, options) {\n    var _this = this;\n    if (options === void 0) {\n      options = {};\n    }\n    return new Promise(function (resolve, reject) {\n      try {\n        var root = _this._root(rule, options);\n        Promise.resolve(_this.func(root)).then(function (transform) {\n          var string = undefined;\n          if (_this._shouldUpdateSelector(rule, options)) {\n            string = root.toString();\n            rule.selector = string;\n          }\n          return {\n            transform: transform,\n            root: root,\n            string: string\n          };\n        }).then(resolve, reject);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n    });\n  };\n  _proto._runSync = function _runSync(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var root = this._root(rule, options);\n    var transform = this.func(root);\n    if (transform && typeof transform.then === \"function\") {\n      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n    }\n    var string = undefined;\n    if (options.updateSelector && typeof rule !== \"string\") {\n      string = root.toString();\n      rule.selector = string;\n    }\n    return {\n      transform: transform,\n      root: root,\n      string: string\n    };\n  }\n\n  /**\n   * Process rule into a selector AST.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\n   */;\n  _proto.ast = function ast(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.root;\n    });\n  }\n\n  /**\n   * Process rule into a selector AST synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {parser.Root} The AST of the selector after processing it.\n   */;\n  _proto.astSync = function astSync(rule, options) {\n    return this._runSync(rule, options).root;\n  }\n\n  /**\n   * Process a selector into a transformed value asynchronously\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<any>} The value returned by the processor.\n   */;\n  _proto.transform = function transform(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.transform;\n    });\n  }\n\n  /**\n   * Process a selector into a transformed value synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {any} The value returned by the processor.\n   */;\n  _proto.transformSync = function transformSync(rule, options) {\n    return this._runSync(rule, options).transform;\n  }\n\n  /**\n   * Process a selector into a new selector string asynchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */;\n  _proto.process = function process(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.string || result.root.toString();\n    });\n  }\n\n  /**\n   * Process a selector into a new selector string synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */;\n  _proto.processSync = function processSync(rule, options) {\n    var result = this._runSync(rule, options);\n    return result.string || result.root.toString();\n  };\n  return Processor;\n}();\nexports[\"default\"] = Processor;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.universal = exports.tag = exports.string = exports.selector = exports.root = exports.pseudo = exports.nesting = exports.id = exports.comment = exports.combinator = exports.className = exports.attribute = void 0;\nvar _attribute = _interopRequireDefault(require(\"./attribute\"));\nvar _className = _interopRequireDefault(require(\"./className\"));\nvar _combinator = _interopRequireDefault(require(\"./combinator\"));\nvar _comment = _interopRequireDefault(require(\"./comment\"));\nvar _id = _interopRequireDefault(require(\"./id\"));\nvar _nesting = _interopRequireDefault(require(\"./nesting\"));\nvar _pseudo = _interopRequireDefault(require(\"./pseudo\"));\nvar _root = _interopRequireDefault(require(\"./root\"));\nvar _selector = _interopRequireDefault(require(\"./selector\"));\nvar _string = _interopRequireDefault(require(\"./string\"));\nvar _tag = _interopRequireDefault(require(\"./tag\"));\nvar _universal = _interopRequireDefault(require(\"./universal\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar attribute = function attribute(opts) {\n  return new _attribute[\"default\"](opts);\n};\nexports.attribute = attribute;\nvar className = function className(opts) {\n  return new _className[\"default\"](opts);\n};\nexports.className = className;\nvar combinator = function combinator(opts) {\n  return new _combinator[\"default\"](opts);\n};\nexports.combinator = combinator;\nvar comment = function comment(opts) {\n  return new _comment[\"default\"](opts);\n};\nexports.comment = comment;\nvar id = function id(opts) {\n  return new _id[\"default\"](opts);\n};\nexports.id = id;\nvar nesting = function nesting(opts) {\n  return new _nesting[\"default\"](opts);\n};\nexports.nesting = nesting;\nvar pseudo = function pseudo(opts) {\n  return new _pseudo[\"default\"](opts);\n};\nexports.pseudo = pseudo;\nvar root = function root(opts) {\n  return new _root[\"default\"](opts);\n};\nexports.root = root;\nvar selector = function selector(opts) {\n  return new _selector[\"default\"](opts);\n};\nexports.selector = selector;\nvar string = function string(opts) {\n  return new _string[\"default\"](opts);\n};\nexports.string = string;\nvar tag = function tag(opts) {\n  return new _tag[\"default\"](opts);\n};\nexports.tag = tag;\nvar universal = function universal(opts) {\n  return new _universal[\"default\"](opts);\n};\nexports.universal = universal;","\"use strict\";\n\nexports.__esModule = true;\nexports.isComment = exports.isCombinator = exports.isClassName = exports.isAttribute = void 0;\nexports.isContainer = isContainer;\nexports.isIdentifier = void 0;\nexports.isNamespace = isNamespace;\nexports.isNesting = void 0;\nexports.isNode = isNode;\nexports.isPseudo = void 0;\nexports.isPseudoClass = isPseudoClass;\nexports.isPseudoElement = isPseudoElement;\nexports.isUniversal = exports.isTag = exports.isString = exports.isSelector = exports.isRoot = void 0;\nvar _types = require(\"./types\");\nvar _IS_TYPE;\nvar IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[_types.ATTRIBUTE] = true, _IS_TYPE[_types.CLASS] = true, _IS_TYPE[_types.COMBINATOR] = true, _IS_TYPE[_types.COMMENT] = true, _IS_TYPE[_types.ID] = true, _IS_TYPE[_types.NESTING] = true, _IS_TYPE[_types.PSEUDO] = true, _IS_TYPE[_types.ROOT] = true, _IS_TYPE[_types.SELECTOR] = true, _IS_TYPE[_types.STRING] = true, _IS_TYPE[_types.TAG] = true, _IS_TYPE[_types.UNIVERSAL] = true, _IS_TYPE);\nfunction isNode(node) {\n  return typeof node === \"object\" && IS_TYPE[node.type];\n}\nfunction isNodeType(type, node) {\n  return isNode(node) && node.type === type;\n}\nvar isAttribute = isNodeType.bind(null, _types.ATTRIBUTE);\nexports.isAttribute = isAttribute;\nvar isClassName = isNodeType.bind(null, _types.CLASS);\nexports.isClassName = isClassName;\nvar isCombinator = isNodeType.bind(null, _types.COMBINATOR);\nexports.isCombinator = isCombinator;\nvar isComment = isNodeType.bind(null, _types.COMMENT);\nexports.isComment = isComment;\nvar isIdentifier = isNodeType.bind(null, _types.ID);\nexports.isIdentifier = isIdentifier;\nvar isNesting = isNodeType.bind(null, _types.NESTING);\nexports.isNesting = isNesting;\nvar isPseudo = isNodeType.bind(null, _types.PSEUDO);\nexports.isPseudo = isPseudo;\nvar isRoot = isNodeType.bind(null, _types.ROOT);\nexports.isRoot = isRoot;\nvar isSelector = isNodeType.bind(null, _types.SELECTOR);\nexports.isSelector = isSelector;\nvar isString = isNodeType.bind(null, _types.STRING);\nexports.isString = isString;\nvar isTag = isNodeType.bind(null, _types.TAG);\nexports.isTag = isTag;\nvar isUniversal = isNodeType.bind(null, _types.UNIVERSAL);\nexports.isUniversal = isUniversal;\nfunction isPseudoElement(node) {\n  return isPseudo(node) && node.value && (node.value.startsWith(\"::\") || node.value.toLowerCase() === \":before\" || node.value.toLowerCase() === \":after\" || node.value.toLowerCase() === \":first-letter\" || node.value.toLowerCase() === \":first-line\");\n}\nfunction isPseudoClass(node) {\n  return isPseudo(node) && !isPseudoElement(node);\n}\nfunction isContainer(node) {\n  return !!(isNode(node) && node.walk);\n}\nfunction isNamespace(node) {\n  return isAttribute(node) || isTag(node);\n}","\"use strict\";\n\nexports.__esModule = true;\nvar _types = require(\"./types\");\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _types[key]) return;\n  exports[key] = _types[key];\n});\nvar _constructors = require(\"./constructors\");\nObject.keys(_constructors).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _constructors[key]) return;\n  exports[key] = _constructors[key];\n});\nvar _guards = require(\"./guards\");\nObject.keys(_guards).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _guards[key]) return;\n  exports[key] = _guards[key];\n});","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _processor = _interopRequireDefault(require(\"./processor\"));\nvar selectors = _interopRequireWildcard(require(\"./selectors\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar parser = function parser(processor) {\n  return new _processor[\"default\"](processor);\n};\nObject.assign(parser, selectors);\ndelete parser.__esModule;\nvar _default = parser;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","import type { AtRule, PluginCreator, Rule } from 'postcss'\r\nimport selectorParser from 'postcss-selector-parser'\r\nimport { warn } from '../warn'\r\n\r\nconst animationNameRE = /^(-\\w+-)?animation-name$/\r\nconst animationRE = /^(-\\w+-)?animation$/\r\n\r\nconst scopedPlugin: PluginCreator<string> = (id = '') => {\r\n  const keyframes = Object.create(null)\r\n  const shortId = id.replace(/^data-v-/, '')\r\n\r\n  return {\r\n    postcssPlugin: 'vue-sfc-scoped',\r\n    Rule(rule) {\r\n      processRule(id, rule)\r\n    },\r\n    AtRule(node) {\r\n      if (\r\n        /-?keyframes$/.test(node.name) &&\r\n        !node.params.endsWith(`-${shortId}`)\r\n      ) {\r\n        // register keyframes\r\n        keyframes[node.params] = node.params = node.params + '-' + shortId\r\n      }\r\n    },\r\n    OnceExit(root) {\r\n      if (Object.keys(keyframes).length) {\r\n        // If keyframes are found in this <style>, find and rewrite animation names\r\n        // in declarations.\r\n        // Caveat: this only works for keyframes and animation rules in the same\r\n        // <style> element.\r\n        // individual animation-name declaration\r\n        root.walkDecls(decl => {\r\n          if (animationNameRE.test(decl.prop)) {\r\n            decl.value = decl.value\r\n              .split(',')\r\n              .map(v => keyframes[v.trim()] || v.trim())\r\n              .join(',')\r\n          }\r\n          // shorthand\r\n          if (animationRE.test(decl.prop)) {\r\n            decl.value = decl.value\r\n              .split(',')\r\n              .map(v => {\r\n                const vals = v.trim().split(/\\s+/)\r\n                const i = vals.findIndex(val => keyframes[val])\r\n                if (i !== -1) {\r\n                  vals.splice(i, 1, keyframes[vals[i]])\r\n                  return vals.join(' ')\r\n                } else {\r\n                  return v\r\n                }\r\n              })\r\n              .join(',')\r\n          }\r\n        })\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nconst processedRules = new WeakSet<Rule>()\r\n\r\nfunction processRule(id: string, rule: Rule) {\r\n  if (\r\n    processedRules.has(rule) ||\r\n    (rule.parent &&\r\n      rule.parent.type === 'atrule' &&\r\n      /-?keyframes$/.test((rule.parent as AtRule).name))\r\n  ) {\r\n    return\r\n  }\r\n  processedRules.add(rule)\r\n  rule.selector = selectorParser(selectorRoot => {\r\n    selectorRoot.each(selector => {\r\n      rewriteSelector(id, selector, selectorRoot)\r\n    })\r\n  }).processSync(rule.selector)\r\n}\r\n\r\nfunction rewriteSelector(\r\n  id: string,\r\n  selector: selectorParser.Selector,\r\n  selectorRoot: selectorParser.Root,\r\n  slotted = false,\r\n) {\r\n  let node: selectorParser.Node | null = null\r\n  let shouldInject = true\r\n  // find the last child node to insert attribute selector\r\n  selector.each(n => {\r\n    // DEPRECATED \">>>\" and \"/deep/\" combinator\r\n    if (\r\n      n.type === 'combinator' &&\r\n      (n.value === '>>>' || n.value === '/deep/')\r\n    ) {\r\n      n.value = ' '\r\n      n.spaces.before = n.spaces.after = ''\r\n      warn(\r\n        `the >>> and /deep/ combinators have been deprecated. ` +\r\n          `Use :deep() instead.`,\r\n      )\r\n      return false\r\n    }\r\n\r\n    if (n.type === 'pseudo') {\r\n      const { value } = n\r\n      // deep: inject [id] attribute at the node before the ::v-deep\r\n      // combinator.\r\n      if (value === ':deep' || value === '::v-deep') {\r\n        if (n.nodes.length) {\r\n          // .foo ::v-deep(.bar) -> .foo[xxxxxxx] .bar\r\n          // replace the current node with ::v-deep's inner selector\r\n          let last: selectorParser.Selector['nodes'][0] = n\r\n          n.nodes[0].each(ss => {\r\n            selector.insertAfter(last, ss)\r\n            last = ss\r\n          })\r\n          // insert a space combinator before if it doesn't already have one\r\n          const prev = selector.at(selector.index(n) - 1)\r\n          if (!prev || !isSpaceCombinator(prev)) {\r\n            selector.insertAfter(\r\n              n,\r\n              selectorParser.combinator({\r\n                value: ' ',\r\n              }),\r\n            )\r\n          }\r\n          selector.removeChild(n)\r\n        } else {\r\n          // DEPRECATED usage\r\n          // .foo ::v-deep .bar -> .foo[xxxxxxx] .bar\r\n          warn(\r\n            `${value} usage as a combinator has been deprecated. ` +\r\n              `Use :deep(<inner-selector>) instead of ${value} <inner-selector>.`,\r\n          )\r\n\r\n          const prev = selector.at(selector.index(n) - 1)\r\n          if (prev && isSpaceCombinator(prev)) {\r\n            selector.removeChild(prev)\r\n          }\r\n          selector.removeChild(n)\r\n        }\r\n        return false\r\n      }\r\n\r\n      // slot: use selector inside `::v-slotted` and inject [id + '-s']\r\n      // instead.\r\n      // ::v-slotted(.foo) -> .foo[xxxxxxx-s]\r\n      if (value === ':slotted' || value === '::v-slotted') {\r\n        rewriteSelector(id, n.nodes[0], selectorRoot, true /* slotted */)\r\n        let last: selectorParser.Selector['nodes'][0] = n\r\n        n.nodes[0].each(ss => {\r\n          selector.insertAfter(last, ss)\r\n          last = ss\r\n        })\r\n        // selector.insertAfter(n, n.nodes[0])\r\n        selector.removeChild(n)\r\n        // since slotted attribute already scopes the selector there's no\r\n        // need for the non-slot attribute.\r\n        shouldInject = false\r\n        return false\r\n      }\r\n\r\n      // global: replace with inner selector and do not inject [id].\r\n      // ::v-global(.foo) -> .foo\r\n      if (value === ':global' || value === '::v-global') {\r\n        selectorRoot.insertAfter(selector, n.nodes[0])\r\n        selectorRoot.removeChild(selector)\r\n        return false\r\n      }\r\n    }\r\n\r\n    if (\r\n      (n.type !== 'pseudo' && n.type !== 'combinator') ||\r\n      (n.type === 'pseudo' && (n.value === ':is' || n.value === ':where'))\r\n    ) {\r\n      node = n\r\n    }\r\n  })\r\n\r\n  if (node) {\r\n    const { type, value } = node as selectorParser.Node\r\n    if (type === 'pseudo' && (value === ':is' || value === ':where')) {\r\n      ;(node as selectorParser.Pseudo).nodes.forEach(value =>\r\n        rewriteSelector(id, value, selectorRoot, slotted),\r\n      )\r\n      shouldInject = false\r\n    }\r\n  }\r\n\r\n  if (node) {\r\n    ;(node as selectorParser.Node).spaces.after = ''\r\n  } else {\r\n    // For deep selectors & standalone pseudo selectors,\r\n    // the attribute selectors are prepended rather than appended.\r\n    // So all leading spaces must be eliminated to avoid problems.\r\n    selector.first.spaces.before = ''\r\n  }\r\n\r\n  if (shouldInject) {\r\n    const idToAdd = slotted ? id + '-s' : id\r\n    selector.insertAfter(\r\n      // If node is null it means we need to inject [id] at the start\r\n      // insertAfter can handle `null` here\r\n      node as any,\r\n      selectorParser.attribute({\r\n        attribute: idToAdd,\r\n        value: idToAdd,\r\n        raws: {},\r\n        quoteMark: `\"`,\r\n      }),\r\n    )\r\n  }\r\n}\r\n\r\nfunction isSpaceCombinator(node: selectorParser.Node) {\r\n  return node.type === 'combinator' && /^\\s+$/.test(node.value)\r\n}\r\n\r\nscopedPlugin.postcss = true\r\nexport default scopedPlugin\r\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","var sourceMap = require('source-map')\nvar SourceMapConsumer = sourceMap.SourceMapConsumer\nvar SourceMapGenerator = sourceMap.SourceMapGenerator\n\nmodule.exports = merge\n\n/**\n * Merge old source map and new source map and return merged.\n * If old or new source map value is falsy, return another one as it is.\n *\n * @param {object|string} [oldMap] old source map object\n * @param {object|string} [newmap] new source map object\n * @return {object|undefined} merged source map object, or undefined when both old and new source map are undefined\n */\nfunction merge(oldMap, newMap) {\n  if (!oldMap) return newMap\n  if (!newMap) return oldMap\n\n  var oldMapConsumer = new SourceMapConsumer(oldMap)\n  var newMapConsumer = new SourceMapConsumer(newMap)\n  var mergedMapGenerator = new SourceMapGenerator()\n\n  // iterate on new map and overwrite original position of new map with one of old map\n  newMapConsumer.eachMapping(function(m) {\n    // pass when `originalLine` is null.\n    // It occurs in case that the node does not have origin in original code.\n    if (m.originalLine == null) return\n\n    var origPosInOldMap = oldMapConsumer.originalPositionFor({\n      line: m.originalLine,\n      column: m.originalColumn\n    })\n\n    if (origPosInOldMap.source == null) return\n\n    mergedMapGenerator.addMapping({\n      original: {\n        line: origPosInOldMap.line,\n        column: origPosInOldMap.column\n      },\n      generated: {\n        line: m.generatedLine,\n        column: m.generatedColumn\n      },\n      source: origPosInOldMap.source,\n      name: origPosInOldMap.name\n    })\n  })\n\n  var consumers = [oldMapConsumer, newMapConsumer]\n  consumers.forEach(function(consumer) {\n    consumer.sources.forEach(function(sourceFile) {\n      mergedMapGenerator._sources.add(sourceFile)\n      var sourceContent = consumer.sourceContentFor(sourceFile)\n      if (sourceContent != null) {\n        mergedMapGenerator.setSourceContent(sourceFile, sourceContent)\n      }\n    })\n  })\n\n  mergedMapGenerator._sourceRoot = oldMap.sourceRoot\n  mergedMapGenerator._file = oldMap.file\n\n  return JSON.parse(mergedMapGenerator.toString())\n}\n","import merge from 'merge-source-map'\r\nimport type { RawSourceMap } from 'source-map-js'\r\nimport type { SFCStyleCompileOptions } from '../compileStyle'\r\nimport { isFunction } from '@vue/shared'\r\n\r\nexport type StylePreprocessor = (\r\n  source: string,\r\n  map: RawSourceMap | undefined,\r\n  options: {\r\n    [key: string]: any\r\n    additionalData?: string | ((source: string, filename: string) => string)\r\n    filename: string\r\n  },\r\n  customRequire: SFCStyleCompileOptions['preprocessCustomRequire'],\r\n) => StylePreprocessorResults\r\n\r\nexport interface StylePreprocessorResults {\r\n  code: string\r\n  map?: object\r\n  errors: Error[]\r\n  dependencies: string[]\r\n}\r\n\r\n// .scss/.sass processor\r\nconst scss: StylePreprocessor = (source, map, options, load = require) => {\r\n  const nodeSass = load('sass')\r\n  const finalOptions = {\r\n    ...options,\r\n    data: getSource(source, options.filename, options.additionalData),\r\n    file: options.filename,\r\n    outFile: options.filename,\r\n    sourceMap: !!map,\r\n  }\r\n\r\n  try {\r\n    const result = nodeSass.renderSync(finalOptions)\r\n    const dependencies = result.stats.includedFiles\r\n    if (map) {\r\n      return {\r\n        code: result.css.toString(),\r\n        map: merge(map, JSON.parse(result.map.toString())),\r\n        errors: [],\r\n        dependencies,\r\n      }\r\n    }\r\n\r\n    return { code: result.css.toString(), errors: [], dependencies }\r\n  } catch (e: any) {\r\n    return { code: '', errors: [e], dependencies: [] }\r\n  }\r\n}\r\n\r\nconst sass: StylePreprocessor = (source, map, options, load) =>\r\n  scss(\r\n    source,\r\n    map,\r\n    {\r\n      ...options,\r\n      indentedSyntax: true,\r\n    },\r\n    load,\r\n  )\r\n\r\n// .less\r\nconst less: StylePreprocessor = (source, map, options, load = require) => {\r\n  const nodeLess = load('less')\r\n\r\n  let result: any\r\n  let error: Error | null = null\r\n  nodeLess.render(\r\n    getSource(source, options.filename, options.additionalData),\r\n    { ...options, syncImport: true },\r\n    (err: Error | null, output: any) => {\r\n      error = err\r\n      result = output\r\n    },\r\n  )\r\n\r\n  if (error) return { code: '', errors: [error], dependencies: [] }\r\n  const dependencies = result.imports\r\n  if (map) {\r\n    return {\r\n      code: result.css.toString(),\r\n      map: merge(map, result.map),\r\n      errors: [],\r\n      dependencies: dependencies,\r\n    }\r\n  }\r\n\r\n  return {\r\n    code: result.css.toString(),\r\n    errors: [],\r\n    dependencies: dependencies,\r\n  }\r\n}\r\n\r\n// .styl\r\nconst styl: StylePreprocessor = (source, map, options, load = require) => {\r\n  const nodeStylus = load('stylus')\r\n  try {\r\n    const ref = nodeStylus(source, options)\r\n    if (map) ref.set('sourcemap', { inline: false, comment: false })\r\n\r\n    const result = ref.render()\r\n    const dependencies = ref.deps()\r\n    if (map) {\r\n      return {\r\n        code: result,\r\n        map: merge(map, ref.sourcemap),\r\n        errors: [],\r\n        dependencies,\r\n      }\r\n    }\r\n\r\n    return { code: result, errors: [], dependencies }\r\n  } catch (e: any) {\r\n    return { code: '', errors: [e], dependencies: [] }\r\n  }\r\n}\r\n\r\nfunction getSource(\r\n  source: string,\r\n  filename: string,\r\n  additionalData?: string | ((source: string, filename: string) => string),\r\n) {\r\n  if (!additionalData) return source\r\n  if (isFunction(additionalData)) {\r\n    return additionalData(source, filename)\r\n  }\r\n  return additionalData + source\r\n}\r\n\r\nexport type PreprocessLang = 'less' | 'sass' | 'scss' | 'styl' | 'stylus'\r\n\r\nexport const processors: Record<PreprocessLang, StylePreprocessor> = {\r\n  less,\r\n  sass,\r\n  scss,\r\n  styl,\r\n  stylus: styl,\r\n}\r\n","import postcss, {\r\n  type LazyResult,\r\n  type Message,\r\n  type ProcessOptions,\r\n  type Result,\r\n  type SourceMap,\r\n} from 'postcss'\r\nimport trimPlugin from './style/pluginTrim'\r\nimport scopedPlugin from './style/pluginScoped'\r\nimport {\r\n  type PreprocessLang,\r\n  type StylePreprocessor,\r\n  type StylePreprocessorResults,\r\n  processors,\r\n} from './style/preprocessors'\r\nimport type { RawSourceMap } from 'source-map-js'\r\nimport { cssVarsPlugin } from './style/cssVars'\r\nimport postcssModules from 'postcss-modules'\r\n\r\nexport interface SFCStyleCompileOptions {\r\n  source: string\r\n  filename: string\r\n  id: string\r\n  scoped?: boolean\r\n  trim?: boolean\r\n  isProd?: boolean\r\n  inMap?: RawSourceMap\r\n  preprocessLang?: PreprocessLang\r\n  preprocessOptions?: any\r\n  preprocessCustomRequire?: (id: string) => any\r\n  postcssOptions?: any\r\n  postcssPlugins?: any[]\r\n  /**\r\n   * @deprecated use `inMap` instead.\r\n   */\r\n  map?: RawSourceMap\r\n}\r\n\r\n/**\r\n * Aligns with postcss-modules\r\n * https://github.com/css-modules/postcss-modules\r\n */\r\nexport interface CSSModulesOptions {\r\n  scopeBehaviour?: 'global' | 'local'\r\n  generateScopedName?:\r\n    | string\r\n    | ((name: string, filename: string, css: string) => string)\r\n  hashPrefix?: string\r\n  localsConvention?: 'camelCase' | 'camelCaseOnly' | 'dashes' | 'dashesOnly'\r\n  exportGlobals?: boolean\r\n  globalModulePaths?: RegExp[]\r\n}\r\n\r\nexport interface SFCAsyncStyleCompileOptions extends SFCStyleCompileOptions {\r\n  isAsync?: boolean\r\n  // css modules support, note this requires async so that we can get the\r\n  // resulting json\r\n  modules?: boolean\r\n  modulesOptions?: CSSModulesOptions\r\n}\r\n\r\nexport interface SFCStyleCompileResults {\r\n  code: string\r\n  map: RawSourceMap | undefined\r\n  rawResult: Result | LazyResult | undefined\r\n  errors: Error[]\r\n  modules?: Record<string, string>\r\n  dependencies: Set<string>\r\n}\r\n\r\nexport function compileStyle(\r\n  options: SFCStyleCompileOptions,\r\n): SFCStyleCompileResults {\r\n  return doCompileStyle({\r\n    ...options,\r\n    isAsync: false,\r\n  }) as SFCStyleCompileResults\r\n}\r\n\r\nexport function compileStyleAsync(\r\n  options: SFCAsyncStyleCompileOptions,\r\n): Promise<SFCStyleCompileResults> {\r\n  return doCompileStyle({\r\n    ...options,\r\n    isAsync: true,\r\n  }) as Promise<SFCStyleCompileResults>\r\n}\r\n\r\nexport function doCompileStyle(\r\n  options: SFCAsyncStyleCompileOptions,\r\n): SFCStyleCompileResults | Promise<SFCStyleCompileResults> {\r\n  const {\r\n    filename,\r\n    id,\r\n    scoped = false,\r\n    trim = true,\r\n    isProd = false,\r\n    modules = false,\r\n    modulesOptions = {},\r\n    preprocessLang,\r\n    postcssOptions,\r\n    postcssPlugins,\r\n  } = options\r\n  const preprocessor = preprocessLang && processors[preprocessLang]\r\n  const preProcessedSource = preprocessor && preprocess(options, preprocessor)\r\n  const map = preProcessedSource\r\n    ? preProcessedSource.map\r\n    : options.inMap || options.map\r\n  const source = preProcessedSource ? preProcessedSource.code : options.source\r\n\r\n  const shortId = id.replace(/^data-v-/, '')\r\n  const longId = `data-v-${shortId}`\r\n\r\n  const plugins = (postcssPlugins || []).slice()\r\n  plugins.unshift(cssVarsPlugin({ id: shortId, isProd }))\r\n  if (trim) {\r\n    plugins.push(trimPlugin())\r\n  }\r\n  if (scoped) {\r\n    plugins.push(scopedPlugin(longId))\r\n  }\r\n  let cssModules: Record<string, string> | undefined\r\n  if (modules) {\r\n    if (__GLOBAL__ || __ESM_BROWSER__) {\r\n      throw new Error(\r\n        '[@vue/compiler-sfc] `modules` option is not supported in the browser build.',\r\n      )\r\n    }\r\n    if (!options.isAsync) {\r\n      throw new Error(\r\n        '[@vue/compiler-sfc] `modules` option can only be used with compileStyleAsync().',\r\n      )\r\n    }\r\n    plugins.push(\r\n      postcssModules({\r\n        ...modulesOptions,\r\n        getJSON: (_cssFileName: string, json: Record<string, string>) => {\r\n          cssModules = json\r\n        },\r\n      }),\r\n    )\r\n  }\r\n\r\n  const postCSSOptions: ProcessOptions = {\r\n    ...postcssOptions,\r\n    to: filename,\r\n    from: filename,\r\n  }\r\n  if (map) {\r\n    postCSSOptions.map = {\r\n      inline: false,\r\n      annotation: false,\r\n      prev: map,\r\n    }\r\n  }\r\n\r\n  let result: LazyResult | undefined\r\n  let code: string | undefined\r\n  let outMap: SourceMap | undefined\r\n  // stylus output include plain css. so need remove the repeat item\r\n  const dependencies = new Set(\r\n    preProcessedSource ? preProcessedSource.dependencies : [],\r\n  )\r\n  // sass has filename self when provided filename option\r\n  dependencies.delete(filename)\r\n\r\n  const errors: Error[] = []\r\n  if (preProcessedSource && preProcessedSource.errors.length) {\r\n    errors.push(...preProcessedSource.errors)\r\n  }\r\n\r\n  const recordPlainCssDependencies = (messages: Message[]) => {\r\n    messages.forEach(msg => {\r\n      if (msg.type === 'dependency') {\r\n        // postcss output path is absolute position path\r\n        dependencies.add(msg.file)\r\n      }\r\n    })\r\n    return dependencies\r\n  }\r\n\r\n  try {\r\n    result = postcss(plugins).process(source, postCSSOptions)\r\n\r\n    // In async mode, return a promise.\r\n    if (options.isAsync) {\r\n      return result\r\n        .then(result => ({\r\n          code: result.css || '',\r\n          map: result.map && result.map.toJSON(),\r\n          errors,\r\n          modules: cssModules,\r\n          rawResult: result,\r\n          dependencies: recordPlainCssDependencies(result.messages),\r\n        }))\r\n        .catch(error => ({\r\n          code: '',\r\n          map: undefined,\r\n          errors: [...errors, error],\r\n          rawResult: undefined,\r\n          dependencies,\r\n        }))\r\n    }\r\n\r\n    recordPlainCssDependencies(result.messages)\r\n    // force synchronous transform (we know we only have sync plugins)\r\n    code = result.css\r\n    outMap = result.map\r\n  } catch (e: any) {\r\n    errors.push(e)\r\n  }\r\n\r\n  return {\r\n    code: code || ``,\r\n    map: outMap && outMap.toJSON(),\r\n    errors,\r\n    rawResult: result,\r\n    dependencies,\r\n  }\r\n}\r\n\r\nfunction preprocess(\r\n  options: SFCStyleCompileOptions,\r\n  preprocessor: StylePreprocessor,\r\n): StylePreprocessorResults {\r\n  if ((__ESM_BROWSER__ || __GLOBAL__) && !options.preprocessCustomRequire) {\r\n    throw new Error(\r\n      `[@vue/compiler-sfc] Style preprocessing in the browser build must ` +\r\n        `provide the \\`preprocessCustomRequire\\` option to return the in-browser ` +\r\n        `version of the preprocessor.`,\r\n    )\r\n  }\r\n\r\n  return preprocessor(\r\n    options.source,\r\n    options.inMap || options.map,\r\n    {\r\n      filename: options.filename,\r\n      ...options.preprocessOptions,\r\n    },\r\n    options.preprocessCustomRequire,\r\n  )\r\n}\r\n","import type {\r\n  ArrayExpression,\r\n  Node,\r\n  ObjectExpression,\r\n  Statement,\r\n} from '@babel/types'\r\nimport { type BindingMetadata, BindingTypes } from '@vue/compiler-dom'\r\nimport { resolveObjectKey } from './utils'\r\n\r\n/**\r\n * Analyze bindings in normal `<script>`\r\n * Note that `compileScriptSetup` already analyzes bindings as part of its\r\n * compilation process so this should only be used on single `<script>` SFCs.\r\n */\r\nexport function analyzeScriptBindings(ast: Statement[]): BindingMetadata {\r\n  for (const node of ast) {\r\n    if (\r\n      node.type === 'ExportDefaultDeclaration' &&\r\n      node.declaration.type === 'ObjectExpression'\r\n    ) {\r\n      return analyzeBindingsFromOptions(node.declaration)\r\n    }\r\n  }\r\n  return {}\r\n}\r\n\r\nfunction analyzeBindingsFromOptions(node: ObjectExpression): BindingMetadata {\r\n  const bindings: BindingMetadata = {}\r\n  // #3270, #3275\r\n  // mark non-script-setup so we don't resolve components/directives from these\r\n  Object.defineProperty(bindings, '__isScriptSetup', {\r\n    enumerable: false,\r\n    value: false,\r\n  })\r\n  for (const property of node.properties) {\r\n    if (\r\n      property.type === 'ObjectProperty' &&\r\n      !property.computed &&\r\n      property.key.type === 'Identifier'\r\n    ) {\r\n      // props\r\n      if (property.key.name === 'props') {\r\n        // props: ['foo']\r\n        // props: { foo: ... }\r\n        for (const key of getObjectOrArrayExpressionKeys(property.value)) {\r\n          bindings[key] = BindingTypes.PROPS\r\n        }\r\n      }\r\n\r\n      // inject\r\n      else if (property.key.name === 'inject') {\r\n        // inject: ['foo']\r\n        // inject: { foo: {} }\r\n        for (const key of getObjectOrArrayExpressionKeys(property.value)) {\r\n          bindings[key] = BindingTypes.OPTIONS\r\n        }\r\n      }\r\n\r\n      // computed & methods\r\n      else if (\r\n        property.value.type === 'ObjectExpression' &&\r\n        (property.key.name === 'computed' || property.key.name === 'methods')\r\n      ) {\r\n        // methods: { foo() {} }\r\n        // computed: { foo() {} }\r\n        for (const key of getObjectExpressionKeys(property.value)) {\r\n          bindings[key] = BindingTypes.OPTIONS\r\n        }\r\n      }\r\n    }\r\n\r\n    // setup & data\r\n    else if (\r\n      property.type === 'ObjectMethod' &&\r\n      property.key.type === 'Identifier' &&\r\n      (property.key.name === 'setup' || property.key.name === 'data')\r\n    ) {\r\n      for (const bodyItem of property.body.body) {\r\n        // setup() {\r\n        //   return {\r\n        //     foo: null\r\n        //   }\r\n        // }\r\n        if (\r\n          bodyItem.type === 'ReturnStatement' &&\r\n          bodyItem.argument &&\r\n          bodyItem.argument.type === 'ObjectExpression'\r\n        ) {\r\n          for (const key of getObjectExpressionKeys(bodyItem.argument)) {\r\n            bindings[key] =\r\n              property.key.name === 'setup'\r\n                ? BindingTypes.SETUP_MAYBE_REF\r\n                : BindingTypes.DATA\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return bindings\r\n}\r\n\r\nfunction getObjectExpressionKeys(node: ObjectExpression): string[] {\r\n  const keys = []\r\n  for (const prop of node.properties) {\r\n    if (prop.type === 'SpreadElement') continue\r\n    const key = resolveObjectKey(prop.key, prop.computed)\r\n    if (key) keys.push(String(key))\r\n  }\r\n  return keys\r\n}\r\n\r\nfunction getArrayExpressionKeys(node: ArrayExpression): string[] {\r\n  const keys = []\r\n  for (const element of node.elements) {\r\n    if (element && element.type === 'StringLiteral') {\r\n      keys.push(element.value)\r\n    }\r\n  }\r\n  return keys\r\n}\r\n\r\nexport function getObjectOrArrayExpressionKeys(value: Node): string[] {\r\n  if (value.type === 'ArrayExpression') {\r\n    return getArrayExpressionKeys(value)\r\n  }\r\n  if (value.type === 'ObjectExpression') {\r\n    return getObjectExpressionKeys(value)\r\n  }\r\n  return []\r\n}\r\n","const comma = ','.charCodeAt(0);\nconst semicolon = ';'.charCodeAt(0);\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\nfor (let i = 0; i < chars.length; i++) {\n    const c = chars.charCodeAt(i);\n    intToChar[i] = c;\n    charToInt[c] = i;\n}\n// Provide a fallback for older environments.\nconst td = typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n        ? {\n            decode(buf) {\n                const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n                return out.toString();\n            },\n        }\n        : {\n            decode(buf) {\n                let out = '';\n                for (let i = 0; i < buf.length; i++) {\n                    out += String.fromCharCode(buf[i]);\n                }\n                return out;\n            },\n        };\nfunction decode(mappings) {\n    const state = new Int32Array(5);\n    const decoded = [];\n    let index = 0;\n    do {\n        const semi = indexOf(mappings, index);\n        const line = [];\n        let sorted = true;\n        let lastCol = 0;\n        state[0] = 0;\n        for (let i = index; i < semi; i++) {\n            let seg;\n            i = decodeInteger(mappings, i, state, 0); // genColumn\n            const col = state[0];\n            if (col < lastCol)\n                sorted = false;\n            lastCol = col;\n            if (hasMoreVlq(mappings, i, semi)) {\n                i = decodeInteger(mappings, i, state, 1); // sourcesIndex\n                i = decodeInteger(mappings, i, state, 2); // sourceLine\n                i = decodeInteger(mappings, i, state, 3); // sourceColumn\n                if (hasMoreVlq(mappings, i, semi)) {\n                    i = decodeInteger(mappings, i, state, 4); // namesIndex\n                    seg = [col, state[1], state[2], state[3], state[4]];\n                }\n                else {\n                    seg = [col, state[1], state[2], state[3]];\n                }\n            }\n            else {\n                seg = [col];\n            }\n            line.push(seg);\n        }\n        if (!sorted)\n            sort(line);\n        decoded.push(line);\n        index = semi + 1;\n    } while (index <= mappings.length);\n    return decoded;\n}\nfunction indexOf(mappings, index) {\n    const idx = mappings.indexOf(';', index);\n    return idx === -1 ? mappings.length : idx;\n}\nfunction decodeInteger(mappings, pos, state, j) {\n    let value = 0;\n    let shift = 0;\n    let integer = 0;\n    do {\n        const c = mappings.charCodeAt(pos++);\n        integer = charToInt[c];\n        value |= (integer & 31) << shift;\n        shift += 5;\n    } while (integer & 32);\n    const shouldNegate = value & 1;\n    value >>>= 1;\n    if (shouldNegate) {\n        value = -0x80000000 | -value;\n    }\n    state[j] += value;\n    return pos;\n}\nfunction hasMoreVlq(mappings, i, length) {\n    if (i >= length)\n        return false;\n    return mappings.charCodeAt(i) !== comma;\n}\nfunction sort(line) {\n    line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n    return a[0] - b[0];\n}\nfunction encode(decoded) {\n    const state = new Int32Array(5);\n    const bufLength = 1024 * 16;\n    const subLength = bufLength - 36;\n    const buf = new Uint8Array(bufLength);\n    const sub = buf.subarray(0, subLength);\n    let pos = 0;\n    let out = '';\n    for (let i = 0; i < decoded.length; i++) {\n        const line = decoded[i];\n        if (i > 0) {\n            if (pos === bufLength) {\n                out += td.decode(buf);\n                pos = 0;\n            }\n            buf[pos++] = semicolon;\n        }\n        if (line.length === 0)\n            continue;\n        state[0] = 0;\n        for (let j = 0; j < line.length; j++) {\n            const segment = line[j];\n            // We can push up to 5 ints, each int can take at most 7 chars, and we\n            // may push a comma.\n            if (pos > subLength) {\n                out += td.decode(sub);\n                buf.copyWithin(0, subLength, pos);\n                pos -= subLength;\n            }\n            if (j > 0)\n                buf[pos++] = comma;\n            pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\n            if (segment.length === 1)\n                continue;\n            pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\n            pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\n            pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\n            if (segment.length === 4)\n                continue;\n            pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\n        }\n    }\n    return out + td.decode(buf.subarray(0, pos));\n}\nfunction encodeInteger(buf, pos, state, segment, j) {\n    const next = segment[j];\n    let num = next - state[j];\n    state[j] = next;\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\n    do {\n        let clamped = num & 0b011111;\n        num >>>= 5;\n        if (num > 0)\n            clamped |= 0b100000;\n        buf[pos++] = intToChar[clamped];\n    } while (num > 0);\n    return pos;\n}\n\nexport { decode, encode };\n//# sourceMappingURL=sourcemap-codec.mjs.map\n","import { encode } from '@jridgewell/sourcemap-codec';\n\nclass BitSet {\n\tconstructor(arg) {\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t}\n\n\tadd(n) {\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t}\n\n\thas(n) {\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t}\n}\n\nclass Chunk {\n\tconstructor(start, end, content) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.original = content;\n\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\n\t\tthis.content = content;\n\t\tthis.storeName = false;\n\t\tthis.edited = false;\n\n\t\t{\n\t\t\tthis.previous = null;\n\t\t\tthis.next = null;\n\t\t}\n\t}\n\n\tappendLeft(content) {\n\t\tthis.outro += content;\n\t}\n\n\tappendRight(content) {\n\t\tthis.intro = this.intro + content;\n\t}\n\n\tclone() {\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t}\n\n\tcontains(index) {\n\t\treturn this.start < index && index < this.end;\n\t}\n\n\teachNext(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.next;\n\t\t}\n\t}\n\n\teachPrevious(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t}\n\n\tedit(content, storeName, contentOnly) {\n\t\tthis.content = content;\n\t\tif (!contentOnly) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t}\n\n\tprependLeft(content) {\n\t\tthis.outro = content + this.outro;\n\t}\n\n\tprependRight(content) {\n\t\tthis.intro = content + this.intro;\n\t}\n\n\tsplit(index) {\n\t\tconst sliceIndex = index - this.start;\n\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\tthis.original = originalBefore;\n\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif (this.edited) {\n\t\t\t// after split we should save the edit content record into the correct chunk\n\t\t\t// to make sure sourcemap correct\n\t\t\t// For example:\n\t\t\t// '  test'.trim()\n\t\t\t//     split   -> '  ' + 'test'\n\t\t\t//   ✔️ edit    -> '' + 'test'\n\t\t\t//   ✖️ edit    -> 'test' + '' \n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit('', false);\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t}\n\n\ttoString() {\n\t\treturn this.intro + this.content + this.outro;\n\t}\n\n\ttrimEnd(rx) {\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t\tif (this.edited) {\n\t\t\t\t\t// save the change, if it has been edited\n\t\t\t\t\tthis.edit(trimmed, this.storeName, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\t\t}\n\t}\n\n\ttrimStart(rx) {\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tconst newChunk = this.split(this.end - trimmed.length);\n\t\t\t\tif (this.edited) {\n\t\t\t\t\t// save the change, if it has been edited\n\t\t\t\t\tnewChunk.edit(trimmed, this.storeName, true);\n\t\t\t\t}\n\t\t\t\tthis.edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\t\t}\n\t}\n}\n\nfunction getBtoa() {\n\tif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\t\treturn (str) => window.btoa(unescape(encodeURIComponent(str)));\n\t} else if (typeof Buffer === 'function') {\n\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\n\t} else {\n\t\treturn () => {\n\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n\t\t};\n\t}\n}\n\nconst btoa = /*#__PURE__*/ getBtoa();\n\nclass SourceMap {\n\tconstructor(properties) {\n\t\tthis.version = 3;\n\t\tthis.file = properties.file;\n\t\tthis.sources = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names = properties.names;\n\t\tthis.mappings = encode(properties.mappings);\n\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\n\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\ttoUrl() {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n\t}\n}\n\nfunction guessIndent(code) {\n\tconst lines = code.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n\nfunction getRelativePath(from, to) {\n\tconst fromParts = from.split(/[/\\\\]/);\n\tconst toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tlet i = fromParts.length;\n\t\twhile (i--) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n\nconst toString = Object.prototype.toString;\n\nfunction isObject(thing) {\n\treturn toString.call(thing) === '[object Object]';\n}\n\nfunction getLocator(source) {\n\tconst originalLines = source.split('\\n');\n\tconst lineOffsets = [];\n\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tlet i = 0;\n\t\tlet j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tconst line = i - 1;\n\t\tconst column = index - lineOffsets[line];\n\t\treturn { line, column };\n\t};\n}\n\nconst wordRegex = /\\w/;\n\nclass Mappings {\n\tconstructor(hires) {\n\t\tthis.hires = hires;\n\t\tthis.generatedCodeLine = 0;\n\t\tthis.generatedCodeColumn = 0;\n\t\tthis.raw = [];\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\tthis.pending = null;\n\t}\n\n\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\tif (content.length) {\n\t\t\tlet contentLineEnd = content.indexOf('\\n', 0);\n\t\t\tlet previousContentLineEnd = -1;\n\t\t\twhile (contentLineEnd >= 0) {\n\t\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\t\tif (nameIndex >= 0) {\n\t\t\t\t\tsegment.push(nameIndex);\n\t\t\t\t}\n\t\t\t\tthis.rawSegments.push(segment);\n\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\n\t\t\t\tpreviousContentLineEnd = contentLineEnd;\n\t\t\t\tcontentLineEnd = content.indexOf('\\n', contentLineEnd + 1);\n\t\t\t}\n\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\tif (nameIndex >= 0) {\n\t\t\t\tsegment.push(nameIndex);\n\t\t\t}\n\t\t\tthis.rawSegments.push(segment);\n\n\t\t\tthis.advance(content.slice(previousContentLineEnd + 1));\n\t\t} else if (this.pending) {\n\t\t\tthis.rawSegments.push(this.pending);\n\t\t\tthis.advance(content);\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\tlet originalCharIndex = chunk.start;\n\t\tlet first = true;\n\t\t// when iterating each char, check if it's in a word boundary\n\t\tlet charInHiresBoundary = false;\n\n\t\twhile (originalCharIndex < chunk.end) {\n\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\n\t\t\t\tif (this.hires === 'boundary') {\n\t\t\t\t\t// in hires \"boundary\", group segments per word boundary than per char\n\t\t\t\t\tif (wordRegex.test(original[originalCharIndex])) {\n\t\t\t\t\t\t// for first char in the boundary found, start the boundary by pushing a segment\n\t\t\t\t\t\tif (!charInHiresBoundary) {\n\t\t\t\t\t\t\tthis.rawSegments.push(segment);\n\t\t\t\t\t\t\tcharInHiresBoundary = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// for non-word char, end the boundary by pushing a segment\n\t\t\t\t\t\tthis.rawSegments.push(segment);\n\t\t\t\t\t\tcharInHiresBoundary = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.rawSegments.push(segment);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\tfirst = true;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\tfirst = false;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\tadvance(str) {\n\t\tif (!str) return;\n\n\t\tconst lines = str.split('\\n');\n\n\t\tif (lines.length > 1) {\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t}\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t}\n\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t}\n}\n\nconst n = '\\n';\n\nconst warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nclass MagicString {\n\tconstructor(string, options = {}) {\n\t\tconst chunk = new Chunk(0, string.length, string);\n\n\t\tObject.defineProperties(this, {\n\t\t\toriginal: { writable: true, value: string },\n\t\t\toutro: { writable: true, value: '' },\n\t\t\tintro: { writable: true, value: '' },\n\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\tbyStart: { writable: true, value: {} },\n\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\tindentStr: { writable: true, value: undefined },\n\t\t\tignoreList: { writable: true, value: options.ignoreList },\n\t\t});\n\n\t\tthis.byStart[0] = chunk;\n\t\tthis.byEnd[string.length] = chunk;\n\t}\n\n\taddSourcemapLocation(char) {\n\t\tthis.sourcemapLocations.add(char);\n\t}\n\n\tappend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t}\n\n\tappendLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendLeft(content);\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tappendRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendRight(content);\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\tlet originalChunk = this.firstChunk;\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\twhile (originalChunk) {\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif (nextClonedChunk) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif (this.indentExclusionRanges) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\tcloned.intro = this.intro;\n\t\tcloned.outro = this.outro;\n\n\t\treturn cloned;\n\t}\n\n\tgenerateDecodedMap(options) {\n\t\toptions = options || {};\n\n\t\tconst sourceIndex = 0;\n\t\tconst names = Object.keys(this.storedNames);\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tconst locate = getLocator(this.original);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\tconst loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tmappings.addEdit(\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tchunk.content,\n\t\t\t\t\tloc,\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: [\n\t\t\t\toptions.source ? getRelativePath(options.file || '', options.source) : options.file || '',\n\t\t\t],\n\t\t\tsourcesContent: options.includeContent ? [this.original] : undefined,\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\t_ensureindentStr() {\n\t\tif (this.indentStr === undefined) {\n\t\t\tthis.indentStr = guessIndent(this.original);\n\t\t}\n\t}\n\n\t_getRawIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr;\n\t}\n\n\tgetIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tindent(indentStr, options) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif (isObject(indentStr)) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tif (indentStr === undefined) {\n\t\t\tthis._ensureindentStr();\n\t\t\tindentStr = this.indentStr || '\\t';\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tconst isExcluded = {};\n\n\t\tif (options.exclude) {\n\t\t\tconst exclusions =\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = (match) => {\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\tlet charIndex = 0;\n\t\tlet chunk = this.firstChunk;\n\n\t\twhile (chunk) {\n\t\t\tconst end = chunk.end;\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\treturn this;\n\t}\n\n\tinsert() {\n\t\tthrow new Error(\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)',\n\t\t);\n\t}\n\n\tinsertLeft(index, content) {\n\t\tif (!warned.insertLeft) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead',\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft(index, content);\n\t}\n\n\tinsertRight(index, content) {\n\t\tif (!warned.insertRight) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead',\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight(index, content);\n\t}\n\n\tmove(start, end, index) {\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\t\tthis._split(index);\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tconst oldLeft = first.previous;\n\t\tconst oldRight = last.next;\n\n\t\tconst newRight = this.byStart[index];\n\t\tif (!newRight && last === this.lastChunk) return this;\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\tif (newLeft) newLeft.next = first;\n\t\tif (newRight) newRight.previous = last;\n\n\t\tif (!first.previous) this.firstChunk = last.next;\n\t\tif (!last.next) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif (!newLeft) this.firstChunk = first;\n\t\tif (!newRight) this.lastChunk = last;\n\t\treturn this;\n\t}\n\n\toverwrite(start, end, content, options) {\n\t\toptions = options || {};\n\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\n\t}\n\n\tupdate(start, end, content, options) {\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\tif (start === end)\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead',\n\t\t\t);\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tif (options === true) {\n\t\t\tif (!warned.storeName) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string',\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\tconst overwrite = options !== undefined ? options.overwrite : false;\n\n\t\tif (storeName) {\n\t\t\tconst original = this.original.slice(start, end);\n\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\twritable: true,\n\t\t\t\tvalue: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tif (first) {\n\t\t\tlet chunk = first;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t}\n\t\t\t\tchunk = chunk.next;\n\t\t\t\tchunk.edit('', false);\n\t\t\t}\n\n\t\t\tfirst.edit(content, storeName, !overwrite);\n\t\t} else {\n\t\t\t// must be inserting at the end\n\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprepend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t}\n\n\tprependLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependLeft(content);\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprependRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependRight(content);\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tremove(start, end) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit('');\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\t\treturn this;\n\t}\n\n\tlastChar() {\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t} while ((chunk = chunk.previous));\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\treturn '';\n\t}\n\n\tlastLine() {\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\tlet lineStr = this.outro;\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.content.length > 0) {\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t}\n\t\t} while ((chunk = chunk.previous));\n\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\treturn this.intro + lineStr;\n\t}\n\n\tslice(start = 0, end = this.original.length) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tlet result = '';\n\n\t\t// find start chunk\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t// found end chunk before start\n\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\tconst startChunk = chunk;\n\t\twhile (chunk) {\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif (containsEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// TODO deprecate this? not really very useful\n\tsnip(start, end) {\n\t\tconst clone = this.clone();\n\t\tclone.remove(0, start);\n\t\tclone.remove(end, clone.original.length);\n\n\t\treturn clone;\n\t}\n\n\t_split(index) {\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\tlet chunk = this.lastSearchedChunk;\n\t\tconst searchForward = index > chunk.end;\n\n\t\twhile (chunk) {\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t}\n\t}\n\n\t_splitChunk(chunk, index) {\n\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tconst loc = getLocator(this.original)(index);\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`,\n\t\t\t);\n\t\t}\n\n\t\tconst newChunk = chunk.split(index);\n\n\t\tthis.byEnd[index] = chunk;\n\t\tthis.byStart[index] = newChunk;\n\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\tlet str = this.intro;\n\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t}\n\n\tisEmpty() {\n\t\tlet chunk = this.firstChunk;\n\t\tdo {\n\t\t\tif (\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t)\n\t\t\t\treturn false;\n\t\t} while ((chunk = chunk.next));\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\tlet chunk = this.firstChunk;\n\t\tlet length = 0;\n\t\tdo {\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t} while ((chunk = chunk.next));\n\t\treturn length;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEndAborted(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tlet chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif (chunk.end !== end) {\n\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.previous;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimEnd(charType) {\n\t\tthis.trimEndAborted(charType);\n\t\treturn this;\n\t}\n\ttrimStartAborted(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tlet chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\tif (chunk.end !== end) {\n\t\t\t\t// special case...\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.next;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimStart(charType) {\n\t\tthis.trimStartAborted(charType);\n\t\treturn this;\n\t}\n\n\thasChanged() {\n\t\treturn this.original !== this.toString();\n\t}\n\n\t_replaceRegexp(searchValue, replacement) {\n\t\tfunction getReplacement(match, str) {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\tconst num = +i;\n\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\treturn `$${i}`;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t}\n\t\t}\n\t\tfunction matchAll(re, str) {\n\t\t\tlet match;\n\t\t\tconst matches = [];\n\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t\treturn matches;\n\t\t}\n\t\tif (searchValue.global) {\n\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tif (match.index != null)\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\tgetReplacement(match, this.original),\n\t\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tconst match = this.original.match(searchValue);\n\t\t\tif (match && match.index != null)\n\t\t\t\tthis.overwrite(\n\t\t\t\t\tmatch.index,\n\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\tgetReplacement(match, this.original),\n\t\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\t_replaceString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst index = original.indexOf(string);\n\n\t\tif (index !== -1) {\n\t\t\tthis.overwrite(index, index + string.length, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplace(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceString(searchValue, replacement);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n\n\t_replaceAllString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst stringLength = string.length;\n\t\tfor (\n\t\t\tlet index = original.indexOf(string);\n\t\t\tindex !== -1;\n\t\t\tindex = original.indexOf(string, index + stringLength)\n\t\t) {\n\t\t\tthis.overwrite(index, index + stringLength, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplaceAll(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceAllString(searchValue, replacement);\n\t\t}\n\n\t\tif (!searchValue.global) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument',\n\t\t\t);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n}\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n\nclass Bundle {\n\tconstructor(options = {}) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\t\tthis.sources = [];\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource(source) {\n\t\tif (source instanceof MagicString) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator,\n\t\t\t});\n\t\t}\n\n\t\tif (!isObject(source) || !source.content) {\n\t\t\tthrow new Error(\n\t\t\t\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`',\n\t\t\t);\n\t\t}\n\n\t\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\n\t\t\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\n\t\t});\n\n\t\tif (source.separator === undefined) {\n\t\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif (source.filename) {\n\t\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\n\t\t\t\tif (source.content.original !== uniqueSource.content) {\n\t\t\t\t\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push(source);\n\t\treturn this;\n\t}\n\n\tappend(str, options) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString(str),\n\t\t\tseparator: (options && options.separator) || '',\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator,\n\t\t});\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator,\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateDecodedMap(options = {}) {\n\t\tconst names = [];\n\t\tlet x_google_ignoreList = undefined;\n\t\tthis.sources.forEach((source) => {\n\t\t\tObject.keys(source.content.storedNames).forEach((name) => {\n\t\t\t\tif (!~names.indexOf(name)) names.push(name);\n\t\t\t});\n\t\t});\n\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tmappings.advance(this.separator);\n\t\t\t}\n\n\t\t\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\n\t\t\tconst magicString = source.content;\n\t\t\tconst locate = getLocator(magicString.original);\n\n\t\t\tif (magicString.intro) {\n\t\t\t\tmappings.advance(magicString.intro);\n\t\t\t}\n\n\t\t\tmagicString.firstChunk.eachNext((chunk) => {\n\t\t\t\tconst loc = locate(chunk.start);\n\n\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\t\tif (source.filename) {\n\t\t\t\t\tif (chunk.edited) {\n\t\t\t\t\t\tmappings.addEdit(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk.content,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.addUneditedChunk(\n\t\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tmagicString.original,\n\t\t\t\t\t\t\tloc,\n\t\t\t\t\t\t\tmagicString.sourcemapLocations,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmappings.advance(chunk.content);\n\t\t\t\t}\n\n\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t\t});\n\n\t\t\tif (magicString.outro) {\n\t\t\t\tmappings.advance(magicString.outro);\n\t\t\t}\n\n\t\t\tif (source.ignoreList && sourceIndex !== -1) {\n\t\t\t\tif (x_google_ignoreList === undefined) {\n\t\t\t\t\tx_google_ignoreList = [];\n\t\t\t\t}\n\t\t\t\tx_google_ignoreList.push(sourceIndex);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map((source) => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\tgetIndentString() {\n\t\tconst indentStringCounts = {};\n\n\t\tthis.sources.forEach((source) => {\n\t\t\tconst indentStr = source.content._getRawIndentString();\n\n\t\t\tif (indentStr === null) return;\n\n\t\t\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\n\t\t\tindentStringCounts[indentStr] += 1;\n\t\t});\n\n\t\treturn (\n\t\t\tObject.keys(indentStringCounts).sort((a, b) => {\n\t\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t\t})[0] || '\\t'\n\t\t);\n\t}\n\n\tindent(indentStr) {\n\t\tif (!arguments.length) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\n\n\t\tthis.sources.forEach((source, i) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\n\n\t\t\tsource.content.indent(indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart, //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.lastChar() === '\\n';\n\t\t});\n\n\t\tif (this.intro) {\n\t\t\tthis.intro =\n\t\t\t\tindentStr +\n\t\t\t\tthis.intro.replace(/^[^\\n]/gm, (match, index) => {\n\t\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprepend(str) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString() {\n\t\tconst body = this.sources\n\t\t\t.map((source, i) => {\n\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\t\tconst str = (i > 0 ? separator : '') + source.content.toString();\n\n\t\t\t\treturn str;\n\t\t\t})\n\t\t\t.join('');\n\n\t\treturn this.intro + body;\n\t}\n\n\tisEmpty() {\n\t\tif (this.intro.length && this.intro.trim()) return false;\n\t\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\treturn this.sources.reduce(\n\t\t\t(length, source) => length + source.content.length(),\n\t\t\tthis.intro.length,\n\t\t);\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimStart(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\t\tthis.intro = this.intro.replace(rx, '');\n\n\t\tif (!this.intro) {\n\t\t\tlet source;\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i++];\n\t\t\t\tif (!source) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (!source.content.trimStartAborted(charType));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tlet source;\n\t\tlet i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i--];\n\t\t\tif (!source) {\n\t\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!source.content.trimEndAborted(charType));\n\n\t\treturn this;\n\t}\n}\n\nexport { Bundle, SourceMap, MagicString as default };\n//# sourceMappingURL=magic-string.es.mjs.map\n","import type { CallExpression, Node, ObjectPattern, Program } from '@babel/types'\r\nimport type { SFCDescriptor } from '../parse'\r\nimport { generateCodeFrame, isArray } from '@vue/shared'\r\nimport { type ParserPlugin, parse as babelParse } from '@babel/parser'\r\nimport type { ImportBinding, SFCScriptCompileOptions } from '../compileScript'\r\nimport type { PropsDestructureBindings } from './defineProps'\r\nimport type { ModelDecl } from './defineModel'\r\nimport type { BindingMetadata } from '../../../compiler-core/src'\r\nimport MagicString from 'magic-string'\r\nimport type { TypeScope } from './resolveType'\r\n\r\nexport class ScriptCompileContext {\r\n  isJS: boolean\r\n  isTS: boolean\r\n  isCE = false\r\n\r\n  scriptAst: Program | null\r\n  scriptSetupAst: Program | null\r\n\r\n  source = this.descriptor.source\r\n  filename = this.descriptor.filename\r\n  s = new MagicString(this.source)\r\n  startOffset = this.descriptor.scriptSetup?.loc.start.offset\r\n  endOffset = this.descriptor.scriptSetup?.loc.end.offset\r\n\r\n  // import / type analysis\r\n  scope?: TypeScope\r\n  globalScopes?: TypeScope[]\r\n  userImports: Record<string, ImportBinding> = Object.create(null)\r\n\r\n  // macros presence check\r\n  hasDefinePropsCall = false\r\n  hasDefineEmitCall = false\r\n  hasDefineExposeCall = false\r\n  hasDefaultExportName = false\r\n  hasDefaultExportRender = false\r\n  hasDefineOptionsCall = false\r\n  hasDefineSlotsCall = false\r\n  hasDefineModelCall = false\r\n\r\n  // defineProps\r\n  propsCall: CallExpression | undefined\r\n  propsDecl: Node | undefined\r\n  propsRuntimeDecl: Node | undefined\r\n  propsTypeDecl: Node | undefined\r\n  propsDestructureDecl: ObjectPattern | undefined\r\n  propsDestructuredBindings: PropsDestructureBindings = Object.create(null)\r\n  propsDestructureRestId: string | undefined\r\n  propsRuntimeDefaults: Node | undefined\r\n\r\n  // defineEmits\r\n  emitsRuntimeDecl: Node | undefined\r\n  emitsTypeDecl: Node | undefined\r\n  emitDecl: Node | undefined\r\n\r\n  // defineModel\r\n  modelDecls: Record<string, ModelDecl> = Object.create(null)\r\n\r\n  // defineOptions\r\n  optionsRuntimeDecl: Node | undefined\r\n\r\n  // codegen\r\n  bindingMetadata: BindingMetadata = {}\r\n  helperImports: Set<string> = new Set()\r\n  helper(key: string): string {\r\n    this.helperImports.add(key)\r\n    return `_${key}`\r\n  }\r\n\r\n  /**\r\n   * to be exposed on compiled script block for HMR cache busting\r\n   */\r\n  deps?: Set<string>\r\n\r\n  /**\r\n   * cache for resolved fs\r\n   */\r\n  fs?: NonNullable<SFCScriptCompileOptions['fs']>\r\n\r\n  constructor(\r\n    public descriptor: SFCDescriptor,\r\n    public options: Partial<SFCScriptCompileOptions>,\r\n  ) {\r\n    const { script, scriptSetup } = descriptor\r\n    const scriptLang = script && script.lang\r\n    const scriptSetupLang = scriptSetup && scriptSetup.lang\r\n\r\n    this.isJS =\r\n      scriptLang === 'js' ||\r\n      scriptLang === 'jsx' ||\r\n      scriptSetupLang === 'js' ||\r\n      scriptSetupLang === 'jsx'\r\n    this.isTS =\r\n      scriptLang === 'ts' ||\r\n      scriptLang === 'tsx' ||\r\n      scriptSetupLang === 'ts' ||\r\n      scriptSetupLang === 'tsx'\r\n\r\n    const customElement = options.customElement\r\n    const filename = this.descriptor.filename\r\n    if (customElement) {\r\n      this.isCE =\r\n        typeof customElement === 'boolean'\r\n          ? customElement\r\n          : customElement(filename)\r\n    }\r\n    // resolve parser plugins\r\n    const plugins: ParserPlugin[] = resolveParserPlugins(\r\n      (scriptLang || scriptSetupLang)!,\r\n      options.babelParserPlugins,\r\n    )\r\n\r\n    function parse(input: string, offset: number): Program {\r\n      try {\r\n        return babelParse(input, {\r\n          plugins,\r\n          sourceType: 'module',\r\n        }).program\r\n      } catch (e: any) {\r\n        e.message = `[vue/compiler-sfc] ${e.message}\\n\\n${\r\n          descriptor.filename\r\n        }\\n${generateCodeFrame(\r\n          descriptor.source,\r\n          e.pos + offset,\r\n          e.pos + offset + 1,\r\n        )}`\r\n        throw e\r\n      }\r\n    }\r\n\r\n    this.scriptAst =\r\n      descriptor.script &&\r\n      parse(descriptor.script.content, descriptor.script.loc.start.offset)\r\n\r\n    this.scriptSetupAst =\r\n      descriptor.scriptSetup &&\r\n      parse(descriptor.scriptSetup!.content, this.startOffset!)\r\n  }\r\n\r\n  getString(node: Node, scriptSetup = true): string {\r\n    const block = scriptSetup\r\n      ? this.descriptor.scriptSetup!\r\n      : this.descriptor.script!\r\n    return block.content.slice(node.start!, node.end!)\r\n  }\r\n\r\n  error(msg: string, node: Node, scope?: TypeScope): never {\r\n    const offset = scope ? scope.offset : this.startOffset!\r\n    throw new Error(\r\n      `[@vue/compiler-sfc] ${msg}\\n\\n${\r\n        (scope || this.descriptor).filename\r\n      }\\n${generateCodeFrame(\r\n        (scope || this.descriptor).source,\r\n        node.start! + offset,\r\n        node.end! + offset,\r\n      )}`,\r\n    )\r\n  }\r\n}\r\n\r\nexport function resolveParserPlugins(\r\n  lang: string,\r\n  userPlugins?: ParserPlugin[],\r\n  dts = false,\r\n) {\r\n  const plugins: ParserPlugin[] = []\r\n  if (\r\n    !userPlugins ||\r\n    !userPlugins.some(\r\n      p =>\r\n        p === 'importAssertions' ||\r\n        p === 'importAttributes' ||\r\n        (isArray(p) && p[0] === 'importAttributes'),\r\n    )\r\n  ) {\r\n    plugins.push('importAttributes')\r\n  }\r\n  if (lang === 'jsx' || lang === 'tsx') {\r\n    plugins.push('jsx')\r\n  } else if (userPlugins) {\r\n    // If don't match the case of adding jsx\r\n    // should remove the jsx from user options\r\n    userPlugins = userPlugins.filter(p => p !== 'jsx')\r\n  }\r\n  if (lang === 'ts' || lang === 'tsx') {\r\n    plugins.push(['typescript', { dts }], 'explicitResourceManagement')\r\n    if (!userPlugins || !userPlugins.includes('decorators')) {\r\n      plugins.push('decorators-legacy')\r\n    }\r\n  }\r\n  if (userPlugins) {\r\n    plugins.push(...userPlugins)\r\n  }\r\n  return plugins\r\n}\r\n","import { parse } from '@babel/parser'\r\nimport MagicString from 'magic-string'\r\nimport type { ParserPlugin } from '@babel/parser'\r\nimport type { Identifier, Statement } from '@babel/types'\r\nimport { resolveParserPlugins } from './script/context'\r\n\r\nexport function rewriteDefault(\r\n  input: string,\r\n  as: string,\r\n  parserPlugins?: ParserPlugin[],\r\n): string {\r\n  const ast = parse(input, {\r\n    sourceType: 'module',\r\n    plugins: resolveParserPlugins('js', parserPlugins),\r\n  }).program.body\r\n  const s = new MagicString(input)\r\n\r\n  rewriteDefaultAST(ast, s, as)\r\n\r\n  return s.toString()\r\n}\r\n\r\n/**\r\n * Utility for rewriting `export default` in a script block into a variable\r\n * declaration so that we can inject things into it\r\n */\r\nexport function rewriteDefaultAST(\r\n  ast: Statement[],\r\n  s: MagicString,\r\n  as: string,\r\n): void {\r\n  if (!hasDefaultExport(ast)) {\r\n    s.append(`\\nconst ${as} = {}`)\r\n    return\r\n  }\r\n\r\n  // if the script somehow still contains `default export`, it probably has\r\n  // multi-line comments or template strings. fallback to a full parse.\r\n  ast.forEach(node => {\r\n    if (node.type === 'ExportDefaultDeclaration') {\r\n      if (node.declaration.type === 'ClassDeclaration' && node.declaration.id) {\r\n        let start: number =\r\n          node.declaration.decorators && node.declaration.decorators.length > 0\r\n            ? node.declaration.decorators[\r\n                node.declaration.decorators.length - 1\r\n              ].end!\r\n            : node.start!\r\n        s.overwrite(start, node.declaration.id.start!, ` class `)\r\n        s.append(`\\nconst ${as} = ${node.declaration.id.name}`)\r\n      } else {\r\n        s.overwrite(node.start!, node.declaration.start!, `const ${as} = `)\r\n      }\r\n    } else if (node.type === 'ExportNamedDeclaration') {\r\n      for (const specifier of node.specifiers) {\r\n        if (\r\n          specifier.type === 'ExportSpecifier' &&\r\n          specifier.exported.type === 'Identifier' &&\r\n          specifier.exported.name === 'default'\r\n        ) {\r\n          if (node.source) {\r\n            if (specifier.local.name === 'default') {\r\n              s.prepend(\r\n                `import { default as __VUE_DEFAULT__ } from '${node.source.value}'\\n`,\r\n              )\r\n              const end = specifierEnd(s, specifier.local.end!, node.end!)\r\n              s.remove(specifier.start!, end)\r\n              s.append(`\\nconst ${as} = __VUE_DEFAULT__`)\r\n              continue\r\n            } else {\r\n              s.prepend(\r\n                `import { ${s.slice(\r\n                  specifier.local.start!,\r\n                  specifier.local.end!,\r\n                )} as __VUE_DEFAULT__ } from '${node.source.value}'\\n`,\r\n              )\r\n              const end = specifierEnd(s, specifier.exported.end!, node.end!)\r\n              s.remove(specifier.start!, end)\r\n              s.append(`\\nconst ${as} = __VUE_DEFAULT__`)\r\n              continue\r\n            }\r\n          }\r\n\r\n          const end = specifierEnd(s, specifier.end!, node.end!)\r\n          s.remove(specifier.start!, end)\r\n          s.append(`\\nconst ${as} = ${specifier.local.name}`)\r\n        }\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport function hasDefaultExport(ast: Statement[]): boolean {\r\n  for (const stmt of ast) {\r\n    if (stmt.type === 'ExportDefaultDeclaration') {\r\n      return true\r\n    } else if (\r\n      stmt.type === 'ExportNamedDeclaration' &&\r\n      stmt.specifiers.some(\r\n        spec => (spec.exported as Identifier).name === 'default',\r\n      )\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction specifierEnd(s: MagicString, end: number, nodeEnd: number | null) {\r\n  // export { default   , foo } ...\r\n  let hasCommas = false\r\n  let oldEnd = end\r\n  while (end < nodeEnd!) {\r\n    if (/\\s/.test(s.slice(end, end + 1))) {\r\n      end++\r\n    } else if (s.slice(end, end + 1) === ',') {\r\n      end++\r\n      hasCommas = true\r\n      break\r\n    } else if (s.slice(end, end + 1) === '}') {\r\n      break\r\n    }\r\n  }\r\n  return hasCommas ? end : oldEnd\r\n}\r\n","import { analyzeScriptBindings } from './analyzeScriptBindings'\r\nimport type { ScriptCompileContext } from './context'\r\nimport MagicString from 'magic-string'\r\nimport { rewriteDefaultAST } from '../rewriteDefault'\r\nimport { genNormalScriptCssVarsCode } from '../style/cssVars'\r\n\r\nexport const normalScriptDefaultVar = `__default__`\r\n\r\nexport function processNormalScript(\r\n  ctx: ScriptCompileContext,\r\n  scopeId: string,\r\n) {\r\n  const script = ctx.descriptor.script!\r\n  if (script.lang && !ctx.isJS && !ctx.isTS) {\r\n    // do not process non js/ts script blocks\r\n    return script\r\n  }\r\n  try {\r\n    let content = script.content\r\n    let map = script.map\r\n    const scriptAst = ctx.scriptAst!\r\n    const bindings = analyzeScriptBindings(scriptAst.body)\r\n    const { cssVars } = ctx.descriptor\r\n    const { genDefaultAs, isProd } = ctx.options\r\n\r\n    if (cssVars.length || genDefaultAs) {\r\n      const defaultVar = genDefaultAs || normalScriptDefaultVar\r\n      const s = new MagicString(content)\r\n      rewriteDefaultAST(scriptAst.body, s, defaultVar)\r\n      content = s.toString()\r\n      if (cssVars.length && !ctx.options.templateOptions?.ssr) {\r\n        content += genNormalScriptCssVarsCode(\r\n          cssVars,\r\n          bindings,\r\n          scopeId,\r\n          !!isProd,\r\n          defaultVar,\r\n        )\r\n      }\r\n      if (!genDefaultAs) {\r\n        content += `\\nexport default ${defaultVar}`\r\n      }\r\n    }\r\n    return {\r\n      ...script,\r\n      content,\r\n      map,\r\n      bindings,\r\n      scriptAst: scriptAst.body,\r\n    }\r\n  } catch (e: any) {\r\n    // silently fallback if parse fails since user may be using custom\r\n    // babel syntax\r\n    return script\r\n  }\r\n}\r\n","import type {\r\n  Expression,\r\n  Identifier,\r\n  Node,\r\n  Statement,\r\n  TSCallSignatureDeclaration,\r\n  TSEnumDeclaration,\r\n  TSExpressionWithTypeArguments,\r\n  TSFunctionType,\r\n  TSImportType,\r\n  TSIndexedAccessType,\r\n  TSInterfaceDeclaration,\r\n  TSMappedType,\r\n  TSMethodSignature,\r\n  TSModuleBlock,\r\n  TSModuleDeclaration,\r\n  TSPropertySignature,\r\n  TSQualifiedName,\r\n  TSType,\r\n  TSTypeAnnotation,\r\n  TSTypeElement,\r\n  TSTypeLiteral,\r\n  TSTypeQuery,\r\n  TSTypeReference,\r\n  TemplateLiteral,\r\n} from '@babel/types'\r\nimport {\r\n  UNKNOWN_TYPE,\r\n  createGetCanonicalFileName,\r\n  getId,\r\n  getImportedName,\r\n  joinPaths,\r\n  normalizePath,\r\n} from './utils'\r\nimport { type ScriptCompileContext, resolveParserPlugins } from './context'\r\nimport type { ImportBinding, SFCScriptCompileOptions } from '../compileScript'\r\nimport { capitalize, hasOwn } from '@vue/shared'\r\nimport { parse as babelParse } from '@babel/parser'\r\nimport { parse } from '../parse'\r\nimport { createCache } from '../cache'\r\nimport type TS from 'typescript'\r\nimport { dirname, extname, join } from 'path'\r\nimport { minimatch as isMatch } from 'minimatch'\r\nimport * as process from 'process'\r\n\r\nexport type SimpleTypeResolveOptions = Partial<\r\n  Pick<\r\n    SFCScriptCompileOptions,\r\n    'globalTypeFiles' | 'fs' | 'babelParserPlugins' | 'isProd'\r\n  >\r\n>\r\n\r\n/**\r\n * TypeResolveContext is compatible with ScriptCompileContext\r\n * but also allows a simpler version of it with minimal required properties\r\n * when resolveType needs to be used in a non-SFC context, e.g. in a babel\r\n * plugin. The simplest context can be just:\r\n * ```ts\r\n * const ctx: SimpleTypeResolveContext = {\r\n *   filename: '...',\r\n *   source: '...',\r\n *   options: {},\r\n *   error() {},\r\n *   ast: []\r\n * }\r\n * ```\r\n */\r\nexport type SimpleTypeResolveContext = Pick<\r\n  ScriptCompileContext,\r\n  // file\r\n  | 'source'\r\n  | 'filename'\r\n\r\n  // utils\r\n  | 'error'\r\n  | 'helper'\r\n  | 'getString'\r\n\r\n  // props\r\n  | 'propsTypeDecl'\r\n  | 'propsRuntimeDefaults'\r\n  | 'propsDestructuredBindings'\r\n\r\n  // emits\r\n  | 'emitsTypeDecl'\r\n\r\n  // customElement\r\n  | 'isCE'\r\n> &\r\n  Partial<\r\n    Pick<ScriptCompileContext, 'scope' | 'globalScopes' | 'deps' | 'fs'>\r\n  > & {\r\n    ast: Statement[]\r\n    options: SimpleTypeResolveOptions\r\n  }\r\n\r\nexport type TypeResolveContext = ScriptCompileContext | SimpleTypeResolveContext\r\n\r\ntype Import = Pick<ImportBinding, 'source' | 'imported'>\r\n\r\ninterface WithScope {\r\n  _ownerScope: TypeScope\r\n}\r\n\r\n// scope types always has ownerScope attached\r\ntype ScopeTypeNode = Node &\r\n  WithScope & { _ns?: TSModuleDeclaration & WithScope }\r\n\r\nexport class TypeScope {\r\n  constructor(\r\n    public filename: string,\r\n    public source: string,\r\n    public offset: number = 0,\r\n    public imports: Record<string, Import> = Object.create(null),\r\n    public types: Record<string, ScopeTypeNode> = Object.create(null),\r\n    public declares: Record<string, ScopeTypeNode> = Object.create(null),\r\n  ) {}\r\n  isGenericScope = false\r\n  resolvedImportSources: Record<string, string> = Object.create(null)\r\n  exportedTypes: Record<string, ScopeTypeNode> = Object.create(null)\r\n  exportedDeclares: Record<string, ScopeTypeNode> = Object.create(null)\r\n}\r\n\r\nexport interface MaybeWithScope {\r\n  _ownerScope?: TypeScope\r\n}\r\n\r\ninterface ResolvedElements {\r\n  props: Record<\r\n    string,\r\n    (TSPropertySignature | TSMethodSignature) & {\r\n      // resolved props always has ownerScope attached\r\n      _ownerScope: TypeScope\r\n    }\r\n  >\r\n  calls?: (TSCallSignatureDeclaration | TSFunctionType)[]\r\n}\r\n\r\n/**\r\n * Resolve arbitrary type node to a list of type elements that can be then\r\n * mapped to runtime props or emits.\r\n */\r\nexport function resolveTypeElements(\r\n  ctx: TypeResolveContext,\r\n  node: Node & MaybeWithScope & { _resolvedElements?: ResolvedElements },\r\n  scope?: TypeScope,\r\n  typeParameters?: Record<string, Node>,\r\n): ResolvedElements {\r\n  const canCache = !typeParameters\r\n  if (canCache && node._resolvedElements) {\r\n    return node._resolvedElements\r\n  }\r\n  const resolved = innerResolveTypeElements(\r\n    ctx,\r\n    node,\r\n    node._ownerScope || scope || ctxToScope(ctx),\r\n    typeParameters,\r\n  )\r\n  return canCache ? (node._resolvedElements = resolved) : resolved\r\n}\r\n\r\nfunction innerResolveTypeElements(\r\n  ctx: TypeResolveContext,\r\n  node: Node,\r\n  scope: TypeScope,\r\n  typeParameters?: Record<string, Node>,\r\n): ResolvedElements {\r\n  switch (node.type) {\r\n    case 'TSTypeLiteral':\r\n      return typeElementsToMap(ctx, node.members, scope, typeParameters)\r\n    case 'TSInterfaceDeclaration':\r\n      return resolveInterfaceMembers(ctx, node, scope, typeParameters)\r\n    case 'TSTypeAliasDeclaration':\r\n    case 'TSParenthesizedType':\r\n      return resolveTypeElements(\r\n        ctx,\r\n        node.typeAnnotation,\r\n        scope,\r\n        typeParameters,\r\n      )\r\n    case 'TSFunctionType': {\r\n      return { props: {}, calls: [node] }\r\n    }\r\n    case 'TSUnionType':\r\n    case 'TSIntersectionType':\r\n      return mergeElements(\r\n        node.types.map(t => resolveTypeElements(ctx, t, scope, typeParameters)),\r\n        node.type,\r\n      )\r\n    case 'TSMappedType':\r\n      return resolveMappedType(ctx, node, scope)\r\n    case 'TSIndexedAccessType': {\r\n      const types = resolveIndexType(ctx, node, scope)\r\n      return mergeElements(\r\n        types.map(t => resolveTypeElements(ctx, t, t._ownerScope)),\r\n        'TSUnionType',\r\n      )\r\n    }\r\n    case 'TSExpressionWithTypeArguments': // referenced by interface extends\r\n    case 'TSTypeReference': {\r\n      const typeName = getReferenceName(node)\r\n      if (\r\n        (typeName === 'ExtractPropTypes' ||\r\n          typeName === 'ExtractPublicPropTypes') &&\r\n        node.typeParameters &&\r\n        scope.imports[typeName]?.source === 'vue'\r\n      ) {\r\n        return resolveExtractPropTypes(\r\n          resolveTypeElements(\r\n            ctx,\r\n            node.typeParameters.params[0],\r\n            scope,\r\n            typeParameters,\r\n          ),\r\n          scope,\r\n        )\r\n      }\r\n      const resolved = resolveTypeReference(ctx, node, scope)\r\n      if (resolved) {\r\n        let typeParams: Record<string, Node> | undefined\r\n        if (\r\n          (resolved.type === 'TSTypeAliasDeclaration' ||\r\n            resolved.type === 'TSInterfaceDeclaration') &&\r\n          resolved.typeParameters &&\r\n          node.typeParameters\r\n        ) {\r\n          typeParams = Object.create(null)\r\n          resolved.typeParameters.params.forEach((p, i) => {\r\n            let param = typeParameters && typeParameters[p.name]\r\n            if (!param) param = node.typeParameters!.params[i]\r\n            typeParams![p.name] = param\r\n          })\r\n        }\r\n        return resolveTypeElements(\r\n          ctx,\r\n          resolved,\r\n          resolved._ownerScope,\r\n          typeParams,\r\n        )\r\n      } else {\r\n        if (typeof typeName === 'string') {\r\n          if (typeParameters && typeParameters[typeName]) {\r\n            return resolveTypeElements(\r\n              ctx,\r\n              typeParameters[typeName],\r\n              scope,\r\n              typeParameters,\r\n            )\r\n          }\r\n          if (\r\n            // @ts-expect-error\r\n            SupportedBuiltinsSet.has(typeName)\r\n          ) {\r\n            return resolveBuiltin(\r\n              ctx,\r\n              node,\r\n              typeName as any,\r\n              scope,\r\n              typeParameters,\r\n            )\r\n          } else if (typeName === 'ReturnType' && node.typeParameters) {\r\n            // limited support, only reference types\r\n            const ret = resolveReturnType(\r\n              ctx,\r\n              node.typeParameters.params[0],\r\n              scope,\r\n            )\r\n            if (ret) {\r\n              return resolveTypeElements(ctx, ret, scope)\r\n            }\r\n          }\r\n        }\r\n        return ctx.error(\r\n          `Unresolvable type reference or unsupported built-in utility type`,\r\n          node,\r\n          scope,\r\n        )\r\n      }\r\n    }\r\n    case 'TSImportType': {\r\n      if (\r\n        getId(node.argument) === 'vue' &&\r\n        node.qualifier?.type === 'Identifier' &&\r\n        node.qualifier.name === 'ExtractPropTypes' &&\r\n        node.typeParameters\r\n      ) {\r\n        return resolveExtractPropTypes(\r\n          resolveTypeElements(ctx, node.typeParameters.params[0], scope),\r\n          scope,\r\n        )\r\n      }\r\n      const sourceScope = importSourceToScope(\r\n        ctx,\r\n        node.argument,\r\n        scope,\r\n        node.argument.value,\r\n      )\r\n      const resolved = resolveTypeReference(ctx, node, sourceScope)\r\n      if (resolved) {\r\n        return resolveTypeElements(ctx, resolved, resolved._ownerScope)\r\n      }\r\n      break\r\n    }\r\n    case 'TSTypeQuery':\r\n      {\r\n        const resolved = resolveTypeReference(ctx, node, scope)\r\n        if (resolved) {\r\n          return resolveTypeElements(ctx, resolved, resolved._ownerScope)\r\n        }\r\n      }\r\n      break\r\n  }\r\n  return ctx.error(`Unresolvable type: ${node.type}`, node, scope)\r\n}\r\n\r\nfunction typeElementsToMap(\r\n  ctx: TypeResolveContext,\r\n  elements: TSTypeElement[],\r\n  scope = ctxToScope(ctx),\r\n  typeParameters?: Record<string, Node>,\r\n): ResolvedElements {\r\n  const res: ResolvedElements = { props: {} }\r\n  for (const e of elements) {\r\n    if (e.type === 'TSPropertySignature' || e.type === 'TSMethodSignature') {\r\n      // capture generic parameters on node's scope\r\n      if (typeParameters) {\r\n        scope = createChildScope(scope)\r\n        scope.isGenericScope = true\r\n        Object.assign(scope.types, typeParameters)\r\n      }\r\n      ;(e as MaybeWithScope)._ownerScope = scope\r\n      const name = getId(e.key)\r\n      if (name && !e.computed) {\r\n        res.props[name] = e as ResolvedElements['props'][string]\r\n      } else if (e.key.type === 'TemplateLiteral') {\r\n        for (const key of resolveTemplateKeys(ctx, e.key, scope)) {\r\n          res.props[key] = e as ResolvedElements['props'][string]\r\n        }\r\n      } else {\r\n        ctx.error(\r\n          `Unsupported computed key in type referenced by a macro`,\r\n          e.key,\r\n          scope,\r\n        )\r\n      }\r\n    } else if (e.type === 'TSCallSignatureDeclaration') {\r\n      ;(res.calls || (res.calls = [])).push(e)\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nfunction mergeElements(\r\n  maps: ResolvedElements[],\r\n  type: 'TSUnionType' | 'TSIntersectionType',\r\n): ResolvedElements {\r\n  if (maps.length === 1) return maps[0]\r\n  const res: ResolvedElements = { props: {} }\r\n  const { props: baseProps } = res\r\n  for (const { props, calls } of maps) {\r\n    for (const key in props) {\r\n      if (!hasOwn(baseProps, key)) {\r\n        baseProps[key] = props[key]\r\n      } else {\r\n        baseProps[key] = createProperty(\r\n          baseProps[key].key,\r\n          {\r\n            type,\r\n            // @ts-expect-error\r\n            types: [baseProps[key], props[key]],\r\n          },\r\n          baseProps[key]._ownerScope,\r\n          baseProps[key].optional || props[key].optional,\r\n        )\r\n      }\r\n    }\r\n    if (calls) {\r\n      ;(res.calls || (res.calls = [])).push(...calls)\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nfunction createProperty(\r\n  key: Expression,\r\n  typeAnnotation: TSType,\r\n  scope: TypeScope,\r\n  optional: boolean,\r\n): TSPropertySignature & WithScope {\r\n  return {\r\n    type: 'TSPropertySignature',\r\n    key,\r\n    kind: 'get',\r\n    optional,\r\n    typeAnnotation: {\r\n      type: 'TSTypeAnnotation',\r\n      typeAnnotation,\r\n    },\r\n    _ownerScope: scope,\r\n  }\r\n}\r\n\r\nfunction resolveInterfaceMembers(\r\n  ctx: TypeResolveContext,\r\n  node: TSInterfaceDeclaration & MaybeWithScope,\r\n  scope: TypeScope,\r\n  typeParameters?: Record<string, Node>,\r\n): ResolvedElements {\r\n  const base = typeElementsToMap(\r\n    ctx,\r\n    node.body.body,\r\n    node._ownerScope,\r\n    typeParameters,\r\n  )\r\n  if (node.extends) {\r\n    for (const ext of node.extends) {\r\n      if (\r\n        ext.leadingComments &&\r\n        ext.leadingComments.some(c => c.value.includes('@vue-ignore'))\r\n      ) {\r\n        continue\r\n      }\r\n      try {\r\n        const { props, calls } = resolveTypeElements(ctx, ext, scope)\r\n        for (const key in props) {\r\n          if (!hasOwn(base.props, key)) {\r\n            base.props[key] = props[key]\r\n          }\r\n        }\r\n        if (calls) {\r\n          ;(base.calls || (base.calls = [])).push(...calls)\r\n        }\r\n      } catch (e) {\r\n        ctx.error(\r\n          `Failed to resolve extends base type.\\nIf this previously worked in 3.2, ` +\r\n            `you can instruct the compiler to ignore this extend by adding ` +\r\n            `/* @vue-ignore */ before it, for example:\\n\\n` +\r\n            `interface Props extends /* @vue-ignore */ Base {}\\n\\n` +\r\n            `Note: both in 3.2 or with the ignore, the properties in the base ` +\r\n            `type are treated as fallthrough attrs at runtime.`,\r\n          ext,\r\n        )\r\n      }\r\n    }\r\n  }\r\n  return base\r\n}\r\n\r\nfunction resolveMappedType(\r\n  ctx: TypeResolveContext,\r\n  node: TSMappedType,\r\n  scope: TypeScope,\r\n): ResolvedElements {\r\n  const res: ResolvedElements = { props: {} }\r\n  const keys = resolveStringType(ctx, node.typeParameter.constraint!, scope)\r\n  for (const key of keys) {\r\n    res.props[key] = createProperty(\r\n      {\r\n        type: 'Identifier',\r\n        name: key,\r\n      },\r\n      node.typeAnnotation!,\r\n      scope,\r\n      !!node.optional,\r\n    )\r\n  }\r\n  return res\r\n}\r\n\r\nfunction resolveIndexType(\r\n  ctx: TypeResolveContext,\r\n  node: TSIndexedAccessType,\r\n  scope: TypeScope,\r\n): (TSType & MaybeWithScope)[] {\r\n  if (node.indexType.type === 'TSNumberKeyword') {\r\n    return resolveArrayElementType(ctx, node.objectType, scope)\r\n  }\r\n\r\n  const { indexType, objectType } = node\r\n  const types: TSType[] = []\r\n  let keys: string[]\r\n  let resolved: ResolvedElements\r\n  if (indexType.type === 'TSStringKeyword') {\r\n    resolved = resolveTypeElements(ctx, objectType, scope)\r\n    keys = Object.keys(resolved.props)\r\n  } else {\r\n    keys = resolveStringType(ctx, indexType, scope)\r\n    resolved = resolveTypeElements(ctx, objectType, scope)\r\n  }\r\n  for (const key of keys) {\r\n    const targetType = resolved.props[key]?.typeAnnotation?.typeAnnotation\r\n    if (targetType) {\r\n      ;(targetType as TSType & MaybeWithScope)._ownerScope =\r\n        resolved.props[key]._ownerScope\r\n      types.push(targetType)\r\n    }\r\n  }\r\n  return types\r\n}\r\n\r\nfunction resolveArrayElementType(\r\n  ctx: TypeResolveContext,\r\n  node: Node,\r\n  scope: TypeScope,\r\n): TSType[] {\r\n  // type[]\r\n  if (node.type === 'TSArrayType') {\r\n    return [node.elementType]\r\n  }\r\n  // tuple\r\n  if (node.type === 'TSTupleType') {\r\n    return node.elementTypes.map(t =>\r\n      t.type === 'TSNamedTupleMember' ? t.elementType : t,\r\n    )\r\n  }\r\n  if (node.type === 'TSTypeReference') {\r\n    // Array<type>\r\n    if (getReferenceName(node) === 'Array' && node.typeParameters) {\r\n      return node.typeParameters.params\r\n    } else {\r\n      const resolved = resolveTypeReference(ctx, node, scope)\r\n      if (resolved) {\r\n        return resolveArrayElementType(ctx, resolved, scope)\r\n      }\r\n    }\r\n  }\r\n  return ctx.error(\r\n    'Failed to resolve element type from target type',\r\n    node,\r\n    scope,\r\n  )\r\n}\r\n\r\nfunction resolveStringType(\r\n  ctx: TypeResolveContext,\r\n  node: Node,\r\n  scope: TypeScope,\r\n): string[] {\r\n  switch (node.type) {\r\n    case 'StringLiteral':\r\n      return [node.value]\r\n    case 'TSLiteralType':\r\n      return resolveStringType(ctx, node.literal, scope)\r\n    case 'TSUnionType':\r\n      return node.types.map(t => resolveStringType(ctx, t, scope)).flat()\r\n    case 'TemplateLiteral': {\r\n      return resolveTemplateKeys(ctx, node, scope)\r\n    }\r\n    case 'TSTypeReference': {\r\n      const resolved = resolveTypeReference(ctx, node, scope)\r\n      if (resolved) {\r\n        return resolveStringType(ctx, resolved, scope)\r\n      }\r\n      if (node.typeName.type === 'Identifier') {\r\n        const getParam = (index = 0) =>\r\n          resolveStringType(ctx, node.typeParameters!.params[index], scope)\r\n        switch (node.typeName.name) {\r\n          case 'Extract':\r\n            return getParam(1)\r\n          case 'Exclude': {\r\n            const excluded = getParam(1)\r\n            return getParam().filter(s => !excluded.includes(s))\r\n          }\r\n          case 'Uppercase':\r\n            return getParam().map(s => s.toUpperCase())\r\n          case 'Lowercase':\r\n            return getParam().map(s => s.toLowerCase())\r\n          case 'Capitalize':\r\n            return getParam().map(capitalize)\r\n          case 'Uncapitalize':\r\n            return getParam().map(s => s[0].toLowerCase() + s.slice(1))\r\n          default:\r\n            ctx.error(\r\n              'Unsupported type when resolving index type',\r\n              node.typeName,\r\n              scope,\r\n            )\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return ctx.error('Failed to resolve index type into finite keys', node, scope)\r\n}\r\n\r\nfunction resolveTemplateKeys(\r\n  ctx: TypeResolveContext,\r\n  node: TemplateLiteral,\r\n  scope: TypeScope,\r\n): string[] {\r\n  if (!node.expressions.length) {\r\n    return [node.quasis[0].value.raw]\r\n  }\r\n\r\n  const res: string[] = []\r\n  const e = node.expressions[0]\r\n  const q = node.quasis[0]\r\n  const leading = q ? q.value.raw : ``\r\n  const resolved = resolveStringType(ctx, e, scope)\r\n  const restResolved = resolveTemplateKeys(\r\n    ctx,\r\n    {\r\n      ...node,\r\n      expressions: node.expressions.slice(1),\r\n      quasis: q ? node.quasis.slice(1) : node.quasis,\r\n    },\r\n    scope,\r\n  )\r\n\r\n  for (const r of resolved) {\r\n    for (const rr of restResolved) {\r\n      res.push(leading + r + rr)\r\n    }\r\n  }\r\n\r\n  return res\r\n}\r\n\r\nconst SupportedBuiltinsSet = new Set([\r\n  'Partial',\r\n  'Required',\r\n  'Readonly',\r\n  'Pick',\r\n  'Omit',\r\n] as const)\r\n\r\ntype GetSetType<T> = T extends Set<infer V> ? V : never\r\n\r\nfunction resolveBuiltin(\r\n  ctx: TypeResolveContext,\r\n  node: TSTypeReference | TSExpressionWithTypeArguments,\r\n  name: GetSetType<typeof SupportedBuiltinsSet>,\r\n  scope: TypeScope,\r\n  typeParameters?: Record<string, Node>,\r\n): ResolvedElements {\r\n  const t = resolveTypeElements(\r\n    ctx,\r\n    node.typeParameters!.params[0],\r\n    scope,\r\n    typeParameters,\r\n  )\r\n  switch (name) {\r\n    case 'Partial': {\r\n      const res: ResolvedElements = { props: {}, calls: t.calls }\r\n      Object.keys(t.props).forEach(key => {\r\n        res.props[key] = { ...t.props[key], optional: true }\r\n      })\r\n      return res\r\n    }\r\n    case 'Required': {\r\n      const res: ResolvedElements = { props: {}, calls: t.calls }\r\n      Object.keys(t.props).forEach(key => {\r\n        res.props[key] = { ...t.props[key], optional: false }\r\n      })\r\n      return res\r\n    }\r\n    case 'Readonly':\r\n      return t\r\n    case 'Pick': {\r\n      const picked = resolveStringType(\r\n        ctx,\r\n        node.typeParameters!.params[1],\r\n        scope,\r\n      )\r\n      const res: ResolvedElements = { props: {}, calls: t.calls }\r\n      for (const key of picked) {\r\n        res.props[key] = t.props[key]\r\n      }\r\n      return res\r\n    }\r\n    case 'Omit':\r\n      const omitted = resolveStringType(\r\n        ctx,\r\n        node.typeParameters!.params[1],\r\n        scope,\r\n      )\r\n      const res: ResolvedElements = { props: {}, calls: t.calls }\r\n      for (const key in t.props) {\r\n        if (!omitted.includes(key)) {\r\n          res.props[key] = t.props[key]\r\n        }\r\n      }\r\n      return res\r\n  }\r\n}\r\n\r\ntype ReferenceTypes =\r\n  | TSTypeReference\r\n  | TSExpressionWithTypeArguments\r\n  | TSImportType\r\n  | TSTypeQuery\r\n\r\nfunction resolveTypeReference(\r\n  ctx: TypeResolveContext,\r\n  node: ReferenceTypes & {\r\n    _resolvedReference?: ScopeTypeNode\r\n  },\r\n  scope?: TypeScope,\r\n  name?: string,\r\n  onlyExported = false,\r\n): ScopeTypeNode | undefined {\r\n  const canCache = !scope?.isGenericScope\r\n  if (canCache && node._resolvedReference) {\r\n    return node._resolvedReference\r\n  }\r\n  const resolved = innerResolveTypeReference(\r\n    ctx,\r\n    scope || ctxToScope(ctx),\r\n    name || getReferenceName(node),\r\n    node,\r\n    onlyExported,\r\n  )\r\n  return canCache ? (node._resolvedReference = resolved) : resolved\r\n}\r\n\r\nfunction innerResolveTypeReference(\r\n  ctx: TypeResolveContext,\r\n  scope: TypeScope,\r\n  name: string | string[],\r\n  node: ReferenceTypes,\r\n  onlyExported: boolean,\r\n): ScopeTypeNode | undefined {\r\n  if (typeof name === 'string') {\r\n    if (scope.imports[name]) {\r\n      return resolveTypeFromImport(ctx, node, name, scope)\r\n    } else {\r\n      const lookupSource =\r\n        node.type === 'TSTypeQuery'\r\n          ? onlyExported\r\n            ? scope.exportedDeclares\r\n            : scope.declares\r\n          : onlyExported\r\n            ? scope.exportedTypes\r\n            : scope.types\r\n      if (lookupSource[name]) {\r\n        return lookupSource[name]\r\n      } else {\r\n        // fallback to global\r\n        const globalScopes = resolveGlobalScope(ctx)\r\n        if (globalScopes) {\r\n          for (const s of globalScopes) {\r\n            const src = node.type === 'TSTypeQuery' ? s.declares : s.types\r\n            if (src[name]) {\r\n              ;(ctx.deps || (ctx.deps = new Set())).add(s.filename)\r\n              return src[name]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    let ns = innerResolveTypeReference(ctx, scope, name[0], node, onlyExported)\r\n    if (ns) {\r\n      if (ns.type !== 'TSModuleDeclaration') {\r\n        // namespace merged with other types, attached as _ns\r\n        ns = ns._ns\r\n      }\r\n      if (ns) {\r\n        const childScope = moduleDeclToScope(ctx, ns, ns._ownerScope || scope)\r\n        return innerResolveTypeReference(\r\n          ctx,\r\n          childScope,\r\n          name.length > 2 ? name.slice(1) : name[name.length - 1],\r\n          node,\r\n          !ns.declare,\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction getReferenceName(node: ReferenceTypes): string | string[] {\r\n  const ref =\r\n    node.type === 'TSTypeReference'\r\n      ? node.typeName\r\n      : node.type === 'TSExpressionWithTypeArguments'\r\n        ? node.expression\r\n        : node.type === 'TSImportType'\r\n          ? node.qualifier\r\n          : node.exprName\r\n  if (ref?.type === 'Identifier') {\r\n    return ref.name\r\n  } else if (ref?.type === 'TSQualifiedName') {\r\n    return qualifiedNameToPath(ref)\r\n  } else {\r\n    return 'default'\r\n  }\r\n}\r\n\r\nfunction qualifiedNameToPath(node: Identifier | TSQualifiedName): string[] {\r\n  if (node.type === 'Identifier') {\r\n    return [node.name]\r\n  } else {\r\n    return [...qualifiedNameToPath(node.left), node.right.name]\r\n  }\r\n}\r\n\r\nfunction resolveGlobalScope(ctx: TypeResolveContext): TypeScope[] | undefined {\r\n  if (ctx.options.globalTypeFiles) {\r\n    const fs = resolveFS(ctx)\r\n    if (!fs) {\r\n      throw new Error('[vue/compiler-sfc] globalTypeFiles requires fs access.')\r\n    }\r\n    return ctx.options.globalTypeFiles.map(file =>\r\n      fileToScope(ctx, normalizePath(file), true),\r\n    )\r\n  }\r\n}\r\n\r\nlet ts: typeof TS | undefined\r\nlet loadTS: (() => typeof TS) | undefined\r\n\r\n/**\r\n * @private\r\n */\r\nexport function registerTS(_loadTS: () => typeof TS) {\r\n  loadTS = () => {\r\n    try {\r\n      return _loadTS()\r\n    } catch (err: any) {\r\n      if (\r\n        typeof err.message === 'string' &&\r\n        err.message.includes('Cannot find module')\r\n      ) {\r\n        throw new Error(\r\n          'Failed to load TypeScript, which is required for resolving imported types. ' +\r\n            'Please make sure \"typescript\" is installed as a project dependency.',\r\n        )\r\n      } else {\r\n        throw new Error(\r\n          'Failed to load TypeScript for resolving imported types.',\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ntype FS = NonNullable<SFCScriptCompileOptions['fs']>\r\n\r\nfunction resolveFS(ctx: TypeResolveContext): FS | undefined {\r\n  if (ctx.fs) {\r\n    return ctx.fs\r\n  }\r\n  if (!ts && loadTS) {\r\n    ts = loadTS()\r\n  }\r\n  const fs = ctx.options.fs || ts?.sys\r\n  if (!fs) {\r\n    return\r\n  }\r\n  return (ctx.fs = {\r\n    fileExists(file) {\r\n      if (file.endsWith('.vue.ts')) {\r\n        file = file.replace(/\\.ts$/, '')\r\n      }\r\n      return fs.fileExists(file)\r\n    },\r\n    readFile(file) {\r\n      if (file.endsWith('.vue.ts')) {\r\n        file = file.replace(/\\.ts$/, '')\r\n      }\r\n      return fs.readFile(file)\r\n    },\r\n    realpath: fs.realpath,\r\n  })\r\n}\r\n\r\nfunction resolveTypeFromImport(\r\n  ctx: TypeResolveContext,\r\n  node: ReferenceTypes,\r\n  name: string,\r\n  scope: TypeScope,\r\n): ScopeTypeNode | undefined {\r\n  const { source, imported } = scope.imports[name]\r\n  const sourceScope = importSourceToScope(ctx, node, scope, source)\r\n  return resolveTypeReference(ctx, node, sourceScope, imported, true)\r\n}\r\n\r\nfunction importSourceToScope(\r\n  ctx: TypeResolveContext,\r\n  node: Node,\r\n  scope: TypeScope,\r\n  source: string,\r\n): TypeScope {\r\n  let fs: FS | undefined\r\n  try {\r\n    fs = resolveFS(ctx)\r\n  } catch (err: any) {\r\n    return ctx.error(err.message, node, scope)\r\n  }\r\n  if (!fs) {\r\n    return ctx.error(\r\n      `No fs option provided to \\`compileScript\\` in non-Node environment. ` +\r\n        `File system access is required for resolving imported types.`,\r\n      node,\r\n      scope,\r\n    )\r\n  }\r\n\r\n  let resolved: string | undefined = scope.resolvedImportSources[source]\r\n  if (!resolved) {\r\n    if (source.startsWith('..')) {\r\n      const osSpecificJoinFn = process.platform === 'win32' ? join : joinPaths\r\n\r\n      const filename = osSpecificJoinFn(dirname(scope.filename), source)\r\n      resolved = resolveExt(filename, fs)\r\n    } else if (source.startsWith('.')) {\r\n      // relative import - fast path\r\n      const filename = joinPaths(dirname(scope.filename), source)\r\n      resolved = resolveExt(filename, fs)\r\n    } else {\r\n      // module or aliased import - use full TS resolution, only supported in Node\r\n      if (!__CJS__) {\r\n        return ctx.error(\r\n          `Type import from non-relative sources is not supported in the browser build.`,\r\n          node,\r\n          scope,\r\n        )\r\n      }\r\n      if (!ts) {\r\n        if (loadTS) ts = loadTS()\r\n        if (!ts) {\r\n          return ctx.error(\r\n            `Failed to resolve import source ${JSON.stringify(source)}. ` +\r\n              `typescript is required as a peer dep for vue in order ` +\r\n              `to support resolving types from module imports.`,\r\n            node,\r\n            scope,\r\n          )\r\n        }\r\n      }\r\n      resolved = resolveWithTS(scope.filename, source, ts, fs)\r\n    }\r\n    if (resolved) {\r\n      resolved = scope.resolvedImportSources[source] = normalizePath(resolved)\r\n    }\r\n  }\r\n  if (resolved) {\r\n    // (hmr) register dependency file on ctx\r\n    ;(ctx.deps || (ctx.deps = new Set())).add(resolved)\r\n    return fileToScope(ctx, resolved)\r\n  } else {\r\n    return ctx.error(\r\n      `Failed to resolve import source ${JSON.stringify(source)}.`,\r\n      node,\r\n      scope,\r\n    )\r\n  }\r\n}\r\n\r\nfunction resolveExt(filename: string, fs: FS) {\r\n  // #8339 ts may import .js but we should resolve to corresponding ts or d.ts\r\n  filename = filename.replace(/\\.js$/, '')\r\n  const tryResolve = (filename: string) => {\r\n    if (fs.fileExists(filename)) return filename\r\n  }\r\n  return (\r\n    tryResolve(filename) ||\r\n    tryResolve(filename + `.ts`) ||\r\n    tryResolve(filename + `.d.ts`) ||\r\n    tryResolve(joinPaths(filename, `index.ts`)) ||\r\n    tryResolve(joinPaths(filename, `index.d.ts`))\r\n  )\r\n}\r\n\r\ninterface CachedConfig {\r\n  config: TS.ParsedCommandLine\r\n  cache?: TS.ModuleResolutionCache\r\n}\r\n\r\nconst tsConfigCache = createCache<CachedConfig[]>()\r\nconst tsConfigRefMap = new Map<string, string>()\r\n\r\nfunction resolveWithTS(\r\n  containingFile: string,\r\n  source: string,\r\n  ts: typeof TS,\r\n  fs: FS,\r\n): string | undefined {\r\n  if (!__CJS__) return\r\n\r\n  // 1. resolve tsconfig.json\r\n  const configPath = ts.findConfigFile(containingFile, fs.fileExists)\r\n  // 2. load tsconfig.json\r\n  let tsCompilerOptions: TS.CompilerOptions\r\n  let tsResolveCache: TS.ModuleResolutionCache | undefined\r\n  if (configPath) {\r\n    let configs: CachedConfig[]\r\n    const normalizedConfigPath = normalizePath(configPath)\r\n    const cached = tsConfigCache.get(normalizedConfigPath)\r\n    if (!cached) {\r\n      configs = loadTSConfig(configPath, ts, fs).map(config => ({ config }))\r\n      tsConfigCache.set(normalizedConfigPath, configs)\r\n    } else {\r\n      configs = cached\r\n    }\r\n    let matchedConfig: CachedConfig | undefined\r\n    if (configs.length === 1) {\r\n      matchedConfig = configs[0]\r\n    } else {\r\n      // resolve which config matches the current file\r\n      for (const c of configs) {\r\n        const base = normalizePath(\r\n          (c.config.options.pathsBasePath as string) ||\r\n            dirname(c.config.options.configFilePath as string),\r\n        )\r\n        const included: string[] = c.config.raw?.include\r\n        const excluded: string[] = c.config.raw?.exclude\r\n        if (\r\n          (!included && (!base || containingFile.startsWith(base))) ||\r\n          included.some(p => isMatch(containingFile, joinPaths(base, p)))\r\n        ) {\r\n          if (\r\n            excluded &&\r\n            excluded.some(p => isMatch(containingFile, joinPaths(base, p)))\r\n          ) {\r\n            continue\r\n          }\r\n          matchedConfig = c\r\n          break\r\n        }\r\n      }\r\n      if (!matchedConfig) {\r\n        matchedConfig = configs[configs.length - 1]\r\n      }\r\n    }\r\n    tsCompilerOptions = matchedConfig.config.options\r\n    tsResolveCache =\r\n      matchedConfig.cache ||\r\n      (matchedConfig.cache = ts.createModuleResolutionCache(\r\n        process.cwd(),\r\n        createGetCanonicalFileName(ts.sys.useCaseSensitiveFileNames),\r\n        tsCompilerOptions,\r\n      ))\r\n  } else {\r\n    tsCompilerOptions = {}\r\n  }\r\n\r\n  // 3. resolve\r\n  const res = ts.resolveModuleName(\r\n    source,\r\n    containingFile,\r\n    tsCompilerOptions,\r\n    fs,\r\n    tsResolveCache,\r\n  )\r\n\r\n  if (res.resolvedModule) {\r\n    let filename = res.resolvedModule.resolvedFileName\r\n    if (filename.endsWith('.vue.ts')) {\r\n      filename = filename.replace(/\\.ts$/, '')\r\n    }\r\n    return fs.realpath ? fs.realpath(filename) : filename\r\n  }\r\n}\r\n\r\nfunction loadTSConfig(\r\n  configPath: string,\r\n  ts: typeof TS,\r\n  fs: FS,\r\n): TS.ParsedCommandLine[] {\r\n  // The only case where `fs` is NOT `ts.sys` is during tests.\r\n  // parse config host requires an extra `readDirectory` method\r\n  // during tests, which is stubbed.\r\n  const parseConfigHost = __TEST__\r\n    ? {\r\n        ...fs,\r\n        useCaseSensitiveFileNames: true,\r\n        readDirectory: () => [],\r\n      }\r\n    : ts.sys\r\n  const config = ts.parseJsonConfigFileContent(\r\n    ts.readConfigFile(configPath, fs.readFile).config,\r\n    parseConfigHost,\r\n    dirname(configPath),\r\n    undefined,\r\n    configPath,\r\n  )\r\n  const res = [config]\r\n  if (config.projectReferences) {\r\n    for (const ref of config.projectReferences) {\r\n      tsConfigRefMap.set(ref.path, configPath)\r\n      res.unshift(...loadTSConfig(ref.path, ts, fs))\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst fileToScopeCache = createCache<TypeScope>()\r\n\r\n/**\r\n * @private\r\n */\r\nexport function invalidateTypeCache(filename: string) {\r\n  filename = normalizePath(filename)\r\n  fileToScopeCache.delete(filename)\r\n  tsConfigCache.delete(filename)\r\n  const affectedConfig = tsConfigRefMap.get(filename)\r\n  if (affectedConfig) tsConfigCache.delete(affectedConfig)\r\n}\r\n\r\nexport function fileToScope(\r\n  ctx: TypeResolveContext,\r\n  filename: string,\r\n  asGlobal = false,\r\n): TypeScope {\r\n  const cached = fileToScopeCache.get(filename)\r\n  if (cached) {\r\n    return cached\r\n  }\r\n  // fs should be guaranteed to exist here\r\n  const fs = resolveFS(ctx)!\r\n  const source = fs.readFile(filename) || ''\r\n  const body = parseFile(filename, source, ctx.options.babelParserPlugins)\r\n  const scope = new TypeScope(filename, source, 0, recordImports(body))\r\n  recordTypes(ctx, body, scope, asGlobal)\r\n  fileToScopeCache.set(filename, scope)\r\n  return scope\r\n}\r\n\r\nfunction parseFile(\r\n  filename: string,\r\n  content: string,\r\n  parserPlugins?: SFCScriptCompileOptions['babelParserPlugins'],\r\n): Statement[] {\r\n  const ext = extname(filename)\r\n  if (ext === '.ts' || ext === '.tsx') {\r\n    return babelParse(content, {\r\n      plugins: resolveParserPlugins(\r\n        ext.slice(1),\r\n        parserPlugins,\r\n        filename.endsWith('.d.ts'),\r\n      ),\r\n      sourceType: 'module',\r\n    }).program.body\r\n  } else if (ext === '.vue') {\r\n    const {\r\n      descriptor: { script, scriptSetup },\r\n    } = parse(content)\r\n    if (!script && !scriptSetup) {\r\n      return []\r\n    }\r\n\r\n    // ensure the correct offset with original source\r\n    const scriptOffset = script ? script.loc.start.offset : Infinity\r\n    const scriptSetupOffset = scriptSetup\r\n      ? scriptSetup.loc.start.offset\r\n      : Infinity\r\n    const firstBlock = scriptOffset < scriptSetupOffset ? script : scriptSetup\r\n    const secondBlock = scriptOffset < scriptSetupOffset ? scriptSetup : script\r\n\r\n    let scriptContent =\r\n      ' '.repeat(Math.min(scriptOffset, scriptSetupOffset)) +\r\n      firstBlock!.content\r\n    if (secondBlock) {\r\n      scriptContent +=\r\n        ' '.repeat(secondBlock.loc.start.offset - script!.loc.end.offset) +\r\n        secondBlock.content\r\n    }\r\n    const lang = script?.lang || scriptSetup?.lang\r\n    return babelParse(scriptContent, {\r\n      plugins: resolveParserPlugins(lang!, parserPlugins),\r\n      sourceType: 'module',\r\n    }).program.body\r\n  }\r\n  return []\r\n}\r\n\r\nfunction ctxToScope(ctx: TypeResolveContext): TypeScope {\r\n  if (ctx.scope) {\r\n    return ctx.scope\r\n  }\r\n\r\n  const body =\r\n    'ast' in ctx\r\n      ? ctx.ast\r\n      : ctx.scriptAst\r\n        ? [...ctx.scriptAst.body, ...ctx.scriptSetupAst!.body]\r\n        : ctx.scriptSetupAst!.body\r\n\r\n  const scope = new TypeScope(\r\n    ctx.filename,\r\n    ctx.source,\r\n    'startOffset' in ctx ? ctx.startOffset! : 0,\r\n    'userImports' in ctx ? Object.create(ctx.userImports) : recordImports(body),\r\n  )\r\n\r\n  recordTypes(ctx, body, scope)\r\n\r\n  return (ctx.scope = scope)\r\n}\r\n\r\nfunction moduleDeclToScope(\r\n  ctx: TypeResolveContext,\r\n  node: TSModuleDeclaration & { _resolvedChildScope?: TypeScope },\r\n  parentScope: TypeScope,\r\n): TypeScope {\r\n  if (node._resolvedChildScope) {\r\n    return node._resolvedChildScope\r\n  }\r\n\r\n  const scope = createChildScope(parentScope)\r\n\r\n  if (node.body.type === 'TSModuleDeclaration') {\r\n    const decl = node.body as TSModuleDeclaration & WithScope\r\n    decl._ownerScope = scope\r\n    const id = getId(decl.id)\r\n    scope.types[id] = scope.exportedTypes[id] = decl\r\n  } else {\r\n    recordTypes(ctx, node.body.body, scope)\r\n  }\r\n\r\n  return (node._resolvedChildScope = scope)\r\n}\r\n\r\nfunction createChildScope(parentScope: TypeScope) {\r\n  return new TypeScope(\r\n    parentScope.filename,\r\n    parentScope.source,\r\n    parentScope.offset,\r\n    Object.create(parentScope.imports),\r\n    Object.create(parentScope.types),\r\n    Object.create(parentScope.declares),\r\n  )\r\n}\r\n\r\nconst importExportRE = /^Import|^Export/\r\n\r\nfunction recordTypes(\r\n  ctx: TypeResolveContext,\r\n  body: Statement[],\r\n  scope: TypeScope,\r\n  asGlobal = false,\r\n) {\r\n  const { types, declares, exportedTypes, exportedDeclares, imports } = scope\r\n  const isAmbient = asGlobal\r\n    ? !body.some(s => importExportRE.test(s.type))\r\n    : false\r\n  for (const stmt of body) {\r\n    if (asGlobal) {\r\n      if (isAmbient) {\r\n        if ((stmt as any).declare) {\r\n          recordType(stmt, types, declares)\r\n        }\r\n      } else if (stmt.type === 'TSModuleDeclaration' && stmt.global) {\r\n        for (const s of (stmt.body as TSModuleBlock).body) {\r\n          recordType(s, types, declares)\r\n        }\r\n      }\r\n    } else {\r\n      recordType(stmt, types, declares)\r\n    }\r\n  }\r\n  if (!asGlobal) {\r\n    for (const stmt of body) {\r\n      if (stmt.type === 'ExportNamedDeclaration') {\r\n        if (stmt.declaration) {\r\n          recordType(stmt.declaration, types, declares)\r\n          recordType(stmt.declaration, exportedTypes, exportedDeclares)\r\n        } else {\r\n          for (const spec of stmt.specifiers) {\r\n            if (spec.type === 'ExportSpecifier') {\r\n              const local = spec.local.name\r\n              const exported = getId(spec.exported)\r\n              if (stmt.source) {\r\n                // re-export, register an import + export as a type reference\r\n                imports[exported] = {\r\n                  source: stmt.source.value,\r\n                  imported: local,\r\n                }\r\n                exportedTypes[exported] = {\r\n                  type: 'TSTypeReference',\r\n                  typeName: {\r\n                    type: 'Identifier',\r\n                    name: local,\r\n                  },\r\n                  _ownerScope: scope,\r\n                }\r\n              } else if (types[local]) {\r\n                // exporting local defined type\r\n                exportedTypes[exported] = types[local]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else if (stmt.type === 'ExportAllDeclaration') {\r\n        const sourceScope = importSourceToScope(\r\n          ctx,\r\n          stmt.source,\r\n          scope,\r\n          stmt.source.value,\r\n        )\r\n        Object.assign(scope.exportedTypes, sourceScope.exportedTypes)\r\n      } else if (stmt.type === 'ExportDefaultDeclaration' && stmt.declaration) {\r\n        if (stmt.declaration.type !== 'Identifier') {\r\n          recordType(stmt.declaration, types, declares, 'default')\r\n          recordType(\r\n            stmt.declaration,\r\n            exportedTypes,\r\n            exportedDeclares,\r\n            'default',\r\n          )\r\n        } else if (types[stmt.declaration.name]) {\r\n          exportedTypes['default'] = types[stmt.declaration.name]\r\n        }\r\n      }\r\n    }\r\n  }\r\n  for (const key of Object.keys(types)) {\r\n    const node = types[key]\r\n    node._ownerScope = scope\r\n    if (node._ns) node._ns._ownerScope = scope\r\n  }\r\n  for (const key of Object.keys(declares)) {\r\n    declares[key]._ownerScope = scope\r\n  }\r\n}\r\n\r\nfunction recordType(\r\n  node: Node,\r\n  types: Record<string, Node>,\r\n  declares: Record<string, Node>,\r\n  overwriteId?: string,\r\n) {\r\n  switch (node.type) {\r\n    case 'TSInterfaceDeclaration':\r\n    case 'TSEnumDeclaration':\r\n    case 'TSModuleDeclaration': {\r\n      const id = overwriteId || getId(node.id)\r\n      let existing = types[id]\r\n      if (existing) {\r\n        if (node.type === 'TSModuleDeclaration') {\r\n          if (existing.type === 'TSModuleDeclaration') {\r\n            mergeNamespaces(existing as typeof node, node)\r\n          } else {\r\n            attachNamespace(existing, node)\r\n          }\r\n          break\r\n        }\r\n        if (existing.type === 'TSModuleDeclaration') {\r\n          // replace and attach namespace\r\n          types[id] = node\r\n          attachNamespace(node, existing)\r\n          break\r\n        }\r\n\r\n        if (existing.type !== node.type) {\r\n          // type-level error\r\n          break\r\n        }\r\n        if (node.type === 'TSInterfaceDeclaration') {\r\n          ;(existing as typeof node).body.body.push(...node.body.body)\r\n        } else {\r\n          ;(existing as typeof node).members.push(...node.members)\r\n        }\r\n      } else {\r\n        types[id] = node\r\n      }\r\n      break\r\n    }\r\n    case 'ClassDeclaration':\r\n      if (overwriteId || node.id) types[overwriteId || getId(node.id!)] = node\r\n      break\r\n    case 'TSTypeAliasDeclaration':\r\n      types[node.id.name] = node.typeParameters ? node : node.typeAnnotation\r\n      break\r\n    case 'TSDeclareFunction':\r\n      if (node.id) declares[node.id.name] = node\r\n      break\r\n    case 'VariableDeclaration': {\r\n      if (node.declare) {\r\n        for (const decl of node.declarations) {\r\n          if (decl.id.type === 'Identifier' && decl.id.typeAnnotation) {\r\n            declares[decl.id.name] = (\r\n              decl.id.typeAnnotation as TSTypeAnnotation\r\n            ).typeAnnotation\r\n          }\r\n        }\r\n      }\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction mergeNamespaces(to: TSModuleDeclaration, from: TSModuleDeclaration) {\r\n  const toBody = to.body\r\n  const fromBody = from.body\r\n  if (toBody.type === 'TSModuleDeclaration') {\r\n    if (fromBody.type === 'TSModuleDeclaration') {\r\n      // both decl\r\n      mergeNamespaces(toBody, fromBody)\r\n    } else {\r\n      // to: decl -> from: block\r\n      fromBody.body.push({\r\n        type: 'ExportNamedDeclaration',\r\n        declaration: toBody,\r\n        exportKind: 'type',\r\n        specifiers: [],\r\n      })\r\n    }\r\n  } else if (fromBody.type === 'TSModuleDeclaration') {\r\n    // to: block <- from: decl\r\n    toBody.body.push({\r\n      type: 'ExportNamedDeclaration',\r\n      declaration: fromBody,\r\n      exportKind: 'type',\r\n      specifiers: [],\r\n    })\r\n  } else {\r\n    // both block\r\n    toBody.body.push(...fromBody.body)\r\n  }\r\n}\r\n\r\nfunction attachNamespace(\r\n  to: Node & { _ns?: TSModuleDeclaration },\r\n  ns: TSModuleDeclaration,\r\n) {\r\n  if (!to._ns) {\r\n    to._ns = ns\r\n  } else {\r\n    mergeNamespaces(to._ns, ns)\r\n  }\r\n}\r\n\r\nexport function recordImports(body: Statement[]) {\r\n  const imports: TypeScope['imports'] = Object.create(null)\r\n  for (const s of body) {\r\n    recordImport(s, imports)\r\n  }\r\n  return imports\r\n}\r\n\r\nfunction recordImport(node: Node, imports: TypeScope['imports']) {\r\n  if (node.type !== 'ImportDeclaration') {\r\n    return\r\n  }\r\n  for (const s of node.specifiers) {\r\n    imports[s.local.name] = {\r\n      imported: getImportedName(s),\r\n      source: node.source.value,\r\n    }\r\n  }\r\n}\r\n\r\nexport function inferRuntimeType(\r\n  ctx: TypeResolveContext,\r\n  node: Node & MaybeWithScope,\r\n  scope = node._ownerScope || ctxToScope(ctx),\r\n): string[] {\r\n  try {\r\n    switch (node.type) {\r\n      case 'TSStringKeyword':\r\n        return ['String']\r\n      case 'TSNumberKeyword':\r\n        return ['Number']\r\n      case 'TSBooleanKeyword':\r\n        return ['Boolean']\r\n      case 'TSObjectKeyword':\r\n        return ['Object']\r\n      case 'TSNullKeyword':\r\n        return ['null']\r\n      case 'TSTypeLiteral':\r\n      case 'TSInterfaceDeclaration': {\r\n        // TODO (nice to have) generate runtime property validation\r\n        const types = new Set<string>()\r\n        const members =\r\n          node.type === 'TSTypeLiteral' ? node.members : node.body.body\r\n        for (const m of members) {\r\n          if (\r\n            m.type === 'TSCallSignatureDeclaration' ||\r\n            m.type === 'TSConstructSignatureDeclaration'\r\n          ) {\r\n            types.add('Function')\r\n          } else {\r\n            types.add('Object')\r\n          }\r\n        }\r\n        return types.size ? Array.from(types) : ['Object']\r\n      }\r\n      case 'TSPropertySignature':\r\n        if (node.typeAnnotation) {\r\n          return inferRuntimeType(\r\n            ctx,\r\n            node.typeAnnotation.typeAnnotation,\r\n            scope,\r\n          )\r\n        }\r\n        break\r\n      case 'TSMethodSignature':\r\n      case 'TSFunctionType':\r\n        return ['Function']\r\n      case 'TSArrayType':\r\n      case 'TSTupleType':\r\n        // TODO (nice to have) generate runtime element type/length checks\r\n        return ['Array']\r\n\r\n      case 'TSLiteralType':\r\n        switch (node.literal.type) {\r\n          case 'StringLiteral':\r\n            return ['String']\r\n          case 'BooleanLiteral':\r\n            return ['Boolean']\r\n          case 'NumericLiteral':\r\n          case 'BigIntLiteral':\r\n            return ['Number']\r\n          default:\r\n            return [UNKNOWN_TYPE]\r\n        }\r\n\r\n      case 'TSTypeReference': {\r\n        const resolved = resolveTypeReference(ctx, node, scope)\r\n        if (resolved) {\r\n          return inferRuntimeType(ctx, resolved, resolved._ownerScope)\r\n        }\r\n        if (node.typeName.type === 'Identifier') {\r\n          switch (node.typeName.name) {\r\n            case 'Array':\r\n            case 'Function':\r\n            case 'Object':\r\n            case 'Set':\r\n            case 'Map':\r\n            case 'WeakSet':\r\n            case 'WeakMap':\r\n            case 'Date':\r\n            case 'Promise':\r\n            case 'Error':\r\n              return [node.typeName.name]\r\n\r\n            // TS built-in utility types\r\n            // https://www.typescriptlang.org/docs/handbook/utility-types.html\r\n            case 'Partial':\r\n            case 'Required':\r\n            case 'Readonly':\r\n            case 'Record':\r\n            case 'Pick':\r\n            case 'Omit':\r\n            case 'InstanceType':\r\n              return ['Object']\r\n\r\n            case 'Uppercase':\r\n            case 'Lowercase':\r\n            case 'Capitalize':\r\n            case 'Uncapitalize':\r\n              return ['String']\r\n\r\n            case 'Parameters':\r\n            case 'ConstructorParameters':\r\n              return ['Array']\r\n\r\n            case 'NonNullable':\r\n              if (node.typeParameters && node.typeParameters.params[0]) {\r\n                return inferRuntimeType(\r\n                  ctx,\r\n                  node.typeParameters.params[0],\r\n                  scope,\r\n                ).filter(t => t !== 'null')\r\n              }\r\n              break\r\n            case 'Extract':\r\n              if (node.typeParameters && node.typeParameters.params[1]) {\r\n                return inferRuntimeType(\r\n                  ctx,\r\n                  node.typeParameters.params[1],\r\n                  scope,\r\n                )\r\n              }\r\n              break\r\n            case 'Exclude':\r\n            case 'OmitThisParameter':\r\n              if (node.typeParameters && node.typeParameters.params[0]) {\r\n                return inferRuntimeType(\r\n                  ctx,\r\n                  node.typeParameters.params[0],\r\n                  scope,\r\n                )\r\n              }\r\n              break\r\n          }\r\n        }\r\n        // cannot infer, fallback to UNKNOWN: ThisParameterType\r\n        break\r\n      }\r\n\r\n      case 'TSParenthesizedType':\r\n        return inferRuntimeType(ctx, node.typeAnnotation, scope)\r\n\r\n      case 'TSUnionType':\r\n        return flattenTypes(ctx, node.types, scope)\r\n      case 'TSIntersectionType': {\r\n        return flattenTypes(ctx, node.types, scope).filter(\r\n          t => t !== UNKNOWN_TYPE,\r\n        )\r\n      }\r\n\r\n      case 'TSEnumDeclaration':\r\n        return inferEnumType(node)\r\n\r\n      case 'TSSymbolKeyword':\r\n        return ['Symbol']\r\n\r\n      case 'TSIndexedAccessType': {\r\n        const types = resolveIndexType(ctx, node, scope)\r\n        return flattenTypes(ctx, types, scope)\r\n      }\r\n\r\n      case 'ClassDeclaration':\r\n        return ['Object']\r\n\r\n      case 'TSImportType': {\r\n        const sourceScope = importSourceToScope(\r\n          ctx,\r\n          node.argument,\r\n          scope,\r\n          node.argument.value,\r\n        )\r\n        const resolved = resolveTypeReference(ctx, node, sourceScope)\r\n        if (resolved) {\r\n          return inferRuntimeType(ctx, resolved, resolved._ownerScope)\r\n        }\r\n        break\r\n      }\r\n\r\n      case 'TSTypeQuery': {\r\n        const id = node.exprName\r\n        if (id.type === 'Identifier') {\r\n          // typeof only support identifier in local scope\r\n          const matched = scope.declares[id.name]\r\n          if (matched) {\r\n            return inferRuntimeType(ctx, matched, matched._ownerScope)\r\n          }\r\n        }\r\n        break\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // always soft fail on failed runtime type inference\r\n  }\r\n  return [UNKNOWN_TYPE] // no runtime check\r\n}\r\n\r\nfunction flattenTypes(\r\n  ctx: TypeResolveContext,\r\n  types: TSType[],\r\n  scope: TypeScope,\r\n): string[] {\r\n  if (types.length === 1) {\r\n    return inferRuntimeType(ctx, types[0], scope)\r\n  }\r\n  return [\r\n    ...new Set(\r\n      ([] as string[]).concat(\r\n        ...types.map(t => inferRuntimeType(ctx, t, scope)),\r\n      ),\r\n    ),\r\n  ]\r\n}\r\n\r\nfunction inferEnumType(node: TSEnumDeclaration): string[] {\r\n  const types = new Set<string>()\r\n  for (const m of node.members) {\r\n    if (m.initializer) {\r\n      switch (m.initializer.type) {\r\n        case 'StringLiteral':\r\n          types.add('String')\r\n          break\r\n        case 'NumericLiteral':\r\n          types.add('Number')\r\n          break\r\n      }\r\n    }\r\n  }\r\n  return types.size ? [...types] : ['Number']\r\n}\r\n\r\n/**\r\n * support for the `ExtractPropTypes` helper - it's non-exhaustive, mostly\r\n * tailored towards popular component libs like element-plus and antd-vue.\r\n */\r\nfunction resolveExtractPropTypes(\r\n  { props }: ResolvedElements,\r\n  scope: TypeScope,\r\n): ResolvedElements {\r\n  const res: ResolvedElements = { props: {} }\r\n  for (const key in props) {\r\n    const raw = props[key]\r\n    res.props[key] = reverseInferType(\r\n      raw.key,\r\n      raw.typeAnnotation!.typeAnnotation,\r\n      scope,\r\n    )\r\n  }\r\n  return res\r\n}\r\n\r\nfunction reverseInferType(\r\n  key: Expression,\r\n  node: TSType,\r\n  scope: TypeScope,\r\n  optional = true,\r\n  checkObjectSyntax = true,\r\n): TSPropertySignature & WithScope {\r\n  if (checkObjectSyntax && node.type === 'TSTypeLiteral') {\r\n    // check { type: xxx }\r\n    const typeType = findStaticPropertyType(node, 'type')\r\n    if (typeType) {\r\n      const requiredType = findStaticPropertyType(node, 'required')\r\n      const optional =\r\n        requiredType &&\r\n        requiredType.type === 'TSLiteralType' &&\r\n        requiredType.literal.type === 'BooleanLiteral'\r\n          ? !requiredType.literal.value\r\n          : true\r\n      return reverseInferType(key, typeType, scope, optional, false)\r\n    }\r\n  } else if (\r\n    node.type === 'TSTypeReference' &&\r\n    node.typeName.type === 'Identifier'\r\n  ) {\r\n    if (node.typeName.name.endsWith('Constructor')) {\r\n      return createProperty(\r\n        key,\r\n        ctorToType(node.typeName.name),\r\n        scope,\r\n        optional,\r\n      )\r\n    } else if (node.typeName.name === 'PropType' && node.typeParameters) {\r\n      // PropType<{}>\r\n      return createProperty(key, node.typeParameters.params[0], scope, optional)\r\n    }\r\n  }\r\n  if (\r\n    (node.type === 'TSTypeReference' || node.type === 'TSImportType') &&\r\n    node.typeParameters\r\n  ) {\r\n    // try if we can catch Foo.Bar<XXXConstructor>\r\n    for (const t of node.typeParameters.params) {\r\n      const inferred = reverseInferType(key, t, scope, optional)\r\n      if (inferred) return inferred\r\n    }\r\n  }\r\n  return createProperty(key, { type: `TSNullKeyword` }, scope, optional)\r\n}\r\n\r\nfunction ctorToType(ctorType: string): TSType {\r\n  const ctor = ctorType.slice(0, -11)\r\n  switch (ctor) {\r\n    case 'String':\r\n    case 'Number':\r\n    case 'Boolean':\r\n      return { type: `TS${ctor}Keyword` }\r\n    case 'Array':\r\n    case 'Function':\r\n    case 'Object':\r\n    case 'Set':\r\n    case 'Map':\r\n    case 'WeakSet':\r\n    case 'WeakMap':\r\n    case 'Date':\r\n    case 'Promise':\r\n      return {\r\n        type: 'TSTypeReference',\r\n        typeName: { type: 'Identifier', name: ctor },\r\n      }\r\n  }\r\n  // fallback to null\r\n  return { type: `TSNullKeyword` }\r\n}\r\n\r\nfunction findStaticPropertyType(node: TSTypeLiteral, key: string) {\r\n  const prop = node.members.find(\r\n    m =>\r\n      m.type === 'TSPropertySignature' &&\r\n      !m.computed &&\r\n      getId(m.key) === key &&\r\n      m.typeAnnotation,\r\n  )\r\n  return prop && prop.typeAnnotation!.typeAnnotation\r\n}\r\n\r\nfunction resolveReturnType(\r\n  ctx: TypeResolveContext,\r\n  arg: Node,\r\n  scope: TypeScope,\r\n) {\r\n  let resolved: Node | undefined = arg\r\n  if (\r\n    arg.type === 'TSTypeReference' ||\r\n    arg.type === 'TSTypeQuery' ||\r\n    arg.type === 'TSImportType'\r\n  ) {\r\n    resolved = resolveTypeReference(ctx, arg, scope)\r\n  }\r\n  if (!resolved) return\r\n  if (resolved.type === 'TSFunctionType') {\r\n    return resolved.typeAnnotation?.typeAnnotation\r\n  }\r\n  if (resolved.type === 'TSDeclareFunction') {\r\n    return resolved.returnType\r\n  }\r\n}\r\n\r\nexport function resolveUnionType(\r\n  ctx: TypeResolveContext,\r\n  node: Node & MaybeWithScope & { _resolvedElements?: ResolvedElements },\r\n  scope?: TypeScope,\r\n): Node[] {\r\n  if (node.type === 'TSTypeReference') {\r\n    const resolved = resolveTypeReference(ctx, node, scope)\r\n    if (resolved) node = resolved\r\n  }\r\n\r\n  let types: Node[]\r\n  if (node.type === 'TSUnionType') {\r\n    types = node.types.flatMap(node => resolveUnionType(ctx, node, scope))\r\n  } else {\r\n    types = [node]\r\n  }\r\n\r\n  return types\r\n}\r\n","import type { LVal, Node, TSType } from '@babel/types'\r\nimport type { ScriptCompileContext } from './context'\r\nimport { inferRuntimeType } from './resolveType'\r\nimport {\r\n  UNKNOWN_TYPE,\r\n  concatStrings,\r\n  isCallOf,\r\n  toRuntimeTypeString,\r\n} from './utils'\r\nimport { BindingTypes, unwrapTSNode } from '@vue/compiler-dom'\r\n\r\nexport const DEFINE_MODEL = 'defineModel'\r\n\r\nexport interface ModelDecl {\r\n  type: TSType | undefined\r\n  options: string | undefined\r\n  identifier: string | undefined\r\n  runtimeOptionNodes: Node[]\r\n}\r\n\r\nexport function processDefineModel(\r\n  ctx: ScriptCompileContext,\r\n  node: Node,\r\n  declId?: LVal,\r\n): boolean {\r\n  if (!isCallOf(node, DEFINE_MODEL)) {\r\n    return false\r\n  }\r\n\r\n  ctx.hasDefineModelCall = true\r\n\r\n  const type =\r\n    (node.typeParameters && node.typeParameters.params[0]) || undefined\r\n  let modelName: string\r\n  let options: Node | undefined\r\n  const arg0 = node.arguments[0] && unwrapTSNode(node.arguments[0])\r\n  const hasName = arg0 && arg0.type === 'StringLiteral'\r\n  if (hasName) {\r\n    modelName = arg0.value\r\n    options = node.arguments[1]\r\n  } else {\r\n    modelName = 'modelValue'\r\n    options = arg0\r\n  }\r\n\r\n  if (ctx.modelDecls[modelName]) {\r\n    ctx.error(`duplicate model name ${JSON.stringify(modelName)}`, node)\r\n  }\r\n\r\n  let optionsString = options && ctx.getString(options)\r\n  let optionsRemoved = !options\r\n  const runtimeOptionNodes: Node[] = []\r\n\r\n  if (\r\n    options &&\r\n    options.type === 'ObjectExpression' &&\r\n    !options.properties.some(p => p.type === 'SpreadElement' || p.computed)\r\n  ) {\r\n    let removed = 0\r\n    for (let i = options.properties.length - 1; i >= 0; i--) {\r\n      const p = options.properties[i]\r\n      const next = options.properties[i + 1]\r\n      const start = p.start!\r\n      const end = next ? next.start! : options.end! - 1\r\n      if (\r\n        (p.type === 'ObjectProperty' || p.type === 'ObjectMethod') &&\r\n        ((p.key.type === 'Identifier' &&\r\n          (p.key.name === 'get' || p.key.name === 'set')) ||\r\n          (p.key.type === 'StringLiteral' &&\r\n            (p.key.value === 'get' || p.key.value === 'set')))\r\n      ) {\r\n        // remove runtime-only options from prop options to avoid duplicates\r\n        optionsString =\r\n          optionsString.slice(0, start - options.start!) +\r\n          optionsString.slice(end - options.start!)\r\n      } else {\r\n        // remove prop options from runtime options\r\n        removed++\r\n        ctx.s.remove(ctx.startOffset! + start, ctx.startOffset! + end)\r\n        // record prop options for invalid scope var reference check\r\n        runtimeOptionNodes.push(p)\r\n      }\r\n    }\r\n    if (removed === options.properties.length) {\r\n      optionsRemoved = true\r\n      ctx.s.remove(\r\n        ctx.startOffset! + (hasName ? arg0.end! : options.start!),\r\n        ctx.startOffset! + options.end!,\r\n      )\r\n    }\r\n  }\r\n\r\n  ctx.modelDecls[modelName] = {\r\n    type,\r\n    options: optionsString,\r\n    runtimeOptionNodes,\r\n    identifier:\r\n      declId && declId.type === 'Identifier' ? declId.name : undefined,\r\n  }\r\n  // register binding type\r\n  ctx.bindingMetadata[modelName] = BindingTypes.PROPS\r\n\r\n  // defineModel -> useModel\r\n  ctx.s.overwrite(\r\n    ctx.startOffset! + node.callee.start!,\r\n    ctx.startOffset! + node.callee.end!,\r\n    ctx.helper('useModel'),\r\n  )\r\n  // inject arguments\r\n  ctx.s.appendLeft(\r\n    ctx.startOffset! +\r\n      (node.arguments.length ? node.arguments[0].start! : node.end! - 1),\r\n    `__props, ` +\r\n      (hasName\r\n        ? ``\r\n        : `${JSON.stringify(modelName)}${optionsRemoved ? `` : `, `}`),\r\n  )\r\n\r\n  return true\r\n}\r\n\r\nexport function genModelProps(ctx: ScriptCompileContext) {\r\n  if (!ctx.hasDefineModelCall) return\r\n\r\n  const isProd = !!ctx.options.isProd\r\n  let modelPropsDecl = ''\r\n  for (const [name, { type, options }] of Object.entries(ctx.modelDecls)) {\r\n    let skipCheck = false\r\n\r\n    let runtimeTypes = type && inferRuntimeType(ctx, type)\r\n    if (runtimeTypes) {\r\n      const hasUnknownType = runtimeTypes.includes(UNKNOWN_TYPE)\r\n\r\n      runtimeTypes = runtimeTypes.filter(el => {\r\n        if (el === UNKNOWN_TYPE) return false\r\n        return isProd\r\n          ? el === 'Boolean' || (el === 'Function' && options)\r\n          : true\r\n      })\r\n      skipCheck = !isProd && hasUnknownType && runtimeTypes.length > 0\r\n    }\r\n\r\n    let runtimeType =\r\n      (runtimeTypes &&\r\n        runtimeTypes.length > 0 &&\r\n        toRuntimeTypeString(runtimeTypes)) ||\r\n      undefined\r\n\r\n    const codegenOptions = concatStrings([\r\n      runtimeType && `type: ${runtimeType}`,\r\n      skipCheck && 'skipCheck: true',\r\n    ])\r\n\r\n    let decl: string\r\n    if (runtimeType && options) {\r\n      decl = ctx.isTS\r\n        ? `{ ${codegenOptions}, ...${options} }`\r\n        : `Object.assign({ ${codegenOptions} }, ${options})`\r\n    } else {\r\n      decl = options || (runtimeType ? `{ ${codegenOptions} }` : '{}')\r\n    }\r\n    modelPropsDecl += `\\n    ${JSON.stringify(name)}: ${decl},`\r\n\r\n    // also generate modifiers prop\r\n    const modifierPropName = JSON.stringify(\r\n      name === 'modelValue' ? `modelModifiers` : `${name}Modifiers`,\r\n    )\r\n    modelPropsDecl += `\\n    ${modifierPropName}: {},`\r\n  }\r\n  return `{${modelPropsDecl}\\n  }`\r\n}\r\n","import type {\r\n  Expression,\r\n  LVal,\r\n  Node,\r\n  ObjectExpression,\r\n  ObjectMethod,\r\n  ObjectProperty,\r\n} from '@babel/types'\r\nimport { BindingTypes, isFunctionType, unwrapTSNode } from '@vue/compiler-dom'\r\nimport type { ScriptCompileContext } from './context'\r\nimport {\r\n  type TypeResolveContext,\r\n  inferRuntimeType,\r\n  resolveTypeElements,\r\n} from './resolveType'\r\nimport {\r\n  UNKNOWN_TYPE,\r\n  concatStrings,\r\n  getEscapedPropName,\r\n  isCallOf,\r\n  isLiteralNode,\r\n  resolveObjectKey,\r\n  toRuntimeTypeString,\r\n} from './utils'\r\nimport { genModelProps } from './defineModel'\r\nimport { getObjectOrArrayExpressionKeys } from './analyzeScriptBindings'\r\nimport { processPropsDestructure } from './definePropsDestructure'\r\n\r\nexport const DEFINE_PROPS = 'defineProps'\r\nexport const WITH_DEFAULTS = 'withDefaults'\r\n\r\nexport interface PropTypeData {\r\n  key: string\r\n  type: string[]\r\n  required: boolean\r\n  skipCheck: boolean\r\n}\r\n\r\nexport type PropsDestructureBindings = Record<\r\n  string, // public prop key\r\n  {\r\n    local: string // local identifier, may be different\r\n    default?: Expression\r\n  }\r\n>\r\n\r\nexport function processDefineProps(\r\n  ctx: ScriptCompileContext,\r\n  node: Node,\r\n  declId?: LVal,\r\n) {\r\n  if (!isCallOf(node, DEFINE_PROPS)) {\r\n    return processWithDefaults(ctx, node, declId)\r\n  }\r\n\r\n  if (ctx.hasDefinePropsCall) {\r\n    ctx.error(`duplicate ${DEFINE_PROPS}() call`, node)\r\n  }\r\n  ctx.hasDefinePropsCall = true\r\n  ctx.propsRuntimeDecl = node.arguments[0]\r\n\r\n  // register bindings\r\n  if (ctx.propsRuntimeDecl) {\r\n    for (const key of getObjectOrArrayExpressionKeys(ctx.propsRuntimeDecl)) {\r\n      if (!(key in ctx.bindingMetadata)) {\r\n        ctx.bindingMetadata[key] = BindingTypes.PROPS\r\n      }\r\n    }\r\n  }\r\n\r\n  // call has type parameters - infer runtime types from it\r\n  if (node.typeParameters) {\r\n    if (ctx.propsRuntimeDecl) {\r\n      ctx.error(\r\n        `${DEFINE_PROPS}() cannot accept both type and non-type arguments ` +\r\n          `at the same time. Use one or the other.`,\r\n        node,\r\n      )\r\n    }\r\n    ctx.propsTypeDecl = node.typeParameters.params[0]\r\n  }\r\n\r\n  // handle props destructure\r\n  if (declId && declId.type === 'ObjectPattern') {\r\n    processPropsDestructure(ctx, declId)\r\n  }\r\n\r\n  ctx.propsCall = node\r\n  ctx.propsDecl = declId\r\n\r\n  return true\r\n}\r\n\r\nfunction processWithDefaults(\r\n  ctx: ScriptCompileContext,\r\n  node: Node,\r\n  declId?: LVal,\r\n): boolean {\r\n  if (!isCallOf(node, WITH_DEFAULTS)) {\r\n    return false\r\n  }\r\n  if (!processDefineProps(ctx, node.arguments[0], declId)) {\r\n    ctx.error(\r\n      `${WITH_DEFAULTS}' first argument must be a ${DEFINE_PROPS} call.`,\r\n      node.arguments[0] || node,\r\n    )\r\n  }\r\n\r\n  if (ctx.propsRuntimeDecl) {\r\n    ctx.error(\r\n      `${WITH_DEFAULTS} can only be used with type-based ` +\r\n        `${DEFINE_PROPS} declaration.`,\r\n      node,\r\n    )\r\n  }\r\n  if (ctx.propsDestructureDecl) {\r\n    ctx.error(\r\n      `${WITH_DEFAULTS}() is unnecessary when using destructure with ${DEFINE_PROPS}().\\n` +\r\n        `Prefer using destructure default values, e.g. const { foo = 1 } = defineProps(...).`,\r\n      node.callee,\r\n    )\r\n  }\r\n  ctx.propsRuntimeDefaults = node.arguments[1]\r\n  if (!ctx.propsRuntimeDefaults) {\r\n    ctx.error(`The 2nd argument of ${WITH_DEFAULTS} is required.`, node)\r\n  }\r\n  ctx.propsCall = node\r\n\r\n  return true\r\n}\r\n\r\nexport function genRuntimeProps(ctx: ScriptCompileContext): string | undefined {\r\n  let propsDecls: undefined | string\r\n\r\n  if (ctx.propsRuntimeDecl) {\r\n    propsDecls = ctx.getString(ctx.propsRuntimeDecl).trim()\r\n    if (ctx.propsDestructureDecl) {\r\n      const defaults: string[] = []\r\n      for (const key in ctx.propsDestructuredBindings) {\r\n        const d = genDestructuredDefaultValue(ctx, key)\r\n        const finalKey = getEscapedPropName(key)\r\n        if (d)\r\n          defaults.push(\r\n            `${finalKey}: ${d.valueString}${\r\n              d.needSkipFactory ? `, __skip_${finalKey}: true` : ``\r\n            }`,\r\n          )\r\n      }\r\n      if (defaults.length) {\r\n        propsDecls = `/*#__PURE__*/${ctx.helper(\r\n          `mergeDefaults`,\r\n        )}(${propsDecls}, {\\n  ${defaults.join(',\\n  ')}\\n})`\r\n      }\r\n    }\r\n  } else if (ctx.propsTypeDecl) {\r\n    propsDecls = extractRuntimeProps(ctx)\r\n  }\r\n\r\n  const modelsDecls = genModelProps(ctx)\r\n\r\n  if (propsDecls && modelsDecls) {\r\n    return `/*#__PURE__*/${ctx.helper(\r\n      'mergeModels',\r\n    )}(${propsDecls}, ${modelsDecls})`\r\n  } else {\r\n    return modelsDecls || propsDecls\r\n  }\r\n}\r\n\r\nexport function extractRuntimeProps(\r\n  ctx: TypeResolveContext,\r\n): string | undefined {\r\n  // this is only called if propsTypeDecl exists\r\n  const props = resolveRuntimePropsFromType(ctx, ctx.propsTypeDecl!)\r\n  if (!props.length) {\r\n    return\r\n  }\r\n\r\n  const propStrings: string[] = []\r\n  const hasStaticDefaults = hasStaticWithDefaults(ctx)\r\n\r\n  for (const prop of props) {\r\n    propStrings.push(genRuntimePropFromType(ctx, prop, hasStaticDefaults))\r\n    // register bindings\r\n    if ('bindingMetadata' in ctx && !(prop.key in ctx.bindingMetadata)) {\r\n      ctx.bindingMetadata[prop.key] = BindingTypes.PROPS\r\n    }\r\n  }\r\n\r\n  let propsDecls = `{\r\n    ${propStrings.join(',\\n    ')}\\n  }`\r\n\r\n  if (ctx.propsRuntimeDefaults && !hasStaticDefaults) {\r\n    propsDecls = `/*#__PURE__*/${ctx.helper(\r\n      'mergeDefaults',\r\n    )}(${propsDecls}, ${ctx.getString(ctx.propsRuntimeDefaults)})`\r\n  }\r\n\r\n  return propsDecls\r\n}\r\n\r\nfunction resolveRuntimePropsFromType(\r\n  ctx: TypeResolveContext,\r\n  node: Node,\r\n): PropTypeData[] {\r\n  const props: PropTypeData[] = []\r\n  const elements = resolveTypeElements(ctx, node)\r\n  for (const key in elements.props) {\r\n    const e = elements.props[key]\r\n    let type = inferRuntimeType(ctx, e)\r\n    let skipCheck = false\r\n    // skip check for result containing unknown types\r\n    if (type.includes(UNKNOWN_TYPE)) {\r\n      if (type.includes('Boolean') || type.includes('Function')) {\r\n        type = type.filter(t => t !== UNKNOWN_TYPE)\r\n        skipCheck = true\r\n      } else {\r\n        type = ['null']\r\n      }\r\n    }\r\n    props.push({\r\n      key,\r\n      required: !e.optional,\r\n      type: type || [`null`],\r\n      skipCheck,\r\n    })\r\n  }\r\n  return props\r\n}\r\n\r\nfunction genRuntimePropFromType(\r\n  ctx: TypeResolveContext,\r\n  { key, required, type, skipCheck }: PropTypeData,\r\n  hasStaticDefaults: boolean,\r\n): string {\r\n  let defaultString: string | undefined\r\n  const destructured = genDestructuredDefaultValue(ctx, key, type)\r\n  if (destructured) {\r\n    defaultString = `default: ${destructured.valueString}${\r\n      destructured.needSkipFactory ? `, skipFactory: true` : ``\r\n    }`\r\n  } else if (hasStaticDefaults) {\r\n    const prop = (ctx.propsRuntimeDefaults as ObjectExpression).properties.find(\r\n      node => {\r\n        if (node.type === 'SpreadElement') return false\r\n        return resolveObjectKey(node.key, node.computed) === key\r\n      },\r\n    ) as ObjectProperty | ObjectMethod\r\n    if (prop) {\r\n      if (prop.type === 'ObjectProperty') {\r\n        // prop has corresponding static default value\r\n        defaultString = `default: ${ctx.getString(prop.value)}`\r\n      } else {\r\n        defaultString = `${prop.async ? 'async ' : ''}${\r\n          prop.kind !== 'method' ? `${prop.kind} ` : ''\r\n        }default() ${ctx.getString(prop.body)}`\r\n      }\r\n    }\r\n  }\r\n\r\n  const finalKey = getEscapedPropName(key)\r\n  if (!ctx.options.isProd) {\r\n    return `${finalKey}: { ${concatStrings([\r\n      `type: ${toRuntimeTypeString(type)}`,\r\n      `required: ${required}`,\r\n      skipCheck && 'skipCheck: true',\r\n      defaultString,\r\n    ])} }`\r\n  } else if (\r\n    type.some(\r\n      el =>\r\n        el === 'Boolean' ||\r\n        ((!hasStaticDefaults || defaultString) && el === 'Function'),\r\n    )\r\n  ) {\r\n    // #4783 for boolean, should keep the type\r\n    // #7111 for function, if default value exists or it's not static, should keep it\r\n    // in production\r\n    return `${finalKey}: { ${concatStrings([\r\n      `type: ${toRuntimeTypeString(type)}`,\r\n      defaultString,\r\n    ])} }`\r\n  } else {\r\n    // #8989 for custom element, should keep the type\r\n    if (ctx.isCE) {\r\n      if (defaultString) {\r\n        return `${finalKey}: ${`{ ${defaultString}, type: ${toRuntimeTypeString(\r\n          type,\r\n        )} }`}`\r\n      } else {\r\n        return `${finalKey}: {type: ${toRuntimeTypeString(type)}}`\r\n      }\r\n    }\r\n\r\n    // production: checks are useless\r\n    return `${finalKey}: ${defaultString ? `{ ${defaultString} }` : `{}`}`\r\n  }\r\n}\r\n\r\n/**\r\n * check defaults. If the default object is an object literal with only\r\n * static properties, we can directly generate more optimized default\r\n * declarations. Otherwise we will have to fallback to runtime merging.\r\n */\r\nfunction hasStaticWithDefaults(ctx: TypeResolveContext) {\r\n  return !!(\r\n    ctx.propsRuntimeDefaults &&\r\n    ctx.propsRuntimeDefaults.type === 'ObjectExpression' &&\r\n    ctx.propsRuntimeDefaults.properties.every(\r\n      node =>\r\n        node.type !== 'SpreadElement' &&\r\n        (!node.computed || node.key.type.endsWith('Literal')),\r\n    )\r\n  )\r\n}\r\n\r\nfunction genDestructuredDefaultValue(\r\n  ctx: TypeResolveContext,\r\n  key: string,\r\n  inferredType?: string[],\r\n):\r\n  | {\r\n      valueString: string\r\n      needSkipFactory: boolean\r\n    }\r\n  | undefined {\r\n  const destructured = ctx.propsDestructuredBindings[key]\r\n  const defaultVal = destructured && destructured.default\r\n  if (defaultVal) {\r\n    const value = ctx.getString(defaultVal)\r\n    const unwrapped = unwrapTSNode(defaultVal)\r\n\r\n    if (inferredType && inferredType.length && !inferredType.includes('null')) {\r\n      const valueType = inferValueType(unwrapped)\r\n      if (valueType && !inferredType.includes(valueType)) {\r\n        ctx.error(\r\n          `Default value of prop \"${key}\" does not match declared type.`,\r\n          unwrapped,\r\n        )\r\n      }\r\n    }\r\n\r\n    // If the default value is a function or is an identifier referencing\r\n    // external value, skip factory wrap. This is needed when using\r\n    // destructure w/ runtime declaration since we cannot safely infer\r\n    // whether the expected runtime prop type is `Function`.\r\n    const needSkipFactory =\r\n      !inferredType &&\r\n      (isFunctionType(unwrapped) || unwrapped.type === 'Identifier')\r\n\r\n    const needFactoryWrap =\r\n      !needSkipFactory &&\r\n      !isLiteralNode(unwrapped) &&\r\n      !inferredType?.includes('Function')\r\n\r\n    return {\r\n      valueString: needFactoryWrap ? `() => (${value})` : value,\r\n      needSkipFactory,\r\n    }\r\n  }\r\n}\r\n\r\n// non-comprehensive, best-effort type infernece for a runtime value\r\n// this is used to catch default value / type declaration mismatches\r\n// when using props destructure.\r\nfunction inferValueType(node: Node): string | undefined {\r\n  switch (node.type) {\r\n    case 'StringLiteral':\r\n      return 'String'\r\n    case 'NumericLiteral':\r\n      return 'Number'\r\n    case 'BooleanLiteral':\r\n      return 'Boolean'\r\n    case 'ObjectExpression':\r\n      return 'Object'\r\n    case 'ArrayExpression':\r\n      return 'Array'\r\n    case 'FunctionExpression':\r\n    case 'ArrowFunctionExpression':\r\n      return 'Function'\r\n  }\r\n}\r\n","import type {\r\n  BlockStatement,\r\n  Expression,\r\n  Identifier,\r\n  Node,\r\n  ObjectPattern,\r\n  Program,\r\n  VariableDeclaration,\r\n} from '@babel/types'\r\nimport { walk } from 'estree-walker'\r\nimport {\r\n  BindingTypes,\r\n  extractIdentifiers,\r\n  isFunctionType,\r\n  isInDestructureAssignment,\r\n  isReferencedIdentifier,\r\n  isStaticProperty,\r\n  unwrapTSNode,\r\n  walkFunctionParams,\r\n} from '@vue/compiler-dom'\r\nimport { genPropsAccessExp } from '@vue/shared'\r\nimport { isCallOf, resolveObjectKey } from './utils'\r\nimport type { ScriptCompileContext } from './context'\r\nimport { DEFINE_PROPS } from './defineProps'\r\nimport { warnOnce } from '../warn'\r\n\r\nexport function processPropsDestructure(\r\n  ctx: ScriptCompileContext,\r\n  declId: ObjectPattern,\r\n) {\r\n  if (!ctx.options.propsDestructure) {\r\n    return\r\n  }\r\n\r\n  warnOnce(\r\n    `This project is using reactive props destructure, which is an experimental ` +\r\n      `feature. It may receive breaking changes or be removed in the future, so ` +\r\n      `use at your own risk.\\n` +\r\n      `To stay updated, follow the RFC at https://github.com/vuejs/rfcs/discussions/502.`,\r\n  )\r\n\r\n  ctx.propsDestructureDecl = declId\r\n\r\n  const registerBinding = (\r\n    key: string,\r\n    local: string,\r\n    defaultValue?: Expression,\r\n  ) => {\r\n    ctx.propsDestructuredBindings[key] = { local, default: defaultValue }\r\n    if (local !== key) {\r\n      ctx.bindingMetadata[local] = BindingTypes.PROPS_ALIASED\r\n      ;(ctx.bindingMetadata.__propsAliases ||\r\n        (ctx.bindingMetadata.__propsAliases = {}))[local] = key\r\n    }\r\n  }\r\n\r\n  for (const prop of declId.properties) {\r\n    if (prop.type === 'ObjectProperty') {\r\n      const propKey = resolveObjectKey(prop.key, prop.computed)\r\n\r\n      if (!propKey) {\r\n        ctx.error(\r\n          `${DEFINE_PROPS}() destructure cannot use computed key.`,\r\n          prop.key,\r\n        )\r\n      }\r\n\r\n      if (prop.value.type === 'AssignmentPattern') {\r\n        // default value { foo = 123 }\r\n        const { left, right } = prop.value\r\n        if (left.type !== 'Identifier') {\r\n          ctx.error(\r\n            `${DEFINE_PROPS}() destructure does not support nested patterns.`,\r\n            left,\r\n          )\r\n        }\r\n        registerBinding(propKey, left.name, right)\r\n      } else if (prop.value.type === 'Identifier') {\r\n        // simple destructure\r\n        registerBinding(propKey, prop.value.name)\r\n      } else {\r\n        ctx.error(\r\n          `${DEFINE_PROPS}() destructure does not support nested patterns.`,\r\n          prop.value,\r\n        )\r\n      }\r\n    } else {\r\n      // rest spread\r\n      ctx.propsDestructureRestId = (prop.argument as Identifier).name\r\n      // register binding\r\n      ctx.bindingMetadata[ctx.propsDestructureRestId] =\r\n        BindingTypes.SETUP_REACTIVE_CONST\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * true -> prop binding\r\n * false -> local binding\r\n */\r\ntype Scope = Record<string, boolean>\r\n\r\nexport function transformDestructuredProps(\r\n  ctx: ScriptCompileContext,\r\n  vueImportAliases: Record<string, string>,\r\n) {\r\n  if (!ctx.options.propsDestructure) {\r\n    return\r\n  }\r\n\r\n  const rootScope: Scope = {}\r\n  const scopeStack: Scope[] = [rootScope]\r\n  let currentScope: Scope = rootScope\r\n  const excludedIds = new WeakSet<Identifier>()\r\n  const parentStack: Node[] = []\r\n  const propsLocalToPublicMap: Record<string, string> = Object.create(null)\r\n\r\n  for (const key in ctx.propsDestructuredBindings) {\r\n    const { local } = ctx.propsDestructuredBindings[key]\r\n    rootScope[local] = true\r\n    propsLocalToPublicMap[local] = key\r\n  }\r\n\r\n  function pushScope() {\r\n    scopeStack.push((currentScope = Object.create(currentScope)))\r\n  }\r\n\r\n  function popScope() {\r\n    scopeStack.pop()\r\n    currentScope = scopeStack[scopeStack.length - 1] || null\r\n  }\r\n\r\n  function registerLocalBinding(id: Identifier) {\r\n    excludedIds.add(id)\r\n    if (currentScope) {\r\n      currentScope[id.name] = false\r\n    } else {\r\n      ctx.error(\r\n        'registerBinding called without active scope, something is wrong.',\r\n        id,\r\n      )\r\n    }\r\n  }\r\n\r\n  function walkScope(node: Program | BlockStatement, isRoot = false) {\r\n    for (const stmt of node.body) {\r\n      if (stmt.type === 'VariableDeclaration') {\r\n        walkVariableDeclaration(stmt, isRoot)\r\n      } else if (\r\n        stmt.type === 'FunctionDeclaration' ||\r\n        stmt.type === 'ClassDeclaration'\r\n      ) {\r\n        if (stmt.declare || !stmt.id) continue\r\n        registerLocalBinding(stmt.id)\r\n      } else if (\r\n        (stmt.type === 'ForOfStatement' || stmt.type === 'ForInStatement') &&\r\n        stmt.left.type === 'VariableDeclaration'\r\n      ) {\r\n        walkVariableDeclaration(stmt.left)\r\n      } else if (\r\n        stmt.type === 'ExportNamedDeclaration' &&\r\n        stmt.declaration &&\r\n        stmt.declaration.type === 'VariableDeclaration'\r\n      ) {\r\n        walkVariableDeclaration(stmt.declaration, isRoot)\r\n      } else if (\r\n        stmt.type === 'LabeledStatement' &&\r\n        stmt.body.type === 'VariableDeclaration'\r\n      ) {\r\n        walkVariableDeclaration(stmt.body, isRoot)\r\n      }\r\n    }\r\n  }\r\n\r\n  function walkVariableDeclaration(stmt: VariableDeclaration, isRoot = false) {\r\n    if (stmt.declare) {\r\n      return\r\n    }\r\n    for (const decl of stmt.declarations) {\r\n      const isDefineProps =\r\n        isRoot && decl.init && isCallOf(unwrapTSNode(decl.init), 'defineProps')\r\n      for (const id of extractIdentifiers(decl.id)) {\r\n        if (isDefineProps) {\r\n          // for defineProps destructure, only exclude them since they\r\n          // are already passed in as knownProps\r\n          excludedIds.add(id)\r\n        } else {\r\n          registerLocalBinding(id)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function rewriteId(id: Identifier, parent: Node, parentStack: Node[]) {\r\n    if (\r\n      (parent.type === 'AssignmentExpression' && id === parent.left) ||\r\n      parent.type === 'UpdateExpression'\r\n    ) {\r\n      ctx.error(`Cannot assign to destructured props as they are readonly.`, id)\r\n    }\r\n\r\n    if (isStaticProperty(parent) && parent.shorthand) {\r\n      // let binding used in a property shorthand\r\n      // skip for destructure patterns\r\n      if (\r\n        !(parent as any).inPattern ||\r\n        isInDestructureAssignment(parent, parentStack)\r\n      ) {\r\n        // { prop } -> { prop: __props.prop }\r\n        ctx.s.appendLeft(\r\n          id.end! + ctx.startOffset!,\r\n          `: ${genPropsAccessExp(propsLocalToPublicMap[id.name])}`,\r\n        )\r\n      }\r\n    } else {\r\n      // x --> __props.x\r\n      ctx.s.overwrite(\r\n        id.start! + ctx.startOffset!,\r\n        id.end! + ctx.startOffset!,\r\n        genPropsAccessExp(propsLocalToPublicMap[id.name]),\r\n      )\r\n    }\r\n  }\r\n\r\n  function checkUsage(node: Node, method: string, alias = method) {\r\n    if (isCallOf(node, alias)) {\r\n      const arg = unwrapTSNode(node.arguments[0])\r\n      if (arg.type === 'Identifier' && currentScope[arg.name]) {\r\n        ctx.error(\r\n          `\"${arg.name}\" is a destructured prop and should not be passed directly to ${method}(). ` +\r\n            `Pass a getter () => ${arg.name} instead.`,\r\n          arg,\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  // check root scope first\r\n  const ast = ctx.scriptSetupAst!\r\n  walkScope(ast, true)\r\n  walk(ast, {\r\n    enter(node: Node, parent?: Node) {\r\n      parent && parentStack.push(parent)\r\n\r\n      // skip type nodes\r\n      if (\r\n        parent &&\r\n        parent.type.startsWith('TS') &&\r\n        parent.type !== 'TSAsExpression' &&\r\n        parent.type !== 'TSNonNullExpression' &&\r\n        parent.type !== 'TSTypeAssertion'\r\n      ) {\r\n        return this.skip()\r\n      }\r\n\r\n      checkUsage(node, 'watch', vueImportAliases.watch)\r\n      checkUsage(node, 'toRef', vueImportAliases.toRef)\r\n\r\n      // function scopes\r\n      if (isFunctionType(node)) {\r\n        pushScope()\r\n        walkFunctionParams(node, registerLocalBinding)\r\n        if (node.body.type === 'BlockStatement') {\r\n          walkScope(node.body)\r\n        }\r\n        return\r\n      }\r\n\r\n      // catch param\r\n      if (node.type === 'CatchClause') {\r\n        pushScope()\r\n        if (node.param && node.param.type === 'Identifier') {\r\n          registerLocalBinding(node.param)\r\n        }\r\n        walkScope(node.body)\r\n        return\r\n      }\r\n\r\n      // non-function block scopes\r\n      if (node.type === 'BlockStatement' && !isFunctionType(parent!)) {\r\n        pushScope()\r\n        walkScope(node)\r\n        return\r\n      }\r\n\r\n      if (node.type === 'Identifier') {\r\n        if (\r\n          isReferencedIdentifier(node, parent!, parentStack) &&\r\n          !excludedIds.has(node)\r\n        ) {\r\n          if (currentScope[node.name]) {\r\n            rewriteId(node, parent!, parentStack)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    leave(node: Node, parent?: Node) {\r\n      parent && parentStack.pop()\r\n      if (\r\n        (node.type === 'BlockStatement' && !isFunctionType(parent!)) ||\r\n        isFunctionType(node)\r\n      ) {\r\n        popScope()\r\n      }\r\n    },\r\n  })\r\n}\r\n","import type {\r\n  ArrayPattern,\r\n  Identifier,\r\n  LVal,\r\n  Node,\r\n  ObjectPattern,\r\n  RestElement,\r\n} from '@babel/types'\r\nimport { isCallOf } from './utils'\r\nimport type { ScriptCompileContext } from './context'\r\nimport {\r\n  type TypeResolveContext,\r\n  resolveTypeElements,\r\n  resolveUnionType,\r\n} from './resolveType'\r\n\r\nexport const DEFINE_EMITS = 'defineEmits'\r\n\r\nexport function processDefineEmits(\r\n  ctx: ScriptCompileContext,\r\n  node: Node,\r\n  declId?: LVal,\r\n): boolean {\r\n  if (!isCallOf(node, DEFINE_EMITS)) {\r\n    return false\r\n  }\r\n  if (ctx.hasDefineEmitCall) {\r\n    ctx.error(`duplicate ${DEFINE_EMITS}() call`, node)\r\n  }\r\n  ctx.hasDefineEmitCall = true\r\n  ctx.emitsRuntimeDecl = node.arguments[0]\r\n  if (node.typeParameters) {\r\n    if (ctx.emitsRuntimeDecl) {\r\n      ctx.error(\r\n        `${DEFINE_EMITS}() cannot accept both type and non-type arguments ` +\r\n          `at the same time. Use one or the other.`,\r\n        node,\r\n      )\r\n    }\r\n    ctx.emitsTypeDecl = node.typeParameters.params[0]\r\n  }\r\n\r\n  ctx.emitDecl = declId\r\n\r\n  return true\r\n}\r\n\r\nexport function genRuntimeEmits(ctx: ScriptCompileContext): string | undefined {\r\n  let emitsDecl = ''\r\n  if (ctx.emitsRuntimeDecl) {\r\n    emitsDecl = ctx.getString(ctx.emitsRuntimeDecl).trim()\r\n  } else if (ctx.emitsTypeDecl) {\r\n    const typeDeclaredEmits = extractRuntimeEmits(ctx)\r\n    emitsDecl = typeDeclaredEmits.size\r\n      ? `[${Array.from(typeDeclaredEmits)\r\n          .map(k => JSON.stringify(k))\r\n          .join(', ')}]`\r\n      : ``\r\n  }\r\n  if (ctx.hasDefineModelCall) {\r\n    let modelEmitsDecl = `[${Object.keys(ctx.modelDecls)\r\n      .map(n => JSON.stringify(`update:${n}`))\r\n      .join(', ')}]`\r\n    emitsDecl = emitsDecl\r\n      ? `/*#__PURE__*/${ctx.helper(\r\n          'mergeModels',\r\n        )}(${emitsDecl}, ${modelEmitsDecl})`\r\n      : modelEmitsDecl\r\n  }\r\n  return emitsDecl\r\n}\r\n\r\nexport function extractRuntimeEmits(ctx: TypeResolveContext): Set<string> {\r\n  const emits = new Set<string>()\r\n  const node = ctx.emitsTypeDecl!\r\n\r\n  if (node.type === 'TSFunctionType') {\r\n    extractEventNames(ctx, node.parameters[0], emits)\r\n    return emits\r\n  }\r\n\r\n  const { props, calls } = resolveTypeElements(ctx, node)\r\n\r\n  let hasProperty = false\r\n  for (const key in props) {\r\n    emits.add(key)\r\n    hasProperty = true\r\n  }\r\n\r\n  if (calls) {\r\n    if (hasProperty) {\r\n      ctx.error(\r\n        `defineEmits() type cannot mixed call signature and property syntax.`,\r\n        node,\r\n      )\r\n    }\r\n    for (const call of calls) {\r\n      extractEventNames(ctx, call.parameters[0], emits)\r\n    }\r\n  }\r\n\r\n  return emits\r\n}\r\n\r\nfunction extractEventNames(\r\n  ctx: TypeResolveContext,\r\n  eventName: ArrayPattern | Identifier | ObjectPattern | RestElement,\r\n  emits: Set<string>,\r\n) {\r\n  if (\r\n    eventName.type === 'Identifier' &&\r\n    eventName.typeAnnotation &&\r\n    eventName.typeAnnotation.type === 'TSTypeAnnotation'\r\n  ) {\r\n    const types = resolveUnionType(ctx, eventName.typeAnnotation.typeAnnotation)\r\n\r\n    for (const type of types) {\r\n      if (type.type === 'TSLiteralType') {\r\n        if (\r\n          type.literal.type !== 'UnaryExpression' &&\r\n          type.literal.type !== 'TemplateLiteral'\r\n        ) {\r\n          emits.add(String(type.literal.value))\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { Node } from '@babel/types'\r\nimport { isCallOf } from './utils'\r\nimport type { ScriptCompileContext } from './context'\r\n\r\nexport const DEFINE_EXPOSE = 'defineExpose'\r\n\r\nexport function processDefineExpose(\r\n  ctx: ScriptCompileContext,\r\n  node: Node,\r\n): boolean {\r\n  if (isCallOf(node, DEFINE_EXPOSE)) {\r\n    if (ctx.hasDefineExposeCall) {\r\n      ctx.error(`duplicate ${DEFINE_EXPOSE}() call`, node)\r\n    }\r\n    ctx.hasDefineExposeCall = true\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import type { LVal, Node } from '@babel/types'\r\nimport { isCallOf } from './utils'\r\nimport type { ScriptCompileContext } from './context'\r\n\r\nexport const DEFINE_SLOTS = 'defineSlots'\r\n\r\nexport function processDefineSlots(\r\n  ctx: ScriptCompileContext,\r\n  node: Node,\r\n  declId?: LVal,\r\n): boolean {\r\n  if (!isCallOf(node, DEFINE_SLOTS)) {\r\n    return false\r\n  }\r\n  if (ctx.hasDefineSlotsCall) {\r\n    ctx.error(`duplicate ${DEFINE_SLOTS}() call`, node)\r\n  }\r\n  ctx.hasDefineSlotsCall = true\r\n\r\n  if (node.arguments.length > 0) {\r\n    ctx.error(`${DEFINE_SLOTS}() cannot accept arguments`, node)\r\n  }\r\n\r\n  if (declId) {\r\n    ctx.s.overwrite(\r\n      ctx.startOffset! + node.start!,\r\n      ctx.startOffset! + node.end!,\r\n      `${ctx.helper('useSlots')}()`,\r\n    )\r\n  }\r\n\r\n  return true\r\n}\r\n","import type { Node } from '@babel/types'\r\nimport { unwrapTSNode } from '@vue/compiler-dom'\r\nimport type { ScriptCompileContext } from './context'\r\nimport { isCallOf } from './utils'\r\nimport { DEFINE_PROPS } from './defineProps'\r\nimport { DEFINE_EMITS } from './defineEmits'\r\nimport { DEFINE_EXPOSE } from './defineExpose'\r\nimport { DEFINE_SLOTS } from './defineSlots'\r\n\r\nexport const DEFINE_OPTIONS = 'defineOptions'\r\n\r\nexport function processDefineOptions(\r\n  ctx: ScriptCompileContext,\r\n  node: Node,\r\n): boolean {\r\n  if (!isCallOf(node, DEFINE_OPTIONS)) {\r\n    return false\r\n  }\r\n  if (ctx.hasDefineOptionsCall) {\r\n    ctx.error(`duplicate ${DEFINE_OPTIONS}() call`, node)\r\n  }\r\n  if (node.typeParameters) {\r\n    ctx.error(`${DEFINE_OPTIONS}() cannot accept type arguments`, node)\r\n  }\r\n  if (!node.arguments[0]) return true\r\n\r\n  ctx.hasDefineOptionsCall = true\r\n  ctx.optionsRuntimeDecl = unwrapTSNode(node.arguments[0])\r\n\r\n  let propsOption = undefined\r\n  let emitsOption = undefined\r\n  let exposeOption = undefined\r\n  let slotsOption = undefined\r\n  if (ctx.optionsRuntimeDecl.type === 'ObjectExpression') {\r\n    for (const prop of ctx.optionsRuntimeDecl.properties) {\r\n      if (\r\n        (prop.type === 'ObjectProperty' || prop.type === 'ObjectMethod') &&\r\n        prop.key.type === 'Identifier'\r\n      ) {\r\n        if (prop.key.name === 'props') propsOption = prop\r\n        if (prop.key.name === 'emits') emitsOption = prop\r\n        if (prop.key.name === 'expose') exposeOption = prop\r\n        if (prop.key.name === 'slots') slotsOption = prop\r\n      }\r\n    }\r\n  }\r\n\r\n  if (propsOption) {\r\n    ctx.error(\r\n      `${DEFINE_OPTIONS}() cannot be used to declare props. Use ${DEFINE_PROPS}() instead.`,\r\n      propsOption,\r\n    )\r\n  }\r\n  if (emitsOption) {\r\n    ctx.error(\r\n      `${DEFINE_OPTIONS}() cannot be used to declare emits. Use ${DEFINE_EMITS}() instead.`,\r\n      emitsOption,\r\n    )\r\n  }\r\n  if (exposeOption) {\r\n    ctx.error(\r\n      `${DEFINE_OPTIONS}() cannot be used to declare expose. Use ${DEFINE_EXPOSE}() instead.`,\r\n      exposeOption,\r\n    )\r\n  }\r\n  if (slotsOption) {\r\n    ctx.error(\r\n      `${DEFINE_OPTIONS}() cannot be used to declare slots. Use ${DEFINE_SLOTS}() instead.`,\r\n      slotsOption,\r\n    )\r\n  }\r\n\r\n  return true\r\n}\r\n","import type { AwaitExpression } from '@babel/types'\r\nimport type { ScriptCompileContext } from './context'\r\n\r\n/**\r\n * Support context-persistence between top-level await expressions:\r\n *\r\n * ```js\r\n * const instance = getCurrentInstance()\r\n * await foo()\r\n * expect(getCurrentInstance()).toBe(instance)\r\n * ```\r\n *\r\n * In the future we can potentially get rid of this when Async Context\r\n * becomes generally available: https://github.com/tc39/proposal-async-context\r\n *\r\n * ```js\r\n * // input\r\n * await foo()\r\n * // output\r\n * ;(\r\n *   ([__temp,__restore] = withAsyncContext(() => foo())),\r\n *   await __temp,\r\n *   __restore()\r\n * )\r\n *\r\n * // input\r\n * const a = await foo()\r\n * // output\r\n * const a = (\r\n *   ([__temp, __restore] = withAsyncContext(() => foo())),\r\n *   __temp = await __temp,\r\n *   __restore(),\r\n *   __temp\r\n * )\r\n * ```\r\n */\r\nexport function processAwait(\r\n  ctx: ScriptCompileContext,\r\n  node: AwaitExpression,\r\n  needSemi: boolean,\r\n  isStatement: boolean,\r\n) {\r\n  const argumentStart =\r\n    node.argument.extra && node.argument.extra.parenthesized\r\n      ? (node.argument.extra.parenStart as number)\r\n      : node.argument.start!\r\n\r\n  const startOffset = ctx.startOffset!\r\n  const argumentStr = ctx.descriptor.source.slice(\r\n    argumentStart + startOffset,\r\n    node.argument.end! + startOffset,\r\n  )\r\n\r\n  const containsNestedAwait = /\\bawait\\b/.test(argumentStr)\r\n\r\n  ctx.s.overwrite(\r\n    node.start! + startOffset,\r\n    argumentStart + startOffset,\r\n    `${needSemi ? `;` : ``}(\\n  ([__temp,__restore] = ${ctx.helper(\r\n      `withAsyncContext`,\r\n    )}(${containsNestedAwait ? `async ` : ``}() => `,\r\n  )\r\n  ctx.s.appendLeft(\r\n    node.end! + startOffset,\r\n    `)),\\n  ${isStatement ? `` : `__temp = `}await __temp,\\n  __restore()${\r\n      isStatement ? `` : `,\\n  __temp`\r\n    }\\n)`,\r\n  )\r\n}\r\n","import {\r\n  BindingTypes,\r\n  UNREF,\r\n  isFunctionType,\r\n  unwrapTSNode,\r\n  walkIdentifiers,\r\n} from '@vue/compiler-dom'\r\nimport {\r\n  DEFAULT_FILENAME,\r\n  type SFCDescriptor,\r\n  type SFCScriptBlock,\r\n} from './parse'\r\nimport type { ParserPlugin } from '@babel/parser'\r\nimport { generateCodeFrame } from '@vue/shared'\r\nimport type {\r\n  ArrayPattern,\r\n  CallExpression,\r\n  Declaration,\r\n  ExportSpecifier,\r\n  Identifier,\r\n  Node,\r\n  ObjectPattern,\r\n  Statement,\r\n} from '@babel/types'\r\nimport { walk } from 'estree-walker'\r\nimport type { RawSourceMap } from 'source-map-js'\r\nimport {\r\n  normalScriptDefaultVar,\r\n  processNormalScript,\r\n} from './script/normalScript'\r\nimport { CSS_VARS_HELPER, genCssVarsCode } from './style/cssVars'\r\nimport {\r\n  type SFCTemplateCompileOptions,\r\n  compileTemplate,\r\n} from './compileTemplate'\r\nimport { warnOnce } from './warn'\r\nimport { transformDestructuredProps } from './script/definePropsDestructure'\r\nimport { ScriptCompileContext } from './script/context'\r\nimport {\r\n  DEFINE_PROPS,\r\n  WITH_DEFAULTS,\r\n  genRuntimeProps,\r\n  processDefineProps,\r\n} from './script/defineProps'\r\nimport {\r\n  DEFINE_EMITS,\r\n  genRuntimeEmits,\r\n  processDefineEmits,\r\n} from './script/defineEmits'\r\nimport { DEFINE_EXPOSE, processDefineExpose } from './script/defineExpose'\r\nimport { DEFINE_OPTIONS, processDefineOptions } from './script/defineOptions'\r\nimport { processDefineSlots } from './script/defineSlots'\r\nimport { DEFINE_MODEL, processDefineModel } from './script/defineModel'\r\nimport { getImportedName, isCallOf, isLiteralNode } from './script/utils'\r\nimport { analyzeScriptBindings } from './script/analyzeScriptBindings'\r\nimport { isImportUsed } from './script/importUsageCheck'\r\nimport { processAwait } from './script/topLevelAwait'\r\n\r\nexport interface SFCScriptCompileOptions {\r\n  /**\r\n   * Scope ID for prefixing injected CSS variables.\r\n   * This must be consistent with the `id` passed to `compileStyle`.\r\n   */\r\n  id: string\r\n  /**\r\n   * Production mode. Used to determine whether to generate hashed CSS variables\r\n   */\r\n  isProd?: boolean\r\n  /**\r\n   * Enable/disable source map. Defaults to true.\r\n   */\r\n  sourceMap?: boolean\r\n  /**\r\n   * https://babeljs.io/docs/en/babel-parser#plugins\r\n   */\r\n  babelParserPlugins?: ParserPlugin[]\r\n  /**\r\n   * A list of files to parse for global types to be made available for type\r\n   * resolving in SFC macros. The list must be fully resolved file system paths.\r\n   */\r\n  globalTypeFiles?: string[]\r\n  /**\r\n   * Compile the template and inline the resulting render function\r\n   * directly inside setup().\r\n   * - Only affects `<script setup>`\r\n   * - This should only be used in production because it prevents the template\r\n   * from being hot-reloaded separately from component state.\r\n   */\r\n  inlineTemplate?: boolean\r\n  /**\r\n   * Generate the final component as a variable instead of default export.\r\n   * This is useful in e.g. @vitejs/plugin-vue where the script needs to be\r\n   * placed inside the main module.\r\n   */\r\n  genDefaultAs?: string\r\n  /**\r\n   * Options for template compilation when inlining. Note these are options that\r\n   * would normally be passed to `compiler-sfc`'s own `compileTemplate()`, not\r\n   * options passed to `compiler-dom`.\r\n   */\r\n  templateOptions?: Partial<SFCTemplateCompileOptions>\r\n  /**\r\n   * Hoist <script setup> static constants.\r\n   * - Only enables when one `<script setup>` exists.\r\n   * @default true\r\n   */\r\n  hoistStatic?: boolean\r\n  /**\r\n   * (**Experimental**) Enable reactive destructure for `defineProps`\r\n   * @default false\r\n   */\r\n  propsDestructure?: boolean\r\n  /**\r\n   * File system access methods to be used when resolving types\r\n   * imported in SFC macros. Defaults to ts.sys in Node.js, can be overwritten\r\n   * to use a virtual file system for use in browsers (e.g. in REPLs)\r\n   */\r\n  fs?: {\r\n    fileExists(file: string): boolean\r\n    readFile(file: string): string | undefined\r\n    realpath?(file: string): string\r\n  }\r\n  /**\r\n   * Transform Vue SFCs into custom elements.\r\n   */\r\n  customElement?: boolean | ((filename: string) => boolean)\r\n}\r\n\r\nexport interface ImportBinding {\r\n  isType: boolean\r\n  imported: string\r\n  local: string\r\n  source: string\r\n  isFromSetup: boolean\r\n  isUsedInTemplate: boolean\r\n}\r\n\r\n/**\r\n * Compile `<script setup>`\r\n * It requires the whole SFC descriptor because we need to handle and merge\r\n * normal `<script>` + `<script setup>` if both are present.\r\n */\r\nexport function compileScript(\r\n  sfc: SFCDescriptor,\r\n  options: SFCScriptCompileOptions,\r\n): SFCScriptBlock {\r\n  if (!options.id) {\r\n    warnOnce(\r\n      `compileScript now requires passing the \\`id\\` option.\\n` +\r\n        `Upgrade your vite or vue-loader version for compatibility with ` +\r\n        `the latest experimental proposals.`,\r\n    )\r\n  }\r\n\r\n  const ctx = new ScriptCompileContext(sfc, options)\r\n  const { script, scriptSetup, source, filename } = sfc\r\n  const hoistStatic = options.hoistStatic !== false && !script\r\n  const scopeId = options.id ? options.id.replace(/^data-v-/, '') : ''\r\n  const scriptLang = script && script.lang\r\n  const scriptSetupLang = scriptSetup && scriptSetup.lang\r\n\r\n  let refBindings: string[] | undefined\r\n\r\n  if (!scriptSetup) {\r\n    if (!script) {\r\n      throw new Error(`[@vue/compiler-sfc] SFC contains no <script> tags.`)\r\n    }\r\n    // normal <script> only\r\n    return processNormalScript(ctx, scopeId)\r\n  }\r\n\r\n  if (script && scriptLang !== scriptSetupLang) {\r\n    throw new Error(\r\n      `[@vue/compiler-sfc] <script> and <script setup> must have the same ` +\r\n        `language type.`,\r\n    )\r\n  }\r\n\r\n  if (scriptSetupLang && !ctx.isJS && !ctx.isTS) {\r\n    // do not process non js/ts script blocks\r\n    return scriptSetup\r\n  }\r\n\r\n  // metadata that needs to be returned\r\n  // const ctx.bindingMetadata: BindingMetadata = {}\r\n  const scriptBindings: Record<string, BindingTypes> = Object.create(null)\r\n  const setupBindings: Record<string, BindingTypes> = Object.create(null)\r\n\r\n  let defaultExport: Node | undefined\r\n  let hasAwait = false\r\n  let hasInlinedSsrRenderFn = false\r\n\r\n  // string offsets\r\n  const startOffset = ctx.startOffset!\r\n  const endOffset = ctx.endOffset!\r\n  const scriptStartOffset = script && script.loc.start.offset\r\n  const scriptEndOffset = script && script.loc.end.offset\r\n\r\n  function hoistNode(node: Statement) {\r\n    const start = node.start! + startOffset\r\n    let end = node.end! + startOffset\r\n    // locate comment\r\n    if (node.trailingComments && node.trailingComments.length > 0) {\r\n      const lastCommentNode =\r\n        node.trailingComments[node.trailingComments.length - 1]\r\n      end = lastCommentNode.end! + startOffset\r\n    }\r\n    // locate the end of whitespace between this statement and the next\r\n    while (end <= source.length) {\r\n      if (!/\\s/.test(source.charAt(end))) {\r\n        break\r\n      }\r\n      end++\r\n    }\r\n    ctx.s.move(start, end, 0)\r\n  }\r\n\r\n  function registerUserImport(\r\n    source: string,\r\n    local: string,\r\n    imported: string,\r\n    isType: boolean,\r\n    isFromSetup: boolean,\r\n    needTemplateUsageCheck: boolean,\r\n  ) {\r\n    // template usage check is only needed in non-inline mode, so we can skip\r\n    // the work if inlineTemplate is true.\r\n    let isUsedInTemplate = needTemplateUsageCheck\r\n    if (\r\n      needTemplateUsageCheck &&\r\n      ctx.isTS &&\r\n      sfc.template &&\r\n      !sfc.template.src &&\r\n      !sfc.template.lang\r\n    ) {\r\n      isUsedInTemplate = isImportUsed(local, sfc)\r\n    }\r\n\r\n    ctx.userImports[local] = {\r\n      isType,\r\n      imported,\r\n      local,\r\n      source,\r\n      isFromSetup,\r\n      isUsedInTemplate,\r\n    }\r\n  }\r\n\r\n  function checkInvalidScopeReference(node: Node | undefined, method: string) {\r\n    if (!node) return\r\n    walkIdentifiers(node, id => {\r\n      const binding = setupBindings[id.name]\r\n      if (binding && binding !== BindingTypes.LITERAL_CONST) {\r\n        ctx.error(\r\n          `\\`${method}()\\` in <script setup> cannot reference locally ` +\r\n            `declared variables because it will be hoisted outside of the ` +\r\n            `setup() function. If your component options require initialization ` +\r\n            `in the module scope, use a separate normal <script> to export ` +\r\n            `the options instead.`,\r\n          id,\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const scriptAst = ctx.scriptAst\r\n  const scriptSetupAst = ctx.scriptSetupAst!\r\n\r\n  // 1.1 walk import declarations of <script>\r\n  if (scriptAst) {\r\n    for (const node of scriptAst.body) {\r\n      if (node.type === 'ImportDeclaration') {\r\n        // record imports for dedupe\r\n        for (const specifier of node.specifiers) {\r\n          const imported = getImportedName(specifier)\r\n          registerUserImport(\r\n            node.source.value,\r\n            specifier.local.name,\r\n            imported,\r\n            node.importKind === 'type' ||\r\n              (specifier.type === 'ImportSpecifier' &&\r\n                specifier.importKind === 'type'),\r\n            false,\r\n            !options.inlineTemplate,\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // 1.2 walk import declarations of <script setup>\r\n  for (const node of scriptSetupAst.body) {\r\n    if (node.type === 'ImportDeclaration') {\r\n      // import declarations are moved to top\r\n      hoistNode(node)\r\n\r\n      // dedupe imports\r\n      let removed = 0\r\n      const removeSpecifier = (i: number) => {\r\n        const removeLeft = i > removed\r\n        removed++\r\n        const current = node.specifiers[i]\r\n        const next = node.specifiers[i + 1]\r\n        ctx.s.remove(\r\n          removeLeft\r\n            ? node.specifiers[i - 1].end! + startOffset\r\n            : current.start! + startOffset,\r\n          next && !removeLeft\r\n            ? next.start! + startOffset\r\n            : current.end! + startOffset,\r\n        )\r\n      }\r\n\r\n      for (let i = 0; i < node.specifiers.length; i++) {\r\n        const specifier = node.specifiers[i]\r\n        const local = specifier.local.name\r\n        const imported = getImportedName(specifier)\r\n        const source = node.source.value\r\n        const existing = ctx.userImports[local]\r\n        if (\r\n          source === 'vue' &&\r\n          (imported === DEFINE_PROPS ||\r\n            imported === DEFINE_EMITS ||\r\n            imported === DEFINE_EXPOSE)\r\n        ) {\r\n          warnOnce(\r\n            `\\`${imported}\\` is a compiler macro and no longer needs to be imported.`,\r\n          )\r\n          removeSpecifier(i)\r\n        } else if (existing) {\r\n          if (existing.source === source && existing.imported === imported) {\r\n            // already imported in <script setup>, dedupe\r\n            removeSpecifier(i)\r\n          } else {\r\n            ctx.error(\r\n              `different imports aliased to same local name.`,\r\n              specifier,\r\n            )\r\n          }\r\n        } else {\r\n          registerUserImport(\r\n            source,\r\n            local,\r\n            imported,\r\n            node.importKind === 'type' ||\r\n              (specifier.type === 'ImportSpecifier' &&\r\n                specifier.importKind === 'type'),\r\n            true,\r\n            !options.inlineTemplate,\r\n          )\r\n        }\r\n      }\r\n      if (node.specifiers.length && removed === node.specifiers.length) {\r\n        ctx.s.remove(node.start! + startOffset, node.end! + startOffset)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 1.3 resolve possible user import alias of `ref` and `reactive`\r\n  const vueImportAliases: Record<string, string> = {}\r\n  for (const key in ctx.userImports) {\r\n    const { source, imported, local } = ctx.userImports[key]\r\n    if (source === 'vue') vueImportAliases[imported] = local\r\n  }\r\n\r\n  // 2.1 process normal <script> body\r\n  if (script && scriptAst) {\r\n    for (const node of scriptAst.body) {\r\n      if (node.type === 'ExportDefaultDeclaration') {\r\n        // export default\r\n        defaultExport = node\r\n\r\n        // check if user has manually specified `name` or 'render` option in\r\n        // export default\r\n        // if has name, skip name inference\r\n        // if has render and no template, generate return object instead of\r\n        // empty render function (#4980)\r\n        let optionProperties\r\n        if (defaultExport.declaration.type === 'ObjectExpression') {\r\n          optionProperties = defaultExport.declaration.properties\r\n        } else if (\r\n          defaultExport.declaration.type === 'CallExpression' &&\r\n          defaultExport.declaration.arguments[0] &&\r\n          defaultExport.declaration.arguments[0].type === 'ObjectExpression'\r\n        ) {\r\n          optionProperties = defaultExport.declaration.arguments[0].properties\r\n        }\r\n        if (optionProperties) {\r\n          for (const p of optionProperties) {\r\n            if (\r\n              p.type === 'ObjectProperty' &&\r\n              p.key.type === 'Identifier' &&\r\n              p.key.name === 'name'\r\n            ) {\r\n              ctx.hasDefaultExportName = true\r\n            }\r\n            if (\r\n              (p.type === 'ObjectMethod' || p.type === 'ObjectProperty') &&\r\n              p.key.type === 'Identifier' &&\r\n              p.key.name === 'render'\r\n            ) {\r\n              // TODO warn when we provide a better way to do it?\r\n              ctx.hasDefaultExportRender = true\r\n            }\r\n          }\r\n        }\r\n\r\n        // export default { ... } --> const __default__ = { ... }\r\n        const start = node.start! + scriptStartOffset!\r\n        const end = node.declaration.start! + scriptStartOffset!\r\n        ctx.s.overwrite(start, end, `const ${normalScriptDefaultVar} = `)\r\n      } else if (node.type === 'ExportNamedDeclaration') {\r\n        const defaultSpecifier = node.specifiers.find(\r\n          s =>\r\n            s.exported.type === 'Identifier' && s.exported.name === 'default',\r\n        ) as ExportSpecifier\r\n        if (defaultSpecifier) {\r\n          defaultExport = node\r\n          // 1. remove specifier\r\n          if (node.specifiers.length > 1) {\r\n            ctx.s.remove(\r\n              defaultSpecifier.start! + scriptStartOffset!,\r\n              defaultSpecifier.end! + scriptStartOffset!,\r\n            )\r\n          } else {\r\n            ctx.s.remove(\r\n              node.start! + scriptStartOffset!,\r\n              node.end! + scriptStartOffset!,\r\n            )\r\n          }\r\n          if (node.source) {\r\n            // export { x as default } from './x'\r\n            // rewrite to `import { x as __default__ } from './x'` and\r\n            // add to top\r\n            ctx.s.prepend(\r\n              `import { ${defaultSpecifier.local.name} as ${normalScriptDefaultVar} } from '${node.source.value}'\\n`,\r\n            )\r\n          } else {\r\n            // export { x as default }\r\n            // rewrite to `const __default__ = x` and move to end\r\n            ctx.s.appendLeft(\r\n              scriptEndOffset!,\r\n              `\\nconst ${normalScriptDefaultVar} = ${defaultSpecifier.local.name}\\n`,\r\n            )\r\n          }\r\n        }\r\n        if (node.declaration) {\r\n          walkDeclaration(\r\n            'script',\r\n            node.declaration,\r\n            scriptBindings,\r\n            vueImportAliases,\r\n            hoistStatic,\r\n          )\r\n        }\r\n      } else if (\r\n        (node.type === 'VariableDeclaration' ||\r\n          node.type === 'FunctionDeclaration' ||\r\n          node.type === 'ClassDeclaration' ||\r\n          node.type === 'TSEnumDeclaration') &&\r\n        !node.declare\r\n      ) {\r\n        walkDeclaration(\r\n          'script',\r\n          node,\r\n          scriptBindings,\r\n          vueImportAliases,\r\n          hoistStatic,\r\n        )\r\n      }\r\n    }\r\n\r\n    // <script> after <script setup>\r\n    // we need to move the block up so that `const __default__` is\r\n    // declared before being used in the actual component definition\r\n    if (scriptStartOffset! > startOffset) {\r\n      // if content doesn't end with newline, add one\r\n      if (!/\\n$/.test(script.content.trim())) {\r\n        ctx.s.appendLeft(scriptEndOffset!, `\\n`)\r\n      }\r\n      ctx.s.move(scriptStartOffset!, scriptEndOffset!, 0)\r\n    }\r\n  }\r\n\r\n  // 2.2 process <script setup> body\r\n  for (const node of scriptSetupAst.body) {\r\n    if (node.type === 'ExpressionStatement') {\r\n      const expr = unwrapTSNode(node.expression)\r\n      // process `defineProps` and `defineEmit(s)` calls\r\n      if (\r\n        processDefineProps(ctx, expr) ||\r\n        processDefineEmits(ctx, expr) ||\r\n        processDefineOptions(ctx, expr) ||\r\n        processDefineSlots(ctx, expr)\r\n      ) {\r\n        ctx.s.remove(node.start! + startOffset, node.end! + startOffset)\r\n      } else if (processDefineExpose(ctx, expr)) {\r\n        // defineExpose({}) -> expose({})\r\n        const callee = (expr as CallExpression).callee\r\n        ctx.s.overwrite(\r\n          callee.start! + startOffset,\r\n          callee.end! + startOffset,\r\n          '__expose',\r\n        )\r\n      } else {\r\n        processDefineModel(ctx, expr)\r\n      }\r\n    }\r\n\r\n    if (node.type === 'VariableDeclaration' && !node.declare) {\r\n      const total = node.declarations.length\r\n      let left = total\r\n      let lastNonRemoved: number | undefined\r\n\r\n      for (let i = 0; i < total; i++) {\r\n        const decl = node.declarations[i]\r\n        const init = decl.init && unwrapTSNode(decl.init)\r\n        if (init) {\r\n          if (processDefineOptions(ctx, init)) {\r\n            ctx.error(\r\n              `${DEFINE_OPTIONS}() has no returning value, it cannot be assigned.`,\r\n              node,\r\n            )\r\n          }\r\n\r\n          // defineProps / defineEmits\r\n          const isDefineProps = processDefineProps(ctx, init, decl.id)\r\n          const isDefineEmits =\r\n            !isDefineProps && processDefineEmits(ctx, init, decl.id)\r\n          !isDefineEmits &&\r\n            (processDefineSlots(ctx, init, decl.id) ||\r\n              processDefineModel(ctx, init, decl.id))\r\n\r\n          if (\r\n            isDefineProps &&\r\n            !ctx.propsDestructureRestId &&\r\n            ctx.propsDestructureDecl\r\n          ) {\r\n            if (left === 1) {\r\n              ctx.s.remove(node.start! + startOffset, node.end! + startOffset)\r\n            } else {\r\n              let start = decl.start! + startOffset\r\n              let end = decl.end! + startOffset\r\n              if (i === total - 1) {\r\n                // last one, locate the end of the last one that is not removed\r\n                // if we arrive at this branch, there must have been a\r\n                // non-removed decl before us, so lastNonRemoved is non-null.\r\n                start = node.declarations[lastNonRemoved!].end! + startOffset\r\n              } else {\r\n                // not the last one, locate the start of the next\r\n                end = node.declarations[i + 1].start! + startOffset\r\n              }\r\n              ctx.s.remove(start, end)\r\n              left--\r\n            }\r\n          } else if (isDefineEmits) {\r\n            ctx.s.overwrite(\r\n              startOffset + init.start!,\r\n              startOffset + init.end!,\r\n              '__emit',\r\n            )\r\n          } else {\r\n            lastNonRemoved = i\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let isAllLiteral = false\r\n    // walk declarations to record declared bindings\r\n    if (\r\n      (node.type === 'VariableDeclaration' ||\r\n        node.type === 'FunctionDeclaration' ||\r\n        node.type === 'ClassDeclaration' ||\r\n        node.type === 'TSEnumDeclaration') &&\r\n      !node.declare\r\n    ) {\r\n      isAllLiteral = walkDeclaration(\r\n        'scriptSetup',\r\n        node,\r\n        setupBindings,\r\n        vueImportAliases,\r\n        hoistStatic,\r\n      )\r\n    }\r\n\r\n    // hoist literal constants\r\n    if (hoistStatic && isAllLiteral) {\r\n      hoistNode(node)\r\n    }\r\n\r\n    // walk statements & named exports / variable declarations for top level\r\n    // await\r\n    if (\r\n      (node.type === 'VariableDeclaration' && !node.declare) ||\r\n      node.type.endsWith('Statement')\r\n    ) {\r\n      const scope: Statement[][] = [scriptSetupAst.body]\r\n      walk(node, {\r\n        enter(child: Node, parent: Node | undefined) {\r\n          if (isFunctionType(child)) {\r\n            this.skip()\r\n          }\r\n          if (child.type === 'BlockStatement') {\r\n            scope.push(child.body)\r\n          }\r\n          if (child.type === 'AwaitExpression') {\r\n            hasAwait = true\r\n            // if the await expression is an expression statement and\r\n            // - is in the root scope\r\n            // - or is not the first statement in a nested block scope\r\n            // then it needs a semicolon before the generated code.\r\n            const currentScope = scope[scope.length - 1]\r\n            const needsSemi = currentScope.some((n, i) => {\r\n              return (\r\n                (scope.length === 1 || i > 0) &&\r\n                n.type === 'ExpressionStatement' &&\r\n                n.start === child.start\r\n              )\r\n            })\r\n            processAwait(\r\n              ctx,\r\n              child,\r\n              needsSemi,\r\n              parent!.type === 'ExpressionStatement',\r\n            )\r\n          }\r\n        },\r\n        exit(node: Node) {\r\n          if (node.type === 'BlockStatement') scope.pop()\r\n        },\r\n      })\r\n    }\r\n\r\n    if (\r\n      (node.type === 'ExportNamedDeclaration' && node.exportKind !== 'type') ||\r\n      node.type === 'ExportAllDeclaration' ||\r\n      node.type === 'ExportDefaultDeclaration'\r\n    ) {\r\n      ctx.error(\r\n        `<script setup> cannot contain ES module exports. ` +\r\n          `If you are using a previous version of <script setup>, please ` +\r\n          `consult the updated RFC at https://github.com/vuejs/rfcs/pull/227.`,\r\n        node,\r\n      )\r\n    }\r\n\r\n    if (ctx.isTS) {\r\n      // move all Type declarations to outer scope\r\n      if (\r\n        node.type.startsWith('TS') ||\r\n        (node.type === 'ExportNamedDeclaration' &&\r\n          node.exportKind === 'type') ||\r\n        (node.type === 'VariableDeclaration' && node.declare)\r\n      ) {\r\n        if (node.type !== 'TSEnumDeclaration') {\r\n          hoistNode(node)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // 3 props destructure transform\r\n  if (ctx.propsDestructureDecl) {\r\n    transformDestructuredProps(ctx, vueImportAliases)\r\n  }\r\n\r\n  // 4. check macro args to make sure it doesn't reference setup scope\r\n  // variables\r\n  checkInvalidScopeReference(ctx.propsRuntimeDecl, DEFINE_PROPS)\r\n  checkInvalidScopeReference(ctx.propsRuntimeDefaults, DEFINE_PROPS)\r\n  checkInvalidScopeReference(ctx.propsDestructureDecl, DEFINE_PROPS)\r\n  checkInvalidScopeReference(ctx.emitsRuntimeDecl, DEFINE_EMITS)\r\n  checkInvalidScopeReference(ctx.optionsRuntimeDecl, DEFINE_OPTIONS)\r\n  for (const { runtimeOptionNodes } of Object.values(ctx.modelDecls)) {\r\n    for (const node of runtimeOptionNodes) {\r\n      checkInvalidScopeReference(node, DEFINE_MODEL)\r\n    }\r\n  }\r\n\r\n  // 5. remove non-script content\r\n  if (script) {\r\n    if (startOffset < scriptStartOffset!) {\r\n      // <script setup> before <script>\r\n      ctx.s.remove(0, startOffset)\r\n      ctx.s.remove(endOffset, scriptStartOffset!)\r\n      ctx.s.remove(scriptEndOffset!, source.length)\r\n    } else {\r\n      // <script> before <script setup>\r\n      ctx.s.remove(0, scriptStartOffset!)\r\n      ctx.s.remove(scriptEndOffset!, startOffset)\r\n      ctx.s.remove(endOffset, source.length)\r\n    }\r\n  } else {\r\n    // only <script setup>\r\n    ctx.s.remove(0, startOffset)\r\n    ctx.s.remove(endOffset, source.length)\r\n  }\r\n\r\n  // 6. analyze binding metadata\r\n  // `defineProps` & `defineModel` also register props bindings\r\n  if (scriptAst) {\r\n    Object.assign(ctx.bindingMetadata, analyzeScriptBindings(scriptAst.body))\r\n  }\r\n  for (const [key, { isType, imported, source }] of Object.entries(\r\n    ctx.userImports,\r\n  )) {\r\n    if (isType) continue\r\n    ctx.bindingMetadata[key] =\r\n      imported === '*' ||\r\n      (imported === 'default' && source.endsWith('.vue')) ||\r\n      source === 'vue'\r\n        ? BindingTypes.SETUP_CONST\r\n        : BindingTypes.SETUP_MAYBE_REF\r\n  }\r\n  for (const key in scriptBindings) {\r\n    ctx.bindingMetadata[key] = scriptBindings[key]\r\n  }\r\n  for (const key in setupBindings) {\r\n    ctx.bindingMetadata[key] = setupBindings[key]\r\n  }\r\n  // known ref bindings\r\n  if (refBindings) {\r\n    for (const key of refBindings) {\r\n      ctx.bindingMetadata[key] = BindingTypes.SETUP_REF\r\n    }\r\n  }\r\n\r\n  // 7. inject `useCssVars` calls\r\n  if (\r\n    sfc.cssVars.length &&\r\n    // no need to do this when targeting SSR\r\n    !options.templateOptions?.ssr\r\n  ) {\r\n    ctx.helperImports.add(CSS_VARS_HELPER)\r\n    ctx.helperImports.add('unref')\r\n    ctx.s.prependLeft(\r\n      startOffset,\r\n      `\\n${genCssVarsCode(\r\n        sfc.cssVars,\r\n        ctx.bindingMetadata,\r\n        scopeId,\r\n        !!options.isProd,\r\n      )}\\n`,\r\n    )\r\n  }\r\n\r\n  // 8. finalize setup() argument signature\r\n  let args = `__props`\r\n  if (ctx.propsTypeDecl) {\r\n    // mark as any and only cast on assignment\r\n    // since the user defined complex types may be incompatible with the\r\n    // inferred type from generated runtime declarations\r\n    args += `: any`\r\n  }\r\n  // inject user assignment of props\r\n  // we use a default __props so that template expressions referencing props\r\n  // can use it directly\r\n  if (ctx.propsDecl) {\r\n    if (ctx.propsDestructureRestId) {\r\n      ctx.s.overwrite(\r\n        startOffset + ctx.propsCall!.start!,\r\n        startOffset + ctx.propsCall!.end!,\r\n        `${ctx.helper(`createPropsRestProxy`)}(__props, ${JSON.stringify(\r\n          Object.keys(ctx.propsDestructuredBindings),\r\n        )})`,\r\n      )\r\n      ctx.s.overwrite(\r\n        startOffset + ctx.propsDestructureDecl!.start!,\r\n        startOffset + ctx.propsDestructureDecl!.end!,\r\n        ctx.propsDestructureRestId,\r\n      )\r\n    } else if (!ctx.propsDestructureDecl) {\r\n      ctx.s.overwrite(\r\n        startOffset + ctx.propsCall!.start!,\r\n        startOffset + ctx.propsCall!.end!,\r\n        '__props',\r\n      )\r\n    }\r\n  }\r\n\r\n  // inject temp variables for async context preservation\r\n  if (hasAwait) {\r\n    const any = ctx.isTS ? `: any` : ``\r\n    ctx.s.prependLeft(startOffset, `\\nlet __temp${any}, __restore${any}\\n`)\r\n  }\r\n\r\n  const destructureElements =\r\n    ctx.hasDefineExposeCall || !options.inlineTemplate\r\n      ? [`expose: __expose`]\r\n      : []\r\n  if (ctx.emitDecl) {\r\n    destructureElements.push(`emit: __emit`)\r\n  }\r\n  if (destructureElements.length) {\r\n    args += `, { ${destructureElements.join(', ')} }`\r\n  }\r\n\r\n  // 9. generate return statement\r\n  let returned\r\n  if (\r\n    !options.inlineTemplate ||\r\n    (!sfc.template && ctx.hasDefaultExportRender)\r\n  ) {\r\n    // non-inline mode, or has manual render in normal <script>\r\n    // return bindings from script and script setup\r\n    const allBindings: Record<string, any> = {\r\n      ...scriptBindings,\r\n      ...setupBindings,\r\n    }\r\n    for (const key in ctx.userImports) {\r\n      if (\r\n        !ctx.userImports[key].isType &&\r\n        ctx.userImports[key].isUsedInTemplate\r\n      ) {\r\n        allBindings[key] = true\r\n      }\r\n    }\r\n    returned = `{ `\r\n    for (const key in allBindings) {\r\n      if (\r\n        allBindings[key] === true &&\r\n        ctx.userImports[key].source !== 'vue' &&\r\n        !ctx.userImports[key].source.endsWith('.vue')\r\n      ) {\r\n        // generate getter for import bindings\r\n        // skip vue imports since we know they will never change\r\n        returned += `get ${key}() { return ${key} }, `\r\n      } else if (ctx.bindingMetadata[key] === BindingTypes.SETUP_LET) {\r\n        // local let binding, also add setter\r\n        const setArg = key === 'v' ? `_v` : `v`\r\n        returned +=\r\n          `get ${key}() { return ${key} }, ` +\r\n          `set ${key}(${setArg}) { ${key} = ${setArg} }, `\r\n      } else {\r\n        returned += `${key}, `\r\n      }\r\n    }\r\n    returned = returned.replace(/, $/, '') + ` }`\r\n  } else {\r\n    // inline mode\r\n    if (sfc.template && !sfc.template.src) {\r\n      if (options.templateOptions && options.templateOptions.ssr) {\r\n        hasInlinedSsrRenderFn = true\r\n      }\r\n      // inline render function mode - we are going to compile the template and\r\n      // inline it right here\r\n      const { code, ast, preamble, tips, errors } = compileTemplate({\r\n        filename,\r\n        ast: sfc.template.ast,\r\n        source: sfc.template.content,\r\n        inMap: sfc.template.map,\r\n        ...options.templateOptions,\r\n        id: scopeId,\r\n        scoped: sfc.styles.some(s => s.scoped),\r\n        isProd: options.isProd,\r\n        ssrCssVars: sfc.cssVars,\r\n        compilerOptions: {\r\n          ...(options.templateOptions &&\r\n            options.templateOptions.compilerOptions),\r\n          inline: true,\r\n          isTS: ctx.isTS,\r\n          bindingMetadata: ctx.bindingMetadata,\r\n        },\r\n      })\r\n      if (tips.length) {\r\n        tips.forEach(warnOnce)\r\n      }\r\n      const err = errors[0]\r\n      if (typeof err === 'string') {\r\n        throw new Error(err)\r\n      } else if (err) {\r\n        if (err.loc) {\r\n          err.message +=\r\n            `\\n\\n` +\r\n            sfc.filename +\r\n            '\\n' +\r\n            generateCodeFrame(\r\n              source,\r\n              err.loc.start.offset,\r\n              err.loc.end.offset,\r\n            ) +\r\n            `\\n`\r\n        }\r\n        throw err\r\n      }\r\n      if (preamble) {\r\n        ctx.s.prepend(preamble)\r\n      }\r\n      // avoid duplicated unref import\r\n      // as this may get injected by the render function preamble OR the\r\n      // css vars codegen\r\n      if (ast && ast.helpers.has(UNREF)) {\r\n        ctx.helperImports.delete('unref')\r\n      }\r\n      returned = code\r\n    } else {\r\n      returned = `() => {}`\r\n    }\r\n  }\r\n\r\n  if (!options.inlineTemplate && !__TEST__) {\r\n    // in non-inline mode, the `__isScriptSetup: true` flag is used by\r\n    // componentPublicInstance proxy to allow properties that start with $ or _\r\n    ctx.s.appendRight(\r\n      endOffset,\r\n      `\\nconst __returned__ = ${returned}\\n` +\r\n        `Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })\\n` +\r\n        `return __returned__` +\r\n        `\\n}\\n\\n`,\r\n    )\r\n  } else {\r\n    ctx.s.appendRight(endOffset, `\\nreturn ${returned}\\n}\\n\\n`)\r\n  }\r\n\r\n  // 10. finalize default export\r\n  const genDefaultAs = options.genDefaultAs\r\n    ? `const ${options.genDefaultAs} =`\r\n    : `export default`\r\n\r\n  let runtimeOptions = ``\r\n  if (!ctx.hasDefaultExportName && filename && filename !== DEFAULT_FILENAME) {\r\n    const match = filename.match(/([^/\\\\]+)\\.\\w+$/)\r\n    if (match) {\r\n      runtimeOptions += `\\n  __name: '${match[1]}',`\r\n    }\r\n  }\r\n  if (hasInlinedSsrRenderFn) {\r\n    runtimeOptions += `\\n  __ssrInlineRender: true,`\r\n  }\r\n\r\n  const propsDecl = genRuntimeProps(ctx)\r\n  if (propsDecl) runtimeOptions += `\\n  props: ${propsDecl},`\r\n\r\n  const emitsDecl = genRuntimeEmits(ctx)\r\n  if (emitsDecl) runtimeOptions += `\\n  emits: ${emitsDecl},`\r\n\r\n  let definedOptions = ''\r\n  if (ctx.optionsRuntimeDecl) {\r\n    definedOptions = scriptSetup.content\r\n      .slice(ctx.optionsRuntimeDecl.start!, ctx.optionsRuntimeDecl.end!)\r\n      .trim()\r\n  }\r\n\r\n  // <script setup> components are closed by default. If the user did not\r\n  // explicitly call `defineExpose`, call expose() with no args.\r\n  const exposeCall =\r\n    ctx.hasDefineExposeCall || options.inlineTemplate ? `` : `  __expose();\\n`\r\n  // wrap setup code with function.\r\n  if (ctx.isTS) {\r\n    // for TS, make sure the exported type is still valid type with\r\n    // correct props information\r\n    // we have to use object spread for types to be merged properly\r\n    // user's TS setting should compile it down to proper targets\r\n    // export default defineComponent({ ...__default__, ... })\r\n    const def =\r\n      (defaultExport ? `\\n  ...${normalScriptDefaultVar},` : ``) +\r\n      (definedOptions ? `\\n  ...${definedOptions},` : '')\r\n    ctx.s.prependLeft(\r\n      startOffset,\r\n      `\\n${genDefaultAs} /*#__PURE__*/${ctx.helper(\r\n        `defineComponent`,\r\n      )}({${def}${runtimeOptions}\\n  ${\r\n        hasAwait ? `async ` : ``\r\n      }setup(${args}) {\\n${exposeCall}`,\r\n    )\r\n    ctx.s.appendRight(endOffset, `})`)\r\n  } else {\r\n    if (defaultExport || definedOptions) {\r\n      // without TS, can't rely on rest spread, so we use Object.assign\r\n      // export default Object.assign(__default__, { ... })\r\n      ctx.s.prependLeft(\r\n        startOffset,\r\n        `\\n${genDefaultAs} /*#__PURE__*/Object.assign(${\r\n          defaultExport ? `${normalScriptDefaultVar}, ` : ''\r\n        }${definedOptions ? `${definedOptions}, ` : ''}{${runtimeOptions}\\n  ` +\r\n          `${hasAwait ? `async ` : ``}setup(${args}) {\\n${exposeCall}`,\r\n      )\r\n      ctx.s.appendRight(endOffset, `})`)\r\n    } else {\r\n      ctx.s.prependLeft(\r\n        startOffset,\r\n        `\\n${genDefaultAs} {${runtimeOptions}\\n  ` +\r\n          `${hasAwait ? `async ` : ``}setup(${args}) {\\n${exposeCall}`,\r\n      )\r\n      ctx.s.appendRight(endOffset, `}`)\r\n    }\r\n  }\r\n\r\n  // 11. finalize Vue helper imports\r\n  if (ctx.helperImports.size > 0) {\r\n    ctx.s.prepend(\r\n      `import { ${[...ctx.helperImports]\r\n        .map(h => `${h} as _${h}`)\r\n        .join(', ')} } from 'vue'\\n`,\r\n    )\r\n  }\r\n\r\n  return {\r\n    ...scriptSetup,\r\n    bindings: ctx.bindingMetadata,\r\n    imports: ctx.userImports,\r\n    content: ctx.s.toString(),\r\n    map:\r\n      options.sourceMap !== false\r\n        ? (ctx.s.generateMap({\r\n            source: filename,\r\n            hires: true,\r\n            includeContent: true,\r\n          }) as unknown as RawSourceMap)\r\n        : undefined,\r\n    scriptAst: scriptAst?.body,\r\n    scriptSetupAst: scriptSetupAst?.body,\r\n    deps: ctx.deps ? [...ctx.deps] : undefined,\r\n  }\r\n}\r\n\r\nfunction registerBinding(\r\n  bindings: Record<string, BindingTypes>,\r\n  node: Identifier,\r\n  type: BindingTypes,\r\n) {\r\n  bindings[node.name] = type\r\n}\r\n\r\nfunction walkDeclaration(\r\n  from: 'script' | 'scriptSetup',\r\n  node: Declaration,\r\n  bindings: Record<string, BindingTypes>,\r\n  userImportAliases: Record<string, string>,\r\n  hoistStatic: boolean,\r\n): boolean {\r\n  let isAllLiteral = false\r\n\r\n  if (node.type === 'VariableDeclaration') {\r\n    const isConst = node.kind === 'const'\r\n    isAllLiteral =\r\n      isConst &&\r\n      node.declarations.every(\r\n        decl => decl.id.type === 'Identifier' && isStaticNode(decl.init!),\r\n      )\r\n\r\n    // export const foo = ...\r\n    for (const { id, init: _init } of node.declarations) {\r\n      const init = _init && unwrapTSNode(_init)\r\n      const isDefineCall = !!(\r\n        isConst &&\r\n        isCallOf(\r\n          init,\r\n          c => c === DEFINE_PROPS || c === DEFINE_EMITS || c === WITH_DEFAULTS,\r\n        )\r\n      )\r\n      if (id.type === 'Identifier') {\r\n        let bindingType\r\n        const userReactiveBinding = userImportAliases['reactive']\r\n        if (\r\n          (hoistStatic || from === 'script') &&\r\n          (isAllLiteral || (isConst && isStaticNode(init!)))\r\n        ) {\r\n          bindingType = BindingTypes.LITERAL_CONST\r\n        } else if (isCallOf(init, userReactiveBinding)) {\r\n          // treat reactive() calls as let since it's meant to be mutable\r\n          bindingType = isConst\r\n            ? BindingTypes.SETUP_REACTIVE_CONST\r\n            : BindingTypes.SETUP_LET\r\n        } else if (\r\n          // if a declaration is a const literal, we can mark it so that\r\n          // the generated render fn code doesn't need to unref() it\r\n          isDefineCall ||\r\n          (isConst && canNeverBeRef(init!, userReactiveBinding))\r\n        ) {\r\n          bindingType = isCallOf(init, DEFINE_PROPS)\r\n            ? BindingTypes.SETUP_REACTIVE_CONST\r\n            : BindingTypes.SETUP_CONST\r\n        } else if (isConst) {\r\n          if (\r\n            isCallOf(\r\n              init,\r\n              m =>\r\n                m === userImportAliases['ref'] ||\r\n                m === userImportAliases['computed'] ||\r\n                m === userImportAliases['shallowRef'] ||\r\n                m === userImportAliases['customRef'] ||\r\n                m === userImportAliases['toRef'] ||\r\n                m === DEFINE_MODEL,\r\n            )\r\n          ) {\r\n            bindingType = BindingTypes.SETUP_REF\r\n          } else {\r\n            bindingType = BindingTypes.SETUP_MAYBE_REF\r\n          }\r\n        } else {\r\n          bindingType = BindingTypes.SETUP_LET\r\n        }\r\n        registerBinding(bindings, id, bindingType)\r\n      } else {\r\n        if (isCallOf(init, DEFINE_PROPS)) {\r\n          continue\r\n        }\r\n        if (id.type === 'ObjectPattern') {\r\n          walkObjectPattern(id, bindings, isConst, isDefineCall)\r\n        } else if (id.type === 'ArrayPattern') {\r\n          walkArrayPattern(id, bindings, isConst, isDefineCall)\r\n        }\r\n      }\r\n    }\r\n  } else if (node.type === 'TSEnumDeclaration') {\r\n    isAllLiteral = node.members.every(\r\n      member => !member.initializer || isStaticNode(member.initializer),\r\n    )\r\n    bindings[node.id!.name] = isAllLiteral\r\n      ? BindingTypes.LITERAL_CONST\r\n      : BindingTypes.SETUP_CONST\r\n  } else if (\r\n    node.type === 'FunctionDeclaration' ||\r\n    node.type === 'ClassDeclaration'\r\n  ) {\r\n    // export function foo() {} / export class Foo {}\r\n    // export declarations must be named.\r\n    bindings[node.id!.name] = BindingTypes.SETUP_CONST\r\n  }\r\n\r\n  return isAllLiteral\r\n}\r\n\r\nfunction walkObjectPattern(\r\n  node: ObjectPattern,\r\n  bindings: Record<string, BindingTypes>,\r\n  isConst: boolean,\r\n  isDefineCall = false,\r\n) {\r\n  for (const p of node.properties) {\r\n    if (p.type === 'ObjectProperty') {\r\n      if (p.key.type === 'Identifier' && p.key === p.value) {\r\n        // shorthand: const { x } = ...\r\n        const type = isDefineCall\r\n          ? BindingTypes.SETUP_CONST\r\n          : isConst\r\n            ? BindingTypes.SETUP_MAYBE_REF\r\n            : BindingTypes.SETUP_LET\r\n        registerBinding(bindings, p.key, type)\r\n      } else {\r\n        walkPattern(p.value, bindings, isConst, isDefineCall)\r\n      }\r\n    } else {\r\n      // ...rest\r\n      // argument can only be identifier when destructuring\r\n      const type = isConst ? BindingTypes.SETUP_CONST : BindingTypes.SETUP_LET\r\n      registerBinding(bindings, p.argument as Identifier, type)\r\n    }\r\n  }\r\n}\r\n\r\nfunction walkArrayPattern(\r\n  node: ArrayPattern,\r\n  bindings: Record<string, BindingTypes>,\r\n  isConst: boolean,\r\n  isDefineCall = false,\r\n) {\r\n  for (const e of node.elements) {\r\n    e && walkPattern(e, bindings, isConst, isDefineCall)\r\n  }\r\n}\r\n\r\nfunction walkPattern(\r\n  node: Node,\r\n  bindings: Record<string, BindingTypes>,\r\n  isConst: boolean,\r\n  isDefineCall = false,\r\n) {\r\n  if (node.type === 'Identifier') {\r\n    const type = isDefineCall\r\n      ? BindingTypes.SETUP_CONST\r\n      : isConst\r\n        ? BindingTypes.SETUP_MAYBE_REF\r\n        : BindingTypes.SETUP_LET\r\n    registerBinding(bindings, node, type)\r\n  } else if (node.type === 'RestElement') {\r\n    // argument can only be identifier when destructuring\r\n    const type = isConst ? BindingTypes.SETUP_CONST : BindingTypes.SETUP_LET\r\n    registerBinding(bindings, node.argument as Identifier, type)\r\n  } else if (node.type === 'ObjectPattern') {\r\n    walkObjectPattern(node, bindings, isConst)\r\n  } else if (node.type === 'ArrayPattern') {\r\n    walkArrayPattern(node, bindings, isConst)\r\n  } else if (node.type === 'AssignmentPattern') {\r\n    if (node.left.type === 'Identifier') {\r\n      const type = isDefineCall\r\n        ? BindingTypes.SETUP_CONST\r\n        : isConst\r\n          ? BindingTypes.SETUP_MAYBE_REF\r\n          : BindingTypes.SETUP_LET\r\n      registerBinding(bindings, node.left, type)\r\n    } else {\r\n      walkPattern(node.left, bindings, isConst)\r\n    }\r\n  }\r\n}\r\n\r\nfunction canNeverBeRef(node: Node, userReactiveImport?: string): boolean {\r\n  if (isCallOf(node, userReactiveImport)) {\r\n    return true\r\n  }\r\n  switch (node.type) {\r\n    case 'UnaryExpression':\r\n    case 'BinaryExpression':\r\n    case 'ArrayExpression':\r\n    case 'ObjectExpression':\r\n    case 'FunctionExpression':\r\n    case 'ArrowFunctionExpression':\r\n    case 'UpdateExpression':\r\n    case 'ClassExpression':\r\n    case 'TaggedTemplateExpression':\r\n      return true\r\n    case 'SequenceExpression':\r\n      return canNeverBeRef(\r\n        node.expressions[node.expressions.length - 1],\r\n        userReactiveImport,\r\n      )\r\n    default:\r\n      if (isLiteralNode(node)) {\r\n        return true\r\n      }\r\n      return false\r\n  }\r\n}\r\n\r\nfunction isStaticNode(node: Node): boolean {\r\n  node = unwrapTSNode(node)\r\n\r\n  switch (node.type) {\r\n    case 'UnaryExpression': // void 0, !true\r\n      return isStaticNode(node.argument)\r\n\r\n    case 'LogicalExpression': // 1 > 2\r\n    case 'BinaryExpression': // 1 + 2\r\n      return isStaticNode(node.left) && isStaticNode(node.right)\r\n\r\n    case 'ConditionalExpression': {\r\n      // 1 ? 2 : 3\r\n      return (\r\n        isStaticNode(node.test) &&\r\n        isStaticNode(node.consequent) &&\r\n        isStaticNode(node.alternate)\r\n      )\r\n    }\r\n\r\n    case 'SequenceExpression': // (1, 2)\r\n    case 'TemplateLiteral': // `foo${1}`\r\n      return node.expressions.every(expr => isStaticNode(expr))\r\n\r\n    case 'ParenthesizedExpression': // (1)\r\n      return isStaticNode(node.expression)\r\n\r\n    case 'StringLiteral':\r\n    case 'NumericLiteral':\r\n    case 'BooleanLiteral':\r\n    case 'NullLiteral':\r\n    case 'BigIntLiteral':\r\n      return true\r\n  }\r\n  return false\r\n}\r\n","export const version = __VERSION__\r\n\r\n// API\r\nexport { parse } from './parse'\r\nexport { compileTemplate } from './compileTemplate'\r\nexport { compileStyle, compileStyleAsync } from './compileStyle'\r\nexport { compileScript } from './compileScript'\r\nexport { rewriteDefault, rewriteDefaultAST } from './rewriteDefault'\r\nexport { resolveTypeElements, inferRuntimeType } from './script/resolveType'\r\n\r\nimport { type SFCParseResult, parseCache as _parseCache } from './parse'\r\n// #9521 export parseCache as a simple map to avoid exposing LRU types\r\nexport const parseCache = _parseCache as Map<string, SFCParseResult>\r\n\r\n// error messages\r\nimport {\r\n  DOMErrorMessages,\r\n  errorMessages as coreErrorMessages,\r\n} from '@vue/compiler-dom'\r\n\r\nexport const errorMessages = {\r\n  ...coreErrorMessages,\r\n  ...DOMErrorMessages,\r\n}\r\n\r\n// Utilities\r\nexport { parse as babelParse } from '@babel/parser'\r\nimport MagicString from 'magic-string'\r\nexport { MagicString }\r\n// technically internal but we want it in @vue/repl, cast it as any to avoid\r\n// relying on estree types\r\nimport { walk as _walk } from 'estree-walker'\r\nexport const walk = _walk as any\r\nexport {\r\n  generateCodeFrame,\r\n  walkIdentifiers,\r\n  extractIdentifiers,\r\n  isInDestructureAssignment,\r\n  isStaticProperty,\r\n} from '@vue/compiler-core'\r\n\r\n// Internals for type resolution\r\nexport { invalidateTypeCache, registerTS } from './script/resolveType'\r\nexport { extractRuntimeProps } from './script/defineProps'\r\nexport { extractRuntimeEmits } from './script/defineEmits'\r\n\r\n// Types\r\nexport type {\r\n  SFCParseOptions,\r\n  SFCParseResult,\r\n  SFCDescriptor,\r\n  SFCBlock,\r\n  SFCTemplateBlock,\r\n  SFCScriptBlock,\r\n  SFCStyleBlock,\r\n} from './parse'\r\nexport type {\r\n  TemplateCompiler,\r\n  SFCTemplateCompileOptions,\r\n  SFCTemplateCompileResults,\r\n} from './compileTemplate'\r\nexport type {\r\n  SFCStyleCompileOptions,\r\n  SFCAsyncStyleCompileOptions,\r\n  SFCStyleCompileResults,\r\n} from './compileStyle'\r\nexport type { SFCScriptCompileOptions } from './compileScript'\r\nexport type { ScriptCompileContext } from './script/context'\r\nexport type {\r\n  TypeResolveContext,\r\n  SimpleTypeResolveOptions,\r\n  SimpleTypeResolveContext,\r\n} from './script/resolveType'\r\nexport type {\r\n  AssetURLOptions,\r\n  AssetURLTagConfig,\r\n} from './template/transformAssetUrl'\r\nexport type {\r\n  CompilerOptions,\r\n  CompilerError,\r\n  BindingMetadata,\r\n} from '@vue/compiler-core'\r\n\r\n/**\r\n * @deprecated this is preserved to avoid breaking vite-plugin-vue < 5.0\r\n * with reactivityTransform: true. The desired behavior should be silently\r\n * ignoring the option instead of breaking.\r\n */\r\nexport const shouldTransformRef = () => false\r\n"],"names":["hasOwnProperty","isArray","isFunction","isString","isSymbol","isObject","objectToString","capitalize","val","_a","isNumber","isWhitespace","__publicField","errorMessages","types","tokenTypes","Node","assert","parse","Parser","parse_1","walk","extractIdentifiers","parseExpression","isText","tokenizer","Tokenizer","i","returnType","hoistStatic","intToCharMap","base64","require$$0","VLQ_BASE_SHIFT","VLQ_BASE","VLQ_BASE_MASK","VLQ_CONTINUATION_BIT","toVLQSigned","fromVLQSigned","base64Vlq","util","has","hasNativeMap","ArraySet","arraySet","generatedPositionAfter","MappingList","mappingList","base64VLQ","require$$1","require$$2","require$$3","SourceMapGenerator","sourceMapGenerator","binarySearch","quickSort","require$$4","SourceMapConsumer","IndexedSourceMapConsumer","BasicSourceMapConsumer","sourceMapConsumer","Mapping","REGEX_NEWLINE","NEWLINE_CODE","isSourceNode","SourceNode","sourceNode","sourceMap","raw","node","children","props","transformOn","seen","transformModel","baseTransform","compile","pad","toString","commonjsHelpers.getDefaultExportFromCjs","parseCache","__spreadProps","__spreadValues","minIndent","uriParse","path","index","exp","wipMap","exhaustiveCheck","warnOnce","preprocess","process","tokenize","pico","Input","terminalHighlight","CssSyntaxError","Stringifier","stringify","isClean","my","Declaration","nanoid","dirname","Buffer","PreviousMap","pathToFileURL","resolve","require$$5","require$$6","sourceMapAvailable","pathAvailable","MapGenerator","comment","Comment","Rule","AtRule","Root","Container","container","LazyResult","Processor","Document","Warning","Result","root","list","parser","require$$7","require$$8","postcss","NoWorkResult","processor","fromJSON","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","unescModule","getPropModule","ensureObjectModule","stripCommentsModule","_interopRequireDefault","nodeModule","containerModule","rootModule","selectorModule","merge","classNameModule","commentModule","idModule","namespaceModule","tagModule","stringModule","pseudoModule","attribute","universalModule","combinatorModule","nestingModule","sortAscendingModule","comma","semicolon","combinator","tokenize_1","parserModule","processorModule","selectors","distModule","value","trimPlugin","scopedPlugin","result","babelParse","end","res","filename","optional","parentStack","source","_parseCache","coreErrorMessages","_walk"],"mappings":"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E,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC5hE,MAAM,qBAAqB,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE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","x_google_ignoreList":[13,14,15,16,20,21,27,28,29,30,31,32,33,34,35,36,37,68,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,175,176]}