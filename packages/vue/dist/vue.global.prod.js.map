{"version":3,"file":"vue.global.prod.js","sources":["../../shared/src/makeMap.ts","../../shared/src/general.ts","../../shared/src/globalsAllowList.ts","../../shared/src/normalizeProp.ts","../../shared/src/domTagConfig.ts","../../shared/src/domAttrConfig.ts","../../shared/src/looseEqual.ts","../../shared/src/toDisplayString.ts","../../reactivity/src/effectScope.ts","../../reactivity/src/effect.ts","../../reactivity/src/dep.ts","../../reactivity/src/reactiveEffect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/collectionHandlers.ts","../../reactivity/src/reactive.ts","../../reactivity/src/computed.ts","../../reactivity/src/ref.ts","../../runtime-core/src/errorHandling.ts","../../runtime-core/src/scheduler.ts","../../runtime-core/src/componentEmits.ts","../../runtime-core/src/componentRenderContext.ts","../../runtime-core/src/componentRenderUtils.ts","../../runtime-core/src/helpers/resolveAssets.ts","../../runtime-core/src/components/Suspense.ts","../../runtime-core/src/helpers/useSsrContext.ts","../../runtime-core/src/apiWatch.ts","../../runtime-core/src/directives.ts","../../runtime-core/src/components/BaseTransition.ts","../../runtime-core/src/apiDefineComponent.ts","../../runtime-core/src/apiAsyncComponent.ts","../../runtime-core/src/components/KeepAlive.ts","../../runtime-core/src/apiLifecycle.ts","../../runtime-core/src/helpers/renderSlot.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/apiSetupHelpers.ts","../../runtime-core/src/componentOptions.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/apiInject.ts","../../runtime-core/src/componentProps.ts","../../runtime-core/src/componentSlots.ts","../../runtime-core/src/rendererTemplateRef.ts","../../runtime-core/src/hydration.ts","../../runtime-core/src/renderer.ts","../../runtime-core/src/component.ts","../../runtime-core/src/components/Teleport.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiComputed.ts","../../runtime-core/src/h.ts","../../runtime-core/src/helpers/withMemo.ts","../../runtime-core/src/index.ts","../../runtime-dom/src/nodeOps.ts","../../runtime-dom/src/components/Transition.ts","../../runtime-dom/src/directives/vShow.ts","../../runtime-dom/src/helpers/useCssVars.ts","../../runtime-dom/src/modules/style.ts","../../runtime-dom/src/modules/attrs.ts","../../runtime-dom/src/modules/events.ts","../../runtime-dom/src/patchProp.ts","../../runtime-dom/src/apiCustomElement.ts","../../runtime-dom/src/components/TransitionGroup.ts","../../runtime-dom/src/directives/vModel.ts","../../runtime-dom/src/directives/vOn.ts","../../runtime-dom/src/index.ts","../../runtime-dom/src/modules/class.ts","../../runtime-dom/src/modules/props.ts","../../compiler-core/src/runtimeHelpers.ts","../../compiler-core/src/ast.ts","../../compiler-core/src/tokenizer.ts","../../compiler-core/src/errors.ts","../../compiler-core/src/utils.ts","../../compiler-core/src/parser.ts","../../compiler-core/src/transforms/hoistStatic.ts","../../compiler-core/src/transform.ts","../../compiler-core/src/codegen.ts","../../compiler-core/src/transforms/vIf.ts","../../compiler-core/src/transforms/vFor.ts","../../compiler-core/src/transforms/vSlot.ts","../../compiler-core/src/transforms/transformElement.ts","../../compiler-core/src/transforms/transformSlotOutlet.ts","../../compiler-core/src/transforms/vOn.ts","../../compiler-core/src/transforms/vBind.ts","../../compiler-core/src/transforms/transformText.ts","../../compiler-core/src/transforms/vOnce.ts","../../compiler-core/src/transforms/vModel.ts","../../compiler-core/src/transforms/vMemo.ts","../../compiler-core/src/compile.ts","../../compiler-core/src/transforms/noopDirectiveTransform.ts","../../compiler-dom/src/runtimeHelpers.ts","../../compiler-dom/src/decodeHtmlBrowser.ts","../../compiler-dom/src/parserOptions.ts","../../compiler-dom/src/transforms/transformStyle.ts","../../compiler-dom/src/errors.ts","../../compiler-dom/src/transforms/vHtml.ts","../../compiler-dom/src/transforms/vOn.ts","../../compiler-dom/src/transforms/ignoreSideEffectTags.ts","../../compiler-dom/src/index.ts","../../compiler-dom/src/transforms/vText.ts","../../compiler-dom/src/transforms/vModel.ts","../../compiler-dom/src/transforms/vShow.ts","../src/index.ts","../../reactivity/src/constants.ts","../../runtime-core/src/warning.ts","../../runtime-core/src/helpers/createSlots.ts","../../runtime-core/src/customFormatter.ts","../../runtime-core/src/helpers/renderList.ts","../../runtime-core/src/helpers/toHandlers.ts","../../runtime-dom/src/helpers/useCssModule.ts","../../runtime-core/src/helpers/useModel.ts"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nexport function makeMap(\r\n  str: string,\r\n  expectsLowerCase?: boolean,\r\n): (key: string) => boolean {\r\n  const set = new Set(str.split(','))\r\n  return expectsLowerCase\r\n    ? val => set.has(val.toLowerCase())\r\n    : val => set.has(val)\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nexport const EMPTY_OBJ: { readonly [key: string]: any } = __DEV__\r\n  ? Object.freeze({})\r\n  : {}\r\nexport const EMPTY_ARR = __DEV__ ? Object.freeze([]) : []\r\n\r\nexport const NOOP = () => {}\r\n\r\n/**\r\n * Always return false.\r\n */\r\nexport const NO = () => false\r\n\r\nexport const isOn = (key: string) =>\r\n  key.charCodeAt(0) === 111 /* o */ &&\r\n  key.charCodeAt(1) === 110 /* n */ &&\r\n  // uppercase letter\r\n  (key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97)\r\n\r\nexport const isModelListener = (key: string) => key.startsWith('onUpdate:')\r\n\r\nexport const extend = Object.assign\r\n\r\nexport const remove = <T>(arr: T[], el: T) => {\r\n  const i = arr.indexOf(el)\r\n  if (i > -1) {\r\n    arr.splice(i, 1)\r\n  }\r\n}\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (\r\n  val: object,\r\n  key: string | symbol,\r\n): key is keyof typeof val => hasOwnProperty.call(val, key)\r\n\r\nexport const isArray = Array.isArray\r\nexport const isMap = (val: unknown): val is Map<any, any> =>\r\n  toTypeString(val) === '[object Map]'\r\nexport const isSet = (val: unknown): val is Set<any> =>\r\n  toTypeString(val) === '[object Set]'\r\n\r\nexport const isDate = (val: unknown): val is Date =>\r\n  toTypeString(val) === '[object Date]'\r\nexport const isRegExp = (val: unknown): val is RegExp =>\r\n  toTypeString(val) === '[object RegExp]'\r\nexport const isFunction = (val: unknown): val is Function =>\r\n  typeof val === 'function'\r\nexport const isString = (val: unknown): val is string => typeof val === 'string'\r\nexport const isSymbol = (val: unknown): val is symbol => typeof val === 'symbol'\r\nexport const isObject = (val: unknown): val is Record<any, any> =>\r\n  val !== null && typeof val === 'object'\r\n\r\nexport const isPromise = <T = any>(val: unknown): val is Promise<T> => {\r\n  return (\r\n    (isObject(val) || isFunction(val)) &&\r\n    isFunction((val as any).then) &&\r\n    isFunction((val as any).catch)\r\n  )\r\n}\r\n\r\nexport const objectToString = Object.prototype.toString\r\nexport const toTypeString = (value: unknown): string =>\r\n  objectToString.call(value)\r\n\r\nexport const toRawType = (value: unknown): string => {\r\n  // extract \"RawType\" from strings like \"[object RawType]\"\r\n  return toTypeString(value).slice(8, -1)\r\n}\r\n\r\nexport const isPlainObject = (val: unknown): val is object =>\r\n  toTypeString(val) === '[object Object]'\r\n\r\nexport const isIntegerKey = (key: unknown) =>\r\n  isString(key) &&\r\n  key !== 'NaN' &&\r\n  key[0] !== '-' &&\r\n  '' + parseInt(key, 10) === key\r\n\r\nexport const isReservedProp = /*#__PURE__*/ makeMap(\r\n  // the leading comma is intentional so empty string \"\" is also included\r\n  ',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted',\r\n)\r\n\r\nexport const isBuiltInDirective = /*#__PURE__*/ makeMap(\r\n  'bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo',\r\n)\r\n\r\nconst cacheStringFunction = <T extends (str: string) => string>(fn: T): T => {\r\n  const cache: Record<string, string> = Object.create(null)\r\n  return ((str: string) => {\r\n    const hit = cache[str]\r\n    return hit || (cache[str] = fn(str))\r\n  }) as T\r\n}\r\n\r\nconst camelizeRE = /-(\\w)/g\r\n/**\r\n * @private\r\n */\r\nexport const camelize = cacheStringFunction((str: string): string => {\r\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''))\r\n})\r\n\r\nconst hyphenateRE = /\\B([A-Z])/g\r\n/**\r\n * @private\r\n */\r\nexport const hyphenate = cacheStringFunction((str: string) =>\r\n  str.replace(hyphenateRE, '-$1').toLowerCase(),\r\n)\r\n\r\n/**\r\n * @private\r\n */\r\nexport const capitalize = cacheStringFunction(<T extends string>(str: T) => {\r\n  return (str.charAt(0).toUpperCase() + str.slice(1)) as Capitalize<T>\r\n})\r\n\r\n/**\r\n * @private\r\n */\r\nexport const toHandlerKey = cacheStringFunction(<T extends string>(str: T) => {\r\n  const s = str ? `on${capitalize(str)}` : ``\r\n  return s as T extends '' ? '' : `on${Capitalize<T>}`\r\n})\r\n\r\n// compare whether a value has changed, accounting for NaN.\r\nexport const hasChanged = (value: any, oldValue: any): boolean =>\r\n  !Object.is(value, oldValue)\r\n\r\nexport const invokeArrayFns = (fns: Function[], arg?: any) => {\r\n  for (let i = 0; i < fns.length; i++) {\r\n    fns[i](arg)\r\n  }\r\n}\r\n\r\nexport const def = (obj: object, key: string | symbol, value: any) => {\r\n  Object.defineProperty(obj, key, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value,\r\n  })\r\n}\r\n\r\n/**\r\n * \"123-foo\" will be parsed to 123\r\n * This is used for the .number modifier in v-model\r\n */\r\nexport const looseToNumber = (val: any): any => {\r\n  const n = parseFloat(val)\r\n  return isNaN(n) ? val : n\r\n}\r\n\r\n/**\r\n * Only concerns number-like strings\r\n * \"123-foo\" will be returned as-is\r\n */\r\nexport const toNumber = (val: any): any => {\r\n  const n = isString(val) ? Number(val) : NaN\r\n  return isNaN(n) ? val : n\r\n}\r\n\r\nlet _globalThis: any\r\nexport const getGlobalThis = (): any => {\r\n  return (\r\n    _globalThis ||\r\n    (_globalThis =\r\n      typeof globalThis !== 'undefined'\r\n        ? globalThis\r\n        : typeof self !== 'undefined'\r\n          ? self\r\n          : typeof window !== 'undefined'\r\n            ? window\r\n            : typeof global !== 'undefined'\r\n              ? global\r\n              : {})\r\n  )\r\n}\r\n\r\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\r\n\r\nexport function genPropsAccessExp(name: string) {\r\n  return identRE.test(name)\r\n    ? `__props.${name}`\r\n    : `__props[${JSON.stringify(name)}]`\r\n}\r\n","import { makeMap } from './makeMap'\r\n\r\nconst GLOBALS_ALLOWED =\r\n  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error'\r\n\r\nexport const isGloballyAllowed = /*#__PURE__*/ makeMap(GLOBALS_ALLOWED)\r\n\r\n/** @deprecated use `isGloballyAllowed` instead */\r\nexport const isGloballyWhitelisted = isGloballyAllowed\r\n","import { hyphenate, isArray, isObject, isString } from './general'\r\n\r\nexport type NormalizedStyle = Record<string, string | number>\r\n\r\nexport function normalizeStyle(\r\n  value: unknown,\r\n): NormalizedStyle | string | undefined {\r\n  if (isArray(value)) {\r\n    const res: NormalizedStyle = {}\r\n    for (let i = 0; i < value.length; i++) {\r\n      const item = value[i]\r\n      const normalized = isString(item)\r\n        ? parseStringStyle(item)\r\n        : (normalizeStyle(item) as NormalizedStyle)\r\n      if (normalized) {\r\n        for (const key in normalized) {\r\n          res[key] = normalized[key]\r\n        }\r\n      }\r\n    }\r\n    return res\r\n  } else if (isString(value) || isObject(value)) {\r\n    return value\r\n  }\r\n}\r\n\r\nconst listDelimiterRE = /;(?![^(]*\\))/g\r\nconst propertyDelimiterRE = /:([^]+)/\r\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g\r\n\r\nexport function parseStringStyle(cssText: string): NormalizedStyle {\r\n  const ret: NormalizedStyle = {}\r\n  cssText\r\n    .replace(styleCommentRE, '')\r\n    .split(listDelimiterRE)\r\n    .forEach(item => {\r\n      if (item) {\r\n        const tmp = item.split(propertyDelimiterRE)\r\n        tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim())\r\n      }\r\n    })\r\n  return ret\r\n}\r\n\r\nexport function stringifyStyle(\r\n  styles: NormalizedStyle | string | undefined,\r\n): string {\r\n  let ret = ''\r\n  if (!styles || isString(styles)) {\r\n    return ret\r\n  }\r\n  for (const key in styles) {\r\n    const value = styles[key]\r\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key)\r\n    if (isString(value) || typeof value === 'number') {\r\n      // only render valid values\r\n      ret += `${normalizedKey}:${value};`\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function normalizeClass(value: unknown): string {\r\n  let res = ''\r\n  if (isString(value)) {\r\n    res = value\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      const normalized = normalizeClass(value[i])\r\n      if (normalized) {\r\n        res += normalized + ' '\r\n      }\r\n    }\r\n  } else if (isObject(value)) {\r\n    for (const name in value) {\r\n      if (value[name]) {\r\n        res += name + ' '\r\n      }\r\n    }\r\n  }\r\n  return res.trim()\r\n}\r\n\r\nexport function normalizeProps(props: Record<string, any> | null) {\r\n  if (!props) return null\r\n  let { class: klass, style } = props\r\n  if (klass && !isString(klass)) {\r\n    props.class = normalizeClass(klass)\r\n  }\r\n  if (style) {\r\n    props.style = normalizeStyle(style)\r\n  }\r\n  return props\r\n}\r\n","// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// must be extracted in shared to avoid creating a dependency between the two.\r\nimport { makeMap } from './makeMap'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS =\r\n  'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n  'header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n  'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n  'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n  'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n  'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n  'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n  'option,output,progress,select,textarea,details,dialog,menu,' +\r\n  'summary,template,blockquote,iframe,tfoot'\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS =\r\n  'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n  'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n  'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n  'feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n  'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n  'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n  'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n  'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n  'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n  'text,textPath,title,tspan,unknown,use,view'\r\n\r\n// https://www.w3.org/TR/mathml4/ (content elements excluded)\r\nconst MATH_TAGS =\r\n  'annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,' +\r\n  'merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,' +\r\n  'mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,' +\r\n  'mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,' +\r\n  'msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics'\r\n\r\nconst VOID_TAGS =\r\n  'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr'\r\n\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS)\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS)\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isMathMLTag = /*#__PURE__*/ makeMap(MATH_TAGS)\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `__DEV__` flag.\r\n */\r\nexport const isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS)\r\n","import { makeMap } from './makeMap'\r\n\r\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`\r\nexport const isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs)\r\n\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nexport const isBooleanAttr = /*#__PURE__*/ makeMap(\r\n  specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `inert,loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`,\r\n)\r\n\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\r\nexport function includeBooleanAttr(value: unknown): boolean {\r\n  return !!value || value === ''\r\n}\r\n\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/\r\nconst attrValidationCache: Record<string, boolean> = {}\r\n\r\nexport function isSSRSafeAttrName(name: string): boolean {\r\n  if (attrValidationCache.hasOwnProperty(name)) {\r\n    return attrValidationCache[name]\r\n  }\r\n  const isUnsafe = unsafeAttrCharRE.test(name)\r\n  if (isUnsafe) {\r\n    console.error(`unsafe attribute name: ${name}`)\r\n  }\r\n  return (attrValidationCache[name] = !isUnsafe)\r\n}\r\n\r\nexport const propsToAttrMap: Record<string, string | undefined> = {\r\n  acceptCharset: 'accept-charset',\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n  httpEquiv: 'http-equiv',\r\n}\r\n\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nexport const isKnownHtmlAttr = /*#__PURE__*/ makeMap(\r\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`,\r\n)\r\n\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nexport const isKnownSvgAttr = /*#__PURE__*/ makeMap(\r\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`,\r\n)\r\n\r\n/**\r\n * Shared between server-renderer and runtime-core hydration logic\r\n */\r\nexport function isRenderableAttrValue(value: unknown): boolean {\r\n  if (value == null) {\r\n    return false\r\n  }\r\n  const type = typeof value\r\n  return type === 'string' || type === 'number' || type === 'boolean'\r\n}\r\n","import { isArray, isDate, isObject, isSymbol } from './general'\r\n\r\nfunction looseCompareArrays(a: any[], b: any[]) {\r\n  if (a.length !== b.length) return false\r\n  let equal = true\r\n  for (let i = 0; equal && i < a.length; i++) {\r\n    equal = looseEqual(a[i], b[i])\r\n  }\r\n  return equal\r\n}\r\n\r\nexport function looseEqual(a: any, b: any): boolean {\r\n  if (a === b) return true\r\n  let aValidType = isDate(a)\r\n  let bValidType = isDate(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\r\n  }\r\n  aValidType = isSymbol(a)\r\n  bValidType = isSymbol(b)\r\n  if (aValidType || bValidType) {\r\n    return a === b\r\n  }\r\n  aValidType = isArray(a)\r\n  bValidType = isArray(b)\r\n  if (aValidType || bValidType) {\r\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false\r\n  }\r\n  aValidType = isObject(a)\r\n  bValidType = isObject(b)\r\n  if (aValidType || bValidType) {\r\n    /* istanbul ignore if: this if will probably never be called */\r\n    if (!aValidType || !bValidType) {\r\n      return false\r\n    }\r\n    const aKeysCount = Object.keys(a).length\r\n    const bKeysCount = Object.keys(b).length\r\n    if (aKeysCount !== bKeysCount) {\r\n      return false\r\n    }\r\n    for (const key in a) {\r\n      const aHasKey = a.hasOwnProperty(key)\r\n      const bHasKey = b.hasOwnProperty(key)\r\n      if (\r\n        (aHasKey && !bHasKey) ||\r\n        (!aHasKey && bHasKey) ||\r\n        !looseEqual(a[key], b[key])\r\n      ) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return String(a) === String(b)\r\n}\r\n\r\nexport function looseIndexOf(arr: any[], val: any): number {\r\n  return arr.findIndex(item => looseEqual(item, val))\r\n}\r\n","import {\r\n  isArray,\r\n  isFunction,\r\n  isMap,\r\n  isObject,\r\n  isPlainObject,\r\n  isSet,\r\n  isString,\r\n  isSymbol,\r\n  objectToString,\r\n} from './general'\r\n\r\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nexport const toDisplayString = (val: unknown): string => {\r\n  return isString(val)\r\n    ? val\r\n    : val == null\r\n      ? ''\r\n      : isArray(val) ||\r\n          (isObject(val) &&\r\n            (val.toString === objectToString || !isFunction(val.toString)))\r\n        ? JSON.stringify(val, replacer, 2)\r\n        : String(val)\r\n}\r\n\r\nconst replacer = (_key: string, val: any): any => {\r\n  // can't use isRef here since @vue/shared has no deps\r\n  if (val && val.__v_isRef) {\r\n    return replacer(_key, val.value)\r\n  } else if (isMap(val)) {\r\n    return {\r\n      [`Map(${val.size})`]: [...val.entries()].reduce(\r\n        (entries, [key, val], i) => {\r\n          entries[stringifySymbol(key, i) + ' =>'] = val\r\n          return entries\r\n        },\r\n        {} as Record<string, any>,\r\n      ),\r\n    }\r\n  } else if (isSet(val)) {\r\n    return {\r\n      [`Set(${val.size})`]: [...val.values()].map(v => stringifySymbol(v)),\r\n    }\r\n  } else if (isSymbol(val)) {\r\n    return stringifySymbol(val)\r\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n    // native elements\r\n    return String(val)\r\n  }\r\n  return val\r\n}\r\n\r\nconst stringifySymbol = (v: unknown, i: number | string = ''): any =>\r\n  isSymbol(v) ? `Symbol(${v.description ?? i})` : v\r\n","import type { ReactiveEffect } from './effect'\r\nimport { warn } from './warning'\r\n\r\nlet activeEffectScope: EffectScope | undefined\r\n\r\nexport class EffectScope {\r\n  /**\r\n   * @internal\r\n   */\r\n  private _active = true\r\n  /**\r\n   * @internal\r\n   */\r\n  effects: ReactiveEffect[] = []\r\n  /**\r\n   * @internal\r\n   */\r\n  cleanups: (() => void)[] = []\r\n\r\n  /**\r\n   * only assigned by undetached scope\r\n   * @internal\r\n   */\r\n  parent: EffectScope | undefined\r\n  /**\r\n   * record undetached scopes\r\n   * @internal\r\n   */\r\n  scopes: EffectScope[] | undefined\r\n  /**\r\n   * track a child scope's index in its parent's scopes array for optimized\r\n   * removal\r\n   * @internal\r\n   */\r\n  private index: number | undefined\r\n\r\n  constructor(public detached = false) {\r\n    this.parent = activeEffectScope\r\n    if (!detached && activeEffectScope) {\r\n      this.index =\r\n        (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\r\n          this,\r\n        ) - 1\r\n    }\r\n  }\r\n\r\n  get active() {\r\n    return this._active\r\n  }\r\n\r\n  run<T>(fn: () => T): T | undefined {\r\n    if (this._active) {\r\n      const currentEffectScope = activeEffectScope\r\n      try {\r\n        activeEffectScope = this\r\n        return fn()\r\n      } finally {\r\n        activeEffectScope = currentEffectScope\r\n      }\r\n    } else if (__DEV__) {\r\n      warn(`cannot run an inactive effect scope.`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\r\n  on() {\r\n    activeEffectScope = this\r\n  }\r\n\r\n  /**\r\n   * This should only be called on non-detached scopes\r\n   * @internal\r\n   */\r\n  off() {\r\n    activeEffectScope = this.parent\r\n  }\r\n\r\n  stop(fromParent?: boolean) {\r\n    if (this._active) {\r\n      let i, l\r\n      for (i = 0, l = this.effects.length; i < l; i++) {\r\n        this.effects[i].stop()\r\n      }\r\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\r\n        this.cleanups[i]()\r\n      }\r\n      if (this.scopes) {\r\n        for (i = 0, l = this.scopes.length; i < l; i++) {\r\n          this.scopes[i].stop(true)\r\n        }\r\n      }\r\n      // nested scope, dereference from parent to avoid memory leaks\r\n      if (!this.detached && this.parent && !fromParent) {\r\n        // optimized O(1) removal\r\n        const last = this.parent.scopes!.pop()\r\n        if (last && last !== this) {\r\n          this.parent.scopes![this.index!] = last\r\n          last.index = this.index!\r\n        }\r\n      }\r\n      this.parent = undefined\r\n      this._active = false\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Creates an effect scope object which can capture the reactive effects (i.e.\r\n * computed and watchers) created within it so that these effects can be\r\n * disposed together. For detailed use cases of this API, please consult its\r\n * corresponding {@link https://github.com/vuejs/rfcs/blob/master/active-rfcs/0041-reactivity-effect-scope.md | RFC}.\r\n *\r\n * @param detached - Can be used to create a \"detached\" effect scope.\r\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#effectscope}\r\n */\r\nexport function effectScope(detached?: boolean) {\r\n  return new EffectScope(detached)\r\n}\r\n\r\nexport function recordEffectScope(\r\n  effect: ReactiveEffect,\r\n  scope: EffectScope | undefined = activeEffectScope,\r\n) {\r\n  if (scope && scope.active) {\r\n    scope.effects.push(effect)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the current active effect scope if there is one.\r\n *\r\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#getcurrentscope}\r\n */\r\nexport function getCurrentScope() {\r\n  return activeEffectScope\r\n}\r\n\r\n/**\r\n * Registers a dispose callback on the current active effect scope. The\r\n * callback will be invoked when the associated effect scope is stopped.\r\n *\r\n * @param fn - The callback function to attach to the scope's cleanup.\r\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#onscopedispose}\r\n */\r\nexport function onScopeDispose(fn: () => void) {\r\n  if (activeEffectScope) {\r\n    activeEffectScope.cleanups.push(fn)\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `onScopeDispose() is called when there is no active effect scope` +\r\n        ` to be associated with.`,\r\n    )\r\n  }\r\n}\r\n","import { NOOP, extend } from '@vue/shared'\r\nimport type { ComputedRefImpl } from './computed'\r\nimport {\r\n  DirtyLevels,\r\n  type TrackOpTypes,\r\n  type TriggerOpTypes,\r\n} from './constants'\r\nimport type { Dep } from './dep'\r\nimport { type EffectScope, recordEffectScope } from './effectScope'\r\n\r\nexport type EffectScheduler = (...args: any[]) => any\r\n\r\nexport type DebuggerEvent = {\r\n  effect: ReactiveEffect\r\n} & DebuggerEventExtraInfo\r\n\r\nexport type DebuggerEventExtraInfo = {\r\n  target: object\r\n  type: TrackOpTypes | TriggerOpTypes\r\n  key: any\r\n  newValue?: any\r\n  oldValue?: any\r\n  oldTarget?: Map<any, any> | Set<any>\r\n}\r\n\r\nexport let activeEffect: ReactiveEffect | undefined\r\n\r\n// 副作用函数\r\nexport class ReactiveEffect<T = any> {\r\n  active = true\r\n  /**\r\n   * 多对多的关系，一个副作用函数可以包含多个依赖的响应对象，一个响应对象可以存在多个副作用函数中\r\n   */\r\n  deps: Dep[] = []\r\n\r\n  /**\r\n   * Can be attached after creation\r\n   * @internal\r\n   */\r\n  computed?: ComputedRefImpl<T>\r\n  /**\r\n   * @internal\r\n   */\r\n  allowRecurse?: boolean\r\n\r\n  onStop?: () => void\r\n  // dev only\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  // dev only\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  _dirtyLevel = DirtyLevels.Dirty\r\n  /**\r\n   * @internal\r\n   */\r\n  _trackId = 0\r\n  /**\r\n   * @internal\r\n   */\r\n  _runnings = 0\r\n  /**\r\n   * @internal\r\n   */\r\n  _shouldSchedule = false\r\n  /**\r\n   * @internal\r\n   */\r\n  _depsLength = 0\r\n\r\n  constructor(\r\n    public fn: () => T,\r\n    public trigger: () => void,\r\n    public scheduler?: EffectScheduler,\r\n    scope?: EffectScope,\r\n  ) {\r\n    recordEffectScope(this, scope)\r\n  }\r\n\r\n  public get dirty() {\r\n    if (this._dirtyLevel === DirtyLevels.MaybeDirty) {\r\n      pauseTracking()\r\n      for (let i = 0; i < this._depsLength; i++) {\r\n        const dep = this.deps[i]\r\n        if (dep.computed) {\r\n          triggerComputed(dep.computed)\r\n          if (this._dirtyLevel >= DirtyLevels.Dirty) {\r\n            break\r\n          }\r\n        }\r\n      }\r\n      if (this._dirtyLevel < DirtyLevels.Dirty) {\r\n        this._dirtyLevel = DirtyLevels.NotDirty\r\n      }\r\n      resetTracking()\r\n    }\r\n    return this._dirtyLevel >= DirtyLevels.Dirty\r\n  }\r\n\r\n  public set dirty(v) {\r\n    this._dirtyLevel = v ? DirtyLevels.Dirty : DirtyLevels.NotDirty\r\n  }\r\n\r\n  // 1 last null active p1\r\n  // 2 last p1 active p2\r\n  // 3 last p2 active p3\r\n  // p3执行完 active p2\r\n  // p2环境 执行完 active p1\r\n  // p3环境执行完\r\n  /**\r\n   * 总而言之：\r\n   * 1. lastEffect和activeEffect是为了防止堆栈递归调用effect函数的情况；\r\n   * 2. preCleanupEffect和postCleanupEffect结合_trackId目的就是为了每次执行前先斩断依赖对象和副作用函数之间的关系，\r\n   * 执行之后再重新收集依赖关系，但是呢从性能上考虑清空的时候不是直接把deps数组长度清空，\r\n   * 而是先通过_depsLength设置为0，重新建立正确的依赖关系，把多余的元素再剪短依赖关系\r\n   * 3. _trackId是副作用对象的执行次数追踪id\r\n   */\r\n  run() {\r\n    this._dirtyLevel = DirtyLevels.NotDirty // 只要即将执行，就是标志为NotDirty，比如一些异步函数，如果等执行完，\r\n    if (!this.active) {\r\n      return this.fn()\r\n    }\r\n    let lastShouldTrack = shouldTrack\r\n    let lastEffect = activeEffect\r\n    try {\r\n      shouldTrack = true\r\n      activeEffect = this\r\n      this._runnings++\r\n      /**\r\n       * 通过preCleaupEffect方法\r\n       * 标识执行状态_trackId加1了，然后把_depsLength设置为零\r\n       */\r\n      preCleanupEffect(this);\r\n      /**\r\n       * 执行fn副作用函数的时候，会重新手机依赖对象\r\n       * 收集的过程有多种情况：\r\n       * （1）只是把Dep中的key对应的value（_trackId）更新，它们的依赖关系依赖没变\r\n       * （2）存在有一些依赖对象没有执行到的，那这个时候deps里面的元素是比_depsLength要多\r\n       */\r\n      return this.fn()\r\n    } finally {\r\n      /**\r\n       * 收集过程中，走到清空2，\r\n       * 通过postCleanupEffect，把deps中多余的元素清空，并且见到多余的依赖对象和副作用函数之间的关系\r\n       */\r\n      postCleanupEffect(this)\r\n      /**\r\n       * _running的作用：\r\n       * （1）如果一个副作用函数对一个key先有get,然后set操作，因为_running不为0，所以后面的set操作不会再次触发副作用函数的执行\r\n       * （2）如果副作用函数是一个异步函数，在副作用函数还没执行结束之前，就发生了依赖对象key的改变，因为_running也不会再次触发副作用函数\r\n       */\r\n      this._runnings--\r\n      activeEffect = lastEffect\r\n      shouldTrack = lastShouldTrack\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    if (this.active) {\r\n      preCleanupEffect(this)\r\n      postCleanupEffect(this)\r\n      this.onStop?.()\r\n      this.active = false\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerComputed(computed: ComputedRefImpl<any>) {\r\n  return computed.value\r\n}\r\n\r\nfunction preCleanupEffect(effect: ReactiveEffect) {\r\n  effect._trackId++\r\n  effect._depsLength = 0\r\n}\r\n\r\nfunction postCleanupEffect(effect: ReactiveEffect) {\r\n  if (effect.deps && effect.deps.length > effect._depsLength) {\r\n    for (let i = effect._depsLength; i < effect.deps.length; i++) {\r\n      cleanupDepEffect(effect.deps[i], effect)\r\n    }\r\n    effect.deps.length = effect._depsLength\r\n  }\r\n}\r\n\r\nfunction cleanupDepEffect(dep: Dep, effect: ReactiveEffect) {\r\n  const trackId = dep.get(effect)\r\n   //这里判断原因\r\n  /**\r\n   * 比如说ok text name三个属性，\r\n   * 第二次ok为true了，\r\n   * text对应的代码不会再执行到了，name就占据到deps中的第二个位置，再执行postCleanupEffect方法时候\r\n   * 第三个元素其实就是第二个元素，trackId是等于effect._trackId的\r\n   */\r\n  if (trackId !== undefined && effect._trackId !== trackId) {\r\n    dep.delete(effect)\r\n    if (dep.size === 0) {\r\n      dep.cleanup()\r\n    }\r\n  }\r\n}\r\n\r\nexport interface DebuggerOptions {\r\n  onTrack?: (event: DebuggerEvent) => void\r\n  onTrigger?: (event: DebuggerEvent) => void\r\n}\r\n\r\nexport interface ReactiveEffectOptions extends DebuggerOptions {\r\n  lazy?: boolean\r\n  scheduler?: EffectScheduler\r\n  scope?: EffectScope\r\n  allowRecurse?: boolean\r\n  onStop?: () => void\r\n}\r\n\r\nexport interface ReactiveEffectRunner<T = any> {\r\n  (): T\r\n  effect: ReactiveEffect\r\n}\r\n\r\n/**\r\n * Registers the given function to track reactive updates.\r\n *\r\n * The given function will be run once immediately. Every time any reactive\r\n * property that's accessed within it gets updated, the function will run again.\r\n *\r\n * @param fn - The function that will track reactive updates.\r\n * @param options - Allows to control the effect's behaviour.\r\n * @returns A runner that can be used to control the effect after creation.\r\n */\r\nexport function effect<T = any>(\r\n  fn: () => T,\r\n  options?: ReactiveEffectOptions,\r\n): ReactiveEffectRunner {\r\n  if ((fn as ReactiveEffectRunner).effect instanceof ReactiveEffect) {\r\n    fn = (fn as ReactiveEffectRunner).effect.fn\r\n  }\r\n\r\n  const _effect = new ReactiveEffect(fn, NOOP, () => {\r\n    if (_effect.dirty) {\r\n      _effect.run()\r\n    }\r\n  })\r\n  if (options) {\r\n    extend(_effect, options)\r\n    if (options.scope) recordEffectScope(_effect, options.scope)\r\n  }\r\n  if (!options || !options.lazy) {\r\n    _effect.run()\r\n  }\r\n  const runner = _effect.run.bind(_effect) as ReactiveEffectRunner\r\n  runner.effect = _effect\r\n  return runner\r\n}\r\n\r\n/**\r\n * Stops the effect associated with the given runner.\r\n *\r\n * @param runner - Association with the effect to stop tracking.\r\n */\r\nexport function stop(runner: ReactiveEffectRunner) {\r\n  runner.effect.stop()\r\n}\r\n\r\nexport let shouldTrack = true\r\nexport let pauseScheduleStack = 0\r\n\r\nconst trackStack: boolean[] = []\r\n\r\n/**\r\n * Temporarily pauses tracking.\r\n */\r\nexport function pauseTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = false\r\n}\r\n\r\n/**\r\n * Re-enables effect tracking (if it was paused).\r\n */\r\nexport function enableTracking() {\r\n  trackStack.push(shouldTrack)\r\n  shouldTrack = true\r\n}\r\n\r\n/**\r\n * Resets the previous global effect tracking state.\r\n */\r\nexport function resetTracking() {\r\n  const last = trackStack.pop()\r\n  shouldTrack = last === undefined ? true : last\r\n}\r\n\r\nexport function pauseScheduling() {\r\n  pauseScheduleStack++\r\n}\r\n\r\nexport function resetScheduling() {\r\n  pauseScheduleStack--\r\n  while (!pauseScheduleStack && queueEffectSchedulers.length) {\r\n    queueEffectSchedulers.shift()!()\r\n  }\r\n}\r\n\r\nexport function trackEffect(\r\n  effect: ReactiveEffect,\r\n  dep: Dep,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo,\r\n) {\r\n  /**\r\n   * 比如在一个副作用函数中两次及以上使用了同一个代理对象的key的值，那第二次进入的时候，因为已经存在了且_trackId是相同的，就不会重复添加\r\n   * effect的_trackId的作用就是一个状态id，每执行一次，_trackId就加1，这样做目的：\r\n   * 第一次执行副作用函数的时候，会记录所有依赖对象的deps，但是后面执行条件发生改变了，可能某些依赖对象根本不会执行到，所以每次执行副作用函数\r\n   * 之前需要清空副作用函数对应的依赖对象，执行后又重新创建依赖对象，通过_depsLength和deps这样每次清空的时候，不会直接先把数组给清空了\r\n   * 所以第二次执行的时候_trackId是已经改变了\r\n   */\r\n  if (dep.get(effect) !== effect._trackId) {\r\n    dep.set(effect, effect._trackId)\r\n    const oldDep = effect.deps[effect._depsLength]\r\n    if (oldDep !== dep) {\r\n      if (oldDep) {\r\n        cleanupDepEffect(oldDep, effect)\r\n      }\r\n      effect.deps[effect._depsLength++] = dep\r\n    } else {\r\n      effect._depsLength++\r\n    }\r\n    if (__DEV__) {\r\n      effect.onTrack?.(extend({ effect }, debuggerEventExtraInfo!))\r\n    }\r\n  }\r\n}\r\n\r\nconst queueEffectSchedulers: EffectScheduler[] = []\r\n\r\n/**\r\n * 比如一个副作用函数即引用了代理A对象p属性的值，又循环遍历代理对象A\r\n * 那么A对象p属性的值更改时，即会触发p属性对应的副作用，也会触发迭代器对应的副作用\r\n * 第一次_dirtyLevel是NotDirty，改为Dirty，然后把该副作用函数先计入副作用调度器队列里面\r\n * 第二次通过迭代器进入triggerEffects的时候，因为都是同一个副作用对象，因为lastDirtyLevel已经是Dirty，所以不会再进入if里面，\r\n * 避免重复执行，比如以下场景：\r\n * const observed = reactive([1,2,3]);\r\n     effect(() => {\r\n        console.log(observed[3]);\r\n        for(let item of observed) {\r\n            console.log(item);\r\n        }\r\n    });\r\n    setTimeout(() => {\r\n        observed[3] = 5;\r\n    }, 500)\r\n    属性值length和key为3都会对effect建立依赖关系，observed[3]改变的时候，length和3对应的effect都会执行，因为通过_dirtyLevel和队列的形式，副作用只会加入到队列中一次并只执行一次（队列的作用不仅仅只有这一个）。\r\n */\r\nexport function triggerEffects(\r\n  dep: Dep,\r\n  dirtyLevel: DirtyLevels,\r\n  debuggerEventExtraInfo?: DebuggerEventExtraInfo,\r\n) {\r\n  pauseScheduling()\r\n  for (const effect of dep.keys()) {\r\n    if (\r\n      effect._dirtyLevel < dirtyLevel && // 上一次没有dirty，这一次dirty，如果上一次正在dirty中，说明上一次副作用函数还没执行完，每次执行副作用函数之前都会把dirty设置为notdirty\r\n      dep.get(effect) === effect._trackId \r\n    ) {\r\n      const lastDirtyLevel = effect._dirtyLevel\r\n      effect._dirtyLevel = dirtyLevel\r\n      if (lastDirtyLevel === DirtyLevels.NotDirty) {\r\n        effect._shouldSchedule = true\r\n        if (__DEV__) {\r\n          effect.onTrigger?.(extend({ effect }, debuggerEventExtraInfo))\r\n        }\r\n        effect.trigger()\r\n      }\r\n    }\r\n  }\r\n  scheduleEffects(dep)\r\n  resetScheduling()\r\n}\r\n\r\n/**\r\n * 如果一个副作用函数对某个key先get，再set，那么set触发trigger，进入这个函数，_runnings不为0，allowRecurse默认是false\r\n * 所以不会重新调用副作用函数，不然就有可能进入死循环\r\n */\r\nexport function scheduleEffects(dep: Dep) {\r\n  for (const effect of dep.keys()) {\r\n    if (\r\n      effect.scheduler &&\r\n      effect._shouldSchedule &&\r\n      (!effect._runnings || effect.allowRecurse) &&\r\n      dep.get(effect) === effect._trackId\r\n    ) {\r\n      effect._shouldSchedule = false\r\n      queueEffectSchedulers.push(effect.scheduler)\r\n    }\r\n  }\r\n}\r\n","import type { ReactiveEffect } from './effect'\r\nimport type { ComputedRefImpl } from './computed'\r\n\r\nexport type Dep = Map<ReactiveEffect, number> & {\r\n  cleanup: () => void\r\n  computed?: ComputedRefImpl<any>\r\n}\r\n\r\nexport const createDep = (\r\n  cleanup: () => void,\r\n  computed?: ComputedRefImpl<any>,\r\n): Dep => {\r\n  const dep = new Map() as Dep\r\n  dep.cleanup = cleanup\r\n  dep.computed = computed\r\n  return dep\r\n}\r\n","import { isArray, isIntegerKey, isMap, isSymbol } from '@vue/shared'\r\nimport { DirtyLevels, type TrackOpTypes, TriggerOpTypes } from './constants'\r\nimport { type Dep, createDep } from './dep'\r\nimport {\r\n  activeEffect,\r\n  pauseScheduling,\r\n  resetScheduling,\r\n  shouldTrack,\r\n  trackEffect,\r\n  triggerEffects,\r\n} from './effect'\r\n\r\n// The main WeakMap that stores {target -> key -> dep} connections.\r\n// Conceptually, it's easier to think of a dependency as a Dep class\r\n// which maintains a Set of subscribers, but we simply store them as\r\n// raw Maps to reduce memory overhead.\r\ntype KeyToDepMap = Map<any, Dep>\r\nconst targetMap = new WeakMap<object, KeyToDepMap>()\r\n\r\nexport const ITERATE_KEY = Symbol(__DEV__ ? 'iterate' : '')\r\nexport const MAP_KEY_ITERATE_KEY = Symbol(__DEV__ ? 'Map key iterate' : '')\r\n\r\n/**\r\n * Tracks access to a reactive property.\r\n *\r\n * This will check which effect is running at the moment and record it as dep\r\n * which records all effects that depend on the reactive property.\r\n *\r\n * @param target - Object holding the reactive property.\r\n * @param type - Defines the type of access to the reactive property.\r\n * @param key - Identifier of the reactive property to track.\r\n */\r\n/**\r\n * 有三层：\r\n * 所有的响应对象target构成一个WeapMap\r\n * 简单地说，WeakMap 对 key 是弱引用，不影响垃圾回收器的工作。据这个特性可知，一旦 key 被垃圾回收器回收，那么对应的键和值就访问不到了。所以 WeakMap 经常用于存储那些只有当 key 所引用的对象存在时（没有被回收）才有价值的信息，例如上面的场景中，如果 target 对象没有任何引用了，说明用户侧不再需要它了，这时垃圾回收器会完成回收任务。但如果使用 Map 来代替WeakMap，那么即使用户侧的代码对 target 没有任何引用，这个 target 也不会被回收，最终可能导致内存溢出。\r\n * 单个响应对象中所有key构成一个map\r\n * 单个key对应的是Dep对象，但是Dep也是一个包含cleanup方法的map\r\n * \r\n */\r\nexport function track(target: object, type: TrackOpTypes, key: unknown) {\r\n  /**\r\n   * 判断activeEffect：只要当前执行的环境是在副作用函数中才需要去手机\r\n   * 判断shouldTrack：比如对于数组，调用push方法，会先获取length（get操作获取length），再往数组中添加元素（set操作）。\r\n   * 如下场景：两个副作用之间会进入一个互相触发执行的死循环的，所以对于像push方法，应该shouldTrack标识为false，这样就不会去进行副作用的依赖收集，本质上push是改变数组的值，也不需要去track依赖\r\n   * effect(() => {\r\n        observed.push(1)\r\n      });\r\n      effect(() => {\r\n          observed.push(2)\r\n      })\r\n   */\r\n  if (shouldTrack && activeEffect) {\r\n    let depsMap = targetMap.get(target)\r\n    if (!depsMap) {\r\n      targetMap.set(target, (depsMap = new Map()))\r\n    }\r\n    let dep = depsMap.get(key)\r\n    if (!dep) {\r\n      depsMap.set(key, (dep = createDep(() => depsMap!.delete(key))))\r\n    }\r\n    trackEffect(\r\n      activeEffect,\r\n      dep,\r\n      __DEV__\r\n        ? {\r\n            target,\r\n            type,\r\n            key,\r\n          }\r\n        : void 0,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Finds all deps associated with the target (or a specific property) and\r\n * triggers the effects stored within.\r\n *\r\n * @param target - The reactive object.\r\n * @param type - Defines the type of the operation that needs to trigger effects.\r\n * @param key - Can be used to target a specific reactive property in the target object.\r\n */\r\nexport function trigger(\r\n  target: object,\r\n  type: TriggerOpTypes,\r\n  key?: unknown,\r\n  newValue?: unknown,\r\n  oldValue?: unknown,\r\n  oldTarget?: Map<unknown, unknown> | Set<unknown>,\r\n) {\r\n  const depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    // never been tracked\r\n    return\r\n  }\r\n\r\n  let deps: (Dep | undefined)[] = []\r\n  /**\r\n   * map和set对象中clear方法调用，所有元素都被清空了，所有元素对应的副作用都需要执行\r\n   */\r\n  if (type === TriggerOpTypes.CLEAR) {\r\n    // collection being cleared\r\n    // trigger all effects for target\r\n    deps = [...depsMap.values()]\r\n  } else if (key === 'length' && isArray(target)) {\r\n    /**\r\n     * for in 会在ownKeys方法中track收集length的依赖；\r\n     * for of内部会先获取length，所以会在get中收集length的依赖\r\n     * \r\n     * 这样的场景：直接改变数组的长度，除了触发length（for in/for of）的依赖副作用之外，还有超出设置长度的那些元素也会触发依赖（相当于超出长度的那些元素被删除了）\r\n     * const observed = reactive([1,2,3]);\r\n      effect(() => {\r\n          for(let key of observed) {\r\n              console.log(key)\r\n          }\r\n      });\r\n      setTimeout(() => {\r\n          observed.length = 2;\r\n      }, 1000)\r\n     */\r\n    const newLength = Number(newValue)\r\n    depsMap.forEach((dep, key) => {\r\n      if (key === 'length' || (!isSymbol(key) && key >= newLength)) {\r\n        deps.push(dep)\r\n      }\r\n    })\r\n  } else {\r\n    // schedule runs for SET | ADD | DELETE\r\n    if (key !== void 0) {\r\n      deps.push(depsMap.get(key))\r\n    }\r\n\r\n    // also run for iteration key on ADD | DELETE | Map.SET\r\n    switch (type) {\r\n      /**\r\n       * 对象添加属性、数组添加元素、Map的set方法执行、Set的add方法执行\r\n       */\r\n      case TriggerOpTypes.ADD:\r\n        if (!isArray(target)) {\r\n          /**\r\n           * ITERATE_KEY：\r\n           *（1）普通对象的for in \r\n           * (2) Map和Set的size\r\n           * (3) Map和Set的forEach\r\n           * (4) Set和Map的迭代器（values/entries)\r\n           * \r\n           * MAP_KEY_ITERATE_KEY：\r\n           * （1）Map的迭代器方法keys\r\n           */\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        } else if (isIntegerKey(key)) {\r\n          // 如果是数组，那么对应还需要触发length\r\n          // new index added to array -> length changes\r\n          deps.push(depsMap.get('length'))\r\n        }\r\n        break\r\n      case TriggerOpTypes.DELETE:\r\n        if (!isArray(target)) {\r\n          /**\r\n           * 原理同上\r\n           * 不会去delete 一个数组的元素\r\n           */\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n          if (isMap(target)) {\r\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY))\r\n          }\r\n        }\r\n        break\r\n      case TriggerOpTypes.SET:\r\n        /**\r\n         * 如果是Map，修改值的话，还需要触发对应的迭代器（values/entries/forEach）\r\n         */\r\n        if (isMap(target)) {\r\n          deps.push(depsMap.get(ITERATE_KEY))\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  pauseScheduling()\r\n  for (const dep of deps) {\r\n    if (dep) {\r\n      triggerEffects(\r\n        dep,\r\n        DirtyLevels.Dirty,\r\n        __DEV__\r\n          ? {\r\n              target,\r\n              type,\r\n              key,\r\n              newValue,\r\n              oldValue,\r\n              oldTarget,\r\n            }\r\n          : void 0,\r\n      )\r\n    }\r\n  }\r\n  resetScheduling()\r\n}\r\n\r\nexport function getDepFromReactive(object: any, key: string | number | symbol) {\r\n  return targetMap.get(object)?.get(key)\r\n}\r\n","import {\r\n  type Target,\r\n  isReadonly,\r\n  isShallow,\r\n  reactive,\r\n  reactiveMap,\r\n  readonly,\r\n  readonlyMap,\r\n  shallowReactiveMap,\r\n  shallowReadonlyMap,\r\n  toRaw,\r\n} from './reactive'\r\nimport { ReactiveFlags, TrackOpTypes, TriggerOpTypes } from './constants'\r\nimport {\r\n  pauseScheduling,\r\n  pauseTracking,\r\n  resetScheduling,\r\n  resetTracking,\r\n} from './effect'\r\nimport { ITERATE_KEY, track, trigger } from './reactiveEffect'\r\nimport {\r\n  hasChanged,\r\n  hasOwn,\r\n  isArray,\r\n  isIntegerKey,\r\n  isObject,\r\n  isSymbol,\r\n  makeMap,\r\n} from '@vue/shared'\r\nimport { isRef } from './ref'\r\nimport { warn } from './warning'\r\n\r\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`)\r\n\r\nconst builtInSymbols = new Set(\r\n  /*#__PURE__*/\r\n  Object.getOwnPropertyNames(Symbol)\r\n    /**\r\n     * 在iOS10.x中，Object.getOwnPropertyNames(Symbol)可以枚举\"arguments\"和\"caller\"，但是Symbol对象上访问\r\n     * 这些属性会导致TypeError，因为Symbol是一个严格模式函数\r\n     */\r\n    .filter(key => key !== 'arguments' && key !== 'caller')\r\n    .map(key => (Symbol as any)[key])\r\n    .filter(isSymbol),\r\n)\r\n\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations()\r\n\r\nfunction createArrayInstrumentations() {\r\n  const instrumentations: Record<string, Function> = {}\r\n  // instrument identity-sensitive Array methods to account for possible reactive\r\n  // values\r\n  ;(['includes', 'indexOf', 'lastIndexOf'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      const arr = toRaw(this) as any\r\n      for (let i = 0, l = this.length; i < l; i++) {\r\n        track(arr, TrackOpTypes.GET, i + '')\r\n      }\r\n      // we run the method using the original args first (which may be reactive)\r\n      const res = arr[key](...args)\r\n      if (res === -1 || res === false) {\r\n        // if that didn't work, run it again using raw values.\r\n        return arr[key](...args.map(toRaw))\r\n      } else {\r\n        return res\r\n      }\r\n    }\r\n  })\r\n  // instrument length-altering mutation methods to avoid length being tracked\r\n  // which leads to infinite loops in some cases (#2137)\r\n  ;(['push', 'pop', 'shift', 'unshift', 'splice'] as const).forEach(key => {\r\n    instrumentations[key] = function (this: unknown[], ...args: unknown[]) {\r\n      pauseTracking()\r\n      pauseScheduling()\r\n      const res = (toRaw(this) as any)[key].apply(this, args)\r\n      resetScheduling()\r\n      resetTracking()\r\n      return res\r\n    }\r\n  })\r\n  return instrumentations\r\n}\r\n\r\nfunction hasOwnProperty(this: object, key: string) {\r\n  const obj = toRaw(this)\r\n  track(obj, TrackOpTypes.HAS, key)\r\n  return obj.hasOwnProperty(key)\r\n}\r\n\r\nclass BaseReactiveHandler implements ProxyHandler<Target> {\r\n  constructor(\r\n    protected readonly _isReadonly = false,\r\n    protected readonly _shallow = false,\r\n  ) {}\r\n\r\n  // 获取对象的属性值\r\n  get(target: Target, key: string | symbol, receiver: object) {\r\n    const isReadonly = this._isReadonly,\r\n      shallow = this._shallow\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.IS_SHALLOW) {\r\n      return shallow\r\n    } else if (key === ReactiveFlags.RAW) {\r\n      // 判断receiver是否是target的代理对象，或者receiver和target被同一个对象代理了\r\n      // 获取原始对象\r\n      /**\r\n       * 如下情况：\r\n       * const { reactive, effect } = Vue;\r\n        const o1 = {s: 'c'};\r\n        const o2 = {id: 1, s: 'p'};\r\n        const c = reactive(o1);\r\n        const p = reactive(o2);\r\n        Object.setPrototypeOf(c, p);\r\n        effect(() => {\r\n            console.log(c.id);\r\n        }) \r\n        获取c.id的时候第一次进入child的get方法，发现没有id属性，然后就会进入parent的get方法，这个时候target是o2，但是receiver是c\r\n       */\r\n      if (\r\n        receiver ===\r\n          (isReadonly\r\n            ? shallow\r\n              ? shallowReadonlyMap\r\n              : readonlyMap\r\n            : shallow\r\n              ? shallowReactiveMap\r\n              : reactiveMap\r\n          ).get(target) ||\r\n        // receiver is not the reactive proxy, but has the same prototype\r\n        // this means the reciever is a user proxy of the reactive proxy\r\n        Object.getPrototypeOf(target) === Object.getPrototypeOf(receiver)\r\n      ) {\r\n        return target\r\n      }\r\n      // early return undefined\r\n      return\r\n    }\r\n\r\n    const targetIsArray = isArray(target)\r\n\r\n    if (!isReadonly) {\r\n      if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n        return Reflect.get(arrayInstrumentations, key, receiver)\r\n      }\r\n      if (key === 'hasOwnProperty') {\r\n        return hasOwnProperty\r\n      }\r\n    }\r\n    /**\r\n     * target是原对象，\r\n     * receiver是代理对象\r\n     * 这里之所以使用Reflect\r\n     * const obj = {\r\n     *  id: 1,\r\n     *  get uuid () {\r\n     *    return this.id\r\n     * }\r\n     * }\r\n     * const proxy = new Proxy(obj)\r\n     * 方法proxy.uuid时，this始终指向代理对象\r\n     */\r\n    const res = Reflect.get(target, key, receiver)\r\n\r\n    // 是否是哪些不被追踪的属性\r\n    // 防止数组的[Symbol.iterator]被收集，for of遍历的时候会先调用[Symbol.iterator]，然后再获取内部的length，所以[Symbol.iterator]被忽略，值收集length的依赖，防止一个副作用函数被收集两次\r\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n      return res\r\n    }\r\n\r\n    // 只读对象不需要追踪依赖，对象的属性值是不会改变的，所以不需要追踪\r\n    if (!isReadonly) {\r\n      track(target, TrackOpTypes.GET, key)\r\n    }\r\n    // 如果是浅依赖的就直接返回，不需要再递归创建代理\r\n    if (shallow) {\r\n      return res\r\n    }\r\n    /**\r\n     * 所以即使props中传入给子组件的值是ref也能正确取值，返回的是ref的value值\r\n     */\r\n    if (isRef(res)) {\r\n      // ref unwrapping - skip unwrap for Array + integer key.\r\n      return targetIsArray && isIntegerKey(key) ? res : res.value\r\n    }\r\n\r\n    if (isObject(res)) {\r\n      // Convert returned value into a proxy as well. we do the isObject check\r\n      // here to avoid invalid value warning. Also need to lazy access readonly\r\n      // and reactive here to avoid circular dependency.\r\n      return isReadonly ? readonly(res) : reactive(res)\r\n    }\r\n\r\n    return res\r\n  }\r\n}\r\n\r\nclass MutableReactiveHandler extends BaseReactiveHandler {\r\n  constructor(shallow = false) {\r\n    super(false, shallow)\r\n  }\r\n\r\n  // 给对象添加属性值/或者给对象修改属性值\r\n  set(\r\n    target: object,\r\n    key: string | symbol,\r\n    value: unknown,\r\n    receiver: object,\r\n  ): boolean {\r\n    let oldValue = (target as any)[key]\r\n    /**\r\n     * 如果是浅层的，那么自然只有第一层，第二层都是原始对象了\r\n     */\r\n    if (!this._shallow) {\r\n      // 原来key对应的值是响应式的，且只可读，则不允许设置\r\n      /**\r\n       * value可能本身就是oldvalue的代理对象，所以需要先把value原始的对象取出来，这样，再hasChanged比较的时候就不会有问题\r\n       * 这种情况下，hasChanged应该是false，如果不这样操作，hasChanged就会变成true，\r\n       * 反正在get方法的时候取出来会递归调用reactive，获取值的时候仍然是代理对象\r\n       * let obj = {city: 'gz', address: 'panyu'};\r\n        const d = reactive(obj);\r\n        const person = reactive({id: 1, name: 'ff', d: obj});\r\n        effect(() => {\r\n            console.log(person.d) \r\n        })\r\n        setTimeout(() => {\r\n            person.d = d; //不会触发以上的effect\r\n        }, 100)\r\n       * \r\n       * 如果oldValue是元素对象，value是oldValue的可读的对象，那说明value是不会被track/trigger，value根本不会被改变，不用担心trigger\r\n       * 如果是shallow，因为this._shallow已经是false，说明本身target创建的代理对象就是深度，而现在要给他复制shallowReactive，\r\n       * 虽然对应的是同一个代理对象，但是属性值仍然是改变了的\r\n       * let obj = {city: 'gz', address: 'panyu'};\r\n          const d = shallowReactive(obj);\r\n          const person = reactive({id: 1, name: 'ff', d: obj});\r\n          effect(() => {\r\n              console.log(person.d)\r\n          })\r\n          setTimeout(() => {\r\n              person.d = d; // 会再次触发以上的effect\r\n          }, 100)\r\n       * 这里还有一个原因就是为了防止数据污染，比如有两个响应对象p1,p2，将p2设置成p1的某个属性值，\r\n          const obj = {city: 'gz', address: 'panyu'};\r\n          const p1 = reactive(obj);\r\n          const p2 = reactive({});\r\n          p1['p2'] = p2;\r\n          effect(() => {\r\n              console.log(obj.p2.id)\r\n          });\r\n          console.log(p1.p2, obj.p2)\r\n          setTimeout(() => {\r\n              obj.p2.id = 11;\r\n          })\r\n          如果不经过这样的操作，那么obj.p2对应的就是p2响应对象，那么obj.p2.id改变的时候就会触发effect执行，\r\n          现在因为obj.p2是原始对象了，所以不会有这个数据污染问题\r\n          （把响应式数据设置到原始数据上的行为称为样式污染\r\n       */\r\n      const isOldValueReadonly = isReadonly(oldValue)\r\n      if (!isShallow(value) && !isReadonly(value)) {\r\n        oldValue = toRaw(oldValue)\r\n        value = toRaw(value)\r\n      }\r\n      // 如果对象的key值原来是ref，新的值不是ref，则将新的值赋值给原来key对应的值\r\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n        if (isOldValueReadonly) {\r\n          return false\r\n        } else {\r\n          oldValue.value = value\r\n          return true\r\n        }\r\n      }\r\n    } else {\r\n      // in shallow mode, objects are set as-is regardless of reactive or not\r\n    }\r\n\r\n    const hadKey =\r\n      isArray(target) && isIntegerKey(key)\r\n        ? Number(key) < target.length\r\n        : hasOwn(target, key)\r\n    const result = Reflect.set(target, key, value, receiver)\r\n    // don't trigger if target is something up in the prototype chain of original\r\n    if (target === toRaw(receiver)) {\r\n      if (!hadKey) {\r\n        // 如果是给对象新增加值，增加的值夜不是ref，则触发add\r\n        trigger(target, TriggerOpTypes.ADD, key, value)\r\n      } else if (hasChanged(value, oldValue)) {\r\n        // 如果是修改原来的值，则触发set\r\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  // delete操作触发，比如 delete observed.foo\r\n  deleteProperty(target: object, key: string | symbol): boolean {\r\n    const hadKey = hasOwn(target, key)\r\n    const oldValue = (target as any)[key]\r\n    const result = Reflect.deleteProperty(target, key)\r\n    if (result && hadKey) {\r\n      // 存在这个key并且成功删除了，才会触发delete\r\n      trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n    }\r\n    return result\r\n  }\r\n\r\n  // 'foo' in observed 触发的就是has函数\r\n  has(target: object, key: string | symbol): boolean {\r\n    const result = Reflect.has(target, key)\r\n    /**\r\n     * 这里为什么要排除symbol函数呢\r\n     * 因为在for of循环遍历数组的时候，除了会触发length，还会触发symbol迭代器的方法，就会重复执行副作用函数\r\n     * 所以for of循序只记录一个length的track就可以了\r\n     */\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n      track(target, TrackOpTypes.HAS, key)\r\n    }\r\n    return result\r\n  }\r\n  /**\r\n   * （1）for in 触发的就是ownKeys函数\r\n   * （2）Object.keys(proxy)\r\n   */\r\n  ownKeys(target: object): (string | symbol)[] {\r\n    // for in和 in会进入到这个方法，如果是数组，只要记录length改变就行了，\r\n    /**\r\n     * 比如一个副作用函数内for in一个数组，那么后面这个数组长度改变了，都应该触发这个副作用函数的执行\r\n     * 如果是for in一个对象，那么这个对象的属性添加了或者减少了，都应该触发ITERATE_KEY，所以记录的也是ITERATE_KEY\r\n     */\r\n    track(\r\n      target,\r\n      TrackOpTypes.ITERATE,\r\n      isArray(target) ? 'length' : ITERATE_KEY,\r\n    )\r\n    return Reflect.ownKeys(target)\r\n  }\r\n}\r\n\r\nclass ReadonlyReactiveHandler extends BaseReactiveHandler {\r\n  constructor(shallow = false) {\r\n    super(true, shallow)\r\n  }\r\n\r\n  set(target: object, key: string | symbol) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target,\r\n      )\r\n    }\r\n    return true\r\n  }\r\n\r\n  deleteProperty(target: object, key: string | symbol) {\r\n    if (__DEV__) {\r\n      warn(\r\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\r\n        target,\r\n      )\r\n    }\r\n    return true\r\n  }\r\n}\r\n\r\nexport const mutableHandlers: ProxyHandler<object> =\r\n  /*#__PURE__*/ new MutableReactiveHandler()\r\n\r\nexport const readonlyHandlers: ProxyHandler<object> =\r\n  /*#__PURE__*/ new ReadonlyReactiveHandler()\r\n\r\nexport const shallowReactiveHandlers = /*#__PURE__*/ new MutableReactiveHandler(\r\n  true,\r\n)\r\n\r\n// props handlers特殊之处在于它不应该解包顶层refs，但它仍然保持普通只读对象的响应性\r\nexport const shallowReadonlyHandlers =\r\n  /*#__PURE__*/ new ReadonlyReactiveHandler(true)\r\n","import { toRaw, toReactive, toReadonly } from './reactive'\r\nimport {\r\n  ITERATE_KEY,\r\n  MAP_KEY_ITERATE_KEY,\r\n  track,\r\n  trigger,\r\n} from './reactiveEffect'\r\nimport { ReactiveFlags, TrackOpTypes, TriggerOpTypes } from './constants'\r\nimport { capitalize, hasChanged, hasOwn, isMap, toRawType } from '@vue/shared'\r\n\r\ntype CollectionTypes = IterableCollections | WeakCollections\r\n\r\ntype IterableCollections = Map<any, any> | Set<any>\r\ntype WeakCollections = WeakMap<any, any> | WeakSet<any>\r\ntype MapTypes = Map<any, any> | WeakMap<any, any>\r\ntype SetTypes = Set<any> | WeakSet<any>\r\n\r\nconst toShallow = <T extends unknown>(value: T): T => value\r\n\r\nconst getProto = <T extends CollectionTypes>(v: T): any =>\r\n  Reflect.getPrototypeOf(v)\r\n\r\nfunction get(\r\n  target: MapTypes,\r\n  key: unknown,\r\n  isReadonly = false,\r\n  isShallow = false,\r\n) {\r\n  // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n  // of the value\r\n  /**\r\n   * （1）关于rawTarget和target不相等的场景：\r\n   * const map = reactive(new Map())\r\n    const roMap = readonly(map)\r\n      map.set(4, { foo: 'bar' })\r\n      effect(() => {\r\n          const roMapItem = roMap.get(5);\r\n          console.log(roMapItem)\r\n      })\r\n      setTimeout(() => {\r\n          map.set(5, 'hello')\r\n      }, 1000)\r\n      解释：readonly一个reactive响应对象，虽然roMap是readonly非响应式的，但是因为原始对象是响应式的，所以roMapItem依然是响应式的，很少会这样使用\r\n\r\n      （2）关于key和rawKey不相等的场景：key是响应式对象,rawkey是原始对象\r\n      如果map代理对象中本来包含了key响应对象，那么map.get(key)收集了key和rawKey的依赖关系，set(key, value)的时候会触发key的依赖；\r\n      如果map代理对象中没有包括key的响应对象，那么set(key, value)会触发rawKey的依赖\r\n   */\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (!isReadonly) {\r\n    if (hasChanged(key, rawKey)) {\r\n      // 如果key也是响应式的对象，那么也要track key\r\n      track(rawTarget, TrackOpTypes.GET, key)\r\n    }\r\n    track(rawTarget, TrackOpTypes.GET, rawKey)\r\n  }\r\n  const { has } = getProto(rawTarget)\r\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n  if (has.call(rawTarget, key)) {\r\n    return wrap(target.get(key))\r\n  } else if (has.call(rawTarget, rawKey)) {\r\n    return wrap(target.get(rawKey))\r\n  } else if (target !== rawTarget) {\r\n    // #3602 readonly(reactive(Map))\r\n    // ensure that the nested reactive `Map` can do tracking for itself\r\n    target.get(key)\r\n  }\r\n}\r\n\r\nfunction has(this: CollectionTypes, key: unknown, isReadonly = false): boolean {\r\n  const target = (this as any)[ReactiveFlags.RAW]\r\n  const rawTarget = toRaw(target)\r\n  const rawKey = toRaw(key)\r\n  if (!isReadonly) {\r\n    if (hasChanged(key, rawKey)) {\r\n      track(rawTarget, TrackOpTypes.HAS, key)\r\n    }\r\n    track(rawTarget, TrackOpTypes.HAS, rawKey)\r\n  }\r\n  return key === rawKey\r\n    ? target.has(key)\r\n    : target.has(key) || target.has(rawKey)\r\n}\r\n\r\nfunction size(target: IterableCollections, isReadonly = false) {\r\n  target = (target as any)[ReactiveFlags.RAW]\r\n  !isReadonly && track(toRaw(target), TrackOpTypes.ITERATE, ITERATE_KEY)\r\n  return Reflect.get(target, 'size', target)\r\n}\r\n\r\nfunction add(this: SetTypes, value: unknown) {\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const proto = getProto(target)\r\n  const hadKey = proto.has.call(target, value)\r\n  if (!hadKey) {\r\n    target.add(value)\r\n    trigger(target, TriggerOpTypes.ADD, value, value)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction set(this: MapTypes, key: unknown, value: unknown) {\r\n  // 这里设置需要用原始对象\r\n  value = toRaw(value)\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    // key是响应式对象，并且target中包含key的原始对象\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get.call(target, key)\r\n  target.set(key, value)\r\n  if (!hadKey) {\r\n    trigger(target, TriggerOpTypes.ADD, key, value)\r\n  } else if (hasChanged(value, oldValue)) {\r\n    trigger(target, TriggerOpTypes.SET, key, value, oldValue)\r\n  }\r\n  return this\r\n}\r\n\r\nfunction deleteEntry(this: CollectionTypes, key: unknown) {\r\n  const target = toRaw(this)\r\n  const { has, get } = getProto(target)\r\n  let hadKey = has.call(target, key)\r\n  if (!hadKey) {\r\n    key = toRaw(key)\r\n    hadKey = has.call(target, key)\r\n  } else if (__DEV__) {\r\n    checkIdentityKeys(target, has, key)\r\n  }\r\n\r\n  const oldValue = get ? get.call(target, key) : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.delete(key)\r\n  if (hadKey) {\r\n    trigger(target, TriggerOpTypes.DELETE, key, undefined, oldValue)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction clear(this: IterableCollections) {\r\n  const target = toRaw(this)\r\n  const hadItems = target.size !== 0\r\n  const oldTarget = __DEV__\r\n    ? isMap(target)\r\n      ? new Map(target)\r\n      : new Set(target)\r\n    : undefined\r\n  // forward the operation before queueing reactions\r\n  const result = target.clear()\r\n  if (hadItems) {\r\n    trigger(target, TriggerOpTypes.CLEAR, undefined, undefined, oldTarget)\r\n  }\r\n  return result\r\n}\r\n\r\nfunction createForEach(isReadonly: boolean, isShallow: boolean) {\r\n  return function forEach(\r\n    this: IterableCollections,\r\n    callback: Function,\r\n    thisArg?: unknown,\r\n  ) {\r\n    const observed = this as any\r\n    const target = observed[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly && track(rawTarget, TrackOpTypes.ITERATE, ITERATE_KEY)\r\n    return target.forEach((value: unknown, key: unknown) => {\r\n      // important: make sure the callback is\r\n      // 1. invoked with the reactive map as `this` and 3rd arg\r\n      // 2. the value received should be a corresponding reactive/readonly.\r\n      return callback.call(thisArg, wrap(value), wrap(key), observed)\r\n    })\r\n  }\r\n}\r\n\r\ninterface Iterable {\r\n  [Symbol.iterator](): Iterator\r\n}\r\n\r\ninterface Iterator {\r\n  next(value?: any): IterationResult\r\n}\r\n\r\ninterface IterationResult {\r\n  value: any\r\n  done: boolean\r\n}\r\n\r\nfunction createIterableMethod(\r\n  method: string | symbol,\r\n  isReadonly: boolean,\r\n  isShallow: boolean,\r\n) {\r\n  return function (\r\n    this: IterableCollections,\r\n    ...args: unknown[]\r\n  ): Iterable & Iterator {\r\n    const target = (this as any)[ReactiveFlags.RAW]\r\n    const rawTarget = toRaw(target)\r\n    const targetIsMap = isMap(rawTarget)\r\n    const isPair =\r\n      method === 'entries' || (method === Symbol.iterator && targetIsMap)\r\n    const isKeyOnly = method === 'keys' && targetIsMap\r\n    const innerIterator = target[method](...args)\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive\r\n    !isReadonly &&\r\n      track(\r\n        rawTarget,\r\n        TrackOpTypes.ITERATE,\r\n        isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY,\r\n      )\r\n    // return a wrapped iterator which returns observed versions of the\r\n    // values emitted from the real iterator\r\n    return {\r\n      // iterator protocol\r\n      next() {\r\n        const { value, done } = innerIterator.next()\r\n        return done\r\n          ? { value, done }\r\n          : {\r\n              value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n              done,\r\n            }\r\n      },\r\n      // iterable protocol\r\n      [Symbol.iterator]() {\r\n        return this\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\nfunction createReadonlyMethod(type: TriggerOpTypes): Function {\r\n  return function (this: CollectionTypes, ...args: unknown[]) {\r\n    if (__DEV__) {\r\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``\r\n      console.warn(\r\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\r\n        toRaw(this),\r\n      )\r\n    }\r\n    return type === TriggerOpTypes.DELETE\r\n      ? false\r\n      : type === TriggerOpTypes.CLEAR\r\n        ? undefined\r\n        : this\r\n  }\r\n}\r\n\r\nfunction createInstrumentations() {\r\n  const mutableInstrumentations: Record<string, Function | number> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key)\r\n    },\r\n    //获取size先track，从原始对象中获取size\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false),\r\n  }\r\n\r\n  const shallowInstrumentations: Record<string, Function | number> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, false, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections)\r\n    },\r\n    has,\r\n    add,\r\n    set,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true),\r\n  }\r\n\r\n  const readonlyInstrumentations: Record<string, Function | number> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, false),\r\n  }\r\n\r\n  const shallowReadonlyInstrumentations: Record<string, Function | number> = {\r\n    get(this: MapTypes, key: unknown) {\r\n      return get(this, key, true, true)\r\n    },\r\n    get size() {\r\n      return size(this as unknown as IterableCollections, true)\r\n    },\r\n    has(this: MapTypes, key: unknown) {\r\n      return has.call(this, key, true)\r\n    },\r\n    add: createReadonlyMethod(TriggerOpTypes.ADD),\r\n    set: createReadonlyMethod(TriggerOpTypes.SET),\r\n    delete: createReadonlyMethod(TriggerOpTypes.DELETE),\r\n    clear: createReadonlyMethod(TriggerOpTypes.CLEAR),\r\n    forEach: createForEach(true, true),\r\n  }\r\n\r\n  const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator]\r\n  iteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      false,\r\n    )\r\n    readonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      false,\r\n    )\r\n    shallowInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      false,\r\n      true,\r\n    )\r\n    shallowReadonlyInstrumentations[method as string] = createIterableMethod(\r\n      method,\r\n      true,\r\n      true,\r\n    )\r\n  })\r\n\r\n  return [\r\n    mutableInstrumentations,\r\n    readonlyInstrumentations,\r\n    shallowInstrumentations,\r\n    shallowReadonlyInstrumentations,\r\n  ]\r\n}\r\n\r\nconst [\r\n  mutableInstrumentations,\r\n  readonlyInstrumentations,\r\n  shallowInstrumentations,\r\n  shallowReadonlyInstrumentations,\r\n] = /* #__PURE__*/ createInstrumentations()\r\n\r\nfunction createInstrumentationGetter(isReadonly: boolean, shallow: boolean) {\r\n  const instrumentations = shallow\r\n    ? isReadonly\r\n      ? shallowReadonlyInstrumentations\r\n      : shallowInstrumentations\r\n    : isReadonly\r\n      ? readonlyInstrumentations\r\n      : mutableInstrumentations\r\n\r\n  return (\r\n    target: CollectionTypes,\r\n    key: string | symbol,\r\n    receiver: CollectionTypes,\r\n  ) => {\r\n    if (key === ReactiveFlags.IS_REACTIVE) {\r\n      return !isReadonly\r\n    } else if (key === ReactiveFlags.IS_READONLY) {\r\n      return isReadonly\r\n    } else if (key === ReactiveFlags.RAW) {\r\n      return target\r\n    }\r\n\r\n    return Reflect.get(\r\n      hasOwn(instrumentations, key) && key in target\r\n        ? instrumentations\r\n        : target,\r\n      key,\r\n      receiver,\r\n    )\r\n  }\r\n}\r\n\r\nexport const mutableCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, false),\r\n}\r\n\r\nexport const shallowCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(false, true),\r\n}\r\n\r\nexport const readonlyCollectionHandlers: ProxyHandler<CollectionTypes> = {\r\n  get: /*#__PURE__*/ createInstrumentationGetter(true, false),\r\n}\r\n\r\nexport const shallowReadonlyCollectionHandlers: ProxyHandler<CollectionTypes> =\r\n  {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true),\r\n  }\r\n\r\nfunction checkIdentityKeys(\r\n  target: CollectionTypes,\r\n  has: (key: unknown) => boolean,\r\n  key: unknown,\r\n) {\r\n  const rawKey = toRaw(key)\r\n  if (rawKey !== key && has.call(target, rawKey)) {\r\n    const type = toRawType(target)\r\n    console.warn(\r\n      `Reactive ${type} contains both the raw and reactive ` +\r\n        `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n        `which can lead to inconsistencies. ` +\r\n        `Avoid differentiating between the raw and reactive versions ` +\r\n        `of an object and only use the reactive version if possible.`,\r\n    )\r\n  }\r\n}\r\n","import { def, isObject, toRawType } from '@vue/shared'\r\nimport {\r\n  mutableHandlers,\r\n  readonlyHandlers,\r\n  shallowReactiveHandlers,\r\n  shallowReadonlyHandlers,\r\n} from './baseHandlers'\r\nimport {\r\n  mutableCollectionHandlers,\r\n  readonlyCollectionHandlers,\r\n  shallowCollectionHandlers,\r\n  shallowReadonlyCollectionHandlers,\r\n} from './collectionHandlers'\r\nimport type { RawSymbol, Ref, UnwrapRefSimple } from './ref'\r\nimport { ReactiveFlags } from './constants'\r\n\r\nexport interface Target {\r\n  [ReactiveFlags.SKIP]?: boolean\r\n  [ReactiveFlags.IS_REACTIVE]?: boolean\r\n  [ReactiveFlags.IS_READONLY]?: boolean\r\n  [ReactiveFlags.IS_SHALLOW]?: boolean\r\n  [ReactiveFlags.RAW]?: any\r\n}\r\n\r\nexport const reactiveMap = new WeakMap<Target, any>()\r\nexport const shallowReactiveMap = new WeakMap<Target, any>()\r\nexport const readonlyMap = new WeakMap<Target, any>()\r\nexport const shallowReadonlyMap = new WeakMap<Target, any>()\r\n\r\nenum TargetType {\r\n  INVALID = 0,\r\n  COMMON = 1,\r\n  COLLECTION = 2,\r\n}\r\n\r\nfunction targetTypeMap(rawType: string) {\r\n  switch (rawType) {\r\n    case 'Object':\r\n    case 'Array':\r\n      return TargetType.COMMON // 通用的类型\r\n    case 'Map':\r\n    case 'Set':\r\n    case 'WeakMap':\r\n    case 'WeakSet':\r\n      return TargetType.COLLECTION // set/map类型\r\n    default:\r\n      return TargetType.INVALID\r\n  }\r\n}\r\n\r\nfunction getTargetType(value: Target) {\r\n  // 有skip标志或者不能被扩展的就是无效的类型\r\n  return value[ReactiveFlags.SKIP] || !Object.isExtensible(value)\r\n    ? TargetType.INVALID\r\n    : targetTypeMap(toRawType(value))\r\n}\r\n\r\n// only unwrap nested ref\r\nexport type UnwrapNestedRefs<T> = T extends Ref ? T : UnwrapRefSimple<T>\r\n\r\n/**\r\n * Returns a reactive proxy of the object.\r\n *\r\n * The reactive conversion is \"deep\": it affects all nested properties. A\r\n * reactive object also deeply unwraps any properties that are refs while\r\n * maintaining reactivity.\r\n *\r\n * @example\r\n * ```js\r\n * const obj = reactive({ count: 0 })\r\n * ```\r\n *\r\n * @param target - The source object.\r\n * @see {@link https://vuejs.org/api/reactivity-core.html#reactive}\r\n */\r\nexport function reactive<T extends object>(target: T): UnwrapNestedRefs<T>\r\nexport function reactive(target: object) {\r\n  // if trying to observe a readonly proxy, return the readonly version.\r\n  // 如果创建的target本身就是reactive就直接返回\r\n  if (isReadonly(target)) {\r\n    return target\r\n  }\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    mutableHandlers,\r\n    mutableCollectionHandlers,\r\n    reactiveMap,\r\n  )\r\n}\r\n\r\nexport declare const ShallowReactiveMarker: unique symbol\r\n\r\nexport type ShallowReactive<T> = T & { [ShallowReactiveMarker]?: true }\r\n\r\n/**\r\n * Shallow version of {@link reactive()}.\r\n *\r\n * Unlike {@link reactive()}, there is no deep conversion: only root-level\r\n * properties are reactive for a shallow reactive object. Property values are\r\n * stored and exposed as-is - this also means properties with ref values will\r\n * not be automatically unwrapped.\r\n *\r\n * @example\r\n * ```js\r\n * const state = shallowReactive({\r\n *   foo: 1,\r\n *   nested: {\r\n *     bar: 2\r\n *   }\r\n * })\r\n *\r\n * // mutating state's own properties is reactive\r\n * state.foo++\r\n *\r\n * // ...but does not convert nested objects\r\n * isReactive(state.nested) // false\r\n *\r\n * // NOT reactive\r\n * state.nested.bar++\r\n * ```\r\n *\r\n * @param target - The source object.\r\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#shallowreactive}\r\n */\r\nexport function shallowReactive<T extends object>(\r\n  target: T,\r\n): ShallowReactive<T> {\r\n  return createReactiveObject(\r\n    target,\r\n    false,\r\n    shallowReactiveHandlers,\r\n    shallowCollectionHandlers,\r\n    shallowReactiveMap,\r\n  )\r\n}\r\n\r\ntype Primitive = string | number | boolean | bigint | symbol | undefined | null\r\ntype Builtin = Primitive | Function | Date | Error | RegExp\r\nexport type DeepReadonly<T> = T extends Builtin\r\n  ? T\r\n  : T extends Map<infer K, infer V>\r\n    ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n    : T extends ReadonlyMap<infer K, infer V>\r\n      ? ReadonlyMap<DeepReadonly<K>, DeepReadonly<V>>\r\n      : T extends WeakMap<infer K, infer V>\r\n        ? WeakMap<DeepReadonly<K>, DeepReadonly<V>>\r\n        : T extends Set<infer U>\r\n          ? ReadonlySet<DeepReadonly<U>>\r\n          : T extends ReadonlySet<infer U>\r\n            ? ReadonlySet<DeepReadonly<U>>\r\n            : T extends WeakSet<infer U>\r\n              ? WeakSet<DeepReadonly<U>>\r\n              : T extends Promise<infer U>\r\n                ? Promise<DeepReadonly<U>>\r\n                : T extends Ref<infer U>\r\n                  ? Readonly<Ref<DeepReadonly<U>>>\r\n                  : T extends {}\r\n                    ? { readonly [K in keyof T]: DeepReadonly<T[K]> }\r\n                    : Readonly<T>\r\n\r\n/**\r\n * Takes an object (reactive or plain) or a ref and returns a readonly proxy to\r\n * the original.\r\n *\r\n * A readonly proxy is deep: any nested property accessed will be readonly as\r\n * well. It also has the same ref-unwrapping behavior as {@link reactive()},\r\n * except the unwrapped values will also be made readonly.\r\n *\r\n * @example\r\n * ```js\r\n * const original = reactive({ count: 0 })\r\n *\r\n * const copy = readonly(original)\r\n *\r\n * watchEffect(() => {\r\n *   // works for reactivity tracking\r\n *   console.log(copy.count)\r\n * })\r\n *\r\n * // mutating original will trigger watchers relying on the copy\r\n * original.count++\r\n *\r\n * // mutating the copy will fail and result in a warning\r\n * copy.count++ // warning!\r\n * ```\r\n *\r\n * @param target - The source object.\r\n * @see {@link https://vuejs.org/api/reactivity-core.html#readonly}\r\n */\r\nexport function readonly<T extends object>(\r\n  target: T,\r\n): DeepReadonly<UnwrapNestedRefs<T>> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    readonlyHandlers,\r\n    readonlyCollectionHandlers,\r\n    readonlyMap,\r\n  )\r\n}\r\n\r\n/**\r\n * Shallow version of {@link readonly()}.\r\n *\r\n * Unlike {@link readonly()}, there is no deep conversion: only root-level\r\n * properties are made readonly. Property values are stored and exposed as-is -\r\n * this also means properties with ref values will not be automatically\r\n * unwrapped.\r\n *\r\n * @example\r\n * ```js\r\n * const state = shallowReadonly({\r\n *   foo: 1,\r\n *   nested: {\r\n *     bar: 2\r\n *   }\r\n * })\r\n *\r\n * // mutating state's own properties will fail\r\n * state.foo++\r\n *\r\n * // ...but works on nested objects\r\n * isReadonly(state.nested) // false\r\n *\r\n * // works\r\n * state.nested.bar++\r\n * ```\r\n *\r\n * @param target - The source object.\r\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#shallowreadonly}\r\n */\r\nexport function shallowReadonly<T extends object>(target: T): Readonly<T> {\r\n  return createReactiveObject(\r\n    target,\r\n    true,\r\n    shallowReadonlyHandlers,\r\n    shallowReadonlyCollectionHandlers,\r\n    shallowReadonlyMap,\r\n  )\r\n}\r\n\r\nfunction createReactiveObject(\r\n  target: Target,\r\n  isReadonly: boolean,\r\n  baseHandlers: ProxyHandler<any>,\r\n  collectionHandlers: ProxyHandler<any>,\r\n  proxyMap: WeakMap<Target, any>,\r\n) {\r\n  // 不是对象就直接返回\r\n  if (!isObject(target)) {\r\n    if (__DEV__) {\r\n      console.warn(`value cannot be made reactive: ${String(target)}`)\r\n    }\r\n    return target\r\n  }\r\n  // target is already a Proxy, return it.\r\n  // exception: calling readonly() on a reactive object\r\n  // 如果已经是一个代理对象，并且不是只读的响应式对象，直接返回\r\n  if (\r\n    target[ReactiveFlags.RAW] &&\r\n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE])\r\n  ) {\r\n    return target\r\n  }\r\n  // target already has corresponding Proxy\r\n  const existingProxy = proxyMap.get(target)\r\n  if (existingProxy) {\r\n    return existingProxy\r\n  }\r\n  // only specific value types can be observed.\r\n  const targetType = getTargetType(target)\r\n  if (targetType === TargetType.INVALID) {\r\n    return target\r\n  }\r\n  // 创建代理\r\n  // collectionHandlers重写的是set/map对象，数组和普通对象就是走baseHandlers\r\n  const proxy = new Proxy(\r\n    target,\r\n    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers,\r\n  )\r\n  // 创建的代理对象都放到proxyMap中记录\r\n  proxyMap.set(target, proxy)\r\n  return proxy\r\n}\r\n\r\n/**\r\n * Checks if an object is a proxy created by {@link reactive()} or\r\n * {@link shallowReactive()} (or {@link ref()} in some cases).\r\n *\r\n * @example\r\n * ```js\r\n * isReactive(reactive({}))            // => true\r\n * isReactive(readonly(reactive({})))  // => true\r\n * isReactive(ref({}).value)           // => true\r\n * isReactive(readonly(ref({})).value) // => true\r\n * isReactive(ref(true))               // => false\r\n * isReactive(shallowRef({}).value)    // => false\r\n * isReactive(shallowReactive({}))     // => true\r\n * ```\r\n *\r\n * @param value - The value to check.\r\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isreactive}\r\n */\r\nexport function isReactive(value: unknown): boolean {\r\n  if (isReadonly(value)) {\r\n    return isReactive((value as Target)[ReactiveFlags.RAW])\r\n  }\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_REACTIVE])\r\n}\r\n\r\n/**\r\n * Checks whether the passed value is a readonly object. The properties of a\r\n * readonly object can change, but they can't be assigned directly via the\r\n * passed object.\r\n *\r\n * The proxies created by {@link readonly()} and {@link shallowReadonly()} are\r\n * both considered readonly, as is a computed ref without a set function.\r\n *\r\n * @param value - The value to check.\r\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isreadonly}\r\n */\r\nexport function isReadonly(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_READONLY])\r\n}\r\n\r\nexport function isShallow(value: unknown): boolean {\r\n  return !!(value && (value as Target)[ReactiveFlags.IS_SHALLOW])\r\n}\r\n\r\n/**\r\n * Checks if an object is a proxy created by {@link reactive},\r\n * {@link readonly}, {@link shallowReactive} or {@link shallowReadonly()}.\r\n *\r\n * @param value - The value to check.\r\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isproxy}\r\n */\r\nexport function isProxy(value: unknown): boolean {\r\n  return isReactive(value) || isReadonly(value)\r\n}\r\n\r\n/**\r\n * Returns the raw, original object of a Vue-created proxy.\r\n *\r\n * `toRaw()` can return the original object from proxies created by\r\n * {@link reactive()}, {@link readonly()}, {@link shallowReactive()} or\r\n * {@link shallowReadonly()}.\r\n *\r\n * This is an escape hatch that can be used to temporarily read without\r\n * incurring proxy access / tracking overhead or write without triggering\r\n * changes. It is **not** recommended to hold a persistent reference to the\r\n * original object. Use with caution.\r\n *\r\n * @example\r\n * ```js\r\n * const foo = {}\r\n * const reactiveFoo = reactive(foo)\r\n *\r\n * console.log(toRaw(reactiveFoo) === foo) // true\r\n * ```\r\n *\r\n * @param observed - The object for which the \"raw\" value is requested.\r\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#toraw}\r\n */\r\nexport function toRaw<T>(observed: T): T {\r\n  const raw = observed && (observed as Target)[ReactiveFlags.RAW]\r\n  return raw ? toRaw(raw) : observed\r\n}\r\n\r\nexport type Raw<T> = T & { [RawSymbol]?: true }\r\n\r\n/**\r\n * Marks an object so that it will never be converted to a proxy. Returns the\r\n * object itself.\r\n *\r\n * @example\r\n * ```js\r\n * const foo = markRaw({})\r\n * console.log(isReactive(reactive(foo))) // false\r\n *\r\n * // also works when nested inside other reactive objects\r\n * const bar = reactive({ foo })\r\n * console.log(isReactive(bar.foo)) // false\r\n * ```\r\n *\r\n * **Warning:** `markRaw()` together with the shallow APIs such as\r\n * {@link shallowReactive()} allow you to selectively opt-out of the default\r\n * deep reactive/readonly conversion and embed raw, non-proxied objects in your\r\n * state graph.\r\n *\r\n * @param value - The object to be marked as \"raw\".\r\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#markraw}\r\n */\r\nexport function markRaw<T extends object>(value: T): Raw<T> {\r\n  def(value, ReactiveFlags.SKIP, true)\r\n  return value\r\n}\r\n\r\n/**\r\n * Returns a reactive proxy of the given value (if possible).\r\n *\r\n * If the given value is not an object, the original value itself is returned.\r\n *\r\n * @param value - The value for which a reactive proxy shall be created.\r\n */\r\nexport const toReactive = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? reactive(value) : value\r\n\r\n/**\r\n * Returns a readonly proxy of the given value (if possible).\r\n *\r\n * If the given value is not an object, the original value itself is returned.\r\n *\r\n * @param value - The value for which a readonly proxy shall be created.\r\n */\r\nexport const toReadonly = <T extends unknown>(value: T): T =>\r\n  isObject(value) ? readonly(value) : value\r\n","import { type DebuggerOptions, ReactiveEffect, scheduleEffects } from './effect'\r\nimport { type Ref, trackRefValue, triggerRefValue } from './ref'\r\nimport { NOOP, hasChanged, isFunction } from '@vue/shared'\r\nimport { toRaw } from './reactive'\r\nimport type { Dep } from './dep'\r\nimport { DirtyLevels, ReactiveFlags } from './constants'\r\n\r\ndeclare const ComputedRefSymbol: unique symbol\r\n\r\nexport interface ComputedRef<T = any> extends WritableComputedRef<T> {\r\n  readonly value: T\r\n  [ComputedRefSymbol]: true\r\n}\r\n\r\nexport interface WritableComputedRef<T> extends Ref<T> {\r\n  readonly effect: ReactiveEffect<T>\r\n}\r\n\r\nexport type ComputedGetter<T> = (oldValue?: T) => T\r\nexport type ComputedSetter<T> = (newValue: T) => void\r\n\r\nexport interface WritableComputedOptions<T> {\r\n  get: ComputedGetter<T>\r\n  set: ComputedSetter<T>\r\n}\r\n\r\nexport class ComputedRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private _value!: T\r\n  public readonly effect: ReactiveEffect<T>\r\n\r\n  public readonly __v_isRef = true\r\n  public readonly [ReactiveFlags.IS_READONLY]: boolean = false\r\n\r\n  public _cacheable: boolean\r\n\r\n  constructor(\r\n    getter: ComputedGetter<T>,\r\n    private readonly _setter: ComputedSetter<T>,\r\n    isReadonly: boolean,\r\n    isSSR: boolean,\r\n  ) {\r\n    this.effect = new ReactiveEffect(\r\n      () => getter(this._value),\r\n      () => triggerRefValue(this, DirtyLevels.MaybeDirty),\r\n      () => this.dep && scheduleEffects(this.dep),\r\n    )\r\n    this.effect.computed = this\r\n    this.effect.active = this._cacheable = !isSSR\r\n    this[ReactiveFlags.IS_READONLY] = isReadonly\r\n  }\r\n\r\n  get value() {\r\n    // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n    const self = toRaw(this)\r\n    if (!self._cacheable || self.effect.dirty) {\r\n      if (hasChanged(self._value, (self._value = self.effect.run()!))) {\r\n        triggerRefValue(self, DirtyLevels.Dirty)\r\n      }\r\n    }\r\n    trackRefValue(self)\r\n    if (self.effect._dirtyLevel >= DirtyLevels.MaybeDirty) {\r\n      triggerRefValue(self, DirtyLevels.MaybeDirty)\r\n    }\r\n    return self._value\r\n  }\r\n\r\n  set value(newValue: T) {\r\n    this._setter(newValue)\r\n  }\r\n\r\n  // #region polyfill _dirty for backward compatibility third party code for Vue <= 3.3.x\r\n  get _dirty() {\r\n    return this.effect.dirty\r\n  }\r\n\r\n  set _dirty(v) {\r\n    this.effect.dirty = v\r\n  }\r\n  // #endregion\r\n}\r\n\r\n/**\r\n * Takes a getter function and returns a readonly reactive ref object for the\r\n * returned value from the getter. It can also take an object with get and set\r\n * functions to create a writable ref object.\r\n *\r\n * @example\r\n * ```js\r\n * // Creating a readonly computed ref:\r\n * const count = ref(1)\r\n * const plusOne = computed(() => count.value + 1)\r\n *\r\n * console.log(plusOne.value) // 2\r\n * plusOne.value++ // error\r\n * ```\r\n *\r\n * ```js\r\n * // Creating a writable computed ref:\r\n * const count = ref(1)\r\n * const plusOne = computed({\r\n *   get: () => count.value + 1,\r\n *   set: (val) => {\r\n *     count.value = val - 1\r\n *   }\r\n * })\r\n *\r\n * plusOne.value = 1\r\n * console.log(count.value) // 0\r\n * ```\r\n *\r\n * @param getter - Function that produces the next value.\r\n * @param debugOptions - For debugging. See {@link https://vuejs.org/guide/extras/reactivity-in-depth.html#computed-debugging}.\r\n * @see {@link https://vuejs.org/api/reactivity-core.html#computed}\r\n */\r\nexport function computed<T>(\r\n  getter: ComputedGetter<T>,\r\n  debugOptions?: DebuggerOptions,\r\n): ComputedRef<T>\r\nexport function computed<T>(\r\n  options: WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions,\r\n): WritableComputedRef<T>\r\nexport function computed<T>(\r\n  getterOrOptions: ComputedGetter<T> | WritableComputedOptions<T>,\r\n  debugOptions?: DebuggerOptions,\r\n  isSSR = false,\r\n) {\r\n  let getter: ComputedGetter<T>\r\n  let setter: ComputedSetter<T>\r\n\r\n  const onlyGetter = isFunction(getterOrOptions)\r\n  if (onlyGetter) {\r\n    getter = getterOrOptions\r\n    setter = __DEV__\r\n      ? () => {\r\n          console.warn('Write operation failed: computed value is readonly')\r\n        }\r\n      : NOOP\r\n  } else {\r\n    getter = getterOrOptions.get\r\n    setter = getterOrOptions.set\r\n  }\r\n\r\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR)\r\n\r\n  if (__DEV__ && debugOptions && !isSSR) {\r\n    cRef.effect.onTrack = debugOptions.onTrack\r\n    cRef.effect.onTrigger = debugOptions.onTrigger\r\n  }\r\n\r\n  return cRef as any\r\n}\r\n","import type { ComputedRef } from './computed'\r\nimport {\r\n  activeEffect,\r\n  shouldTrack,\r\n  trackEffect,\r\n  triggerEffects,\r\n} from './effect'\r\nimport { DirtyLevels, TrackOpTypes, TriggerOpTypes } from './constants'\r\nimport {\r\n  type IfAny,\r\n  hasChanged,\r\n  isArray,\r\n  isFunction,\r\n  isObject,\r\n} from '@vue/shared'\r\nimport {\r\n  isProxy,\r\n  isReactive,\r\n  isReadonly,\r\n  isShallow,\r\n  toRaw,\r\n  toReactive,\r\n} from './reactive'\r\nimport type { ShallowReactiveMarker } from './reactive'\r\nimport { type Dep, createDep } from './dep'\r\nimport { ComputedRefImpl } from './computed'\r\nimport { getDepFromReactive } from './reactiveEffect'\r\n\r\ndeclare const RefSymbol: unique symbol\r\nexport declare const RawSymbol: unique symbol\r\n\r\nexport interface Ref<T = any> {\r\n  value: T\r\n  /**\r\n   * Type differentiator only.\r\n   * We need this to be in public d.ts but don't want it to show up in IDE\r\n   * autocomplete, so we use a private Symbol instead.\r\n   */\r\n  [RefSymbol]: true\r\n}\r\n\r\ntype RefBase<T> = {\r\n  dep?: Dep\r\n  value: T\r\n}\r\n\r\nexport function trackRefValue(ref: RefBase<any>) {\r\n  if (shouldTrack && activeEffect) {\r\n    ref = toRaw(ref)\r\n    trackEffect(\r\n      activeEffect,\r\n      ref.dep ||\r\n        (ref.dep = createDep(\r\n          () => (ref.dep = undefined),\r\n          ref instanceof ComputedRefImpl ? ref : undefined,\r\n        )),\r\n      __DEV__\r\n        ? {\r\n            target: ref,\r\n            type: TrackOpTypes.GET,\r\n            key: 'value',\r\n          }\r\n        : void 0,\r\n    )\r\n  }\r\n}\r\n\r\nexport function triggerRefValue(\r\n  ref: RefBase<any>,\r\n  dirtyLevel: DirtyLevels = DirtyLevels.Dirty,\r\n  newVal?: any,\r\n) {\r\n  ref = toRaw(ref)\r\n  const dep = ref.dep\r\n  if (dep) {\r\n    triggerEffects(\r\n      dep,\r\n      dirtyLevel,\r\n      __DEV__\r\n        ? {\r\n            target: ref,\r\n            type: TriggerOpTypes.SET,\r\n            key: 'value',\r\n            newValue: newVal,\r\n          }\r\n        : void 0,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a value is a ref object.\r\n *\r\n * @param r - The value to inspect.\r\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#isref}\r\n */\r\nexport function isRef<T>(r: Ref<T> | unknown): r is Ref<T>\r\nexport function isRef(r: any): r is Ref {\r\n  return !!(r && r.__v_isRef === true)\r\n}\r\n\r\n/**\r\n * Takes an inner value and returns a reactive and mutable ref object, which\r\n * has a single property `.value` that points to the inner value.\r\n *\r\n * @param value - The object to wrap in the ref.\r\n * @see {@link https://vuejs.org/api/reactivity-core.html#ref}\r\n */\r\nexport function ref<T>(value: T): Ref<UnwrapRef<T>>\r\nexport function ref<T = any>(): Ref<T | undefined>\r\nexport function ref(value?: unknown) {\r\n  return createRef(value, false)\r\n}\r\n\r\ndeclare const ShallowRefMarker: unique symbol\r\n\r\nexport type ShallowRef<T = any> = Ref<T> & { [ShallowRefMarker]?: true }\r\n\r\n/**\r\n * Shallow version of {@link ref()}.\r\n *\r\n * @example\r\n * ```js\r\n * const state = shallowRef({ count: 1 })\r\n *\r\n * // does NOT trigger change\r\n * state.value.count = 2\r\n *\r\n * // does trigger change\r\n * state.value = { count: 2 }\r\n * ```\r\n *\r\n * @param value - The \"inner value\" for the shallow ref.\r\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#shallowref}\r\n */\r\nexport function shallowRef<T>(\r\n  value: T,\r\n): Ref extends T\r\n  ? T extends Ref\r\n    ? IfAny<T, ShallowRef<T>, T>\r\n    : ShallowRef<T>\r\n  : ShallowRef<T>\r\nexport function shallowRef<T = any>(): ShallowRef<T | undefined>\r\nexport function shallowRef(value?: unknown) {\r\n  return createRef(value, true)\r\n}\r\n\r\nfunction createRef(rawValue: unknown, shallow: boolean) {\r\n  if (isRef(rawValue)) {\r\n    return rawValue\r\n  }\r\n  return new RefImpl(rawValue, shallow)\r\n}\r\n\r\nclass RefImpl<T> {\r\n  private _value: T\r\n  private _rawValue: T\r\n\r\n  public dep?: Dep = undefined\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(\r\n    value: T,\r\n    public readonly __v_isShallow: boolean,\r\n  ) {\r\n    this._rawValue = __v_isShallow ? value : toRaw(value)\r\n    this._value = __v_isShallow ? value : toReactive(value)\r\n  }\r\n\r\n  get value() {\r\n    trackRefValue(this)\r\n    return this._value\r\n  }\r\n\r\n  set value(newVal) {\r\n    const useDirectValue =\r\n      this.__v_isShallow || isShallow(newVal) || isReadonly(newVal)\r\n    newVal = useDirectValue ? newVal : toRaw(newVal)\r\n    if (hasChanged(newVal, this._rawValue)) {\r\n      this._rawValue = newVal\r\n      this._value = useDirectValue ? newVal : toReactive(newVal)\r\n      triggerRefValue(this, DirtyLevels.Dirty, newVal)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Force trigger effects that depends on a shallow ref. This is typically used\r\n * after making deep mutations to the inner value of a shallow ref.\r\n *\r\n * @example\r\n * ```js\r\n * const shallow = shallowRef({\r\n *   greet: 'Hello, world'\r\n * })\r\n *\r\n * // Logs \"Hello, world\" once for the first run-through\r\n * watchEffect(() => {\r\n *   console.log(shallow.value.greet)\r\n * })\r\n *\r\n * // This won't trigger the effect because the ref is shallow\r\n * shallow.value.greet = 'Hello, universe'\r\n *\r\n * // Logs \"Hello, universe\"\r\n * triggerRef(shallow)\r\n * ```\r\n *\r\n * @param ref - The ref whose tied effects shall be executed.\r\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#triggerref}\r\n */\r\nexport function triggerRef(ref: Ref) {\r\n  triggerRefValue(ref, DirtyLevels.Dirty, __DEV__ ? ref.value : void 0)\r\n}\r\n\r\nexport type MaybeRef<T = any> = T | Ref<T>\r\nexport type MaybeRefOrGetter<T = any> = MaybeRef<T> | (() => T)\r\n\r\n/**\r\n * Returns the inner value if the argument is a ref, otherwise return the\r\n * argument itself. This is a sugar function for\r\n * `val = isRef(val) ? val.value : val`.\r\n *\r\n * @example\r\n * ```js\r\n * function useFoo(x: number | Ref<number>) {\r\n *   const unwrapped = unref(x)\r\n *   // unwrapped is guaranteed to be number now\r\n * }\r\n * ```\r\n *\r\n * @param ref - Ref or plain value to be converted into the plain value.\r\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#unref}\r\n */\r\nexport function unref<T>(ref: MaybeRef<T> | ComputedRef<T>): T {\r\n  return isRef(ref) ? ref.value : ref\r\n}\r\n\r\n/**\r\n * Normalizes values / refs / getters to values.\r\n * This is similar to {@link unref()}, except that it also normalizes getters.\r\n * If the argument is a getter, it will be invoked and its return value will\r\n * be returned.\r\n *\r\n * @example\r\n * ```js\r\n * toValue(1) // 1\r\n * toValue(ref(1)) // 1\r\n * toValue(() => 1) // 1\r\n * ```\r\n *\r\n * @param source - A getter, an existing ref, or a non-function value.\r\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#tovalue}\r\n */\r\nexport function toValue<T>(source: MaybeRefOrGetter<T> | ComputedRef<T>): T {\r\n  return isFunction(source) ? source() : unref(source)\r\n}\r\n\r\nconst shallowUnwrapHandlers: ProxyHandler<any> = {\r\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n  set: (target, key, value, receiver) => {\r\n    const oldValue = target[key]\r\n    if (isRef(oldValue) && !isRef(value)) {\r\n      oldValue.value = value\r\n      return true\r\n    } else {\r\n      return Reflect.set(target, key, value, receiver)\r\n    }\r\n  },\r\n}\r\n\r\n/**\r\n * Returns a reactive proxy for the given object.\r\n *\r\n * If the object already is reactive, it's returned as-is. If not, a new\r\n * reactive proxy is created. Direct child properties that are refs are properly\r\n * handled, as well.\r\n *\r\n * @param objectWithRefs - Either an already-reactive object or a simple object\r\n * that contains refs.\r\n */\r\nexport function proxyRefs<T extends object>(\r\n  objectWithRefs: T,\r\n): ShallowUnwrapRef<T> {\r\n  return isReactive(objectWithRefs)\r\n    ? objectWithRefs\r\n    : new Proxy(objectWithRefs, shallowUnwrapHandlers)\r\n}\r\n\r\nexport type CustomRefFactory<T> = (\r\n  track: () => void,\r\n  trigger: () => void,\r\n) => {\r\n  get: () => T\r\n  set: (value: T) => void\r\n}\r\n\r\nclass CustomRefImpl<T> {\r\n  public dep?: Dep = undefined\r\n\r\n  private readonly _get: ReturnType<CustomRefFactory<T>>['get']\r\n  private readonly _set: ReturnType<CustomRefFactory<T>>['set']\r\n\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(factory: CustomRefFactory<T>) {\r\n    const { get, set } = factory(\r\n      () => trackRefValue(this),\r\n      () => triggerRefValue(this),\r\n    )\r\n    this._get = get\r\n    this._set = set\r\n  }\r\n\r\n  get value() {\r\n    return this._get()\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._set(newVal)\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a customized ref with explicit control over its dependency tracking\r\n * and updates triggering.\r\n *\r\n * @param factory - The function that receives the `track` and `trigger` callbacks.\r\n * @see {@link https://vuejs.org/api/reactivity-advanced.html#customref}\r\n */\r\nexport function customRef<T>(factory: CustomRefFactory<T>): Ref<T> {\r\n  return new CustomRefImpl(factory) as any\r\n}\r\n\r\nexport type ToRefs<T = any> = {\r\n  [K in keyof T]: ToRef<T[K]>\r\n}\r\n\r\n/**\r\n * Converts a reactive object to a plain object where each property of the\r\n * resulting object is a ref pointing to the corresponding property of the\r\n * original object. Each individual ref is created using {@link toRef()}.\r\n *\r\n * @param object - Reactive object to be made into an object of linked refs.\r\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#torefs}\r\n */\r\nexport function toRefs<T extends object>(object: T): ToRefs<T> {\r\n  if (__DEV__ && !isProxy(object)) {\r\n    console.warn(`toRefs() expects a reactive object but received a plain one.`)\r\n  }\r\n  const ret: any = isArray(object) ? new Array(object.length) : {}\r\n  for (const key in object) {\r\n    ret[key] = propertyToRef(object, key)\r\n  }\r\n  return ret\r\n}\r\n\r\nclass ObjectRefImpl<T extends object, K extends keyof T> {\r\n  public readonly __v_isRef = true\r\n\r\n  constructor(\r\n    private readonly _object: T,\r\n    private readonly _key: K,\r\n    private readonly _defaultValue?: T[K],\r\n  ) {}\r\n\r\n  get value() {\r\n    const val = this._object[this._key]\r\n    return val === undefined ? this._defaultValue! : val\r\n  }\r\n\r\n  set value(newVal) {\r\n    this._object[this._key] = newVal\r\n  }\r\n\r\n  get dep(): Dep | undefined {\r\n    return getDepFromReactive(toRaw(this._object), this._key)\r\n  }\r\n}\r\n\r\nclass GetterRefImpl<T> {\r\n  public readonly __v_isRef = true\r\n  public readonly __v_isReadonly = true\r\n  constructor(private readonly _getter: () => T) {}\r\n  get value() {\r\n    return this._getter()\r\n  }\r\n}\r\n\r\nexport type ToRef<T> = IfAny<T, Ref<T>, [T] extends [Ref] ? T : Ref<T>>\r\n\r\n/**\r\n * Used to normalize values / refs / getters into refs.\r\n *\r\n * @example\r\n * ```js\r\n * // returns existing refs as-is\r\n * toRef(existingRef)\r\n *\r\n * // creates a ref that calls the getter on .value access\r\n * toRef(() => props.foo)\r\n *\r\n * // creates normal refs from non-function values\r\n * // equivalent to ref(1)\r\n * toRef(1)\r\n * ```\r\n *\r\n * Can also be used to create a ref for a property on a source reactive object.\r\n * The created ref is synced with its source property: mutating the source\r\n * property will update the ref, and vice-versa.\r\n *\r\n * @example\r\n * ```js\r\n * const state = reactive({\r\n *   foo: 1,\r\n *   bar: 2\r\n * })\r\n *\r\n * const fooRef = toRef(state, 'foo')\r\n *\r\n * // mutating the ref updates the original\r\n * fooRef.value++\r\n * console.log(state.foo) // 2\r\n *\r\n * // mutating the original also updates the ref\r\n * state.foo++\r\n * console.log(fooRef.value) // 3\r\n * ```\r\n *\r\n * @param source - A getter, an existing ref, a non-function value, or a\r\n *                 reactive object to create a property ref from.\r\n * @param [key] - (optional) Name of the property in the reactive object.\r\n * @see {@link https://vuejs.org/api/reactivity-utilities.html#toref}\r\n */\r\nexport function toRef<T>(\r\n  value: T,\r\n): T extends () => infer R\r\n  ? Readonly<Ref<R>>\r\n  : T extends Ref\r\n    ? T\r\n    : Ref<UnwrapRef<T>>\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K,\r\n): ToRef<T[K]>\r\nexport function toRef<T extends object, K extends keyof T>(\r\n  object: T,\r\n  key: K,\r\n  defaultValue: T[K],\r\n): ToRef<Exclude<T[K], undefined>>\r\nexport function toRef(\r\n  source: Record<string, any> | MaybeRef,\r\n  key?: string,\r\n  defaultValue?: unknown,\r\n): Ref {\r\n  if (isRef(source)) {\r\n    return source\r\n  } else if (isFunction(source)) {\r\n    return new GetterRefImpl(source) as any\r\n  } else if (isObject(source) && arguments.length > 1) {\r\n    return propertyToRef(source, key!, defaultValue)\r\n  } else {\r\n    return ref(source)\r\n  }\r\n}\r\n\r\nfunction propertyToRef(\r\n  source: Record<string, any>,\r\n  key: string,\r\n  defaultValue?: unknown,\r\n) {\r\n  const val = source[key]\r\n  return isRef(val)\r\n    ? val\r\n    : (new ObjectRefImpl(source, key, defaultValue) as any)\r\n}\r\n\r\n// corner case when use narrows type\r\n// Ex. type RelativePath = string & { __brand: unknown }\r\n// RelativePath extends object -> true\r\ntype BaseTypes = string | number | boolean\r\n\r\n/**\r\n * This is a special exported interface for other packages to declare\r\n * additional types that should bail out for ref unwrapping. For example\r\n * \\@vue/runtime-dom can declare it like so in its d.ts:\r\n *\r\n * ``` ts\r\n * declare module '@vue/reactivity' {\r\n *   export interface RefUnwrapBailTypes {\r\n *     runtimeDOMBailTypes: Node | Window\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport interface RefUnwrapBailTypes {}\r\n\r\nexport type ShallowUnwrapRef<T> = {\r\n  [K in keyof T]: DistrubuteRef<T[K]>\r\n}\r\n\r\ntype DistrubuteRef<T> = T extends Ref<infer V> ? V : T\r\n\r\nexport type UnwrapRef<T> =\r\n  T extends ShallowRef<infer V>\r\n    ? V\r\n    : T extends Ref<infer V>\r\n      ? UnwrapRefSimple<V>\r\n      : UnwrapRefSimple<T>\r\n\r\nexport type UnwrapRefSimple<T> = T extends\r\n  | Function\r\n  | BaseTypes\r\n  | Ref\r\n  | RefUnwrapBailTypes[keyof RefUnwrapBailTypes]\r\n  | { [RawSymbol]?: true }\r\n  ? T\r\n  : T extends Map<infer K, infer V>\r\n    ? Map<K, UnwrapRefSimple<V>> & UnwrapRef<Omit<T, keyof Map<any, any>>>\r\n    : T extends WeakMap<infer K, infer V>\r\n      ? WeakMap<K, UnwrapRefSimple<V>> &\r\n          UnwrapRef<Omit<T, keyof WeakMap<any, any>>>\r\n      : T extends Set<infer V>\r\n        ? Set<UnwrapRefSimple<V>> & UnwrapRef<Omit<T, keyof Set<any>>>\r\n        : T extends WeakSet<infer V>\r\n          ? WeakSet<UnwrapRefSimple<V>> & UnwrapRef<Omit<T, keyof WeakSet<any>>>\r\n          : T extends ReadonlyArray<any>\r\n            ? { [K in keyof T]: UnwrapRefSimple<T[K]> }\r\n            : T extends object & { [ShallowReactiveMarker]?: never }\r\n              ? {\r\n                  [P in keyof T]: P extends symbol ? T[P] : UnwrapRef<T[P]>\r\n                }\r\n              : T\r\n","import type { VNode } from './vnode'\r\nimport type { ComponentInternalInstance } from './component'\r\nimport { popWarningContext, pushWarningContext, warn } from './warning'\r\nimport { isFunction, isPromise } from '@vue/shared'\r\nimport { LifecycleHooks } from './enums'\r\n\r\n// contexts where user provided function may be executed, in addition to\r\n// lifecycle hooks.\r\nexport enum ErrorCodes {\r\n  SETUP_FUNCTION,\r\n  RENDER_FUNCTION,\r\n  WATCH_GETTER,\r\n  WATCH_CALLBACK,\r\n  WATCH_CLEANUP,\r\n  NATIVE_EVENT_HANDLER,\r\n  COMPONENT_EVENT_HANDLER,\r\n  VNODE_HOOK,\r\n  DIRECTIVE_HOOK,\r\n  TRANSITION_HOOK,\r\n  APP_ERROR_HANDLER,\r\n  APP_WARN_HANDLER,\r\n  FUNCTION_REF,\r\n  ASYNC_COMPONENT_LOADER,\r\n  SCHEDULER,\r\n}\r\n\r\nexport const ErrorTypeStrings: Record<LifecycleHooks | ErrorCodes, string> = {\r\n  [LifecycleHooks.SERVER_PREFETCH]: 'serverPrefetch hook',\r\n  [LifecycleHooks.BEFORE_CREATE]: 'beforeCreate hook',\r\n  [LifecycleHooks.CREATED]: 'created hook',\r\n  [LifecycleHooks.BEFORE_MOUNT]: 'beforeMount hook',\r\n  [LifecycleHooks.MOUNTED]: 'mounted hook',\r\n  [LifecycleHooks.BEFORE_UPDATE]: 'beforeUpdate hook',\r\n  [LifecycleHooks.UPDATED]: 'updated',\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: 'beforeUnmount hook',\r\n  [LifecycleHooks.UNMOUNTED]: 'unmounted hook',\r\n  [LifecycleHooks.ACTIVATED]: 'activated hook',\r\n  [LifecycleHooks.DEACTIVATED]: 'deactivated hook',\r\n  [LifecycleHooks.ERROR_CAPTURED]: 'errorCaptured hook',\r\n  [LifecycleHooks.RENDER_TRACKED]: 'renderTracked hook',\r\n  [LifecycleHooks.RENDER_TRIGGERED]: 'renderTriggered hook',\r\n  [ErrorCodes.SETUP_FUNCTION]: 'setup function',\r\n  [ErrorCodes.RENDER_FUNCTION]: 'render function',\r\n  [ErrorCodes.WATCH_GETTER]: 'watcher getter',\r\n  [ErrorCodes.WATCH_CALLBACK]: 'watcher callback',\r\n  [ErrorCodes.WATCH_CLEANUP]: 'watcher cleanup function',\r\n  [ErrorCodes.NATIVE_EVENT_HANDLER]: 'native event handler',\r\n  [ErrorCodes.COMPONENT_EVENT_HANDLER]: 'component event handler',\r\n  [ErrorCodes.VNODE_HOOK]: 'vnode hook',\r\n  [ErrorCodes.DIRECTIVE_HOOK]: 'directive hook',\r\n  [ErrorCodes.TRANSITION_HOOK]: 'transition hook',\r\n  [ErrorCodes.APP_ERROR_HANDLER]: 'app errorHandler',\r\n  [ErrorCodes.APP_WARN_HANDLER]: 'app warnHandler',\r\n  [ErrorCodes.FUNCTION_REF]: 'ref function',\r\n  [ErrorCodes.ASYNC_COMPONENT_LOADER]: 'async component loader',\r\n  [ErrorCodes.SCHEDULER]:\r\n    'scheduler flush. This is likely a Vue internals bug. ' +\r\n    'Please open an issue at https://github.com/vuejs/core .',\r\n}\r\n\r\nexport type ErrorTypes = LifecycleHooks | ErrorCodes\r\n\r\nexport function callWithErrorHandling(\r\n  fn: Function,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[],\r\n) {\r\n  let res\r\n  try {\r\n    res = args ? fn(...args) : fn()\r\n  } catch (err) {\r\n    handleError(err, instance, type)\r\n  }\r\n  return res\r\n}\r\n\r\nexport function callWithAsyncErrorHandling(\r\n  fn: Function | Function[],\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  args?: unknown[],\r\n): any[] {\r\n  if (isFunction(fn)) {\r\n    const res = callWithErrorHandling(fn, instance, type, args)\r\n    if (res && isPromise(res)) {\r\n      res.catch(err => {\r\n        handleError(err, instance, type)\r\n      })\r\n    }\r\n    return res\r\n  }\r\n\r\n  const values = []\r\n  for (let i = 0; i < fn.length; i++) {\r\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args))\r\n  }\r\n  return values\r\n}\r\n\r\nexport function handleError(\r\n  err: unknown,\r\n  instance: ComponentInternalInstance | null,\r\n  type: ErrorTypes,\r\n  throwInDev = true,\r\n) {\r\n  const contextVNode = instance ? instance.vnode : null\r\n  if (instance) {\r\n    let cur = instance.parent\r\n    // the exposed instance is the render proxy to keep it consistent with 2.x\r\n    const exposedInstance = instance.proxy\r\n    // in production the hook receives only the error code\r\n    const errorInfo = __DEV__\r\n      ? ErrorTypeStrings[type]\r\n      : `https://vuejs.org/error-reference/#runtime-${type}`\r\n    while (cur) {\r\n      const errorCapturedHooks = cur.ec\r\n      if (errorCapturedHooks) {\r\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n          if (\r\n            errorCapturedHooks[i](err, exposedInstance, errorInfo) === false\r\n          ) {\r\n            return\r\n          }\r\n        }\r\n      }\r\n      cur = cur.parent\r\n    }\r\n    // app-level handling\r\n    const appErrorHandler = instance.appContext.config.errorHandler\r\n    if (appErrorHandler) {\r\n      callWithErrorHandling(\r\n        appErrorHandler,\r\n        null,\r\n        ErrorCodes.APP_ERROR_HANDLER,\r\n        [err, exposedInstance, errorInfo],\r\n      )\r\n      return\r\n    }\r\n  }\r\n  logError(err, type, contextVNode, throwInDev)\r\n}\r\n\r\nfunction logError(\r\n  err: unknown,\r\n  type: ErrorTypes,\r\n  contextVNode: VNode | null,\r\n  throwInDev = true,\r\n) {\r\n  if (__DEV__) {\r\n    const info = ErrorTypeStrings[type]\r\n    if (contextVNode) {\r\n      pushWarningContext(contextVNode)\r\n    }\r\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`)\r\n    if (contextVNode) {\r\n      popWarningContext()\r\n    }\r\n    // crash in dev by default so it's more noticeable\r\n    if (throwInDev) {\r\n      throw err\r\n    } else if (!__TEST__) {\r\n      console.error(err)\r\n    }\r\n  } else {\r\n    // recover in prod to reduce the impact on end-user\r\n    console.error(err)\r\n  }\r\n}\r\n","import { ErrorCodes, callWithErrorHandling, handleError } from './errorHandling'\r\nimport { type Awaited, NOOP, isArray } from '@vue/shared'\r\nimport { type ComponentInternalInstance, getComponentName } from './component'\r\n\r\nexport interface SchedulerJob extends Function {\r\n  id?: number\r\n  pre?: boolean\r\n  active?: boolean\r\n  computed?: boolean\r\n  /**\r\n   * Indicates whether the effect is allowed to recursively trigger itself\r\n   * when managed by the scheduler.\r\n   *\r\n   * By default, a job cannot trigger itself because some built-in method calls,\r\n   * e.g. Array.prototype.push actually performs reads as well (#1740) which\r\n   * can lead to confusing infinite loops.\r\n   * The allowed cases are component update functions and watch callbacks.\r\n   * Component update functions may update child component props, which in turn\r\n   * trigger flush: \"pre\" watch callbacks that mutates state that the parent\r\n   * relies on (#1801). Watch callbacks doesn't track its dependencies so if it\r\n   * triggers itself again, it's likely intentional and it is the user's\r\n   * responsibility to perform recursive state mutation that eventually\r\n   * stabilizes (#1727).\r\n   */\r\n  allowRecurse?: boolean\r\n  /**\r\n   * Attached by renderer.ts when setting up a component's render effect\r\n   * Used to obtain component information when reporting max recursive updates.\r\n   * dev only.\r\n   */\r\n  ownerInstance?: ComponentInternalInstance\r\n}\r\n\r\nexport type SchedulerJobs = SchedulerJob | SchedulerJob[]\r\n\r\nlet isFlushing = false\r\nlet isFlushPending = false\r\n\r\nconst queue: SchedulerJob[] = []\r\nlet flushIndex = 0\r\n\r\nconst pendingPostFlushCbs: SchedulerJob[] = []\r\nlet activePostFlushCbs: SchedulerJob[] | null = null\r\nlet postFlushIndex = 0\r\n\r\nconst resolvedPromise = /*#__PURE__*/ Promise.resolve() as Promise<any>\r\nlet currentFlushPromise: Promise<void> | null = null\r\n\r\nconst RECURSION_LIMIT = 100\r\ntype CountMap = Map<SchedulerJob, number>\r\n\r\nexport function nextTick<T = void, R = void>(\r\n  this: T,\r\n  fn?: (this: T) => R,\r\n): Promise<Awaited<R>> {\r\n  const p = currentFlushPromise || resolvedPromise\r\n  return fn ? p.then(this ? fn.bind(this) : fn) : p\r\n}\r\n\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id: number) {\r\n  // the start index should be `flushIndex + 1`\r\n  let start = flushIndex + 1\r\n  let end = queue.length\r\n\r\n  while (start < end) {\r\n    const middle = (start + end) >>> 1\r\n    const middleJob = queue[middle]\r\n    const middleJobId = getId(middleJob)\r\n    if (middleJobId < id || (middleJobId === id && middleJob.pre)) {\r\n      start = middle + 1\r\n    } else {\r\n      end = middle\r\n    }\r\n  }\r\n\r\n  return start\r\n}\r\n\r\nexport function queueJob(job: SchedulerJob) {\r\n  // the dedupe search uses the startIndex argument of Array.includes()\r\n  // by default the search index includes the current job that is being run\r\n  // so it cannot recursively trigger itself again.\r\n  // if the job is a watch() callback, the search will start with a +1 index to\r\n  // allow it recursively trigger itself - it is the user's responsibility to\r\n  // ensure it doesn't end up in an infinite loop.\r\n  if (\r\n    !queue.length ||\r\n    !queue.includes(\r\n      job,\r\n      isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex,\r\n    )\r\n  ) {\r\n    if (job.id == null) {\r\n      queue.push(job)\r\n    } else {\r\n      queue.splice(findInsertionIndex(job.id), 0, job)\r\n    }\r\n    queueFlush()\r\n  }\r\n}\r\n\r\nfunction queueFlush() {\r\n  if (!isFlushing && !isFlushPending) {\r\n    isFlushPending = true\r\n    currentFlushPromise = resolvedPromise.then(flushJobs)\r\n  }\r\n}\r\n\r\nexport function invalidateJob(job: SchedulerJob) {\r\n  const i = queue.indexOf(job)\r\n  if (i > flushIndex) {\r\n    queue.splice(i, 1)\r\n  }\r\n}\r\n\r\nexport function queuePostFlushCb(cb: SchedulerJobs) {\r\n  if (!isArray(cb)) {\r\n    if (\r\n      !activePostFlushCbs ||\r\n      !activePostFlushCbs.includes(\r\n        cb,\r\n        cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex,\r\n      )\r\n    ) {\r\n      pendingPostFlushCbs.push(cb)\r\n    }\r\n  } else {\r\n    // if cb is an array, it is a component lifecycle hook which can only be\r\n    // triggered by a job, which is already deduped in the main queue, so\r\n    // we can skip duplicate check here to improve perf\r\n    pendingPostFlushCbs.push(...cb)\r\n  }\r\n  queueFlush()\r\n}\r\n\r\nexport function flushPreFlushCbs(\r\n  instance?: ComponentInternalInstance,\r\n  seen?: CountMap,\r\n  // if currently flushing, skip the current job itself\r\n  i = isFlushing ? flushIndex + 1 : 0,\r\n) {\r\n  if (__DEV__) {\r\n    seen = seen || new Map()\r\n  }\r\n  for (; i < queue.length; i++) {\r\n    const cb = queue[i]\r\n    if (cb && cb.pre) {\r\n      if (instance && cb.id !== instance.uid) {\r\n        continue\r\n      }\r\n      if (__DEV__ && checkRecursiveUpdates(seen!, cb)) {\r\n        continue\r\n      }\r\n      queue.splice(i, 1)\r\n      i--\r\n      cb()\r\n    }\r\n  }\r\n}\r\n\r\nexport function flushPostFlushCbs(seen?: CountMap) {\r\n  if (pendingPostFlushCbs.length) {\r\n    const deduped = [...new Set(pendingPostFlushCbs)].sort(\r\n      (a, b) => getId(a) - getId(b),\r\n    )\r\n    pendingPostFlushCbs.length = 0\r\n\r\n    // #1947 already has active queue, nested flushPostFlushCbs call\r\n    if (activePostFlushCbs) {\r\n      activePostFlushCbs.push(...deduped)\r\n      return\r\n    }\r\n\r\n    activePostFlushCbs = deduped\r\n    if (__DEV__) {\r\n      seen = seen || new Map()\r\n    }\r\n\r\n    for (\r\n      postFlushIndex = 0;\r\n      postFlushIndex < activePostFlushCbs.length;\r\n      postFlushIndex++\r\n    ) {\r\n      if (\r\n        __DEV__ &&\r\n        checkRecursiveUpdates(seen!, activePostFlushCbs[postFlushIndex])\r\n      ) {\r\n        continue\r\n      }\r\n      activePostFlushCbs[postFlushIndex]()\r\n    }\r\n    activePostFlushCbs = null\r\n    postFlushIndex = 0\r\n  }\r\n}\r\n\r\nconst getId = (job: SchedulerJob): number =>\r\n  job.id == null ? Infinity : job.id\r\n\r\nconst comparator = (a: SchedulerJob, b: SchedulerJob): number => {\r\n  const diff = getId(a) - getId(b)\r\n  if (diff === 0) {\r\n    if (a.pre && !b.pre) return -1\r\n    if (b.pre && !a.pre) return 1\r\n  }\r\n  return diff\r\n}\r\n\r\nfunction flushJobs(seen?: CountMap) {\r\n  isFlushPending = false\r\n  isFlushing = true\r\n  if (__DEV__) {\r\n    seen = seen || new Map()\r\n  }\r\n\r\n  // Sort queue before flush.\r\n  // This ensures that:\r\n  // 1. Components are updated from parent to child. (because parent is always\r\n  //    created before the child so its render effect will have smaller\r\n  //    priority number)\r\n  // 2. If a component is unmounted during a parent component's update,\r\n  //    its update can be skipped.\r\n  queue.sort(comparator)\r\n\r\n  // conditional usage of checkRecursiveUpdate must be determined out of\r\n  // try ... catch block since Rollup by default de-optimizes treeshaking\r\n  // inside try-catch. This can leave all warning code unshaked. Although\r\n  // they would get eventually shaken by a minifier like terser, some minifiers\r\n  // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n  const check = __DEV__\r\n    ? (job: SchedulerJob) => checkRecursiveUpdates(seen!, job)\r\n    : NOOP\r\n\r\n  try {\r\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n      const job = queue[flushIndex]\r\n      if (job && job.active !== false) {\r\n        if (__DEV__ && check(job)) {\r\n          continue\r\n        }\r\n        callWithErrorHandling(job, null, ErrorCodes.SCHEDULER)\r\n      }\r\n    }\r\n  } finally {\r\n    flushIndex = 0\r\n    queue.length = 0\r\n\r\n    flushPostFlushCbs(seen)\r\n\r\n    isFlushing = false\r\n    currentFlushPromise = null\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (queue.length || pendingPostFlushCbs.length) {\r\n      flushJobs(seen)\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkRecursiveUpdates(seen: CountMap, fn: SchedulerJob) {\r\n  if (!seen.has(fn)) {\r\n    seen.set(fn, 1)\r\n  } else {\r\n    const count = seen.get(fn)!\r\n    if (count > RECURSION_LIMIT) {\r\n      const instance = fn.ownerInstance\r\n      const componentName = instance && getComponentName(instance.type)\r\n      handleError(\r\n        `Maximum recursive updates exceeded${\r\n          componentName ? ` in component <${componentName}>` : ``\r\n        }. ` +\r\n          `This means you have a reactive effect that is mutating its own ` +\r\n          `dependencies and thus recursively triggering itself. Possible sources ` +\r\n          `include component template, render function, updated hook or ` +\r\n          `watcher source function.`,\r\n        null,\r\n        ErrorCodes.APP_ERROR_HANDLER,\r\n      )\r\n      return true\r\n    } else {\r\n      seen.set(fn, count + 1)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  EMPTY_OBJ,\r\n  type UnionToIntersection,\r\n  camelize,\r\n  extend,\r\n  hasOwn,\r\n  hyphenate,\r\n  isArray,\r\n  isFunction,\r\n  isObject,\r\n  isOn,\r\n  isString,\r\n  looseToNumber,\r\n  toHandlerKey,\r\n} from '@vue/shared'\r\nimport {\r\n  type ComponentInternalInstance,\r\n  type ComponentOptions,\r\n  type ConcreteComponent,\r\n  formatComponentName,\r\n} from './component'\r\nimport { ErrorCodes, callWithAsyncErrorHandling } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { devtoolsComponentEmit } from './devtools'\r\nimport type { AppContext } from './apiCreateApp'\r\nimport { emit as compatInstanceEmit } from './compat/instanceEventEmitter'\r\nimport {\r\n  compatModelEmit,\r\n  compatModelEventPrefix,\r\n} from './compat/componentVModel'\r\n\r\nexport type ObjectEmitsOptions = Record<\r\n  string,\r\n  ((...args: any[]) => any) | null\r\n>\r\n\r\nexport type EmitsOptions = ObjectEmitsOptions | string[]\r\n\r\nexport type EmitsToProps<T extends EmitsOptions> = T extends string[]\r\n  ? {\r\n      [K in `on${Capitalize<T[number]>}`]?: (...args: any[]) => any\r\n    }\r\n  : T extends ObjectEmitsOptions\r\n    ? {\r\n        [K in `on${Capitalize<string & keyof T>}`]?: K extends `on${infer C}`\r\n          ? (\r\n              ...args: T[Uncapitalize<C>] extends (...args: infer P) => any\r\n                ? P\r\n                : T[Uncapitalize<C>] extends null\r\n                  ? any[]\r\n                  : never\r\n            ) => any\r\n          : never\r\n      }\r\n    : {}\r\n\r\nexport type ShortEmitsToObject<E> =\r\n  E extends Record<string, any[]>\r\n    ? {\r\n        [K in keyof E]: (...args: E[K]) => any\r\n      }\r\n    : E\r\n\r\nexport type EmitFn<\r\n  Options = ObjectEmitsOptions,\r\n  Event extends keyof Options = keyof Options,\r\n> =\r\n  Options extends Array<infer V>\r\n    ? (event: V, ...args: any[]) => void\r\n    : {} extends Options // if the emit is empty object (usually the default value for emit) should be converted to function\r\n      ? (event: string, ...args: any[]) => void\r\n      : UnionToIntersection<\r\n          {\r\n            [key in Event]: Options[key] extends (...args: infer Args) => any\r\n              ? (event: key, ...args: Args) => void\r\n              : Options[key] extends any[]\r\n                ? (event: key, ...args: Options[key]) => void\r\n                : (event: key, ...args: any[]) => void\r\n          }[Event]\r\n        >\r\n\r\nexport function emit(\r\n  instance: ComponentInternalInstance,\r\n  event: string,\r\n  ...rawArgs: any[]\r\n) {\r\n  if (instance.isUnmounted) return\r\n  const props = instance.vnode.props || EMPTY_OBJ\r\n\r\n  if (__DEV__) {\r\n    const {\r\n      emitsOptions,\r\n      propsOptions: [propsOptions],\r\n    } = instance\r\n    if (emitsOptions) {\r\n      if (\r\n        !(event in emitsOptions) &&\r\n        !(\r\n          __COMPAT__ &&\r\n          (event.startsWith('hook:') ||\r\n            event.startsWith(compatModelEventPrefix))\r\n        )\r\n      ) {\r\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n          warn(\r\n            `Component emitted event \"${event}\" but it is neither declared in ` +\r\n              `the emits option nor as an \"${toHandlerKey(event)}\" prop.`,\r\n          )\r\n        }\r\n      } else {\r\n        const validator = emitsOptions[event]\r\n        if (isFunction(validator)) {\r\n          const isValid = validator(...rawArgs)\r\n          if (!isValid) {\r\n            warn(\r\n              `Invalid event arguments: event validation failed for event \"${event}\".`,\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let args = rawArgs\r\n  const isModelListener = event.startsWith('update:')\r\n\r\n  // for v-model update:xxx events, apply modifiers on args\r\n  const modelArg = isModelListener && event.slice(7)\r\n  if (modelArg && modelArg in props) {\r\n    const modifiersKey = `${\r\n      modelArg === 'modelValue' ? 'model' : modelArg\r\n    }Modifiers`\r\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ\r\n    if (trim) {\r\n      args = rawArgs.map(a => (isString(a) ? a.trim() : a))\r\n    }\r\n    if (number) {\r\n      args = rawArgs.map(looseToNumber)\r\n    }\r\n  }\r\n\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    devtoolsComponentEmit(instance, event, args)\r\n  }\r\n\r\n  if (__DEV__) {\r\n    const lowerCaseEvent = event.toLowerCase()\r\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n      warn(\r\n        `Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n          `${formatComponentName(\r\n            instance,\r\n            instance.type,\r\n          )} but the handler is registered for \"${event}\". ` +\r\n          `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n          `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n          `You should probably use \"${hyphenate(\r\n            event,\r\n          )}\" instead of \"${event}\".`,\r\n      )\r\n    }\r\n  }\r\n\r\n  let handlerName\r\n  let handler =\r\n    props[(handlerName = toHandlerKey(event))] ||\r\n    // also try camelCase event handler (#2249)\r\n    props[(handlerName = toHandlerKey(camelize(event)))]\r\n  // for v-model update:xxx events, also trigger kebab-case equivalent\r\n  // for props passed via kebab-case\r\n  if (!handler && isModelListener) {\r\n    handler = props[(handlerName = toHandlerKey(hyphenate(event)))]\r\n  }\r\n\r\n  if (handler) {\r\n    callWithAsyncErrorHandling(\r\n      handler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args,\r\n    )\r\n  }\r\n\r\n  const onceHandler = props[handlerName + `Once`]\r\n  if (onceHandler) {\r\n    if (!instance.emitted) {\r\n      instance.emitted = {}\r\n    } else if (instance.emitted[handlerName]) {\r\n      return\r\n    }\r\n    instance.emitted[handlerName] = true\r\n    callWithAsyncErrorHandling(\r\n      onceHandler,\r\n      instance,\r\n      ErrorCodes.COMPONENT_EVENT_HANDLER,\r\n      args,\r\n    )\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    compatModelEmit(instance, event, args)\r\n    return compatInstanceEmit(instance, event, args)\r\n  }\r\n}\r\n\r\nexport function normalizeEmitsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false,\r\n): ObjectEmitsOptions | null {\r\n  const cache = appContext.emitsCache\r\n  const cached = cache.get(comp)\r\n  if (cached !== undefined) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.emits\r\n  let normalized: ObjectEmitsOptions = {}\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendEmits = (raw: ComponentOptions) => {\r\n      const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true)\r\n      if (normalizedFromExtend) {\r\n        hasExtends = true\r\n        extend(normalized, normalizedFromExtend)\r\n      }\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendEmits)\r\n    }\r\n    if (comp.extends) {\r\n      extendEmits(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendEmits)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    if (isObject(comp)) {\r\n      cache.set(comp, null)\r\n    }\r\n    return null\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    raw.forEach(key => (normalized[key] = null))\r\n  } else {\r\n    extend(normalized, raw)\r\n  }\r\n\r\n  if (isObject(comp)) {\r\n    cache.set(comp, normalized)\r\n  }\r\n  return normalized\r\n}\r\n\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nexport function isEmitListener(\r\n  options: ObjectEmitsOptions | null,\r\n  key: string,\r\n): boolean {\r\n  if (!options || !isOn(key)) {\r\n    return false\r\n  }\r\n\r\n  if (__COMPAT__ && key.startsWith(compatModelEventPrefix)) {\r\n    return true\r\n  }\r\n\r\n  key = key.slice(2).replace(/Once$/, '')\r\n  return (\r\n    hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n    hasOwn(options, hyphenate(key)) ||\r\n    hasOwn(options, key)\r\n  )\r\n}\r\n","import type { ComponentInternalInstance } from './component'\r\nimport { devtoolsComponentUpdated } from './devtools'\r\nimport { setBlockTracking } from './vnode'\r\n\r\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nexport let currentRenderingInstance: ComponentInternalInstance | null = null\r\nexport let currentScopeId: string | null = null\r\n\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nexport function setCurrentRenderingInstance(\r\n  instance: ComponentInternalInstance | null,\r\n): ComponentInternalInstance | null {\r\n  const prev = currentRenderingInstance\r\n  currentRenderingInstance = instance\r\n  currentScopeId = (instance && instance.type.__scopeId) || null\r\n  // v2 pre-compiled components uses _scopeId instead of __scopeId\r\n  if (__COMPAT__ && !currentScopeId) {\r\n    currentScopeId = (instance && (instance.type as any)._scopeId) || null\r\n  }\r\n  return prev\r\n}\r\n\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nexport function pushScopeId(id: string | null) {\r\n  currentScopeId = id\r\n}\r\n\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nexport function popScopeId() {\r\n  currentScopeId = null\r\n}\r\n\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nexport const withScopeId = (_id: string) => withCtx\r\n\r\nexport type ContextualRenderFn = {\r\n  (...args: any[]): any\r\n  _n: boolean /* already normalized */\r\n  _c: boolean /* compiled */\r\n  _d: boolean /* disableTracking */\r\n  _ns: boolean /* nonScoped */\r\n}\r\n\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nexport function withCtx(\r\n  fn: Function,\r\n  ctx: ComponentInternalInstance | null = currentRenderingInstance,\r\n  isNonScopedSlot?: boolean, // __COMPAT__ only\r\n) {\r\n  if (!ctx) return fn\r\n\r\n  // already normalized\r\n  if ((fn as ContextualRenderFn)._n) {\r\n    return fn\r\n  }\r\n\r\n  const renderFnWithContext: ContextualRenderFn = (...args: any[]) => {\r\n    // If a user calls a compiled slot inside a template expression (#1745), it\r\n    // can mess up block tracking, so by default we disable block tracking and\r\n    // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n    // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n    // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n    if (renderFnWithContext._d) {\r\n      setBlockTracking(-1)\r\n    }\r\n    const prevInstance = setCurrentRenderingInstance(ctx)\r\n    let res\r\n    try {\r\n      res = fn(...args)\r\n    } finally {\r\n      setCurrentRenderingInstance(prevInstance)\r\n      if (renderFnWithContext._d) {\r\n        setBlockTracking(1)\r\n      }\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentUpdated(ctx)\r\n    }\r\n\r\n    return res\r\n  }\r\n\r\n  // mark normalized to avoid duplicated wrapping\r\n  renderFnWithContext._n = true\r\n  // mark this as compiled by default\r\n  // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n  // rendering flag.\r\n  renderFnWithContext._c = true\r\n  // disable block tracking by default\r\n  renderFnWithContext._d = true\r\n  // compat build only flag to distinguish scoped slots from non-scoped ones\r\n  if (__COMPAT__ && isNonScopedSlot) {\r\n    renderFnWithContext._ns = true\r\n  }\r\n  return renderFnWithContext\r\n}\r\n","import {\r\n  type ComponentInternalInstance,\r\n  type Data,\r\n  type FunctionalComponent,\r\n  getComponentName,\r\n} from './component'\r\nimport {\r\n  Comment,\r\n  type VNode,\r\n  type VNodeArrayChildren,\r\n  blockStack,\r\n  cloneVNode,\r\n  createVNode,\r\n  isVNode,\r\n  normalizeVNode,\r\n} from './vnode'\r\nimport { ErrorCodes, handleError } from './errorHandling'\r\nimport { PatchFlags, ShapeFlags, isModelListener, isOn } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isHmrUpdating } from './hmr'\r\nimport type { NormalizedProps } from './componentProps'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport {\r\n  DeprecationTypes,\r\n  isCompatEnabled,\r\n  warnDeprecation,\r\n} from './compat/compatConfig'\r\n\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs: boolean = false\r\n\r\nexport function markAttrsAccessed() {\r\n  accessedAttrs = true\r\n}\r\n\r\ntype SetRootFn = ((root: VNode) => void) | undefined\r\n\r\nexport function renderComponentRoot(\r\n  instance: ComponentInternalInstance,\r\n): VNode {\r\n  const {\r\n    type: Component,\r\n    vnode,\r\n    proxy,\r\n    withProxy,\r\n    props,\r\n    propsOptions: [propsOptions],\r\n    slots,\r\n    attrs,\r\n    emit,\r\n    render,\r\n    renderCache,\r\n    data,\r\n    setupState,\r\n    ctx,\r\n    inheritAttrs,\r\n  } = instance\r\n\r\n  let result\r\n  let fallthroughAttrs\r\n  const prev = setCurrentRenderingInstance(instance)\r\n  if (__DEV__) {\r\n    accessedAttrs = false\r\n  }\r\n\r\n  try {\r\n    if (vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n      // withProxy is a proxy with a different `has` trap only for\r\n      // runtime-compiled render functions using `with` block.\r\n      const proxyToUse = withProxy || proxy\r\n      // 'this' isn't available in production builds with `<script setup>`,\r\n      // so warn if it's used in dev.\r\n      const thisProxy =\r\n        __DEV__ && setupState.__isScriptSetup\r\n          ? new Proxy(proxyToUse!, {\r\n              get(target, key, receiver) {\r\n                warn(\r\n                  `Property '${String(\r\n                    key,\r\n                  )}' was accessed via 'this'. Avoid using 'this' in templates.`,\r\n                )\r\n                return Reflect.get(target, key, receiver)\r\n              },\r\n            })\r\n          : proxyToUse\r\n      result = normalizeVNode(\r\n        render!.call(\r\n          thisProxy,\r\n          proxyToUse!,\r\n          renderCache,\r\n          props,\r\n          setupState,\r\n          data,\r\n          ctx,\r\n        ),\r\n      )\r\n      fallthroughAttrs = attrs\r\n    } else {\r\n      // functional\r\n      const render = Component as FunctionalComponent\r\n      // in dev, mark attrs accessed if optional props (attrs === props)\r\n      if (__DEV__ && attrs === props) {\r\n        markAttrsAccessed()\r\n      }\r\n      result = normalizeVNode(\r\n        render.length > 1\r\n          ? render(\r\n              props,\r\n              __DEV__\r\n                ? {\r\n                    get attrs() {\r\n                      markAttrsAccessed()\r\n                      return attrs\r\n                    },\r\n                    slots,\r\n                    emit,\r\n                  }\r\n                : { attrs, slots, emit },\r\n            )\r\n          : render(props, null as any /* we know it doesn't need it */),\r\n      )\r\n      fallthroughAttrs = Component.props\r\n        ? attrs\r\n        : getFunctionalFallthrough(attrs)\r\n    }\r\n  } catch (err) {\r\n    blockStack.length = 0\r\n    handleError(err, instance, ErrorCodes.RENDER_FUNCTION)\r\n    result = createVNode(Comment)\r\n  }\r\n\r\n  // attr merging\r\n  // in dev mode, comments are preserved, and it's possible for a template\r\n  // to have comments along side the root element which makes it a fragment\r\n  let root = result\r\n  let setRoot: SetRootFn = undefined\r\n  if (\r\n    __DEV__ &&\r\n    result.patchFlag > 0 &&\r\n    result.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n  ) {\r\n    ;[root, setRoot] = getChildRoot(result)\r\n  }\r\n\r\n  if (fallthroughAttrs && inheritAttrs !== false) {\r\n    const keys = Object.keys(fallthroughAttrs)\r\n    const { shapeFlag } = root\r\n    if (keys.length) {\r\n      if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)) {\r\n        if (propsOptions && keys.some(isModelListener)) {\r\n          // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n          // prop, it indicates this component expects to handle v-model and\r\n          // it should not fallthrough.\r\n          // related: #1543, #1643, #1989\r\n          fallthroughAttrs = filterModelListeners(\r\n            fallthroughAttrs,\r\n            propsOptions,\r\n          )\r\n        }\r\n        root = cloneVNode(root, fallthroughAttrs)\r\n      } else if (__DEV__ && !accessedAttrs && root.type !== Comment) {\r\n        const allAttrs = Object.keys(attrs)\r\n        const eventAttrs: string[] = []\r\n        const extraAttrs: string[] = []\r\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n          const key = allAttrs[i]\r\n          if (isOn(key)) {\r\n            // ignore v-model handlers when they fail to fallthrough\r\n            if (!isModelListener(key)) {\r\n              // remove `on`, lowercase first letter to reflect event casing\r\n              // accurately\r\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3))\r\n            }\r\n          } else {\r\n            extraAttrs.push(key)\r\n          }\r\n        }\r\n        if (extraAttrs.length) {\r\n          warn(\r\n            `Extraneous non-props attributes (` +\r\n              `${extraAttrs.join(', ')}) ` +\r\n              `were passed to component but could not be automatically inherited ` +\r\n              `because component renders fragment or text root nodes.`,\r\n          )\r\n        }\r\n        if (eventAttrs.length) {\r\n          warn(\r\n            `Extraneous non-emits event listeners (` +\r\n              `${eventAttrs.join(', ')}) ` +\r\n              `were passed to component but could not be automatically inherited ` +\r\n              `because component renders fragment or text root nodes. ` +\r\n              `If the listener is intended to be a component custom event listener only, ` +\r\n              `declare it using the \"emits\" option.`,\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (\r\n    __COMPAT__ &&\r\n    isCompatEnabled(DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE, instance) &&\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT &&\r\n    root.shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.COMPONENT)\r\n  ) {\r\n    const { class: cls, style } = vnode.props || {}\r\n    if (cls || style) {\r\n      if (__DEV__ && inheritAttrs === false) {\r\n        warnDeprecation(\r\n          DeprecationTypes.INSTANCE_ATTRS_CLASS_STYLE,\r\n          instance,\r\n          getComponentName(instance.type),\r\n        )\r\n      }\r\n      root = cloneVNode(root, {\r\n        class: cls,\r\n        style: style,\r\n      })\r\n    }\r\n  }\r\n\r\n  // inherit directives\r\n  if (vnode.dirs) {\r\n    if (__DEV__ && !isElementRoot(root)) {\r\n      warn(\r\n        `Runtime directive used on component with non-element root node. ` +\r\n          `The directives will not function as intended.`,\r\n      )\r\n    }\r\n    // clone before mutating since the root may be a hoisted vnode\r\n    root = cloneVNode(root)\r\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs\r\n  }\r\n  // inherit transition data\r\n  if (vnode.transition) {\r\n    if (__DEV__ && !isElementRoot(root)) {\r\n      warn(\r\n        `Component inside <Transition> renders non-element root node ` +\r\n          `that cannot be animated.`,\r\n      )\r\n    }\r\n    root.transition = vnode.transition\r\n  }\r\n\r\n  if (__DEV__ && setRoot) {\r\n    setRoot(root)\r\n  } else {\r\n    result = root\r\n  }\r\n\r\n  setCurrentRenderingInstance(prev)\r\n  return result\r\n}\r\n\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode: VNode): [VNode, SetRootFn] => {\r\n  const rawChildren = vnode.children as VNodeArrayChildren\r\n  const dynamicChildren = vnode.dynamicChildren\r\n  const childRoot = filterSingleRoot(rawChildren, false)\r\n  if (!childRoot) {\r\n    return [vnode, undefined]\r\n  } else if (\r\n    __DEV__ &&\r\n    childRoot.patchFlag > 0 &&\r\n    childRoot.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n  ) {\r\n    return getChildRoot(childRoot)\r\n  }\r\n\r\n  const index = rawChildren.indexOf(childRoot)\r\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1\r\n  const setRoot: SetRootFn = (updatedRoot: VNode) => {\r\n    rawChildren[index] = updatedRoot\r\n    if (dynamicChildren) {\r\n      if (dynamicIndex > -1) {\r\n        dynamicChildren[dynamicIndex] = updatedRoot\r\n      } else if (updatedRoot.patchFlag > 0) {\r\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot]\r\n      }\r\n    }\r\n  }\r\n  return [normalizeVNode(childRoot), setRoot]\r\n}\r\n\r\nexport function filterSingleRoot(\r\n  children: VNodeArrayChildren,\r\n  recurse = true,\r\n): VNode | undefined {\r\n  let singleRoot\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    if (isVNode(child)) {\r\n      // ignore user comment\r\n      if (child.type !== Comment || child.children === 'v-if') {\r\n        if (singleRoot) {\r\n          // has more than 1 non-comment child, return now\r\n          return\r\n        } else {\r\n          singleRoot = child\r\n          if (\r\n            __DEV__ &&\r\n            recurse &&\r\n            singleRoot.patchFlag > 0 &&\r\n            singleRoot.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n          ) {\r\n            return filterSingleRoot(singleRoot.children as VNodeArrayChildren)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  return singleRoot\r\n}\r\n\r\nconst getFunctionalFallthrough = (attrs: Data): Data | undefined => {\r\n  let res: Data | undefined\r\n  for (const key in attrs) {\r\n    if (key === 'class' || key === 'style' || isOn(key)) {\r\n      ;(res || (res = {}))[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst filterModelListeners = (attrs: Data, props: NormalizedProps): Data => {\r\n  const res: Data = {}\r\n  for (const key in attrs) {\r\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n      res[key] = attrs[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\nconst isElementRoot = (vnode: VNode) => {\r\n  return (\r\n    vnode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.ELEMENT) ||\r\n    vnode.type === Comment // potential v-if branch switch\r\n  )\r\n}\r\n\r\nexport function shouldUpdateComponent(\r\n  prevVNode: VNode,\r\n  nextVNode: VNode,\r\n  optimized?: boolean,\r\n): boolean {\r\n  const { props: prevProps, children: prevChildren, component } = prevVNode\r\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\r\n  const emits = component!.emitsOptions\r\n\r\n  // Parent component's render function was hot-updated. Since this may have\r\n  // caused the child component's slots content to have changed, we need to\r\n  // force the child to update as well.\r\n  if (__DEV__ && (prevChildren || nextChildren) && isHmrUpdating) {\r\n    return true\r\n  }\r\n\r\n  // force child update for runtime directive or transition on component vnode.\r\n  if (nextVNode.dirs || nextVNode.transition) {\r\n    return true\r\n  }\r\n\r\n  if (optimized && patchFlag >= 0) {\r\n    if (patchFlag & PatchFlags.DYNAMIC_SLOTS) {\r\n      // slot content that references values that might have changed,\r\n      // e.g. in a v-for\r\n      return true\r\n    }\r\n    if (patchFlag & PatchFlags.FULL_PROPS) {\r\n      if (!prevProps) {\r\n        return !!nextProps\r\n      }\r\n      // presence of this flag indicates props are always non-null\r\n      return hasPropsChanged(prevProps, nextProps!, emits)\r\n    } else if (patchFlag & PatchFlags.PROPS) {\r\n      const dynamicProps = nextVNode.dynamicProps!\r\n      for (let i = 0; i < dynamicProps.length; i++) {\r\n        const key = dynamicProps[i]\r\n        if (\r\n          nextProps![key] !== prevProps![key] &&\r\n          !isEmitListener(emits, key)\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // this path is only taken by manually written render functions\r\n    // so presence of any children leads to a forced update\r\n    if (prevChildren || nextChildren) {\r\n      if (!nextChildren || !(nextChildren as any).$stable) {\r\n        return true\r\n      }\r\n    }\r\n    if (prevProps === nextProps) {\r\n      return false\r\n    }\r\n    if (!prevProps) {\r\n      return !!nextProps\r\n    }\r\n    if (!nextProps) {\r\n      return true\r\n    }\r\n    return hasPropsChanged(prevProps, nextProps, emits)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction hasPropsChanged(\r\n  prevProps: Data,\r\n  nextProps: Data,\r\n  emitsOptions: ComponentInternalInstance['emitsOptions'],\r\n): boolean {\r\n  const nextKeys = Object.keys(nextProps)\r\n  if (nextKeys.length !== Object.keys(prevProps).length) {\r\n    return true\r\n  }\r\n  for (let i = 0; i < nextKeys.length; i++) {\r\n    const key = nextKeys[i]\r\n    if (\r\n      nextProps[key] !== prevProps[key] &&\r\n      !isEmitListener(emitsOptions, key)\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function updateHOCHostEl(\r\n  { vnode, parent }: ComponentInternalInstance,\r\n  el: typeof vnode.el, // HostNode\r\n) {\r\n  while (parent) {\r\n    const root = parent.subTree\r\n    if (root.suspense && root.suspense.activeBranch === vnode) {\r\n      root.el = vnode.el\r\n    }\r\n    if (root === vnode) {\r\n      ;(vnode = parent.vnode).el = el\r\n      parent = parent.parent\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n}\r\n","import {\r\n  type ComponentOptions,\r\n  type ConcreteComponent,\r\n  currentInstance,\r\n  getComponentName,\r\n} from '../component'\r\nimport { currentRenderingInstance } from '../componentRenderContext'\r\nimport type { Directive } from '../directives'\r\nimport { camelize, capitalize, isString } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport type { VNodeTypes } from '../vnode'\r\n\r\nexport const COMPONENTS = 'components'\r\nexport const DIRECTIVES = 'directives'\r\nexport const FILTERS = 'filters'\r\n\r\nexport type AssetTypes = typeof COMPONENTS | typeof DIRECTIVES | typeof FILTERS\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveComponent(\r\n  name: string,\r\n  maybeSelfReference?: boolean,\r\n): ConcreteComponent | string {\r\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name\r\n}\r\n\r\nexport const NULL_DYNAMIC_COMPONENT = Symbol.for('v-ndc')\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDynamicComponent(component: unknown): VNodeTypes {\r\n  if (isString(component)) {\r\n    return resolveAsset(COMPONENTS, component, false) || component\r\n  } else {\r\n    // invalid types will fallthrough to createVNode and raise warning\r\n    return (component || NULL_DYNAMIC_COMPONENT) as any\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function resolveDirective(name: string): Directive | undefined {\r\n  return resolveAsset(DIRECTIVES, name)\r\n}\r\n\r\n/**\r\n * v2 compat only\r\n * @internal\r\n */\r\nexport function resolveFilter(name: string): Function | undefined {\r\n  return resolveAsset(FILTERS, name)\r\n}\r\n\r\n/**\r\n * @private\r\n * overload 1: components\r\n */\r\nfunction resolveAsset(\r\n  type: typeof COMPONENTS,\r\n  name: string,\r\n  warnMissing?: boolean,\r\n  maybeSelfReference?: boolean,\r\n): ConcreteComponent | undefined\r\n// overload 2: directives\r\nfunction resolveAsset(\r\n  type: typeof DIRECTIVES,\r\n  name: string,\r\n): Directive | undefined\r\n// implementation\r\n// overload 3: filters (compat only)\r\nfunction resolveAsset(type: typeof FILTERS, name: string): Function | undefined\r\n// implementation\r\nfunction resolveAsset(\r\n  type: AssetTypes,\r\n  name: string,\r\n  warnMissing = true,\r\n  maybeSelfReference = false,\r\n) {\r\n  const instance = currentRenderingInstance || currentInstance\r\n  if (instance) {\r\n    const Component = instance.type\r\n\r\n    // explicit self name has highest priority\r\n    if (type === COMPONENTS) {\r\n      const selfName = getComponentName(\r\n        Component,\r\n        false /* do not include inferred name to avoid breaking existing code */,\r\n      )\r\n      if (\r\n        selfName &&\r\n        (selfName === name ||\r\n          selfName === camelize(name) ||\r\n          selfName === capitalize(camelize(name)))\r\n      ) {\r\n        return Component\r\n      }\r\n    }\r\n\r\n    const res =\r\n      // local registration\r\n      // check instance[type] first which is resolved for options API\r\n      resolve(instance[type] || (Component as ComponentOptions)[type], name) ||\r\n      // global registration\r\n      resolve(instance.appContext[type], name)\r\n\r\n    if (!res && maybeSelfReference) {\r\n      // fallback to implicit self-reference\r\n      return Component\r\n    }\r\n\r\n    if (__DEV__ && warnMissing && !res) {\r\n      const extra =\r\n        type === COMPONENTS\r\n          ? `\\nIf this is a native custom element, make sure to exclude it from ` +\r\n            `component resolution via compilerOptions.isCustomElement.`\r\n          : ``\r\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`)\r\n    }\r\n\r\n    return res\r\n  } else if (__DEV__) {\r\n    warn(\r\n      `resolve${capitalize(type.slice(0, -1))} ` +\r\n        `can only be used in render() or setup().`,\r\n    )\r\n  }\r\n}\r\n\r\nfunction resolve(registry: Record<string, any> | undefined, name: string) {\r\n  return (\r\n    registry &&\r\n    (registry[name] ||\r\n      registry[camelize(name)] ||\r\n      registry[capitalize(camelize(name))])\r\n  )\r\n}\r\n","import {\r\n  Comment,\r\n  type VNode,\r\n  type VNodeProps,\r\n  closeBlock,\r\n  createVNode,\r\n  currentBlock,\r\n  isBlockTreeEnabled,\r\n  isSameVNodeType,\r\n  normalizeVNode,\r\n  openBlock,\r\n} from '../vnode'\r\nimport { ShapeFlags, isArray, isFunction, toNumber } from '@vue/shared'\r\nimport { type ComponentInternalInstance, handleSetupResult } from '../component'\r\nimport type { Slots } from '../componentSlots'\r\nimport {\r\n  type ElementNamespace,\r\n  MoveType,\r\n  type RendererElement,\r\n  type RendererInternals,\r\n  type RendererNode,\r\n  type SetupRenderEffectFn,\r\n} from '../renderer'\r\nimport { queuePostFlushCb } from '../scheduler'\r\nimport { filterSingleRoot, updateHOCHostEl } from '../componentRenderUtils'\r\nimport {\r\n  assertNumber,\r\n  popWarningContext,\r\n  pushWarningContext,\r\n  warn,\r\n} from '../warning'\r\nimport { ErrorCodes, handleError } from '../errorHandling'\r\nimport { NULL_DYNAMIC_COMPONENT } from '../helpers/resolveAssets'\r\n\r\nexport interface SuspenseProps {\r\n  onResolve?: () => void\r\n  onPending?: () => void\r\n  onFallback?: () => void\r\n  timeout?: string | number\r\n  /**\r\n   * Allow suspense to be captured by parent suspense\r\n   *\r\n   * @default false\r\n   */\r\n  suspensible?: boolean\r\n}\r\n\r\nexport const isSuspense = (type: any): boolean => type.__isSuspense\r\n\r\n// incrementing unique id for every pending branch\r\nlet suspenseId = 0\r\n\r\n/**\r\n * For testing only\r\n */\r\nexport const resetSuspenseId = () => (suspenseId = 0)\r\n\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nexport const SuspenseImpl = {\r\n  name: 'Suspense',\r\n  // In order to make Suspense tree-shakable, we need to avoid importing it\r\n  // directly in the renderer. The renderer checks for the __isSuspense flag\r\n  // on a vnode's type and calls the `process` method, passing in renderer\r\n  // internals.\r\n  __isSuspense: true,\r\n  process(\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    // platform-specific impl passed from renderer\r\n    rendererInternals: RendererInternals,\r\n  ) {\r\n    if (n1 == null) {\r\n      mountSuspense(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        namespace,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals,\r\n      )\r\n    } else {\r\n      // #8678 if the current suspense needs to be patched and parentSuspense has\r\n      // not been resolved. this means that both the current suspense and parentSuspense\r\n      // need to be patched. because parentSuspense's pendingBranch includes the\r\n      // current suspense, it will be processed twice:\r\n      //  1. current patch\r\n      //  2. mounting along with the pendingBranch of parentSuspense\r\n      // it is necessary to skip the current patch to avoid multiple mounts\r\n      // of inner components.\r\n      if (parentSuspense && parentSuspense.deps > 0) {\r\n        n2.suspense = n1.suspense\r\n        return\r\n      }\r\n      patchSuspense(\r\n        n1,\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        namespace,\r\n        slotScopeIds,\r\n        optimized,\r\n        rendererInternals,\r\n      )\r\n    }\r\n  },\r\n  hydrate: hydrateSuspense,\r\n  create: createSuspenseBoundary,\r\n  normalize: normalizeSuspenseChildren,\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Suspense = (__FEATURE_SUSPENSE__\r\n  ? SuspenseImpl\r\n  : null) as unknown as {\r\n  __isSuspense: true\r\n  new (): {\r\n    $props: VNodeProps & SuspenseProps\r\n    $slots: {\r\n      default(): VNode[]\r\n      fallback(): VNode[]\r\n    }\r\n  }\r\n}\r\n\r\nfunction triggerEvent(\r\n  vnode: VNode,\r\n  name: 'onResolve' | 'onPending' | 'onFallback',\r\n) {\r\n  const eventListener = vnode.props && vnode.props[name]\r\n  if (isFunction(eventListener)) {\r\n    eventListener()\r\n  }\r\n}\r\n\r\nfunction mountSuspense(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  namespace: ElementNamespace,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n) {\r\n  const {\r\n    p: patch,\r\n    o: { createElement },\r\n  } = rendererInternals\r\n  const hiddenContainer = createElement('div')\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    container,\r\n    hiddenContainer,\r\n    anchor,\r\n    namespace,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals,\r\n  ))\r\n\r\n  // start mounting the content subtree in an off-dom container\r\n  patch(\r\n    null,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    hiddenContainer,\r\n    null,\r\n    parentComponent,\r\n    suspense,\r\n    namespace,\r\n    slotScopeIds,\r\n  )\r\n  // now check if we have encountered any async deps\r\n  if (suspense.deps > 0) {\r\n    // has async\r\n    // invoke @fallback event\r\n    triggerEvent(vnode, 'onPending')\r\n    triggerEvent(vnode, 'onFallback')\r\n\r\n    // mount the fallback tree\r\n    patch(\r\n      null,\r\n      vnode.ssFallback!,\r\n      container,\r\n      anchor,\r\n      parentComponent,\r\n      null, // fallback tree will not have suspense context\r\n      namespace,\r\n      slotScopeIds,\r\n    )\r\n    setActiveBranch(suspense, vnode.ssFallback!)\r\n  } else {\r\n    // Suspense has no async deps. Just resolve.\r\n    suspense.resolve(false, true)\r\n  }\r\n}\r\n\r\nfunction patchSuspense(\r\n  n1: VNode,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  namespace: ElementNamespace,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  { p: patch, um: unmount, o: { createElement } }: RendererInternals,\r\n) {\r\n  const suspense = (n2.suspense = n1.suspense)!\r\n  suspense.vnode = n2\r\n  n2.el = n1.el\r\n  const newBranch = n2.ssContent!\r\n  const newFallback = n2.ssFallback!\r\n\r\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense\r\n  if (pendingBranch) {\r\n    suspense.pendingBranch = newBranch\r\n    if (isSameVNodeType(newBranch, pendingBranch)) {\r\n      // same root type but content may have changed.\r\n      patch(\r\n        pendingBranch,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        namespace,\r\n        slotScopeIds,\r\n        optimized,\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        suspense.resolve()\r\n      } else if (isInFallback) {\r\n        // It's possible that the app is in hydrating state when patching the\r\n        // suspense instance. If someone updates the dependency during component\r\n        // setup in children of suspense boundary, that would be problemtic\r\n        // because we aren't actually showing a fallback content when\r\n        // patchSuspense is called. In such case, patch of fallback content\r\n        // should be no op\r\n        if (!isHydrating) {\r\n          patch(\r\n            activeBranch,\r\n            newFallback,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            null, // fallback tree will not have suspense context\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n          )\r\n          setActiveBranch(suspense, newFallback)\r\n        }\r\n      }\r\n    } else {\r\n      // toggled before pending tree is resolved\r\n      // increment pending ID. this is used to invalidate async callbacks\r\n      suspense.pendingId = suspenseId++\r\n      if (isHydrating) {\r\n        // if toggled before hydration is finished, the current DOM tree is\r\n        // no longer valid. set it as the active branch so it will be unmounted\r\n        // when resolved\r\n        suspense.isHydrating = false\r\n        suspense.activeBranch = pendingBranch\r\n      } else {\r\n        unmount(pendingBranch, parentComponent, suspense)\r\n      }\r\n      // reset suspense state\r\n      suspense.deps = 0\r\n      // discard effects from pending branch\r\n      suspense.effects.length = 0\r\n      // discard previous container\r\n      suspense.hiddenContainer = createElement('div')\r\n\r\n      if (isInFallback) {\r\n        // already in fallback state\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          namespace,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        } else {\r\n          patch(\r\n            activeBranch,\r\n            newFallback,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            null, // fallback tree will not have suspense context\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n          )\r\n          setActiveBranch(suspense, newFallback)\r\n        }\r\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n        // toggled \"back\" to current active branch\r\n        patch(\r\n          activeBranch,\r\n          newBranch,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          suspense,\r\n          namespace,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n        // force resolve\r\n        suspense.resolve(true)\r\n      } else {\r\n        // switched to a 3rd branch\r\n        patch(\r\n          null,\r\n          newBranch,\r\n          suspense.hiddenContainer,\r\n          null,\r\n          parentComponent,\r\n          suspense,\r\n          namespace,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n        if (suspense.deps <= 0) {\r\n          suspense.resolve()\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n      // root did not change, just normal patch\r\n      patch(\r\n        activeBranch,\r\n        newBranch,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        suspense,\r\n        namespace,\r\n        slotScopeIds,\r\n        optimized,\r\n      )\r\n      setActiveBranch(suspense, newBranch)\r\n    } else {\r\n      // root node toggled\r\n      // invoke @pending event\r\n      triggerEvent(n2, 'onPending')\r\n      // mount pending branch in off-dom container\r\n      suspense.pendingBranch = newBranch\r\n      if (newBranch.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n        suspense.pendingId = newBranch.component!.suspenseId!\r\n      } else {\r\n        suspense.pendingId = suspenseId++\r\n      }\r\n      patch(\r\n        null,\r\n        newBranch,\r\n        suspense.hiddenContainer,\r\n        null,\r\n        parentComponent,\r\n        suspense,\r\n        namespace,\r\n        slotScopeIds,\r\n        optimized,\r\n      )\r\n      if (suspense.deps <= 0) {\r\n        // incoming branch has no async deps, resolve now.\r\n        suspense.resolve()\r\n      } else {\r\n        const { timeout, pendingId } = suspense\r\n        if (timeout > 0) {\r\n          setTimeout(() => {\r\n            if (suspense.pendingId === pendingId) {\r\n              suspense.fallback(newFallback)\r\n            }\r\n          }, timeout)\r\n        } else if (timeout === 0) {\r\n          suspense.fallback(newFallback)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface SuspenseBoundary {\r\n  vnode: VNode<RendererNode, RendererElement, SuspenseProps>\r\n  parent: SuspenseBoundary | null\r\n  parentComponent: ComponentInternalInstance | null\r\n  namespace: ElementNamespace\r\n  container: RendererElement\r\n  hiddenContainer: RendererElement\r\n  activeBranch: VNode | null\r\n  pendingBranch: VNode | null\r\n  deps: number\r\n  pendingId: number\r\n  timeout: number\r\n  isInFallback: boolean\r\n  isHydrating: boolean\r\n  isUnmounted: boolean\r\n  effects: Function[]\r\n  resolve(force?: boolean, sync?: boolean): void\r\n  fallback(fallbackVNode: VNode): void\r\n  move(\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    type: MoveType,\r\n  ): void\r\n  next(): RendererNode | null\r\n  registerDep(\r\n    instance: ComponentInternalInstance,\r\n    setupRenderEffect: SetupRenderEffectFn,\r\n  ): void\r\n  unmount(parentSuspense: SuspenseBoundary | null, doRemove?: boolean): void\r\n}\r\n\r\nlet hasWarned = false\r\n\r\nfunction createSuspenseBoundary(\r\n  vnode: VNode,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  container: RendererElement,\r\n  hiddenContainer: RendererElement,\r\n  anchor: RendererNode | null,\r\n  namespace: ElementNamespace,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  isHydrating = false,\r\n): SuspenseBoundary {\r\n  /* istanbul ignore if */\r\n  if (__DEV__ && !__TEST__ && !hasWarned) {\r\n    hasWarned = true\r\n    // @ts-expect-error `console.info` cannot be null error\r\n    // eslint-disable-next-line no-console\r\n    console[console.info ? 'info' : 'log'](\r\n      `<Suspense> is an experimental feature and its API will likely change.`,\r\n    )\r\n  }\r\n\r\n  const {\r\n    p: patch,\r\n    m: move,\r\n    um: unmount,\r\n    n: next,\r\n    o: { parentNode, remove },\r\n  } = rendererInternals\r\n\r\n  // if set `suspensible: true`, set the current suspense as a dep of parent suspense\r\n  let parentSuspenseId: number | undefined\r\n  const isSuspensible = isVNodeSuspensible(vnode)\r\n  if (isSuspensible) {\r\n    if (parentSuspense?.pendingBranch) {\r\n      parentSuspenseId = parentSuspense.pendingId\r\n      parentSuspense.deps++\r\n    }\r\n  }\r\n\r\n  const timeout = vnode.props ? toNumber(vnode.props.timeout) : undefined\r\n  if (__DEV__) {\r\n    assertNumber(timeout, `Suspense timeout`)\r\n  }\r\n\r\n  const initialAnchor = anchor\r\n  const suspense: SuspenseBoundary = {\r\n    vnode,\r\n    parent: parentSuspense,\r\n    parentComponent,\r\n    namespace,\r\n    container,\r\n    hiddenContainer,\r\n    deps: 0,\r\n    pendingId: suspenseId++,\r\n    timeout: typeof timeout === 'number' ? timeout : -1,\r\n    activeBranch: null,\r\n    pendingBranch: null,\r\n    isInFallback: !isHydrating,\r\n    isHydrating,\r\n    isUnmounted: false,\r\n    effects: [],\r\n\r\n    resolve(resume = false, sync = false) {\r\n      if (__DEV__) {\r\n        if (!resume && !suspense.pendingBranch) {\r\n          throw new Error(\r\n            `suspense.resolve() is called without a pending branch.`,\r\n          )\r\n        }\r\n        if (suspense.isUnmounted) {\r\n          throw new Error(\r\n            `suspense.resolve() is called on an already unmounted suspense boundary.`,\r\n          )\r\n        }\r\n      }\r\n      const {\r\n        vnode,\r\n        activeBranch,\r\n        pendingBranch,\r\n        pendingId,\r\n        effects,\r\n        parentComponent,\r\n        container,\r\n      } = suspense\r\n\r\n      // if there's a transition happening we need to wait it to finish.\r\n      let delayEnter: boolean | null = false\r\n      if (suspense.isHydrating) {\r\n        suspense.isHydrating = false\r\n      } else if (!resume) {\r\n        delayEnter =\r\n          activeBranch &&\r\n          pendingBranch!.transition &&\r\n          pendingBranch!.transition.mode === 'out-in'\r\n        if (delayEnter) {\r\n          activeBranch!.transition!.afterLeave = () => {\r\n            if (pendingId === suspense.pendingId) {\r\n              move(\r\n                pendingBranch!,\r\n                container,\r\n                anchor === initialAnchor ? next(activeBranch!) : anchor,\r\n                MoveType.ENTER,\r\n              )\r\n              queuePostFlushCb(effects)\r\n            }\r\n          }\r\n        }\r\n        // unmount current active tree\r\n        if (activeBranch) {\r\n          // if the fallback tree was mounted, it may have been moved\r\n          // as part of a parent suspense. get the latest anchor for insertion\r\n          // #8105 if `delayEnter` is true, it means that the mounting of\r\n          // `activeBranch` will be delayed. if the branch switches before\r\n          // transition completes, both `activeBranch` and `pendingBranch` may\r\n          // coexist in the `hiddenContainer`. This could result in\r\n          // `next(activeBranch!)` obtaining an incorrect anchor\r\n          // (got `pendingBranch.el`).\r\n          // Therefore, after the mounting of activeBranch is completed,\r\n          // it is necessary to get the latest anchor.\r\n          if (parentNode(activeBranch.el!) !== suspense.hiddenContainer) {\r\n            anchor = next(activeBranch)\r\n          }\r\n          unmount(activeBranch, parentComponent, suspense, true)\r\n        }\r\n        if (!delayEnter) {\r\n          // move content from off-dom container to actual container\r\n          move(pendingBranch!, container, anchor, MoveType.ENTER)\r\n        }\r\n      }\r\n\r\n      setActiveBranch(suspense, pendingBranch!)\r\n      suspense.pendingBranch = null\r\n      suspense.isInFallback = false\r\n\r\n      // flush buffered effects\r\n      // check if there is a pending parent suspense\r\n      let parent = suspense.parent\r\n      let hasUnresolvedAncestor = false\r\n      while (parent) {\r\n        if (parent.pendingBranch) {\r\n          // found a pending parent suspense, merge buffered post jobs\r\n          // into that parent\r\n          parent.effects.push(...effects)\r\n          hasUnresolvedAncestor = true\r\n          break\r\n        }\r\n        parent = parent.parent\r\n      }\r\n      // no pending parent suspense nor transition, flush all jobs\r\n      if (!hasUnresolvedAncestor && !delayEnter) {\r\n        queuePostFlushCb(effects)\r\n      }\r\n      suspense.effects = []\r\n\r\n      // resolve parent suspense if all async deps are resolved\r\n      if (isSuspensible) {\r\n        if (\r\n          parentSuspense &&\r\n          parentSuspense.pendingBranch &&\r\n          parentSuspenseId === parentSuspense.pendingId\r\n        ) {\r\n          parentSuspense.deps--\r\n          if (parentSuspense.deps === 0 && !sync) {\r\n            parentSuspense.resolve()\r\n          }\r\n        }\r\n      }\r\n\r\n      // invoke @resolve event\r\n      triggerEvent(vnode, 'onResolve')\r\n    },\r\n\r\n    fallback(fallbackVNode) {\r\n      if (!suspense.pendingBranch) {\r\n        return\r\n      }\r\n\r\n      const { vnode, activeBranch, parentComponent, container, namespace } =\r\n        suspense\r\n\r\n      // invoke @fallback event\r\n      triggerEvent(vnode, 'onFallback')\r\n\r\n      const anchor = next(activeBranch!)\r\n      const mountFallback = () => {\r\n        if (!suspense.isInFallback) {\r\n          return\r\n        }\r\n        // mount the fallback tree\r\n        patch(\r\n          null,\r\n          fallbackVNode,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          null, // fallback tree will not have suspense context\r\n          namespace,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n        setActiveBranch(suspense, fallbackVNode)\r\n      }\r\n\r\n      const delayEnter =\r\n        fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in'\r\n      if (delayEnter) {\r\n        activeBranch!.transition!.afterLeave = mountFallback\r\n      }\r\n      suspense.isInFallback = true\r\n\r\n      // unmount current active branch\r\n      unmount(\r\n        activeBranch!,\r\n        parentComponent,\r\n        null, // no suspense so unmount hooks fire now\r\n        true, // shouldRemove\r\n      )\r\n\r\n      if (!delayEnter) {\r\n        mountFallback()\r\n      }\r\n    },\r\n\r\n    move(container, anchor, type) {\r\n      suspense.activeBranch &&\r\n        move(suspense.activeBranch, container, anchor, type)\r\n      suspense.container = container\r\n    },\r\n\r\n    next() {\r\n      return suspense.activeBranch && next(suspense.activeBranch)\r\n    },\r\n\r\n    registerDep(instance, setupRenderEffect) {\r\n      const isInPendingSuspense = !!suspense.pendingBranch\r\n      if (isInPendingSuspense) {\r\n        suspense.deps++\r\n      }\r\n      const hydratedEl = instance.vnode.el\r\n      instance\r\n        .asyncDep!.catch(err => {\r\n          handleError(err, instance, ErrorCodes.SETUP_FUNCTION)\r\n        })\r\n        .then(asyncSetupResult => {\r\n          // retry when the setup() promise resolves.\r\n          // component may have been unmounted before resolve.\r\n          if (\r\n            instance.isUnmounted ||\r\n            suspense.isUnmounted ||\r\n            suspense.pendingId !== instance.suspenseId\r\n          ) {\r\n            return\r\n          }\r\n          // retry from this component\r\n          instance.asyncResolved = true\r\n          const { vnode } = instance\r\n          if (__DEV__) {\r\n            pushWarningContext(vnode)\r\n          }\r\n          handleSetupResult(instance, asyncSetupResult, false)\r\n          if (hydratedEl) {\r\n            // vnode may have been replaced if an update happened before the\r\n            // async dep is resolved.\r\n            vnode.el = hydratedEl\r\n          }\r\n          const placeholder = !hydratedEl && instance.subTree.el\r\n          setupRenderEffect(\r\n            instance,\r\n            vnode,\r\n            // component may have been moved before resolve.\r\n            // if this is not a hydration, instance.subTree will be the comment\r\n            // placeholder.\r\n            parentNode(hydratedEl || instance.subTree.el!)!,\r\n            // anchor will not be used if this is hydration, so only need to\r\n            // consider the comment placeholder case.\r\n            hydratedEl ? null : next(instance.subTree),\r\n            suspense,\r\n            namespace,\r\n            optimized,\r\n          )\r\n          if (placeholder) {\r\n            remove(placeholder)\r\n          }\r\n          updateHOCHostEl(instance, vnode.el)\r\n          if (__DEV__) {\r\n            popWarningContext()\r\n          }\r\n          // only decrease deps count if suspense is not already resolved\r\n          if (isInPendingSuspense && --suspense.deps === 0) {\r\n            suspense.resolve()\r\n          }\r\n        })\r\n    },\r\n\r\n    unmount(parentSuspense, doRemove) {\r\n      suspense.isUnmounted = true\r\n      if (suspense.activeBranch) {\r\n        unmount(\r\n          suspense.activeBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove,\r\n        )\r\n      }\r\n      if (suspense.pendingBranch) {\r\n        unmount(\r\n          suspense.pendingBranch,\r\n          parentComponent,\r\n          parentSuspense,\r\n          doRemove,\r\n        )\r\n      }\r\n    },\r\n  }\r\n\r\n  return suspense\r\n}\r\n\r\nfunction hydrateSuspense(\r\n  node: Node,\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  namespace: ElementNamespace,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  rendererInternals: RendererInternals,\r\n  hydrateNode: (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ) => Node | null,\r\n): Node | null {\r\n  const suspense = (vnode.suspense = createSuspenseBoundary(\r\n    vnode,\r\n    parentSuspense,\r\n    parentComponent,\r\n    node.parentNode!,\r\n    // eslint-disable-next-line no-restricted-globals\r\n    document.createElement('div'),\r\n    null,\r\n    namespace,\r\n    slotScopeIds,\r\n    optimized,\r\n    rendererInternals,\r\n    true /* hydrating */,\r\n  ))\r\n  // there are two possible scenarios for server-rendered suspense:\r\n  // - success: ssr content should be fully resolved\r\n  // - failure: ssr content should be the fallback branch.\r\n  // however, on the client we don't really know if it has failed or not\r\n  // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n  // need to construct a suspense boundary first\r\n  const result = hydrateNode(\r\n    node,\r\n    (suspense.pendingBranch = vnode.ssContent!),\r\n    parentComponent,\r\n    suspense,\r\n    slotScopeIds,\r\n    optimized,\r\n  )\r\n  if (suspense.deps === 0) {\r\n    suspense.resolve(false, true)\r\n  }\r\n  return result\r\n  /* eslint-enable no-restricted-globals */\r\n}\r\n\r\nfunction normalizeSuspenseChildren(vnode: VNode) {\r\n  const { shapeFlag, children } = vnode\r\n  const isSlotChildren = shapeFlag & ShapeFlags.SLOTS_CHILDREN\r\n  vnode.ssContent = normalizeSuspenseSlot(\r\n    isSlotChildren ? (children as Slots).default : children,\r\n  )\r\n  vnode.ssFallback = isSlotChildren\r\n    ? normalizeSuspenseSlot((children as Slots).fallback)\r\n    : createVNode(Comment)\r\n}\r\n\r\nfunction normalizeSuspenseSlot(s: any) {\r\n  let block: VNode[] | null | undefined\r\n  if (isFunction(s)) {\r\n    const trackBlock = isBlockTreeEnabled && s._c\r\n    if (trackBlock) {\r\n      // disableTracking: false\r\n      // allow block tracking for compiled slots\r\n      // (see ./componentRenderContext.ts)\r\n      s._d = false\r\n      openBlock()\r\n    }\r\n    s = s()\r\n    if (trackBlock) {\r\n      s._d = true\r\n      block = currentBlock\r\n      closeBlock()\r\n    }\r\n  }\r\n  if (isArray(s)) {\r\n    const singleChild = filterSingleRoot(s)\r\n    if (\r\n      __DEV__ &&\r\n      !singleChild &&\r\n      s.filter(child => child !== NULL_DYNAMIC_COMPONENT).length > 0\r\n    ) {\r\n      warn(`<Suspense> slots expect a single root node.`)\r\n    }\r\n    s = singleChild\r\n  }\r\n  s = normalizeVNode(s)\r\n  if (block && !s.dynamicChildren) {\r\n    s.dynamicChildren = block.filter(c => c !== s)\r\n  }\r\n  return s\r\n}\r\n\r\nexport function queueEffectWithSuspense(\r\n  fn: Function | Function[],\r\n  suspense: SuspenseBoundary | null,\r\n): void {\r\n  if (suspense && suspense.pendingBranch) {\r\n    if (isArray(fn)) {\r\n      suspense.effects.push(...fn)\r\n    } else {\r\n      suspense.effects.push(fn)\r\n    }\r\n  } else {\r\n    queuePostFlushCb(fn)\r\n  }\r\n}\r\n\r\nfunction setActiveBranch(suspense: SuspenseBoundary, branch: VNode) {\r\n  suspense.activeBranch = branch\r\n  const { vnode, parentComponent } = suspense\r\n  let el = branch.el\r\n  // if branch has no el after patch, it's a HOC wrapping async components\r\n  // drill and locate the placeholder comment node\r\n  while (!el && branch.component) {\r\n    branch = branch.component.subTree\r\n    el = branch.el\r\n  }\r\n  vnode.el = el\r\n  // in case suspense is the root node of a component,\r\n  // recursively update the HOC el\r\n  if (parentComponent && parentComponent.subTree === vnode) {\r\n    parentComponent.vnode.el = el\r\n    updateHOCHostEl(parentComponent, el)\r\n  }\r\n}\r\n\r\nfunction isVNodeSuspensible(vnode: VNode) {\r\n  return vnode.props?.suspensible != null && vnode.props.suspensible !== false\r\n}\r\n","import { inject } from '../apiInject'\r\nimport { warn } from '../warning'\r\n\r\nexport const ssrContextKey = Symbol.for('v-scx')\r\n\r\nexport const useSSRContext = <T = Record<string, any>>() => {\r\n  if (!__GLOBAL__) {\r\n    const ctx = inject<T>(ssrContextKey)\r\n    if (!ctx) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Server rendering context not provided. Make sure to only call ` +\r\n            `useSSRContext() conditionally in the server build.`,\r\n        )\r\n    }\r\n    return ctx\r\n  } else if (__DEV__) {\r\n    warn(`useSSRContext() is not supported in the global build.`)\r\n  }\r\n}\r\n","import {\r\n  type ComputedRef,\r\n  type DebuggerOptions,\r\n  type EffectScheduler,\r\n  ReactiveEffect,\r\n  ReactiveFlags,\r\n  type Ref,\r\n  getCurrentScope,\r\n  isReactive,\r\n  isRef,\r\n  isShallow,\r\n} from '@vue/reactivity'\r\nimport { type SchedulerJob, queueJob } from './scheduler'\r\nimport {\r\n  EMPTY_OBJ,\r\n  NOOP,\r\n  extend,\r\n  hasChanged,\r\n  isArray,\r\n  isFunction,\r\n  isMap,\r\n  isObject,\r\n  isPlainObject,\r\n  isSet,\r\n  isString,\r\n  remove,\r\n} from '@vue/shared'\r\nimport {\r\n  type ComponentInternalInstance,\r\n  currentInstance,\r\n  isInSSRComponentSetup,\r\n  setCurrentInstance,\r\n} from './component'\r\nimport {\r\n  ErrorCodes,\r\n  callWithAsyncErrorHandling,\r\n  callWithErrorHandling,\r\n} from './errorHandling'\r\nimport { queuePostRenderEffect } from './renderer'\r\nimport { warn } from './warning'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { checkCompatEnabled, isCompatEnabled } from './compat/compatConfig'\r\nimport type { ObjectWatchOptionItem } from './componentOptions'\r\nimport { useSSRContext } from './helpers/useSsrContext'\r\n\r\nexport type WatchEffect = (onCleanup: OnCleanup) => void\r\n\r\nexport type WatchSource<T = any> = Ref<T> | ComputedRef<T> | (() => T)\r\n\r\nexport type WatchCallback<V = any, OV = any> = (\r\n  value: V,\r\n  oldValue: OV,\r\n  onCleanup: OnCleanup,\r\n) => any\r\n\r\ntype MapSources<T, Immediate> = {\r\n  [K in keyof T]: T[K] extends WatchSource<infer V>\r\n    ? Immediate extends true\r\n      ? V | undefined\r\n      : V\r\n    : T[K] extends object\r\n      ? Immediate extends true\r\n        ? T[K] | undefined\r\n        : T[K]\r\n      : never\r\n}\r\n\r\ntype OnCleanup = (cleanupFn: () => void) => void\r\n\r\nexport interface WatchOptionsBase extends DebuggerOptions {\r\n  flush?: 'pre' | 'post' | 'sync'\r\n}\r\n\r\nexport interface WatchOptions<Immediate = boolean> extends WatchOptionsBase {\r\n  immediate?: Immediate\r\n  deep?: boolean\r\n  once?: boolean\r\n}\r\n\r\nexport type WatchStopHandle = () => void\r\n\r\n// Simple effect.\r\nexport function watchEffect(\r\n  effect: WatchEffect,\r\n  options?: WatchOptionsBase,\r\n): WatchStopHandle {\r\n  return doWatch(effect, null, options)\r\n}\r\n\r\nexport function watchPostEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions,\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    __DEV__ ? extend({}, options as any, { flush: 'post' }) : { flush: 'post' },\r\n  )\r\n}\r\n\r\nexport function watchSyncEffect(\r\n  effect: WatchEffect,\r\n  options?: DebuggerOptions,\r\n) {\r\n  return doWatch(\r\n    effect,\r\n    null,\r\n    __DEV__ ? extend({}, options as any, { flush: 'sync' }) : { flush: 'sync' },\r\n  )\r\n}\r\n\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {}\r\n\r\ntype MultiWatchSources = (WatchSource<unknown> | object)[]\r\n\r\n// overload: single source + cb\r\nexport function watch<T, Immediate extends Readonly<boolean> = false>(\r\n  source: WatchSource<T>,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>,\r\n): WatchStopHandle\r\n\r\n// overload: array of multiple sources + cb\r\nexport function watch<\r\n  T extends MultiWatchSources,\r\n  Immediate extends Readonly<boolean> = false,\r\n>(\r\n  sources: [...T],\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>,\r\n): WatchStopHandle\r\n\r\n// overload: multiple sources w/ `as const`\r\n// watch([foo, bar] as const, () => {})\r\n// somehow [...T] breaks when the type is readonly\r\nexport function watch<\r\n  T extends Readonly<MultiWatchSources>,\r\n  Immediate extends Readonly<boolean> = false,\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<MapSources<T, false>, MapSources<T, Immediate>>,\r\n  options?: WatchOptions<Immediate>,\r\n): WatchStopHandle\r\n\r\n// overload: watching reactive object w/ cb\r\nexport function watch<\r\n  T extends object,\r\n  Immediate extends Readonly<boolean> = false,\r\n>(\r\n  source: T,\r\n  cb: WatchCallback<T, Immediate extends true ? T | undefined : T>,\r\n  options?: WatchOptions<Immediate>,\r\n): WatchStopHandle\r\n\r\n// implementation\r\nexport function watch<T = any, Immediate extends Readonly<boolean> = false>(\r\n  source: T | WatchSource<T>,\r\n  cb: any,\r\n  options?: WatchOptions<Immediate>,\r\n): WatchStopHandle {\r\n  if (__DEV__ && !isFunction(cb)) {\r\n    warn(\r\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n        `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n        `supports \\`watch(source, cb, options?) signature.`,\r\n    )\r\n  }\r\n  return doWatch(source as any, cb, options)\r\n}\r\n\r\nfunction doWatch(\r\n  source: WatchSource | WatchSource[] | WatchEffect | object,\r\n  cb: WatchCallback | null,\r\n  {\r\n    immediate,\r\n    deep,\r\n    flush,\r\n    once,\r\n    onTrack,\r\n    onTrigger,\r\n  }: WatchOptions = EMPTY_OBJ,\r\n): WatchStopHandle {\r\n  if (cb && once) {\r\n    const _cb = cb\r\n    cb = (...args) => {\r\n      _cb(...args)\r\n      unwatch()\r\n    }\r\n  }\r\n\r\n  // TODO remove in 3.5\r\n  if (__DEV__ && deep !== void 0 && typeof deep === 'number') {\r\n    warn(\r\n      `watch() \"deep\" option with number value will be used as watch depth in future versions. ` +\r\n        `Please use a boolean instead to avoid potential breakage.`,\r\n    )\r\n  }\r\n\r\n  if (__DEV__ && !cb) {\r\n    if (immediate !== undefined) {\r\n      warn(\r\n        `watch() \"immediate\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`,\r\n      )\r\n    }\r\n    if (deep !== undefined) {\r\n      warn(\r\n        `watch() \"deep\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`,\r\n      )\r\n    }\r\n    if (once !== undefined) {\r\n      warn(\r\n        `watch() \"once\" option is only respected when using the ` +\r\n          `watch(source, callback, options?) signature.`,\r\n      )\r\n    }\r\n  }\r\n\r\n  const warnInvalidSource = (s: unknown) => {\r\n    warn(\r\n      `Invalid watch source: `,\r\n      s,\r\n      `A watch source can only be a getter/effect function, a ref, ` +\r\n        `a reactive object, or an array of these types.`,\r\n    )\r\n  }\r\n\r\n  const instance = currentInstance\r\n  const reactiveGetter = (source: object) =>\r\n    deep === true\r\n      ? source // traverse will happen in wrapped getter below\r\n      : // for deep: false, only traverse root-level properties\r\n        traverse(source, deep === false ? 1 : undefined)\r\n\r\n  let getter: () => any\r\n  let forceTrigger = false\r\n  let isMultiSource = false\r\n\r\n  if (isRef(source)) {\r\n    getter = () => source.value\r\n    forceTrigger = isShallow(source)\r\n  } else if (isReactive(source)) {\r\n    getter = () => reactiveGetter(source)\r\n    forceTrigger = true\r\n  } else if (isArray(source)) {\r\n    isMultiSource = true\r\n    forceTrigger = source.some(s => isReactive(s) || isShallow(s))\r\n    getter = () =>\r\n      source.map(s => {\r\n        if (isRef(s)) {\r\n          return s.value\r\n        } else if (isReactive(s)) {\r\n          return reactiveGetter(s)\r\n        } else if (isFunction(s)) {\r\n          return callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER)\r\n        } else {\r\n          __DEV__ && warnInvalidSource(s)\r\n        }\r\n      })\r\n  } else if (isFunction(source)) {\r\n    if (cb) {\r\n      // getter with cb\r\n      getter = () =>\r\n        callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER)\r\n    } else {\r\n      // no cb -> simple effect\r\n      getter = () => {\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        return callWithAsyncErrorHandling(\r\n          source,\r\n          instance,\r\n          ErrorCodes.WATCH_CALLBACK,\r\n          [onCleanup],\r\n        )\r\n      }\r\n    }\r\n  } else {\r\n    getter = NOOP\r\n    __DEV__ && warnInvalidSource(source)\r\n  }\r\n\r\n  // 2.x array mutation watch compat\r\n  if (__COMPAT__ && cb && !deep) {\r\n    const baseGetter = getter\r\n    getter = () => {\r\n      const val = baseGetter()\r\n      if (\r\n        isArray(val) &&\r\n        checkCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance)\r\n      ) {\r\n        traverse(val)\r\n      }\r\n      return val\r\n    }\r\n  }\r\n\r\n  if (cb && deep) {\r\n    const baseGetter = getter\r\n    getter = () => traverse(baseGetter())\r\n  }\r\n\r\n  let cleanup: (() => void) | undefined\r\n  let onCleanup: OnCleanup = (fn: () => void) => {\r\n    cleanup = effect.onStop = () => {\r\n      callWithErrorHandling(fn, instance, ErrorCodes.WATCH_CLEANUP)\r\n      cleanup = effect.onStop = undefined\r\n    }\r\n  }\r\n\r\n  // in SSR there is no need to setup an actual effect, and it should be noop\r\n  // unless it's eager or sync flush\r\n  let ssrCleanup: (() => void)[] | undefined\r\n  if (__SSR__ && isInSSRComponentSetup) {\r\n    // we will also not call the invalidate callback (+ runner is not set up)\r\n    onCleanup = NOOP\r\n    if (!cb) {\r\n      getter()\r\n    } else if (immediate) {\r\n      callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n        getter(),\r\n        isMultiSource ? [] : undefined,\r\n        onCleanup,\r\n      ])\r\n    }\r\n    if (flush === 'sync') {\r\n      const ctx = useSSRContext()!\r\n      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = [])\r\n    } else {\r\n      return NOOP\r\n    }\r\n  }\r\n\r\n  let oldValue: any = isMultiSource\r\n    ? new Array((source as []).length).fill(INITIAL_WATCHER_VALUE)\r\n    : INITIAL_WATCHER_VALUE\r\n  const job: SchedulerJob = () => {\r\n    if (!effect.active || !effect.dirty) {\r\n      return\r\n    }\r\n    if (cb) {\r\n      // watch(source, cb)\r\n      const newValue = effect.run()\r\n      if (\r\n        deep ||\r\n        forceTrigger ||\r\n        (isMultiSource\r\n          ? (newValue as any[]).some((v, i) => hasChanged(v, oldValue[i]))\r\n          : hasChanged(newValue, oldValue)) ||\r\n        (__COMPAT__ &&\r\n          isArray(newValue) &&\r\n          isCompatEnabled(DeprecationTypes.WATCH_ARRAY, instance))\r\n      ) {\r\n        // cleanup before running cb again\r\n        if (cleanup) {\r\n          cleanup()\r\n        }\r\n        callWithAsyncErrorHandling(cb, instance, ErrorCodes.WATCH_CALLBACK, [\r\n          newValue,\r\n          // pass undefined as the old value when it's changed for the first time\r\n          oldValue === INITIAL_WATCHER_VALUE\r\n            ? undefined\r\n            : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE\r\n              ? []\r\n              : oldValue,\r\n          onCleanup,\r\n        ])\r\n        oldValue = newValue\r\n      }\r\n    } else {\r\n      // watchEffect\r\n      effect.run()\r\n    }\r\n  }\r\n\r\n  // important: mark the job as a watcher callback so that scheduler knows\r\n  // it is allowed to self-trigger (#1727)\r\n  job.allowRecurse = !!cb\r\n\r\n  let scheduler: EffectScheduler\r\n  if (flush === 'sync') {\r\n    scheduler = job as any // the scheduler function gets called directly\r\n  } else if (flush === 'post') {\r\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense)\r\n  } else {\r\n    // default: 'pre'\r\n    job.pre = true\r\n    if (instance) job.id = instance.uid\r\n    scheduler = () => queueJob(job)\r\n  }\r\n\r\n  const effect = new ReactiveEffect(getter, NOOP, scheduler)\r\n\r\n  const scope = getCurrentScope()\r\n  const unwatch = () => {\r\n    effect.stop()\r\n    if (scope) {\r\n      remove(scope.effects, effect)\r\n    }\r\n  }\r\n\r\n  if (__DEV__) {\r\n    effect.onTrack = onTrack\r\n    effect.onTrigger = onTrigger\r\n  }\r\n\r\n  // initial run\r\n  if (cb) {\r\n    if (immediate) {\r\n      job()\r\n    } else {\r\n      oldValue = effect.run()\r\n    }\r\n  } else if (flush === 'post') {\r\n    queuePostRenderEffect(\r\n      effect.run.bind(effect),\r\n      instance && instance.suspense,\r\n    )\r\n  } else {\r\n    effect.run()\r\n  }\r\n\r\n  if (__SSR__ && ssrCleanup) ssrCleanup.push(unwatch)\r\n  return unwatch\r\n}\r\n\r\n// this.$watch\r\nexport function instanceWatch(\r\n  this: ComponentInternalInstance,\r\n  source: string | Function,\r\n  value: WatchCallback | ObjectWatchOptionItem,\r\n  options?: WatchOptions,\r\n): WatchStopHandle {\r\n  const publicThis = this.proxy as any\r\n  const getter = isString(source)\r\n    ? source.includes('.')\r\n      ? createPathGetter(publicThis, source)\r\n      : () => publicThis[source]\r\n    : source.bind(publicThis, publicThis)\r\n  let cb\r\n  if (isFunction(value)) {\r\n    cb = value\r\n  } else {\r\n    cb = value.handler as Function\r\n    options = value\r\n  }\r\n  const reset = setCurrentInstance(this)\r\n  const res = doWatch(getter, cb.bind(publicThis), options)\r\n  reset()\r\n  return res\r\n}\r\n\r\nexport function createPathGetter(ctx: any, path: string) {\r\n  const segments = path.split('.')\r\n  return () => {\r\n    let cur = ctx\r\n    for (let i = 0; i < segments.length && cur; i++) {\r\n      cur = cur[segments[i]]\r\n    }\r\n    return cur\r\n  }\r\n}\r\n\r\n/**\r\n * 递归遍历对象的每一个属性\r\n * @param value \r\n * @param depth \r\n * @param currentDepth \r\n * @param seen \r\n * @returns \r\n */\r\nexport function traverse(\r\n  value: unknown,\r\n  depth?: number,\r\n  currentDepth = 0,\r\n  seen?: Set<unknown>,\r\n) {\r\n  if (!isObject(value) || (value as any)[ReactiveFlags.SKIP]) {\r\n    return value\r\n  }\r\n\r\n  if (depth && depth > 0) {\r\n    if (currentDepth >= depth) {\r\n      return value\r\n    }\r\n    currentDepth++\r\n  }\r\n\r\n  seen = seen || new Set()\r\n  if (seen.has(value)) {\r\n    return value\r\n  }\r\n  seen.add(value)\r\n  if (isRef(value)) {\r\n    traverse(value.value, depth, currentDepth, seen)\r\n  } else if (isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      traverse(value[i], depth, currentDepth, seen)\r\n    }\r\n  } else if (isSet(value) || isMap(value)) {\r\n    value.forEach((v: any) => {\r\n      traverse(v, depth, currentDepth, seen)\r\n    })\r\n  } else if (isPlainObject(value)) {\r\n    for (const key in value) {\r\n      traverse(value[key], depth, currentDepth, seen)\r\n    }\r\n  }\r\n  return value\r\n}\r\n","/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\r\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\r\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\n\r\nimport type { VNode } from './vnode'\r\nimport { EMPTY_OBJ, isBuiltInDirective, isFunction } from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport {\r\n  type ComponentInternalInstance,\r\n  type Data,\r\n  getExposeProxy,\r\n} from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { ErrorCodes, callWithAsyncErrorHandling } from './errorHandling'\r\nimport type { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { mapCompatDirectiveHook } from './compat/customDirective'\r\nimport { pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { traverse } from './apiWatch'\r\n\r\nexport interface DirectiveBinding<V = any> {\r\n  instance: ComponentPublicInstance | null\r\n  value: V\r\n  oldValue: V | null\r\n  arg?: string\r\n  modifiers: DirectiveModifiers\r\n  dir: ObjectDirective<any, V>\r\n}\r\n\r\nexport type DirectiveHook<T = any, Prev = VNode<any, T> | null, V = any> = (\r\n  el: T,\r\n  binding: DirectiveBinding<V>,\r\n  vnode: VNode<any, T>,\r\n  prevVNode: Prev,\r\n) => void\r\n\r\nexport type SSRDirectiveHook = (\r\n  binding: DirectiveBinding,\r\n  vnode: VNode,\r\n) => Data | undefined\r\n\r\nexport interface ObjectDirective<T = any, V = any> {\r\n  created?: DirectiveHook<T, null, V>\r\n  beforeMount?: DirectiveHook<T, null, V>\r\n  mounted?: DirectiveHook<T, null, V>\r\n  beforeUpdate?: DirectiveHook<T, VNode<any, T>, V>\r\n  updated?: DirectiveHook<T, VNode<any, T>, V>\r\n  beforeUnmount?: DirectiveHook<T, null, V>\r\n  unmounted?: DirectiveHook<T, null, V>\r\n  getSSRProps?: SSRDirectiveHook\r\n  deep?: boolean\r\n}\r\n\r\nexport type FunctionDirective<T = any, V = any> = DirectiveHook<T, any, V>\r\n\r\nexport type Directive<T = any, V = any> =\r\n  | ObjectDirective<T, V>\r\n  | FunctionDirective<T, V>\r\n\r\nexport type DirectiveModifiers = Record<string, boolean>\r\n\r\nexport function validateDirectiveName(name: string) {\r\n  if (isBuiltInDirective(name)) {\r\n    warn('Do not use built-in directive ids as custom directive id: ' + name)\r\n  }\r\n}\r\n\r\n// Directive, value, argument, modifiers\r\nexport type DirectiveArguments = Array<\r\n  | [Directive | undefined]\r\n  | [Directive | undefined, any]\r\n  | [Directive | undefined, any, string]\r\n  | [Directive | undefined, any, string, DirectiveModifiers]\r\n>\r\n\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nexport function withDirectives<T extends VNode>(\r\n  vnode: T,\r\n  directives: DirectiveArguments,\r\n): T {\r\n  if (currentRenderingInstance === null) {\r\n    __DEV__ && warn(`withDirectives can only be used inside render functions.`)\r\n    return vnode\r\n  }\r\n  const instance =\r\n    (getExposeProxy(currentRenderingInstance) as ComponentPublicInstance) ||\r\n    currentRenderingInstance.proxy\r\n  const bindings: DirectiveBinding[] = vnode.dirs || (vnode.dirs = [])\r\n  for (let i = 0; i < directives.length; i++) {\r\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i]\r\n    if (dir) {\r\n      if (isFunction(dir)) {\r\n        dir = {\r\n          mounted: dir,\r\n          updated: dir,\r\n        } as ObjectDirective\r\n      }\r\n      if (dir.deep) {\r\n        traverse(value)\r\n      }\r\n      bindings.push({\r\n        dir,\r\n        instance,\r\n        value,\r\n        oldValue: void 0,\r\n        arg,\r\n        modifiers,\r\n      })\r\n    }\r\n  }\r\n  return vnode\r\n}\r\n\r\nexport function invokeDirectiveHook(\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  instance: ComponentInternalInstance | null,\r\n  name: keyof ObjectDirective,\r\n) {\r\n  const bindings = vnode.dirs!\r\n  const oldBindings = prevVNode && prevVNode.dirs!\r\n  for (let i = 0; i < bindings.length; i++) {\r\n    const binding = bindings[i]\r\n    if (oldBindings) {\r\n      binding.oldValue = oldBindings[i].value\r\n    }\r\n    let hook = binding.dir[name] as DirectiveHook | DirectiveHook[] | undefined\r\n    if (__COMPAT__ && !hook) {\r\n      hook = mapCompatDirectiveHook(name, binding.dir, instance)\r\n    }\r\n    if (hook) {\r\n      // disable tracking inside all lifecycle hooks\r\n      // since they can potentially be called inside effects.\r\n      pauseTracking()\r\n      callWithAsyncErrorHandling(hook, instance, ErrorCodes.DIRECTIVE_HOOK, [\r\n        vnode.el,\r\n        binding,\r\n        vnode,\r\n        prevVNode,\r\n      ])\r\n      resetTracking()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  type ComponentInternalInstance,\r\n  type ComponentOptions,\r\n  type SetupContext,\r\n  getCurrentInstance,\r\n} from '../component'\r\nimport {\r\n  Comment,\r\n  Fragment,\r\n  type VNode,\r\n  type VNodeArrayChildren,\r\n  cloneVNode,\r\n  isSameVNodeType,\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport { isKeepAlive } from './KeepAlive'\r\nimport { toRaw } from '@vue/reactivity'\r\nimport { ErrorCodes, callWithAsyncErrorHandling } from '../errorHandling'\r\nimport { PatchFlags, ShapeFlags, isArray } from '@vue/shared'\r\nimport { onBeforeUnmount, onMounted } from '../apiLifecycle'\r\nimport type { RendererElement } from '../renderer'\r\n\r\ntype Hook<T = () => void> = T | T[]\r\n\r\nconst leaveCbKey = Symbol('_leaveCb')\r\nconst enterCbKey = Symbol('_enterCb')\r\n\r\nexport interface BaseTransitionProps<HostElement = RendererElement> {\r\n  mode?: 'in-out' | 'out-in' | 'default'\r\n  appear?: boolean\r\n\r\n  // If true, indicates this is a transition that doesn't actually insert/remove\r\n  // the element, but toggles the show / hidden status instead.\r\n  // The transition hooks are injected, but will be skipped by the renderer.\r\n  // Instead, a custom directive can control the transition by calling the\r\n  // injected hooks (e.g. v-show).\r\n  persisted?: boolean\r\n\r\n  // Hooks. Using camel case for easier usage in render functions & JSX.\r\n  // In templates these can be written as @before-enter=\"xxx\" as prop names\r\n  // are camelized.\r\n  onBeforeEnter?: Hook<(el: HostElement) => void>\r\n  onEnter?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterEnter?: Hook<(el: HostElement) => void>\r\n  onEnterCancelled?: Hook<(el: HostElement) => void>\r\n  // leave\r\n  onBeforeLeave?: Hook<(el: HostElement) => void>\r\n  onLeave?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterLeave?: Hook<(el: HostElement) => void>\r\n  onLeaveCancelled?: Hook<(el: HostElement) => void> // only fired in persisted mode\r\n  // appear\r\n  onBeforeAppear?: Hook<(el: HostElement) => void>\r\n  onAppear?: Hook<(el: HostElement, done: () => void) => void>\r\n  onAfterAppear?: Hook<(el: HostElement) => void>\r\n  onAppearCancelled?: Hook<(el: HostElement) => void>\r\n}\r\n\r\nexport interface TransitionHooks<HostElement = RendererElement> {\r\n  mode: BaseTransitionProps['mode']\r\n  persisted: boolean\r\n  beforeEnter(el: HostElement): void\r\n  enter(el: HostElement): void\r\n  leave(el: HostElement, remove: () => void): void\r\n  clone(vnode: VNode): TransitionHooks<HostElement>\r\n  // optional\r\n  afterLeave?(): void\r\n  delayLeave?(\r\n    el: HostElement,\r\n    earlyRemove: () => void,\r\n    delayedLeave: () => void,\r\n  ): void\r\n  delayedLeave?(): void\r\n}\r\n\r\nexport type TransitionHookCaller = <T extends any[] = [el: any]>(\r\n  hook: Hook<(...args: T) => void> | undefined,\r\n  args?: T,\r\n) => void\r\n\r\nexport type PendingCallback = (cancelled?: boolean) => void\r\n\r\nexport interface TransitionState {\r\n  isMounted: boolean\r\n  isLeaving: boolean\r\n  isUnmounting: boolean\r\n  // Track pending leave callbacks for children of the same key.\r\n  // This is used to force remove leaving a child when a new copy is entering.\r\n  leavingVNodes: Map<any, Record<string, VNode>>\r\n}\r\n\r\nexport interface TransitionElement {\r\n  // in persisted mode (e.g. v-show), the same element is toggled, so the\r\n  // pending enter/leave callbacks may need to be cancelled if the state is toggled\r\n  // before it finishes.\r\n  [enterCbKey]?: PendingCallback\r\n  [leaveCbKey]?: PendingCallback\r\n}\r\n\r\nexport function useTransitionState(): TransitionState {\r\n  const state: TransitionState = {\r\n    isMounted: false,\r\n    isLeaving: false,\r\n    isUnmounting: false,\r\n    leavingVNodes: new Map(),\r\n  }\r\n  onMounted(() => {\r\n    state.isMounted = true\r\n  })\r\n  onBeforeUnmount(() => {\r\n    state.isUnmounting = true\r\n  })\r\n  return state\r\n}\r\n\r\nconst TransitionHookValidator = [Function, Array]\r\n\r\nexport const BaseTransitionPropsValidators = {\r\n  mode: String,\r\n  appear: Boolean,\r\n  persisted: Boolean,\r\n  // enter\r\n  onBeforeEnter: TransitionHookValidator,\r\n  onEnter: TransitionHookValidator,\r\n  onAfterEnter: TransitionHookValidator,\r\n  onEnterCancelled: TransitionHookValidator,\r\n  // leave\r\n  onBeforeLeave: TransitionHookValidator,\r\n  onLeave: TransitionHookValidator,\r\n  onAfterLeave: TransitionHookValidator,\r\n  onLeaveCancelled: TransitionHookValidator,\r\n  // appear\r\n  onBeforeAppear: TransitionHookValidator,\r\n  onAppear: TransitionHookValidator,\r\n  onAfterAppear: TransitionHookValidator,\r\n  onAppearCancelled: TransitionHookValidator,\r\n}\r\n\r\nconst BaseTransitionImpl: ComponentOptions = {\r\n  name: `BaseTransition`,\r\n\r\n  props: BaseTransitionPropsValidators,\r\n\r\n  setup(props: BaseTransitionProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n\r\n    let prevTransitionKey: any\r\n\r\n    return () => {\r\n      const children =\r\n        slots.default && getTransitionRawChildren(slots.default(), true)\r\n      if (!children || !children.length) {\r\n        return\r\n      }\r\n\r\n      let child: VNode = children[0]\r\n      if (children.length > 1) {\r\n        let hasFound = false\r\n        // locate first non-comment child\r\n        for (const c of children) {\r\n          if (c.type !== Comment) {\r\n            if (__DEV__ && hasFound) {\r\n              // warn more than one non-comment child\r\n              warn(\r\n                '<transition> can only be used on a single element or component. ' +\r\n                  'Use <transition-group> for lists.',\r\n              )\r\n              break\r\n            }\r\n            child = c\r\n            hasFound = true\r\n            if (!__DEV__) break\r\n          }\r\n        }\r\n      }\r\n\r\n      // there's no need to track reactivity for these props so use the raw\r\n      // props for a bit better perf\r\n      const rawProps = toRaw(props)\r\n      const { mode } = rawProps\r\n      // check mode\r\n      if (\r\n        __DEV__ &&\r\n        mode &&\r\n        mode !== 'in-out' &&\r\n        mode !== 'out-in' &&\r\n        mode !== 'default'\r\n      ) {\r\n        warn(`invalid <transition> mode: ${mode}`)\r\n      }\r\n\r\n      if (state.isLeaving) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      // in the case of <transition><keep-alive/></transition>, we need to\r\n      // compare the type of the kept-alive children.\r\n      const innerChild = getKeepAliveChild(child)\r\n      if (!innerChild) {\r\n        return emptyPlaceholder(child)\r\n      }\r\n\r\n      const enterHooks = resolveTransitionHooks(\r\n        innerChild,\r\n        rawProps,\r\n        state,\r\n        instance,\r\n      )\r\n      setTransitionHooks(innerChild, enterHooks)\r\n\r\n      const oldChild = instance.subTree\r\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild)\r\n\r\n      let transitionKeyChanged = false\r\n      const { getTransitionKey } = innerChild.type as any\r\n      if (getTransitionKey) {\r\n        const key = getTransitionKey()\r\n        if (prevTransitionKey === undefined) {\r\n          prevTransitionKey = key\r\n        } else if (key !== prevTransitionKey) {\r\n          prevTransitionKey = key\r\n          transitionKeyChanged = true\r\n        }\r\n      }\r\n\r\n      // handle mode\r\n      if (\r\n        oldInnerChild &&\r\n        oldInnerChild.type !== Comment &&\r\n        (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)\r\n      ) {\r\n        const leavingHooks = resolveTransitionHooks(\r\n          oldInnerChild,\r\n          rawProps,\r\n          state,\r\n          instance,\r\n        )\r\n        // update old tree's hooks in case of dynamic transition\r\n        setTransitionHooks(oldInnerChild, leavingHooks)\r\n        // switching between different views\r\n        if (mode === 'out-in') {\r\n          state.isLeaving = true\r\n          // return placeholder node and queue update when leave finishes\r\n          leavingHooks.afterLeave = () => {\r\n            state.isLeaving = false\r\n            // #6835\r\n            // it also needs to be updated when active is undefined\r\n            if (instance.update.active !== false) {\r\n              instance.effect.dirty = true\r\n              instance.update()\r\n            }\r\n          }\r\n          return emptyPlaceholder(child)\r\n        } else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n          leavingHooks.delayLeave = (\r\n            el: TransitionElement,\r\n            earlyRemove,\r\n            delayedLeave,\r\n          ) => {\r\n            const leavingVNodesCache = getLeavingNodesForType(\r\n              state,\r\n              oldInnerChild,\r\n            )\r\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild\r\n            // early removal callback\r\n            el[leaveCbKey] = () => {\r\n              earlyRemove()\r\n              el[leaveCbKey] = undefined\r\n              delete enterHooks.delayedLeave\r\n            }\r\n            enterHooks.delayedLeave = delayedLeave\r\n          }\r\n        }\r\n      }\r\n\r\n      return child\r\n    }\r\n  },\r\n}\r\n\r\nif (__COMPAT__) {\r\n  BaseTransitionImpl.__isBuiltIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const BaseTransition = BaseTransitionImpl as unknown as {\r\n  new (): {\r\n    $props: BaseTransitionProps<any>\r\n    $slots: {\r\n      default(): VNode[]\r\n    }\r\n  }\r\n}\r\n\r\nfunction getLeavingNodesForType(\r\n  state: TransitionState,\r\n  vnode: VNode,\r\n): Record<string, VNode> {\r\n  const { leavingVNodes } = state\r\n  let leavingVNodesCache = leavingVNodes.get(vnode.type)!\r\n  if (!leavingVNodesCache) {\r\n    leavingVNodesCache = Object.create(null)\r\n    leavingVNodes.set(vnode.type, leavingVNodesCache)\r\n  }\r\n  return leavingVNodesCache\r\n}\r\n\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nexport function resolveTransitionHooks(\r\n  vnode: VNode,\r\n  props: BaseTransitionProps<any>,\r\n  state: TransitionState,\r\n  instance: ComponentInternalInstance,\r\n): TransitionHooks {\r\n  const {\r\n    appear,\r\n    mode,\r\n    persisted = false,\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onAfterEnter,\r\n    onEnterCancelled,\r\n    onBeforeLeave,\r\n    onLeave,\r\n    onAfterLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear,\r\n    onAppear,\r\n    onAfterAppear,\r\n    onAppearCancelled,\r\n  } = props\r\n  const key = String(vnode.key)\r\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode)\r\n\r\n  const callHook: TransitionHookCaller = (hook, args) => {\r\n    hook &&\r\n      callWithAsyncErrorHandling(\r\n        hook,\r\n        instance,\r\n        ErrorCodes.TRANSITION_HOOK,\r\n        args,\r\n      )\r\n  }\r\n\r\n  const callAsyncHook = (\r\n    hook: Hook<(el: any, done: () => void) => void>,\r\n    args: [TransitionElement, () => void],\r\n  ) => {\r\n    const done = args[1]\r\n    callHook(hook, args)\r\n    if (isArray(hook)) {\r\n      if (hook.every(hook => hook.length <= 1)) done()\r\n    } else if (hook.length <= 1) {\r\n      done()\r\n    }\r\n  }\r\n\r\n  const hooks: TransitionHooks<TransitionElement> = {\r\n    mode,\r\n    persisted,\r\n    beforeEnter(el) {\r\n      let hook = onBeforeEnter\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onBeforeAppear || onBeforeEnter\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      // for same element (v-show)\r\n      if (el[leaveCbKey]) {\r\n        el[leaveCbKey](true /* cancelled */)\r\n      }\r\n      // for toggled element with same key (v-if)\r\n      const leavingVNode = leavingVNodesCache[key]\r\n      if (\r\n        leavingVNode &&\r\n        isSameVNodeType(vnode, leavingVNode) &&\r\n        (leavingVNode.el as TransitionElement)[leaveCbKey]\r\n      ) {\r\n        // force early removal (not cancelled)\r\n        ;(leavingVNode.el as TransitionElement)[leaveCbKey]!()\r\n      }\r\n      callHook(hook, [el])\r\n    },\r\n\r\n    enter(el) {\r\n      let hook = onEnter\r\n      let afterHook = onAfterEnter\r\n      let cancelHook = onEnterCancelled\r\n      if (!state.isMounted) {\r\n        if (appear) {\r\n          hook = onAppear || onEnter\r\n          afterHook = onAfterAppear || onAfterEnter\r\n          cancelHook = onAppearCancelled || onEnterCancelled\r\n        } else {\r\n          return\r\n        }\r\n      }\r\n      let called = false\r\n      const done = (el[enterCbKey] = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        if (cancelled) {\r\n          callHook(cancelHook, [el])\r\n        } else {\r\n          callHook(afterHook, [el])\r\n        }\r\n        if (hooks.delayedLeave) {\r\n          hooks.delayedLeave()\r\n        }\r\n        el[enterCbKey] = undefined\r\n      })\r\n      if (hook) {\r\n        callAsyncHook(hook, [el, done])\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    leave(el, remove) {\r\n      const key = String(vnode.key)\r\n      if (el[enterCbKey]) {\r\n        el[enterCbKey](true /* cancelled */)\r\n      }\r\n      if (state.isUnmounting) {\r\n        return remove()\r\n      }\r\n      callHook(onBeforeLeave, [el])\r\n      let called = false\r\n      const done = (el[leaveCbKey] = (cancelled?) => {\r\n        if (called) return\r\n        called = true\r\n        remove()\r\n        if (cancelled) {\r\n          callHook(onLeaveCancelled, [el])\r\n        } else {\r\n          callHook(onAfterLeave, [el])\r\n        }\r\n        el[leaveCbKey] = undefined\r\n        if (leavingVNodesCache[key] === vnode) {\r\n          delete leavingVNodesCache[key]\r\n        }\r\n      })\r\n      leavingVNodesCache[key] = vnode\r\n      if (onLeave) {\r\n        callAsyncHook(onLeave, [el, done])\r\n      } else {\r\n        done()\r\n      }\r\n    },\r\n\r\n    clone(vnode) {\r\n      return resolveTransitionHooks(vnode, props, state, instance)\r\n    },\r\n  }\r\n\r\n  return hooks\r\n}\r\n\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode: VNode): VNode | undefined {\r\n  if (isKeepAlive(vnode)) {\r\n    vnode = cloneVNode(vnode)\r\n    vnode.children = null\r\n    return vnode\r\n  }\r\n}\r\n\r\nfunction getKeepAliveChild(vnode: VNode): VNode | undefined {\r\n  return isKeepAlive(vnode)\r\n    ? // #7121 ensure get the child component subtree in case\r\n      // it's been replaced during HMR\r\n      __DEV__ && vnode.component\r\n      ? vnode.component.subTree\r\n      : vnode.children\r\n        ? ((vnode.children as VNodeArrayChildren)[0] as VNode)\r\n        : undefined\r\n    : vnode\r\n}\r\n\r\nexport function setTransitionHooks(vnode: VNode, hooks: TransitionHooks) {\r\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && vnode.component) {\r\n    setTransitionHooks(vnode.component.subTree, hooks)\r\n  } else if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    vnode.ssContent!.transition = hooks.clone(vnode.ssContent!)\r\n    vnode.ssFallback!.transition = hooks.clone(vnode.ssFallback!)\r\n  } else {\r\n    vnode.transition = hooks\r\n  }\r\n}\r\n\r\nexport function getTransitionRawChildren(\r\n  children: VNode[],\r\n  keepComment: boolean = false,\r\n  parentKey?: VNode['key'],\r\n): VNode[] {\r\n  let ret: VNode[] = []\r\n  let keyedFragmentCount = 0\r\n  for (let i = 0; i < children.length; i++) {\r\n    let child = children[i]\r\n    // #5360 inherit parent key in case of <template v-for>\r\n    const key =\r\n      parentKey == null\r\n        ? child.key\r\n        : String(parentKey) + String(child.key != null ? child.key : i)\r\n    // handle fragment children case, e.g. v-for\r\n    if (child.type === Fragment) {\r\n      if (child.patchFlag & PatchFlags.KEYED_FRAGMENT) keyedFragmentCount++\r\n      ret = ret.concat(\r\n        getTransitionRawChildren(child.children as VNode[], keepComment, key),\r\n      )\r\n    }\r\n    // comment placeholders should be skipped, e.g. v-if\r\n    else if (keepComment || child.type !== Comment) {\r\n      ret.push(key != null ? cloneVNode(child, { key }) : child)\r\n    }\r\n  }\r\n  // #1126 if a transition children list contains multiple sub fragments, these\r\n  // fragments will be merged into a flat children array. Since each v-for\r\n  // fragment may contain different static bindings inside, we need to de-op\r\n  // these children to force full diffs to ensure correct behavior.\r\n  if (keyedFragmentCount > 1) {\r\n    for (let i = 0; i < ret.length; i++) {\r\n      ret[i].patchFlag = PatchFlags.BAIL\r\n    }\r\n  }\r\n  return ret\r\n}\r\n","import type {\r\n  ComponentInjectOptions,\r\n  ComponentOptions,\r\n  ComponentOptionsBase,\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithoutProps,\r\n  ComputedOptions,\r\n  MethodOptions,\r\n  RenderFunction,\r\n} from './componentOptions'\r\nimport type {\r\n  AllowedComponentProps,\r\n  ComponentCustomProps,\r\n  SetupContext,\r\n} from './component'\r\nimport type {\r\n  ComponentObjectPropsOptions,\r\n  ComponentPropsOptions,\r\n  ExtractDefaultPropTypes,\r\n  ExtractPropTypes,\r\n} from './componentProps'\r\nimport type { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport { extend, isFunction } from '@vue/shared'\r\nimport type { VNodeProps } from './vnode'\r\nimport type {\r\n  ComponentPublicInstanceConstructor,\r\n  CreateComponentPublicInstance,\r\n} from './componentPublicInstance'\r\nimport type { SlotsType } from './componentSlots'\r\n\r\nexport type PublicProps = VNodeProps &\r\n  AllowedComponentProps &\r\n  ComponentCustomProps\r\n\r\ntype ResolveProps<PropsOrPropOptions, E extends EmitsOptions> = Readonly<\r\n  PropsOrPropOptions extends ComponentPropsOptions\r\n    ? ExtractPropTypes<PropsOrPropOptions>\r\n    : PropsOrPropOptions\r\n> &\r\n  ({} extends E ? {} : EmitsToProps<E>)\r\n\r\nexport type DefineComponent<\r\n  PropsOrPropOptions = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions,\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string,\r\n  PP = PublicProps,\r\n  Props = ResolveProps<PropsOrPropOptions, E>,\r\n  Defaults = ExtractDefaultPropTypes<PropsOrPropOptions>,\r\n  S extends SlotsType = {},\r\n> = ComponentPublicInstanceConstructor<\r\n  CreateComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    PP & Props,\r\n    Defaults,\r\n    true,\r\n    {},\r\n    S\r\n  >\r\n> &\r\n  ComponentOptionsBase<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    Defaults,\r\n    {},\r\n    string,\r\n    S\r\n  > &\r\n  PP\r\n\r\n// defineComponent is a utility that is primarily used for type inference\r\n// when declaring components. Type inference is provided in the component\r\n// options (provided as the argument). The returned value has artificial types\r\n// for TSX / manual render function / IDE support.\r\n\r\n// overload 1: direct setup function\r\n// (uses user defined props interface)\r\nexport function defineComponent<\r\n  Props extends Record<string, any>,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string,\r\n  S extends SlotsType = {},\r\n>(\r\n  setup: (\r\n    props: Props,\r\n    ctx: SetupContext<E, S>,\r\n  ) => RenderFunction | Promise<RenderFunction>,\r\n  options?: Pick<ComponentOptions, 'name' | 'inheritAttrs'> & {\r\n    props?: (keyof Props)[]\r\n    emits?: E | EE[]\r\n    slots?: S\r\n  },\r\n): (props: Props & EmitsToProps<E>) => any\r\nexport function defineComponent<\r\n  Props extends Record<string, any>,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string,\r\n  S extends SlotsType = {},\r\n>(\r\n  setup: (\r\n    props: Props,\r\n    ctx: SetupContext<E, S>,\r\n  ) => RenderFunction | Promise<RenderFunction>,\r\n  options?: Pick<ComponentOptions, 'name' | 'inheritAttrs'> & {\r\n    props?: ComponentObjectPropsOptions<Props>\r\n    emits?: E | EE[]\r\n    slots?: S\r\n  },\r\n): (props: Props & EmitsToProps<E>) => any\r\n\r\n// overload 2: object format with no props\r\n// (uses user defined props interface)\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string,\r\n  S extends SlotsType = {},\r\n  I extends ComponentInjectOptions = {},\r\n  II extends string = string,\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    I,\r\n    II,\r\n    S\r\n  >,\r\n): DefineComponent<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  PublicProps,\r\n  ResolveProps<Props, E>,\r\n  ExtractDefaultPropTypes<Props>,\r\n  S\r\n>\r\n\r\n// overload 3: object format with array props declaration\r\n// props inferred as { [key in PropNames]?: any }\r\n// return type is for Vetur and TSX support\r\nexport function defineComponent<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string,\r\n  S extends SlotsType = {},\r\n  I extends ComponentInjectOptions = {},\r\n  II extends string = string,\r\n  Props = Readonly<{ [key in PropNames]?: any }>,\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    I,\r\n    II,\r\n    S\r\n  >,\r\n): DefineComponent<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  PublicProps,\r\n  ResolveProps<Props, E>,\r\n  ExtractDefaultPropTypes<Props>,\r\n  S\r\n>\r\n\r\n// overload 4: object format with object props declaration\r\n// see `ExtractPropTypes` in ./componentProps.ts\r\nexport function defineComponent<\r\n  // the Readonly constraint allows TS to treat the type of { required: true }\r\n  // as constant instead of boolean.\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  EE extends string = string,\r\n  S extends SlotsType = {},\r\n  I extends ComponentInjectOptions = {},\r\n  II extends string = string,\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    I,\r\n    II,\r\n    S\r\n  >,\r\n): DefineComponent<\r\n  PropsOptions,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  PublicProps,\r\n  ResolveProps<PropsOptions, E>,\r\n  ExtractDefaultPropTypes<PropsOptions>,\r\n  S\r\n>\r\n\r\n// implementation, close to no-op\r\n/*! #__NO_SIDE_EFFECTS__ */\r\nexport function defineComponent(\r\n  options: unknown,\r\n  extraOptions?: ComponentOptions,\r\n) {\r\n  return isFunction(options)\r\n    ? // #8326: extend call and options.name access are considered side-effects\r\n      // by Rollup, so we have to wrap it in a pure-annotated IIFE.\r\n      /*#__PURE__*/ (() =>\r\n        extend({ name: options.name }, extraOptions, { setup: options }))()\r\n    : options\r\n}\r\n","import {\r\n  type Component,\r\n  type ComponentInternalInstance,\r\n  type ComponentOptions,\r\n  type ConcreteComponent,\r\n  currentInstance,\r\n  isInSSRComponentSetup,\r\n} from './component'\r\nimport { isFunction, isObject } from '@vue/shared'\r\nimport type { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { type VNode, createVNode } from './vnode'\r\nimport { defineComponent } from './apiDefineComponent'\r\nimport { warn } from './warning'\r\nimport { ref } from '@vue/reactivity'\r\nimport { ErrorCodes, handleError } from './errorHandling'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { queueJob } from './scheduler'\r\n\r\nexport type AsyncComponentResolveResult<T = Component> = T | { default: T } // es modules\r\n\r\nexport type AsyncComponentLoader<T = any> = () => Promise<\r\n  AsyncComponentResolveResult<T>\r\n>\r\n\r\nexport interface AsyncComponentOptions<T = any> {\r\n  loader: AsyncComponentLoader<T>\r\n  loadingComponent?: Component\r\n  errorComponent?: Component\r\n  delay?: number\r\n  timeout?: number\r\n  suspensible?: boolean\r\n  onError?: (\r\n    error: Error,\r\n    retry: () => void,\r\n    fail: () => void,\r\n    attempts: number,\r\n  ) => any\r\n}\r\n\r\nexport const isAsyncWrapper = (i: ComponentInternalInstance | VNode): boolean =>\r\n  !!(i.type as ComponentOptions).__asyncLoader\r\n\r\n/*! #__NO_SIDE_EFFECTS__ */\r\nexport function defineAsyncComponent<\r\n  T extends Component = { new (): ComponentPublicInstance },\r\n>(source: AsyncComponentLoader<T> | AsyncComponentOptions<T>): T {\r\n  if (isFunction(source)) {\r\n    source = { loader: source }\r\n  }\r\n\r\n  const {\r\n    loader,\r\n    loadingComponent,\r\n    errorComponent,\r\n    delay = 200,\r\n    timeout, // undefined = never times out\r\n    suspensible = true,\r\n    onError: userOnError,\r\n  } = source\r\n\r\n  let pendingRequest: Promise<ConcreteComponent> | null = null\r\n  let resolvedComp: ConcreteComponent | undefined\r\n\r\n  let retries = 0\r\n  const retry = () => {\r\n    retries++\r\n    pendingRequest = null\r\n    return load()\r\n  }\r\n\r\n  const load = (): Promise<ConcreteComponent> => {\r\n    let thisRequest: Promise<ConcreteComponent>\r\n    return (\r\n      pendingRequest ||\r\n      (thisRequest = pendingRequest =\r\n        loader()\r\n          .catch(err => {\r\n            err = err instanceof Error ? err : new Error(String(err))\r\n            if (userOnError) {\r\n              return new Promise((resolve, reject) => {\r\n                const userRetry = () => resolve(retry())\r\n                const userFail = () => reject(err)\r\n                userOnError(err, userRetry, userFail, retries + 1)\r\n              })\r\n            } else {\r\n              throw err\r\n            }\r\n          })\r\n          .then((comp: any) => {\r\n            if (thisRequest !== pendingRequest && pendingRequest) {\r\n              return pendingRequest\r\n            }\r\n            if (__DEV__ && !comp) {\r\n              warn(\r\n                `Async component loader resolved to undefined. ` +\r\n                  `If you are using retry(), make sure to return its return value.`,\r\n              )\r\n            }\r\n            // interop module default\r\n            if (\r\n              comp &&\r\n              (comp.__esModule || comp[Symbol.toStringTag] === 'Module')\r\n            ) {\r\n              comp = comp.default\r\n            }\r\n            if (__DEV__ && comp && !isObject(comp) && !isFunction(comp)) {\r\n              throw new Error(`Invalid async component load result: ${comp}`)\r\n            }\r\n            resolvedComp = comp\r\n            return comp\r\n          }))\r\n    )\r\n  }\r\n\r\n  return defineComponent({\r\n    name: 'AsyncComponentWrapper',\r\n\r\n    __asyncLoader: load,\r\n\r\n    get __asyncResolved() {\r\n      return resolvedComp\r\n    },\r\n\r\n    setup() {\r\n      const instance = currentInstance!\r\n\r\n      // already resolved\r\n      if (resolvedComp) {\r\n        return () => createInnerComp(resolvedComp!, instance)\r\n      }\r\n\r\n      const onError = (err: Error) => {\r\n        pendingRequest = null\r\n        handleError(\r\n          err,\r\n          instance,\r\n          ErrorCodes.ASYNC_COMPONENT_LOADER,\r\n          !errorComponent /* do not throw in dev if user provided error component */,\r\n        )\r\n      }\r\n\r\n      // suspense-controlled or SSR.\r\n      if (\r\n        (__FEATURE_SUSPENSE__ && suspensible && instance.suspense) ||\r\n        (__SSR__ && isInSSRComponentSetup)\r\n      ) {\r\n        return load()\r\n          .then(comp => {\r\n            return () => createInnerComp(comp, instance)\r\n          })\r\n          .catch(err => {\r\n            onError(err)\r\n            return () =>\r\n              errorComponent\r\n                ? createVNode(errorComponent as ConcreteComponent, {\r\n                    error: err,\r\n                  })\r\n                : null\r\n          })\r\n      }\r\n\r\n      const loaded = ref(false)\r\n      const error = ref()\r\n      const delayed = ref(!!delay)\r\n\r\n      if (delay) {\r\n        setTimeout(() => {\r\n          delayed.value = false\r\n        }, delay)\r\n      }\r\n\r\n      if (timeout != null) {\r\n        setTimeout(() => {\r\n          if (!loaded.value && !error.value) {\r\n            const err = new Error(\r\n              `Async component timed out after ${timeout}ms.`,\r\n            )\r\n            onError(err)\r\n            error.value = err\r\n          }\r\n        }, timeout)\r\n      }\r\n\r\n      load()\r\n        .then(() => {\r\n          loaded.value = true\r\n          if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n            // parent is keep-alive, force update so the loaded component's\r\n            // name is taken into account\r\n            instance.parent.effect.dirty = true\r\n            queueJob(instance.parent.update)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          onError(err)\r\n          error.value = err\r\n        })\r\n\r\n      return () => {\r\n        if (loaded.value && resolvedComp) {\r\n          return createInnerComp(resolvedComp, instance)\r\n        } else if (error.value && errorComponent) {\r\n          return createVNode(errorComponent, {\r\n            error: error.value,\r\n          })\r\n        } else if (loadingComponent && !delayed.value) {\r\n          return createVNode(loadingComponent)\r\n        }\r\n      }\r\n    },\r\n  }) as T\r\n}\r\n\r\nfunction createInnerComp(\r\n  comp: ConcreteComponent,\r\n  parent: ComponentInternalInstance,\r\n) {\r\n  const { ref, props, children, ce } = parent.vnode\r\n  const vnode = createVNode(comp, props, children)\r\n  // ensure inner component inherits the async wrapper's ref owner\r\n  vnode.ref = ref\r\n  // pass the custom element callback on to the inner comp\r\n  // and remove it from the async wrapper\r\n  vnode.ce = ce\r\n  delete parent.vnode.ce\r\n\r\n  return vnode\r\n}\r\n","import {\r\n  type ComponentInternalInstance,\r\n  type ComponentOptions,\r\n  type ConcreteComponent,\r\n  type SetupContext,\r\n  currentInstance,\r\n  getComponentName,\r\n  getCurrentInstance,\r\n} from '../component'\r\nimport {\r\n  type VNode,\r\n  type VNodeProps,\r\n  cloneVNode,\r\n  invokeVNodeHook,\r\n  isSameVNodeType,\r\n  isVNode,\r\n} from '../vnode'\r\nimport { warn } from '../warning'\r\nimport {\r\n  injectHook,\r\n  onBeforeUnmount,\r\n  onMounted,\r\n  onUnmounted,\r\n  onUpdated,\r\n} from '../apiLifecycle'\r\nimport {\r\n  ShapeFlags,\r\n  invokeArrayFns,\r\n  isArray,\r\n  isRegExp,\r\n  isString,\r\n  remove,\r\n} from '@vue/shared'\r\nimport { watch } from '../apiWatch'\r\nimport {\r\n  type ElementNamespace,\r\n  MoveType,\r\n  type RendererElement,\r\n  type RendererInternals,\r\n  type RendererNode,\r\n  queuePostRenderEffect,\r\n} from '../renderer'\r\nimport { setTransitionHooks } from './BaseTransition'\r\nimport type { ComponentRenderContext } from '../componentPublicInstance'\r\nimport { devtoolsComponentAdded } from '../devtools'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\nimport { isSuspense } from './Suspense'\r\nimport { LifecycleHooks } from '../enums'\r\n\r\ntype MatchPattern = string | RegExp | (string | RegExp)[]\r\n\r\nexport interface KeepAliveProps {\r\n  include?: MatchPattern\r\n  exclude?: MatchPattern\r\n  max?: number | string\r\n}\r\n\r\ntype CacheKey = string | number | symbol | ConcreteComponent\r\ntype Cache = Map<CacheKey, VNode>\r\ntype Keys = Set<CacheKey>\r\n\r\nexport interface KeepAliveContext extends ComponentRenderContext {\r\n  renderer: RendererInternals\r\n  activate: (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    namespace: ElementNamespace,\r\n    optimized: boolean,\r\n  ) => void\r\n  deactivate: (vnode: VNode) => void\r\n}\r\n\r\nexport const isKeepAlive = (vnode: VNode): boolean =>\r\n  (vnode.type as any).__isKeepAlive\r\n\r\nconst KeepAliveImpl: ComponentOptions = {\r\n  name: `KeepAlive`,\r\n\r\n  // Marker for special handling inside the renderer. We are not using a ===\r\n  // check directly on KeepAlive in the renderer, because importing it directly\r\n  // would prevent it from being tree-shaken.\r\n  __isKeepAlive: true,\r\n\r\n  props: {\r\n    include: [String, RegExp, Array],\r\n    exclude: [String, RegExp, Array],\r\n    max: [String, Number],\r\n  },\r\n\r\n  setup(props: KeepAliveProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    // KeepAlive communicates with the instantiated renderer via the\r\n    // ctx where the renderer passes in its internals,\r\n    // and the KeepAlive instance exposes activate/deactivate implementations.\r\n    // The whole point of this is to avoid importing KeepAlive directly in the\r\n    // renderer to facilitate tree-shaking.\r\n    const sharedContext = instance.ctx as KeepAliveContext\r\n\r\n    // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n    // for KeepAlive, we just need to render its children\r\n    if (__SSR__ && !sharedContext.renderer) {\r\n      return () => {\r\n        const children = slots.default && slots.default()\r\n        return children && children.length === 1 ? children[0] : children\r\n      }\r\n    }\r\n\r\n    const cache: Cache = new Map()\r\n    const keys: Keys = new Set()\r\n    let current: VNode | null = null\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      ;(instance as any).__v_cache = cache\r\n    }\r\n\r\n    const parentSuspense = instance.suspense\r\n\r\n    const {\r\n      renderer: {\r\n        p: patch,\r\n        m: move,\r\n        um: _unmount,\r\n        o: { createElement },\r\n      },\r\n    } = sharedContext\r\n    const storageContainer = createElement('div')\r\n\r\n    sharedContext.activate = (\r\n      vnode,\r\n      container,\r\n      anchor,\r\n      namespace,\r\n      optimized,\r\n    ) => {\r\n      const instance = vnode.component!\r\n      move(vnode, container, anchor, MoveType.ENTER, parentSuspense)\r\n      // in case props have changed\r\n      patch(\r\n        instance.vnode,\r\n        vnode,\r\n        container,\r\n        anchor,\r\n        instance,\r\n        parentSuspense,\r\n        namespace,\r\n        vnode.slotScopeIds,\r\n        optimized,\r\n      )\r\n      queuePostRenderEffect(() => {\r\n        instance.isDeactivated = false\r\n        if (instance.a) {\r\n          invokeArrayFns(instance.a)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    sharedContext.deactivate = (vnode: VNode) => {\r\n      const instance = vnode.component!\r\n      move(vnode, storageContainer, null, MoveType.LEAVE, parentSuspense)\r\n      queuePostRenderEffect(() => {\r\n        if (instance.da) {\r\n          invokeArrayFns(instance.da)\r\n        }\r\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted\r\n        if (vnodeHook) {\r\n          invokeVNodeHook(vnodeHook, instance.parent, vnode)\r\n        }\r\n        instance.isDeactivated = true\r\n      }, parentSuspense)\r\n\r\n      if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n        // Update components tree\r\n        devtoolsComponentAdded(instance)\r\n      }\r\n    }\r\n\r\n    function unmount(vnode: VNode) {\r\n      // reset the shapeFlag so it can be properly unmounted\r\n      resetShapeFlag(vnode)\r\n      _unmount(vnode, instance, parentSuspense, true)\r\n    }\r\n\r\n    function pruneCache(filter?: (name: string) => boolean) {\r\n      cache.forEach((vnode, key) => {\r\n        const name = getComponentName(vnode.type as ConcreteComponent)\r\n        if (name && (!filter || !filter(name))) {\r\n          pruneCacheEntry(key)\r\n        }\r\n      })\r\n    }\r\n\r\n    function pruneCacheEntry(key: CacheKey) {\r\n      const cached = cache.get(key) as VNode\r\n      if (!current || !isSameVNodeType(cached, current)) {\r\n        unmount(cached)\r\n      } else if (current) {\r\n        // current active instance should no longer be kept-alive.\r\n        // we can't unmount it now but it might be later, so reset its flag now.\r\n        resetShapeFlag(current)\r\n      }\r\n      cache.delete(key)\r\n      keys.delete(key)\r\n    }\r\n\r\n    // prune cache on include/exclude prop change\r\n    watch(\r\n      () => [props.include, props.exclude],\r\n      ([include, exclude]) => {\r\n        include && pruneCache(name => matches(include, name))\r\n        exclude && pruneCache(name => !matches(exclude, name))\r\n      },\r\n      // prune post-render after `current` has been updated\r\n      { flush: 'post', deep: true },\r\n    )\r\n\r\n    // cache sub tree after render\r\n    let pendingCacheKey: CacheKey | null = null\r\n    const cacheSubtree = () => {\r\n      // fix #1621, the pendingCacheKey could be 0\r\n      if (pendingCacheKey != null) {\r\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree))\r\n      }\r\n    }\r\n    onMounted(cacheSubtree)\r\n    onUpdated(cacheSubtree)\r\n\r\n    onBeforeUnmount(() => {\r\n      cache.forEach(cached => {\r\n        const { subTree, suspense } = instance\r\n        const vnode = getInnerChild(subTree)\r\n        if (cached.type === vnode.type && cached.key === vnode.key) {\r\n          // current instance will be unmounted as part of keep-alive's unmount\r\n          resetShapeFlag(vnode)\r\n          // but invoke its deactivated hook here\r\n          const da = vnode.component!.da\r\n          da && queuePostRenderEffect(da, suspense)\r\n          return\r\n        }\r\n        unmount(cached)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      pendingCacheKey = null\r\n\r\n      if (!slots.default) {\r\n        return null\r\n      }\r\n\r\n      const children = slots.default()\r\n      const rawVNode = children[0]\r\n      if (children.length > 1) {\r\n        if (__DEV__) {\r\n          warn(`KeepAlive should contain exactly one component child.`)\r\n        }\r\n        current = null\r\n        return children\r\n      } else if (\r\n        !isVNode(rawVNode) ||\r\n        (!(rawVNode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT) &&\r\n          !(rawVNode.shapeFlag & ShapeFlags.SUSPENSE))\r\n      ) {\r\n        current = null\r\n        return rawVNode\r\n      }\r\n\r\n      let vnode = getInnerChild(rawVNode)\r\n      const comp = vnode.type as ConcreteComponent\r\n\r\n      // for async components, name check should be based in its loaded\r\n      // inner component if available\r\n      const name = getComponentName(\r\n        isAsyncWrapper(vnode)\r\n          ? (vnode.type as ComponentOptions).__asyncResolved || {}\r\n          : comp,\r\n      )\r\n\r\n      const { include, exclude, max } = props\r\n\r\n      if (\r\n        (include && (!name || !matches(include, name))) ||\r\n        (exclude && name && matches(exclude, name))\r\n      ) {\r\n        current = vnode\r\n        return rawVNode\r\n      }\r\n\r\n      const key = vnode.key == null ? comp : vnode.key\r\n      const cachedVNode = cache.get(key)\r\n\r\n      // clone vnode if it's reused because we are going to mutate it\r\n      if (vnode.el) {\r\n        vnode = cloneVNode(vnode)\r\n        if (rawVNode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n          rawVNode.ssContent = vnode\r\n        }\r\n      }\r\n      // #1513 it's possible for the returned vnode to be cloned due to attr\r\n      // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n      // that is mounted. Instead of caching it directly, we store the pending\r\n      // key and cache `instance.subTree` (the normalized vnode) in\r\n      // beforeMount/beforeUpdate hooks.\r\n      pendingCacheKey = key\r\n\r\n      if (cachedVNode) {\r\n        // copy over mounted state\r\n        vnode.el = cachedVNode.el\r\n        vnode.component = cachedVNode.component\r\n        if (vnode.transition) {\r\n          // recursively update transition hooks on subTree\r\n          setTransitionHooks(vnode, vnode.transition!)\r\n        }\r\n        // avoid vnode being mounted as fresh\r\n        vnode.shapeFlag |= ShapeFlags.COMPONENT_KEPT_ALIVE\r\n        // make this key the freshest\r\n        keys.delete(key)\r\n        keys.add(key)\r\n      } else {\r\n        keys.add(key)\r\n        // prune oldest entry\r\n        if (max && keys.size > parseInt(max as string, 10)) {\r\n          pruneCacheEntry(keys.values().next().value)\r\n        }\r\n      }\r\n      // avoid vnode being unmounted\r\n      vnode.shapeFlag |= ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n\r\n      current = vnode\r\n      return isSuspense(rawVNode.type) ? rawVNode : vnode\r\n    }\r\n  },\r\n}\r\n\r\nif (__COMPAT__) {\r\n  KeepAliveImpl.__isBuildIn = true\r\n}\r\n\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const KeepAlive = KeepAliveImpl as any as {\r\n  __isKeepAlive: true\r\n  new (): {\r\n    $props: VNodeProps & KeepAliveProps\r\n    $slots: {\r\n      default(): VNode[]\r\n    }\r\n  }\r\n}\r\n\r\nfunction matches(pattern: MatchPattern, name: string): boolean {\r\n  if (isArray(pattern)) {\r\n    return pattern.some((p: string | RegExp) => matches(p, name))\r\n  } else if (isString(pattern)) {\r\n    return pattern.split(',').includes(name)\r\n  } else if (isRegExp(pattern)) {\r\n    return pattern.test(name)\r\n  }\r\n  /* istanbul ignore next */\r\n  return false\r\n}\r\n\r\nexport function onActivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null,\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.ACTIVATED, target)\r\n}\r\n\r\nexport function onDeactivated(\r\n  hook: Function,\r\n  target?: ComponentInternalInstance | null,\r\n) {\r\n  registerKeepAliveHook(hook, LifecycleHooks.DEACTIVATED, target)\r\n}\r\n\r\nfunction registerKeepAliveHook(\r\n  hook: Function & { __wdc?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance | null = currentInstance,\r\n) {\r\n  // cache the deactivate branch check wrapper for injected hooks so the same\r\n  // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n  // deactivation check\".\r\n  const wrappedHook =\r\n    hook.__wdc ||\r\n    (hook.__wdc = () => {\r\n      // only fire the hook if the target instance is NOT in a deactivated branch.\r\n      let current: ComponentInternalInstance | null = target\r\n      while (current) {\r\n        if (current.isDeactivated) {\r\n          return\r\n        }\r\n        current = current.parent\r\n      }\r\n      return hook()\r\n    })\r\n  injectHook(type, wrappedHook, target)\r\n  // In addition to registering it on the target instance, we walk up the parent\r\n  // chain and register it on all ancestor instances that are keep-alive roots.\r\n  // This avoids the need to walk the entire component tree when invoking these\r\n  // hooks, and more importantly, avoids the need to track child components in\r\n  // arrays.\r\n  if (target) {\r\n    let current = target.parent\r\n    while (current && current.parent) {\r\n      if (isKeepAlive(current.parent.vnode)) {\r\n        injectToKeepAliveRoot(wrappedHook, type, target, current)\r\n      }\r\n      current = current.parent\r\n    }\r\n  }\r\n}\r\n\r\nfunction injectToKeepAliveRoot(\r\n  hook: Function & { __weh?: Function },\r\n  type: LifecycleHooks,\r\n  target: ComponentInternalInstance,\r\n  keepAliveRoot: ComponentInternalInstance,\r\n) {\r\n  // injectHook wraps the original for error handling, so make sure to remove\r\n  // the wrapped version.\r\n  const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */)\r\n  onUnmounted(() => {\r\n    remove(keepAliveRoot[type]!, injected)\r\n  }, target)\r\n}\r\n\r\nfunction resetShapeFlag(vnode: VNode) {\r\n  // bitwise operations to remove keep alive flags\r\n  vnode.shapeFlag &= ~ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n  vnode.shapeFlag &= ~ShapeFlags.COMPONENT_KEPT_ALIVE\r\n}\r\n\r\nfunction getInnerChild(vnode: VNode) {\r\n  return vnode.shapeFlag & ShapeFlags.SUSPENSE ? vnode.ssContent! : vnode\r\n}\r\n","import {\r\n  type ComponentInternalInstance,\r\n  currentInstance,\r\n  isInSSRComponentSetup,\r\n  setCurrentInstance,\r\n} from './component'\r\nimport type { ComponentPublicInstance } from './componentPublicInstance'\r\nimport { ErrorTypeStrings, callWithAsyncErrorHandling } from './errorHandling'\r\nimport { warn } from './warning'\r\nimport { toHandlerKey } from '@vue/shared'\r\nimport {\r\n  type DebuggerEvent,\r\n  pauseTracking,\r\n  resetTracking,\r\n} from '@vue/reactivity'\r\nimport { LifecycleHooks } from './enums'\r\n\r\nexport { onActivated, onDeactivated } from './components/KeepAlive'\r\n\r\nexport function injectHook(\r\n  type: LifecycleHooks,\r\n  hook: Function & { __weh?: Function },\r\n  target: ComponentInternalInstance | null = currentInstance,\r\n  prepend: boolean = false,\r\n): Function | undefined {\r\n  if (target) {\r\n    const hooks = target[type] || (target[type] = [])\r\n    // cache the error handling wrapper for injected hooks so the same hook\r\n    // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n    // handling\".\r\n    const wrappedHook =\r\n      hook.__weh ||\r\n      (hook.__weh = (...args: unknown[]) => {\r\n        if (target.isUnmounted) {\r\n          return\r\n        }\r\n        // disable tracking inside all lifecycle hooks\r\n        // since they can potentially be called inside effects.\r\n        pauseTracking()\r\n        // Set currentInstance during hook invocation.\r\n        // This assumes the hook does not synchronously trigger other hooks, which\r\n        // can only be false when the user does something really funky.\r\n        const reset = setCurrentInstance(target)\r\n        const res = callWithAsyncErrorHandling(hook, target, type, args)\r\n        reset()\r\n        resetTracking()\r\n        return res\r\n      })\r\n    if (prepend) {\r\n      hooks.unshift(wrappedHook)\r\n    } else {\r\n      hooks.push(wrappedHook)\r\n    }\r\n    return wrappedHook\r\n  } else if (__DEV__) {\r\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''))\r\n    warn(\r\n      `${apiName} is called when there is no active component instance to be ` +\r\n        `associated with. ` +\r\n        `Lifecycle injection APIs can only be used during execution of setup().` +\r\n        (__FEATURE_SUSPENSE__\r\n          ? ` If you are using async setup(), make sure to register lifecycle ` +\r\n            `hooks before the first await statement.`\r\n          : ``),\r\n    )\r\n  }\r\n}\r\n\r\nexport const createHook =\r\n  <T extends Function = () => any>(lifecycle: LifecycleHooks) =>\r\n  (hook: T, target: ComponentInternalInstance | null = currentInstance) =>\r\n    // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n    (!isInSSRComponentSetup || lifecycle === LifecycleHooks.SERVER_PREFETCH) &&\r\n    injectHook(lifecycle, (...args: unknown[]) => hook(...args), target)\r\n\r\nexport const onBeforeMount = createHook(LifecycleHooks.BEFORE_MOUNT)\r\nexport const onMounted = createHook(LifecycleHooks.MOUNTED)\r\nexport const onBeforeUpdate = createHook(LifecycleHooks.BEFORE_UPDATE)\r\nexport const onUpdated = createHook(LifecycleHooks.UPDATED)\r\nexport const onBeforeUnmount = createHook(LifecycleHooks.BEFORE_UNMOUNT)\r\nexport const onUnmounted = createHook(LifecycleHooks.UNMOUNTED)\r\nexport const onServerPrefetch = createHook(LifecycleHooks.SERVER_PREFETCH)\r\n\r\nexport type DebuggerHook = (e: DebuggerEvent) => void\r\nexport const onRenderTriggered = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRIGGERED,\r\n)\r\nexport const onRenderTracked = createHook<DebuggerHook>(\r\n  LifecycleHooks.RENDER_TRACKED,\r\n)\r\n\r\nexport type ErrorCapturedHook<TError = unknown> = (\r\n  err: TError,\r\n  instance: ComponentPublicInstance | null,\r\n  info: string,\r\n) => boolean | void\r\n\r\nexport function onErrorCaptured<TError = Error>(\r\n  hook: ErrorCapturedHook<TError>,\r\n  target: ComponentInternalInstance | null = currentInstance,\r\n) {\r\n  injectHook(LifecycleHooks.ERROR_CAPTURED, hook, target)\r\n}\r\n","import type { Data } from '../component'\r\nimport type { RawSlots, Slots } from '../componentSlots'\r\nimport {\r\n  type ContextualRenderFn,\r\n  currentRenderingInstance,\r\n} from '../componentRenderContext'\r\nimport {\r\n  Comment,\r\n  Fragment,\r\n  type VNode,\r\n  type VNodeArrayChildren,\r\n  createBlock,\r\n  isVNode,\r\n  openBlock,\r\n} from '../vnode'\r\nimport { PatchFlags, SlotFlags } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { createVNode } from '@vue/runtime-core'\r\nimport { isAsyncWrapper } from '../apiAsyncComponent'\r\n\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nexport function renderSlot(\r\n  slots: Slots,\r\n  name: string,\r\n  props: Data = {},\r\n  // this is not a user-facing function, so the fallback is always generated by\r\n  // the compiler and guaranteed to be a function returning an array\r\n  fallback?: () => VNodeArrayChildren,\r\n  noSlotted?: boolean,\r\n): VNode {\r\n  if (\r\n    currentRenderingInstance!.isCE ||\r\n    (currentRenderingInstance!.parent &&\r\n      isAsyncWrapper(currentRenderingInstance!.parent) &&\r\n      currentRenderingInstance!.parent.isCE)\r\n  ) {\r\n    if (name !== 'default') props.name = name\r\n    return createVNode('slot', props, fallback && fallback())\r\n  }\r\n\r\n  let slot = slots[name]\r\n\r\n  if (__DEV__ && slot && slot.length > 1) {\r\n    warn(\r\n      `SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n        `function. You need to mark this component with $dynamic-slots in the ` +\r\n        `parent template.`,\r\n    )\r\n    slot = () => []\r\n  }\r\n\r\n  // a compiled slot disables block tracking by default to avoid manual\r\n  // invocation interfering with template-based block tracking, but in\r\n  // `renderSlot` we can be sure that it's template-based so we can force\r\n  // enable it.\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = false\r\n  }\r\n  openBlock()\r\n  const validSlotContent = slot && ensureValidVNode(slot(props))\r\n  const rendered = createBlock(\r\n    Fragment,\r\n    {\r\n      key:\r\n        props.key ||\r\n        // slot content array of a dynamic conditional slot may have a branch\r\n        // key attached in the `createSlots` helper, respect that\r\n        (validSlotContent && (validSlotContent as any).key) ||\r\n        `_${name}`,\r\n    },\r\n    validSlotContent || (fallback ? fallback() : []),\r\n    validSlotContent && (slots as RawSlots)._ === SlotFlags.STABLE\r\n      ? PatchFlags.STABLE_FRAGMENT\r\n      : PatchFlags.BAIL,\r\n  )\r\n  if (!noSlotted && rendered.scopeId) {\r\n    rendered.slotScopeIds = [rendered.scopeId + '-s']\r\n  }\r\n  if (slot && (slot as ContextualRenderFn)._c) {\r\n    ;(slot as ContextualRenderFn)._d = true\r\n  }\r\n  return rendered\r\n}\r\n\r\nfunction ensureValidVNode(vnodes: VNodeArrayChildren) {\r\n  return vnodes.some(child => {\r\n    if (!isVNode(child)) return true\r\n    if (child.type === Comment) return false\r\n    if (\r\n      child.type === Fragment &&\r\n      !ensureValidVNode(child.children as VNodeArrayChildren)\r\n    )\r\n      return false\r\n    return true\r\n  })\r\n    ? vnodes\r\n    : null\r\n}\r\n","import {\r\n  type ComponentInternalInstance,\r\n  type Data,\r\n  getExposeProxy,\r\n  isStatefulComponent,\r\n} from './component'\r\nimport { nextTick, queueJob } from './scheduler'\r\nimport {\r\n  type WatchOptions,\r\n  type WatchStopHandle,\r\n  instanceWatch,\r\n} from './apiWatch'\r\nimport {\r\n  EMPTY_OBJ,\r\n  type IfAny,\r\n  NOOP,\r\n  type Prettify,\r\n  type UnionToIntersection,\r\n  extend,\r\n  hasOwn,\r\n  isFunction,\r\n  isGloballyAllowed,\r\n  isString,\r\n} from '@vue/shared'\r\nimport {\r\n  type ShallowUnwrapRef,\r\n  TrackOpTypes,\r\n  type UnwrapNestedRefs,\r\n  shallowReadonly,\r\n  toRaw,\r\n  track,\r\n} from '@vue/reactivity'\r\nimport {\r\n  type ComponentInjectOptions,\r\n  type ComponentOptionsBase,\r\n  type ComponentOptionsMixin,\r\n  type ComputedOptions,\r\n  type ExtractComputedReturns,\r\n  type InjectToObject,\r\n  type MergedComponentOptionsOverride,\r\n  type MethodOptions,\r\n  type OptionTypesKeys,\r\n  type OptionTypesType,\r\n  resolveMergedOptions,\r\n  shouldCacheAccess,\r\n} from './componentOptions'\r\nimport type { EmitFn, EmitsOptions } from './componentEmits'\r\nimport type { SlotsType, UnwrapSlotsType } from './componentSlots'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { warn } from './warning'\r\nimport { installCompatInstanceProperties } from './compat/instance'\r\n\r\n/**\r\n * Custom properties added to component instances in any way and can be accessed through `this`\r\n *\r\n * @example\r\n * Here is an example of adding a property `$router` to every component instance:\r\n * ```ts\r\n * import { createApp } from 'vue'\r\n * import { Router, createRouter } from 'vue-router'\r\n *\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomProperties {\r\n *     $router: Router\r\n *   }\r\n * }\r\n *\r\n * // effectively adding the router to every component instance\r\n * const app = createApp({})\r\n * const router = createRouter()\r\n * app.config.globalProperties.$router = router\r\n *\r\n * const vm = app.mount('#app')\r\n * // we can access the router from the instance\r\n * vm.$router.push('/')\r\n * ```\r\n */\r\nexport interface ComponentCustomProperties {}\r\n\r\ntype IsDefaultMixinComponent<T> = T extends ComponentOptionsMixin\r\n  ? ComponentOptionsMixin extends T\r\n    ? true\r\n    : false\r\n  : false\r\n\r\ntype MixinToOptionTypes<T> =\r\n  T extends ComponentOptionsBase<\r\n    infer P,\r\n    infer B,\r\n    infer D,\r\n    infer C,\r\n    infer M,\r\n    infer Mixin,\r\n    infer Extends,\r\n    any,\r\n    any,\r\n    infer Defaults,\r\n    any,\r\n    any,\r\n    any\r\n  >\r\n    ? OptionTypesType<P & {}, B & {}, D & {}, C & {}, M & {}, Defaults & {}> &\r\n        IntersectionMixin<Mixin> &\r\n        IntersectionMixin<Extends>\r\n    : never\r\n\r\n// ExtractMixin(map type) is used to resolve circularly references\r\ntype ExtractMixin<T> = {\r\n  Mixin: MixinToOptionTypes<T>\r\n}[T extends ComponentOptionsMixin ? 'Mixin' : never]\r\n\r\nexport type IntersectionMixin<T> =\r\n  IsDefaultMixinComponent<T> extends true\r\n    ? OptionTypesType\r\n    : UnionToIntersection<ExtractMixin<T>>\r\n\r\nexport type UnwrapMixinsType<\r\n  T,\r\n  Type extends OptionTypesKeys,\r\n> = T extends OptionTypesType ? T[Type] : never\r\n\r\ntype EnsureNonVoid<T> = T extends void ? {} : T\r\n\r\nexport type ComponentPublicInstanceConstructor<\r\n  T extends ComponentPublicInstance<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M\r\n  > = ComponentPublicInstance<any>,\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions,\r\n> = {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): T\r\n}\r\n\r\nexport type CreateComponentPublicInstance<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  I extends ComponentInjectOptions = {},\r\n  S extends SlotsType = {},\r\n  PublicMixin = IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\r\n  PublicP = UnwrapMixinsType<PublicMixin, 'P'> & EnsureNonVoid<P>,\r\n  PublicB = UnwrapMixinsType<PublicMixin, 'B'> & EnsureNonVoid<B>,\r\n  PublicD = UnwrapMixinsType<PublicMixin, 'D'> & EnsureNonVoid<D>,\r\n  PublicC extends ComputedOptions = UnwrapMixinsType<PublicMixin, 'C'> &\r\n    EnsureNonVoid<C>,\r\n  PublicM extends MethodOptions = UnwrapMixinsType<PublicMixin, 'M'> &\r\n    EnsureNonVoid<M>,\r\n  PublicDefaults = UnwrapMixinsType<PublicMixin, 'Defaults'> &\r\n    EnsureNonVoid<Defaults>,\r\n> = ComponentPublicInstance<\r\n  PublicP,\r\n  PublicB,\r\n  PublicD,\r\n  PublicC,\r\n  PublicM,\r\n  E,\r\n  PublicProps,\r\n  PublicDefaults,\r\n  MakeDefaultsOptional,\r\n  ComponentOptionsBase<\r\n    P,\r\n    B,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    string,\r\n    Defaults,\r\n    {},\r\n    string,\r\n    S\r\n  >,\r\n  I,\r\n  S\r\n>\r\n// public properties exposed on the proxy, which is used as the render context\r\n// in templates (as `this` in the render option)\r\nexport type ComponentPublicInstance<\r\n  P = {}, // props type extracted from props option\r\n  B = {}, // raw bindings returned from setup()\r\n  D = {}, // return from data()\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  E extends EmitsOptions = {},\r\n  PublicProps = P,\r\n  Defaults = {},\r\n  MakeDefaultsOptional extends boolean = false,\r\n  Options = ComponentOptionsBase<any, any, any, any, any, any, any, any, any>,\r\n  I extends ComponentInjectOptions = {},\r\n  S extends SlotsType = {},\r\n> = {\r\n  $: ComponentInternalInstance\r\n  $data: D\r\n  $props: MakeDefaultsOptional extends true\r\n    ? Partial<Defaults> & Omit<Prettify<P> & PublicProps, keyof Defaults>\r\n    : Prettify<P> & PublicProps\r\n  $attrs: Data\r\n  $refs: Data\r\n  $slots: UnwrapSlotsType<S>\r\n  $root: ComponentPublicInstance | null\r\n  $parent: ComponentPublicInstance | null\r\n  $emit: EmitFn<E>\r\n  $el: any\r\n  $options: Options & MergedComponentOptionsOverride\r\n  $forceUpdate: () => void\r\n  $nextTick: typeof nextTick\r\n  $watch<T extends string | ((...args: any) => any)>(\r\n    source: T,\r\n    cb: T extends (...args: any) => infer R\r\n      ? (...args: [R, R]) => any\r\n      : (...args: any) => any,\r\n    options?: WatchOptions,\r\n  ): WatchStopHandle\r\n} & IfAny<P, P, Omit<P, keyof ShallowUnwrapRef<B>>> &\r\n  ShallowUnwrapRef<B> &\r\n  UnwrapNestedRefs<D> &\r\n  ExtractComputedReturns<C> &\r\n  M &\r\n  ComponentCustomProperties &\r\n  InjectToObject<I>\r\n\r\nexport type PublicPropertiesMap = Record<\r\n  string,\r\n  (i: ComponentInternalInstance) => any\r\n>\r\n\r\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (\r\n  i: ComponentInternalInstance | null,\r\n): ComponentPublicInstance | ComponentInternalInstance['exposed'] | null => {\r\n  if (!i) return null\r\n  if (isStatefulComponent(i)) return getExposeProxy(i) || i.proxy\r\n  return getPublicInstance(i.parent)\r\n}\r\n\r\nexport const publicPropertiesMap: PublicPropertiesMap =\r\n  // Move PURE marker to new line to workaround compiler discarding it\r\n  // due to type annotation\r\n  /*#__PURE__*/ extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => (__DEV__ ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => (__DEV__ ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => (__DEV__ ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => (__DEV__ ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__FEATURE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i =>\r\n      i.f ||\r\n      (i.f = () => {\r\n        i.effect.dirty = true\r\n        queueJob(i.update)\r\n      }),\r\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy!)),\r\n    $watch: i => (__FEATURE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP),\r\n  } as PublicPropertiesMap)\r\n\r\nif (__COMPAT__) {\r\n  installCompatInstanceProperties(publicPropertiesMap)\r\n}\r\n\r\nenum AccessTypes {\r\n  OTHER,\r\n  SETUP,\r\n  DATA,\r\n  PROPS,\r\n  CONTEXT,\r\n}\r\n\r\nexport interface ComponentRenderContext {\r\n  [key: string]: any\r\n  _: ComponentInternalInstance\r\n}\r\n\r\nexport const isReservedPrefix = (key: string) => key === '_' || key === '$'\r\n\r\nconst hasSetupBinding = (state: Data, key: string) =>\r\n  state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key)\r\n\r\n  // 这块代码待解析\r\nexport const PublicInstanceProxyHandlers: ProxyHandler<any> = {\r\n  get({ _: instance }: ComponentRenderContext, key: string) {\r\n    const { ctx, setupState, data, props, accessCache, type, appContext } =\r\n      instance\r\n\r\n    // for internal formatters to know that this is a Vue instance\r\n    if (__DEV__ && key === '__isVue') {\r\n      return true\r\n    }\r\n\r\n    // data / props / ctx\r\n    // This getter gets called for every property access on the render context\r\n    // during render and is a major hotspot. The most expensive part of this\r\n    // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n    // access on a plain object, so we use an accessCache object (with null\r\n    // prototype) to memoize what access type a key corresponds to.\r\n    let normalizedProps\r\n    if (key[0] !== '$') {\r\n      const n = accessCache![key]\r\n      if (n !== undefined) {\r\n        switch (n) {\r\n          case AccessTypes.SETUP:\r\n            return setupState[key]\r\n          case AccessTypes.DATA:\r\n            return data[key]\r\n          case AccessTypes.CONTEXT:\r\n            return ctx[key]\r\n          case AccessTypes.PROPS:\r\n            return props![key]\r\n          // default: just fallthrough\r\n        }\r\n      } else if (hasSetupBinding(setupState, key)) {\r\n        accessCache![key] = AccessTypes.SETUP\r\n        return setupState[key]\r\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n        accessCache![key] = AccessTypes.DATA\r\n        return data[key]\r\n      } else if (\r\n        // only cache other properties when instance has declared (thus stable)\r\n        // props\r\n        (normalizedProps = instance.propsOptions[0]) &&\r\n        hasOwn(normalizedProps, key)\r\n      ) {\r\n        accessCache![key] = AccessTypes.PROPS\r\n        return props![key]\r\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n        accessCache![key] = AccessTypes.CONTEXT\r\n        return ctx[key]\r\n      } else if (!__FEATURE_OPTIONS_API__ || shouldCacheAccess) {\r\n        accessCache![key] = AccessTypes.OTHER\r\n      }\r\n    }\r\n\r\n    const publicGetter = publicPropertiesMap[key]\r\n    let cssModule, globalProperties\r\n    // public $xxx properties\r\n    if (publicGetter) {\r\n      if (key === '$attrs') {\r\n        track(instance, TrackOpTypes.GET, key)\r\n        __DEV__ && markAttrsAccessed()\r\n      } else if (__DEV__ && key === '$slots') {\r\n        track(instance, TrackOpTypes.GET, key)\r\n      }\r\n      return publicGetter(instance)\r\n    } else if (\r\n      // css module (injected by vue-loader)\r\n      (cssModule = type.__cssModules) &&\r\n      (cssModule = cssModule[key])\r\n    ) {\r\n      return cssModule\r\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n      // user may set custom properties to `this` that start with `$`\r\n      accessCache![key] = AccessTypes.CONTEXT\r\n      return ctx[key]\r\n    } else if (\r\n      // global properties\r\n      ((globalProperties = appContext.config.globalProperties),\r\n      hasOwn(globalProperties, key))\r\n    ) {\r\n      if (__COMPAT__) {\r\n        const desc = Object.getOwnPropertyDescriptor(globalProperties, key)!\r\n        if (desc.get) {\r\n          return desc.get.call(instance.proxy)\r\n        } else {\r\n          const val = globalProperties[key]\r\n          return isFunction(val)\r\n            ? Object.assign(val.bind(instance.proxy), val)\r\n            : val\r\n        }\r\n      } else {\r\n        return globalProperties[key]\r\n      }\r\n    } else if (\r\n      __DEV__ &&\r\n      currentRenderingInstance &&\r\n      (!isString(key) ||\r\n        // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n        // to infinite warning loop\r\n        key.indexOf('__v') !== 0)\r\n    ) {\r\n      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key,\r\n          )} must be accessed via $data because it starts with a reserved ` +\r\n            `character (\"$\" or \"_\") and is not proxied on the render context.`,\r\n        )\r\n      } else if (instance === currentRenderingInstance) {\r\n        warn(\r\n          `Property ${JSON.stringify(key)} was accessed during render ` +\r\n            `but is not defined on instance.`,\r\n        )\r\n      }\r\n    }\r\n  },\r\n\r\n  set(\r\n    { _: instance }: ComponentRenderContext,\r\n    key: string,\r\n    value: any,\r\n  ): boolean {\r\n    const { data, setupState, ctx } = instance\r\n    if (hasSetupBinding(setupState, key)) {\r\n      setupState[key] = value\r\n      return true\r\n    } else if (\r\n      __DEV__ &&\r\n      setupState.__isScriptSetup &&\r\n      hasOwn(setupState, key)\r\n    ) {\r\n      warn(`Cannot mutate <script setup> binding \"${key}\" from Options API.`)\r\n      return false\r\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n      data[key] = value\r\n      return true\r\n    } else if (hasOwn(instance.props, key)) {\r\n      __DEV__ && warn(`Attempting to mutate prop \"${key}\". Props are readonly.`)\r\n      return false\r\n    }\r\n    if (key[0] === '$' && key.slice(1) in instance) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Attempting to mutate public property \"${key}\". ` +\r\n            `Properties starting with $ are reserved and readonly.`,\r\n        )\r\n      return false\r\n    } else {\r\n      if (__DEV__ && key in instance.appContext.config.globalProperties) {\r\n        Object.defineProperty(ctx, key, {\r\n          enumerable: true,\r\n          configurable: true,\r\n          value,\r\n        })\r\n      } else {\r\n        ctx[key] = value\r\n      }\r\n    }\r\n    return true\r\n  },\r\n\r\n  has(\r\n    {\r\n      _: { data, setupState, accessCache, ctx, appContext, propsOptions },\r\n    }: ComponentRenderContext,\r\n    key: string,\r\n  ) {\r\n    let normalizedProps\r\n    return (\r\n      !!accessCache![key] ||\r\n      (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n      hasSetupBinding(setupState, key) ||\r\n      ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n      hasOwn(ctx, key) ||\r\n      hasOwn(publicPropertiesMap, key) ||\r\n      hasOwn(appContext.config.globalProperties, key)\r\n    )\r\n  },\r\n\r\n  defineProperty(\r\n    target: ComponentRenderContext,\r\n    key: string,\r\n    descriptor: PropertyDescriptor,\r\n  ) {\r\n    if (descriptor.get != null) {\r\n      // invalidate key cache of a getter based property #5417\r\n      target._.accessCache![key] = 0\r\n    } else if (hasOwn(descriptor, 'value')) {\r\n      this.set!(target, key, descriptor.value, null)\r\n    }\r\n    return Reflect.defineProperty(target, key, descriptor)\r\n  },\r\n}\r\n\r\nif (__DEV__ && !__TEST__) {\r\n  PublicInstanceProxyHandlers.ownKeys = (target: ComponentRenderContext) => {\r\n    warn(\r\n      `Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n        `The keys will be empty in production mode to avoid performance overhead.`,\r\n    )\r\n    return Reflect.ownKeys(target)\r\n  }\r\n}\r\n\r\nexport const RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend(\r\n  {},\r\n  PublicInstanceProxyHandlers,\r\n  {\r\n    get(target: ComponentRenderContext, key: string) {\r\n      // fast path for unscopables when using `with` block\r\n      if ((key as any) === Symbol.unscopables) {\r\n        return\r\n      }\r\n      return PublicInstanceProxyHandlers.get!(target, key, target)\r\n    },\r\n    has(_: ComponentRenderContext, key: string) {\r\n      const has = key[0] !== '_' && !isGloballyAllowed(key)\r\n      if (__DEV__ && !has && PublicInstanceProxyHandlers.has!(_, key)) {\r\n        warn(\r\n          `Property ${JSON.stringify(\r\n            key,\r\n          )} should not start with _ which is a reserved prefix for Vue internals.`,\r\n        )\r\n      }\r\n      return has\r\n    },\r\n  },\r\n)\r\n\r\n// dev only\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nexport function createDevRenderContext(instance: ComponentInternalInstance) {\r\n  const target: Record<string, any> = {}\r\n\r\n  // expose internal instance for proxy handlers\r\n  Object.defineProperty(target, `_`, {\r\n    configurable: true,\r\n    enumerable: false,\r\n    get: () => instance,\r\n  })\r\n\r\n  // expose public properties\r\n  Object.keys(publicPropertiesMap).forEach(key => {\r\n    Object.defineProperty(target, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      get: () => publicPropertiesMap[key](instance),\r\n      // intercepted by the proxy so no need for implementation,\r\n      // but needed to prevent set errors\r\n      set: NOOP,\r\n    })\r\n  })\r\n\r\n  return target as ComponentRenderContext\r\n}\r\n\r\n// dev only\r\nexport function exposePropsOnRenderContext(\r\n  instance: ComponentInternalInstance,\r\n) {\r\n  const {\r\n    ctx,\r\n    propsOptions: [propsOptions],\r\n  } = instance\r\n  if (propsOptions) {\r\n    Object.keys(propsOptions).forEach(key => {\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => instance.props[key],\r\n        set: NOOP,\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// dev only\r\nexport function exposeSetupStateOnRenderContext(\r\n  instance: ComponentInternalInstance,\r\n) {\r\n  const { ctx, setupState } = instance\r\n  Object.keys(toRaw(setupState)).forEach(key => {\r\n    if (!setupState.__isScriptSetup) {\r\n      if (isReservedPrefix(key[0])) {\r\n        warn(\r\n          `setup() return property ${JSON.stringify(\r\n            key,\r\n          )} should not start with \"$\" or \"_\" ` +\r\n            `which are reserved prefixes for Vue internals.`,\r\n        )\r\n        return\r\n      }\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => setupState[key],\r\n        set: NOOP,\r\n      })\r\n    }\r\n  })\r\n}\r\n","import {\r\n  type LooseRequired,\r\n  type Prettify,\r\n  type UnionToIntersection,\r\n  extend,\r\n  isArray,\r\n  isFunction,\r\n  isPromise,\r\n} from '@vue/shared'\r\nimport {\r\n  type SetupContext,\r\n  createSetupContext,\r\n  getCurrentInstance,\r\n  setCurrentInstance,\r\n  unsetCurrentInstance,\r\n} from './component'\r\nimport type { EmitFn, EmitsOptions, ObjectEmitsOptions } from './componentEmits'\r\nimport type {\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithoutProps,\r\n  ComputedOptions,\r\n  MethodOptions,\r\n} from './componentOptions'\r\nimport type {\r\n  ComponentObjectPropsOptions,\r\n  ComponentPropsOptions,\r\n  ExtractPropTypes,\r\n  PropOptions,\r\n} from './componentProps'\r\nimport { warn } from './warning'\r\nimport type { SlotsType, StrictUnwrapSlotsType } from './componentSlots'\r\nimport type { Ref } from '@vue/reactivity'\r\n\r\n// dev only\r\nconst warnRuntimeUsage = (method: string) =>\r\n  warn(\r\n    `${method}() is a compiler-hint helper that is only usable inside ` +\r\n      `<script setup> of a single file component. Its arguments should be ` +\r\n      `compiled away and passing it at runtime has no effect.`,\r\n  )\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring component props. The\r\n * expected argument is the same as the component `props` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * // using Array syntax\r\n * const props = defineProps(['foo', 'bar'])\r\n * // using Object syntax\r\n * const props = defineProps({\r\n *   foo: String,\r\n *   bar: {\r\n *     type: Number,\r\n *     required: true\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * Equivalent type-based declaration:\r\n * ```ts\r\n * // will be compiled into equivalent runtime declarations\r\n * const props = defineProps<{\r\n *   foo?: string\r\n *   bar: number\r\n * }>()\r\n * ```\r\n *\r\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineprops-defineemits}\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\n// overload 1: runtime props w/ array\r\nexport function defineProps<PropNames extends string = string>(\r\n  props: PropNames[],\r\n): Prettify<Readonly<{ [key in PropNames]?: any }>>\r\n// overload 2: runtime props w/ object\r\nexport function defineProps<\r\n  PP extends ComponentObjectPropsOptions = ComponentObjectPropsOptions,\r\n>(props: PP): Prettify<Readonly<ExtractPropTypes<PP>>>\r\n// overload 3: typed-based declaration\r\nexport function defineProps<TypeProps>(): DefineProps<\r\n  LooseRequired<TypeProps>,\r\n  BooleanKey<TypeProps>\r\n>\r\n// implementation\r\nexport function defineProps() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineProps`)\r\n  }\r\n  return null as any\r\n}\r\n\r\nexport type DefineProps<T, BKeys extends keyof T> = Readonly<T> & {\r\n  readonly [K in BKeys]-?: boolean\r\n}\r\n\r\ntype BooleanKey<T, K extends keyof T = keyof T> = K extends any\r\n  ? [T[K]] extends [boolean | undefined]\r\n    ? K\r\n    : never\r\n  : never\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's emitted\r\n * events. The expected argument is the same as the component `emits` option.\r\n *\r\n * Example runtime declaration:\r\n * ```js\r\n * const emit = defineEmits(['change', 'update'])\r\n * ```\r\n *\r\n * Example type-based declaration:\r\n * ```ts\r\n * const emit = defineEmits<{\r\n *   // <eventName>: <expected arguments>\r\n *   change: []\r\n *   update: [value: string] // named tuple syntax\r\n * }>()\r\n *\r\n * emit('change')\r\n * emit('update', 1)\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n *\r\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineprops-defineemits}\r\n */\r\n// overload 1: runtime emits w/ array\r\nexport function defineEmits<EE extends string = string>(\r\n  emitOptions: EE[],\r\n): EmitFn<EE[]>\r\nexport function defineEmits<E extends EmitsOptions = EmitsOptions>(\r\n  emitOptions: E,\r\n): EmitFn<E>\r\nexport function defineEmits<\r\n  T extends ((...args: any[]) => any) | Record<string, any[]>,\r\n>(): T extends (...args: any[]) => any ? T : ShortEmits<T>\r\n// implementation\r\nexport function defineEmits() {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineEmits`)\r\n  }\r\n  return null as any\r\n}\r\n\r\ntype RecordToUnion<T extends Record<string, any>> = T[keyof T]\r\n\r\ntype ShortEmits<T extends Record<string, any>> = UnionToIntersection<\r\n  RecordToUnion<{\r\n    [K in keyof T]: (evt: K, ...args: T[K]) => void\r\n  }>\r\n>\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. variables inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n *\r\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineexpose}\r\n */\r\nexport function defineExpose<\r\n  Exposed extends Record<string, any> = Record<string, any>,\r\n>(exposed?: Exposed) {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineExpose`)\r\n  }\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's additional\r\n * options. This should be used only for options that cannot be expressed via\r\n * Composition API - e.g. `inheritAttrs`.\r\n *\r\n * @see {@link https://vuejs.org/api/sfc-script-setup.html#defineoptions}\r\n */\r\nexport function defineOptions<\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n>(\r\n  options?: ComponentOptionsWithoutProps<\r\n    {},\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends\r\n  > & { emits?: undefined; expose?: undefined; slots?: undefined },\r\n): void {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineOptions`)\r\n  }\r\n}\r\n\r\nexport function defineSlots<\r\n  S extends Record<string, any> = Record<string, any>,\r\n>(): StrictUnwrapSlotsType<SlotsType<S>> {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`defineSlots`)\r\n  }\r\n  return null as any\r\n}\r\n\r\nexport type ModelRef<T, M extends string | number | symbol = string> = Ref<T> &\r\n  [ModelRef<T, M>, Record<M, true | undefined>]\r\n\r\nexport type DefineModelOptions<T = any> = {\r\n  get?: (v: T) => any\r\n  set?: (v: T) => any\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a\r\n * two-way binding prop that can be consumed via `v-model` from the parent\r\n * component. This will declare a prop with the same name and a corresponding\r\n * `update:propName` event.\r\n *\r\n * If the first argument is a string, it will be used as the prop name;\r\n * Otherwise the prop name will default to \"modelValue\". In both cases, you\r\n * can also pass an additional object which will be used as the prop's options.\r\n *\r\n * The the returned ref behaves differently depending on whether the parent\r\n * provided the corresponding v-model props or not:\r\n * - If yes, the returned ref's value will always be in sync with the parent\r\n *   prop.\r\n * - If not, the returned ref will behave like a normal local ref.\r\n *\r\n * @example\r\n * ```ts\r\n * // default model (consumed via `v-model`)\r\n * const modelValue = defineModel<string>()\r\n * modelValue.value = \"hello\"\r\n *\r\n * // default model with options\r\n * const modelValue = defineModel<string>({ required: true })\r\n *\r\n * // with specified name (consumed via `v-model:count`)\r\n * const count = defineModel<number>('count')\r\n * count.value++\r\n *\r\n * // with specified name and default value\r\n * const count = defineModel<number>('count', { default: 0 })\r\n * ```\r\n */\r\nexport function defineModel<T, M extends string | number | symbol = string>(\r\n  options: { required: true } & PropOptions<T> & DefineModelOptions<T>,\r\n): ModelRef<T, M>\r\nexport function defineModel<T, M extends string | number | symbol = string>(\r\n  options: { default: any } & PropOptions<T> & DefineModelOptions<T>,\r\n): ModelRef<T, M>\r\nexport function defineModel<T, M extends string | number | symbol = string>(\r\n  options?: PropOptions<T> & DefineModelOptions<T>,\r\n): ModelRef<T | undefined, M>\r\nexport function defineModel<T, M extends string | number | symbol = string>(\r\n  name: string,\r\n  options: { required: true } & PropOptions<T> & DefineModelOptions<T>,\r\n): ModelRef<T, M>\r\nexport function defineModel<T, M extends string | number | symbol = string>(\r\n  name: string,\r\n  options: { default: any } & PropOptions<T> & DefineModelOptions<T>,\r\n): ModelRef<T, M>\r\nexport function defineModel<T, M extends string | number | symbol = string>(\r\n  name: string,\r\n  options?: PropOptions<T> & DefineModelOptions<T>,\r\n): ModelRef<T | undefined, M>\r\nexport function defineModel(): any {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage('defineModel')\r\n  }\r\n}\r\n\r\ntype NotUndefined<T> = T extends undefined ? never : T\r\n\r\ntype InferDefaults<T> = {\r\n  [K in keyof T]?: InferDefault<T, T[K]>\r\n}\r\n\r\ntype NativeType = null | number | string | boolean | symbol | Function\r\n\r\ntype InferDefault<P, T> =\r\n  | ((props: P) => T & {})\r\n  | (T extends NativeType ? T : never)\r\n\r\ntype PropsWithDefaults<\r\n  T,\r\n  Defaults extends InferDefaults<T>,\r\n  BKeys extends keyof T,\r\n> = Readonly<Omit<T, keyof Defaults>> & {\r\n  readonly [K in keyof Defaults]-?: K extends keyof T\r\n    ? Defaults[K] extends undefined\r\n      ? T[K]\r\n      : NotUndefined<T[K]>\r\n    : never\r\n} & {\r\n  readonly [K in BKeys]-?: K extends keyof Defaults\r\n    ? Defaults[K] extends undefined\r\n      ? boolean | undefined\r\n      : boolean\r\n    : boolean\r\n}\r\n\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n *\r\n * @see {@link https://vuejs.org/guide/typescript/composition-api.html#typing-component-props}\r\n */\r\nexport function withDefaults<\r\n  T,\r\n  BKeys extends keyof T,\r\n  Defaults extends InferDefaults<T>,\r\n>(\r\n  props: DefineProps<T, BKeys>,\r\n  defaults: Defaults,\r\n): PropsWithDefaults<T, Defaults, BKeys> {\r\n  if (__DEV__) {\r\n    warnRuntimeUsage(`withDefaults`)\r\n  }\r\n  return null as any\r\n}\r\n\r\nexport function useSlots(): SetupContext['slots'] {\r\n  return getContext().slots\r\n}\r\n\r\nexport function useAttrs(): SetupContext['attrs'] {\r\n  return getContext().attrs\r\n}\r\n\r\nfunction getContext(): SetupContext {\r\n  const i = getCurrentInstance()!\r\n  if (__DEV__ && !i) {\r\n    warn(`useContext() called without active instance.`)\r\n  }\r\n  return i.setupContext || (i.setupContext = createSetupContext(i))\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function normalizePropsOrEmits(\r\n  props: ComponentPropsOptions | EmitsOptions,\r\n) {\r\n  return isArray(props)\r\n    ? props.reduce(\r\n        (normalized, p) => ((normalized[p] = null), normalized),\r\n        {} as ComponentObjectPropsOptions | ObjectEmitsOptions,\r\n      )\r\n    : props\r\n}\r\n\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nexport function mergeDefaults(\r\n  raw: ComponentPropsOptions,\r\n  defaults: Record<string, any>,\r\n): ComponentObjectPropsOptions {\r\n  const props = normalizePropsOrEmits(raw)\r\n  for (const key in defaults) {\r\n    if (key.startsWith('__skip')) continue\r\n    let opt = props[key]\r\n    if (opt) {\r\n      if (isArray(opt) || isFunction(opt)) {\r\n        opt = props[key] = { type: opt, default: defaults[key] }\r\n      } else {\r\n        opt.default = defaults[key]\r\n      }\r\n    } else if (opt === null) {\r\n      opt = props[key] = { default: defaults[key] }\r\n    } else if (__DEV__) {\r\n      warn(`props default key \"${key}\" has no corresponding declaration.`)\r\n    }\r\n    if (opt && defaults[`__skip_${key}`]) {\r\n      opt.skipFactory = true\r\n    }\r\n  }\r\n  return props\r\n}\r\n\r\n/**\r\n * Runtime helper for merging model declarations.\r\n * Imported by compiled code only.\r\n * @internal\r\n */\r\nexport function mergeModels(\r\n  a: ComponentPropsOptions | EmitsOptions,\r\n  b: ComponentPropsOptions | EmitsOptions,\r\n) {\r\n  if (!a || !b) return a || b\r\n  if (isArray(a) && isArray(b)) return a.concat(b)\r\n  return extend({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b))\r\n}\r\n\r\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\r\nexport function createPropsRestProxy(\r\n  props: any,\r\n  excludedKeys: string[],\r\n): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  for (const key in props) {\r\n    if (!excludedKeys.includes(key)) {\r\n      Object.defineProperty(ret, key, {\r\n        enumerable: true,\r\n        get: () => props[key],\r\n      })\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nexport function withAsyncContext(getAwaitable: () => any) {\r\n  const ctx = getCurrentInstance()!\r\n  if (__DEV__ && !ctx) {\r\n    warn(\r\n      `withAsyncContext called without active current instance. ` +\r\n        `This is likely a bug.`,\r\n    )\r\n  }\r\n  let awaitable = getAwaitable()\r\n  unsetCurrentInstance()\r\n  if (isPromise(awaitable)) {\r\n    awaitable = awaitable.catch(e => {\r\n      setCurrentInstance(ctx)\r\n      throw e\r\n    })\r\n  }\r\n  return [awaitable, () => setCurrentInstance(ctx)]\r\n}\r\n","import type {\r\n  Component,\r\n  ComponentInternalInstance,\r\n  ComponentInternalOptions,\r\n  ConcreteComponent,\r\n  Data,\r\n  InternalRenderFunction,\r\n  SetupContext,\r\n} from './component'\r\nimport {\r\n  type LooseRequired,\r\n  NOOP,\r\n  type Prettify,\r\n  extend,\r\n  isArray,\r\n  isFunction,\r\n  isObject,\r\n  isPromise,\r\n  isString,\r\n} from '@vue/shared'\r\nimport { type Ref, isRef } from '@vue/reactivity'\r\nimport { computed } from './apiComputed'\r\nimport {\r\n  type WatchCallback,\r\n  type WatchOptions,\r\n  createPathGetter,\r\n  watch,\r\n} from './apiWatch'\r\nimport { inject, provide } from './apiInject'\r\nimport {\r\n  type DebuggerHook,\r\n  type ErrorCapturedHook,\r\n  onActivated,\r\n  onBeforeMount,\r\n  onBeforeUnmount,\r\n  onBeforeUpdate,\r\n  onDeactivated,\r\n  onErrorCaptured,\r\n  onMounted,\r\n  onRenderTracked,\r\n  onRenderTriggered,\r\n  onServerPrefetch,\r\n  onUnmounted,\r\n  onUpdated,\r\n} from './apiLifecycle'\r\nimport {\r\n  type ComputedGetter,\r\n  type WritableComputedOptions,\r\n  reactive,\r\n} from '@vue/reactivity'\r\nimport type {\r\n  ComponentObjectPropsOptions,\r\n  ComponentPropsOptions,\r\n  ExtractDefaultPropTypes,\r\n  ExtractPropTypes,\r\n} from './componentProps'\r\nimport type { EmitsOptions, EmitsToProps } from './componentEmits'\r\nimport type { Directive } from './directives'\r\nimport {\r\n  type ComponentPublicInstance,\r\n  type CreateComponentPublicInstance,\r\n  type IntersectionMixin,\r\n  type UnwrapMixinsType,\r\n  isReservedPrefix,\r\n} from './componentPublicInstance'\r\nimport { warn } from './warning'\r\nimport type { VNodeChild } from './vnode'\r\nimport { callWithAsyncErrorHandling } from './errorHandling'\r\nimport { deepMergeData } from './compat/data'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport {\r\n  type CompatConfig,\r\n  isCompatEnabled,\r\n  softAssertCompatEnabled,\r\n} from './compat/compatConfig'\r\nimport type { OptionMergeFunction } from './apiCreateApp'\r\nimport { LifecycleHooks } from './enums'\r\nimport type { SlotsType } from './componentSlots'\r\nimport { normalizePropsOrEmits } from './apiSetupHelpers'\r\n\r\n/**\r\n * Interface for declaring custom options.\r\n *\r\n * @example\r\n * ```ts\r\n * declare module '@vue/runtime-core' {\r\n *   interface ComponentCustomOptions {\r\n *     beforeRouteUpdate?(\r\n *       to: Route,\r\n *       from: Route,\r\n *       next: () => void\r\n *     ): void\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport interface ComponentCustomOptions {}\r\n\r\nexport type RenderFunction = () => VNodeChild\r\n\r\nexport interface ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin,\r\n  E extends EmitsOptions,\r\n  EE extends string = string,\r\n  Defaults = {},\r\n  I extends ComponentInjectOptions = {},\r\n  II extends string = string,\r\n  S extends SlotsType = {},\r\n> extends LegacyOptions<Props, D, C, M, Mixin, Extends, I, II>,\r\n    ComponentInternalOptions,\r\n    ComponentCustomOptions {\r\n  setup?: (\r\n    this: void,\r\n    props: LooseRequired<\r\n      Props &\r\n        Prettify<\r\n          UnwrapMixinsType<\r\n            IntersectionMixin<Mixin> & IntersectionMixin<Extends>,\r\n            'P'\r\n          >\r\n        >\r\n    >,\r\n    ctx: SetupContext<E, S>,\r\n  ) => Promise<RawBindings> | RawBindings | RenderFunction | void\r\n  name?: string\r\n  template?: string | object // can be a direct DOM node\r\n  // Note: we are intentionally using the signature-less `Function` type here\r\n  // since any type with signature will cause the whole inference to fail when\r\n  // the return expression contains reference to `this`.\r\n  // Luckily `render()` doesn't need any arguments nor does it care about return\r\n  // type.\r\n  render?: Function\r\n  components?: Record<string, Component>\r\n  directives?: Record<string, Directive>\r\n  inheritAttrs?: boolean\r\n  emits?: (E | EE[]) & ThisType<void>\r\n  slots?: S\r\n  // TODO infer public instance type based on exposed keys\r\n  expose?: string[]\r\n  serverPrefetch?(): void | Promise<any>\r\n\r\n  // Runtime compiler only -----------------------------------------------------\r\n  compilerOptions?: RuntimeCompilerOptions\r\n\r\n  // Internal ------------------------------------------------------------------\r\n\r\n  /**\r\n   * SSR only. This is produced by compiler-ssr and attached in compiler-sfc\r\n   * not user facing, so the typing is lax and for test only.\r\n   * @internal\r\n   */\r\n  ssrRender?: (\r\n    ctx: any,\r\n    push: (item: any) => void,\r\n    parentInstance: ComponentInternalInstance,\r\n    attrs: Data | undefined,\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx'],\r\n  ) => void\r\n\r\n  /**\r\n   * Only generated by compiler-sfc to mark a ssr render function inlined and\r\n   * returned from setup()\r\n   * @internal\r\n   */\r\n  __ssrInlineRender?: boolean\r\n\r\n  /**\r\n   * marker for AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncLoader?: () => Promise<ConcreteComponent>\r\n  /**\r\n   * the inner component resolved by the AsyncComponentWrapper\r\n   * @internal\r\n   */\r\n  __asyncResolved?: ConcreteComponent\r\n\r\n  // Type differentiators ------------------------------------------------------\r\n\r\n  // Note these are internal but need to be exposed in d.ts for type inference\r\n  // to work!\r\n\r\n  // type-only differentiator to separate OptionWithoutProps from a constructor\r\n  // type returned by defineComponent() or FunctionalComponent\r\n  call?: (this: unknown, ...args: unknown[]) => never\r\n  // type-only differentiators for built-in Vnode types\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n\r\n  __defaults?: Defaults\r\n}\r\n\r\n/**\r\n * Subset of compiler options that makes sense for the runtime.\r\n */\r\nexport interface RuntimeCompilerOptions {\r\n  isCustomElement?: (tag: string) => boolean\r\n  whitespace?: 'preserve' | 'condense'\r\n  comments?: boolean\r\n  delimiters?: [string, string]\r\n}\r\n\r\nexport type ComponentOptionsWithoutProps<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  I extends ComponentInjectOptions = {},\r\n  II extends string = string,\r\n  S extends SlotsType = {},\r\n  PE = Props & EmitsToProps<E>,\r\n> = ComponentOptionsBase<\r\n  PE,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {},\r\n  I,\r\n  II,\r\n  S\r\n> & {\r\n  props?: undefined\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      PE,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      PE,\r\n      {},\r\n      false,\r\n      I,\r\n      S\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsWithArrayProps<\r\n  PropNames extends string = string,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  I extends ComponentInjectOptions = {},\r\n  II extends string = string,\r\n  S extends SlotsType = {},\r\n  Props = Prettify<Readonly<{ [key in PropNames]?: any } & EmitsToProps<E>>>,\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  {},\r\n  I,\r\n  II,\r\n  S\r\n> & {\r\n  props: PropNames[]\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Props,\r\n      {},\r\n      false,\r\n      I,\r\n      S\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsWithObjectProps<\r\n  PropsOptions = ComponentObjectPropsOptions,\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  I extends ComponentInjectOptions = {},\r\n  II extends string = string,\r\n  S extends SlotsType = {},\r\n  Props = Prettify<Readonly<ExtractPropTypes<PropsOptions> & EmitsToProps<E>>>,\r\n  Defaults = ExtractDefaultPropTypes<PropsOptions>,\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  EE,\r\n  Defaults,\r\n  I,\r\n  II,\r\n  S\r\n> & {\r\n  props: PropsOptions & ThisType<void>\r\n} & ThisType<\r\n    CreateComponentPublicInstance<\r\n      Props,\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Props,\r\n      Defaults,\r\n      false,\r\n      I,\r\n      S\r\n    >\r\n  >\r\n\r\nexport type ComponentOptions<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = any,\r\n  M extends MethodOptions = any,\r\n  Mixin extends ComponentOptionsMixin = any,\r\n  Extends extends ComponentOptionsMixin = any,\r\n  E extends EmitsOptions = any,\r\n  S extends SlotsType = any,\r\n> = ComponentOptionsBase<\r\n  Props,\r\n  RawBindings,\r\n  D,\r\n  C,\r\n  M,\r\n  Mixin,\r\n  Extends,\r\n  E,\r\n  string,\r\n  S\r\n> &\r\n  ThisType<\r\n    CreateComponentPublicInstance<\r\n      {},\r\n      RawBindings,\r\n      D,\r\n      C,\r\n      M,\r\n      Mixin,\r\n      Extends,\r\n      E,\r\n      Readonly<Props>\r\n    >\r\n  >\r\n\r\nexport type ComponentOptionsMixin = ComponentOptionsBase<\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any,\r\n  any\r\n>\r\n\r\nexport type ComputedOptions = Record<\r\n  string,\r\n  ComputedGetter<any> | WritableComputedOptions<any>\r\n>\r\n\r\nexport interface MethodOptions {\r\n  [key: string]: Function\r\n}\r\n\r\nexport type ExtractComputedReturns<T extends any> = {\r\n  [key in keyof T]: T[key] extends { get: (...args: any[]) => infer TReturn }\r\n    ? TReturn\r\n    : T[key] extends (...args: any[]) => infer TReturn\r\n      ? TReturn\r\n      : never\r\n}\r\n\r\nexport type ObjectWatchOptionItem = {\r\n  handler: WatchCallback | string\r\n} & WatchOptions\r\n\r\ntype WatchOptionItem = string | WatchCallback | ObjectWatchOptionItem\r\n\r\ntype ComponentWatchOptionItem = WatchOptionItem | WatchOptionItem[]\r\n\r\ntype ComponentWatchOptions = Record<string, ComponentWatchOptionItem>\r\n\r\nexport type ComponentProvideOptions = ObjectProvideOptions | Function\r\n\r\ntype ObjectProvideOptions = Record<string | symbol, unknown>\r\n\r\nexport type ComponentInjectOptions = string[] | ObjectInjectOptions\r\n\r\ntype ObjectInjectOptions = Record<\r\n  string | symbol,\r\n  string | symbol | { from?: string | symbol; default?: unknown }\r\n>\r\n\r\nexport type InjectToObject<T extends ComponentInjectOptions> =\r\n  T extends string[]\r\n    ? {\r\n        [K in T[number]]?: unknown\r\n      }\r\n    : T extends ObjectInjectOptions\r\n      ? {\r\n          [K in keyof T]?: unknown\r\n        }\r\n      : never\r\n\r\ninterface LegacyOptions<\r\n  Props,\r\n  D,\r\n  C extends ComputedOptions,\r\n  M extends MethodOptions,\r\n  Mixin extends ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin,\r\n  I extends ComponentInjectOptions,\r\n  II extends string,\r\n> {\r\n  compatConfig?: CompatConfig\r\n\r\n  // allow any custom options\r\n  [key: string]: any\r\n\r\n  // state\r\n  // Limitation: we cannot expose RawBindings on the `this` context for data\r\n  // since that leads to some sort of circular inference and breaks ThisType\r\n  // for the entire component.\r\n  data?: (\r\n    this: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >,\r\n    vm: CreateComponentPublicInstance<\r\n      Props,\r\n      {},\r\n      {},\r\n      {},\r\n      MethodOptions,\r\n      Mixin,\r\n      Extends\r\n    >,\r\n  ) => D\r\n  computed?: C\r\n  methods?: M\r\n  watch?: ComponentWatchOptions\r\n  provide?: ComponentProvideOptions\r\n  inject?: I | II[]\r\n\r\n  // assets\r\n  filters?: Record<string, Function>\r\n\r\n  // composition\r\n  mixins?: Mixin[]\r\n  extends?: Extends\r\n\r\n  // lifecycle\r\n  beforeCreate?(): void\r\n  created?(): void\r\n  beforeMount?(): void\r\n  mounted?(): void\r\n  beforeUpdate?(): void\r\n  updated?(): void\r\n  activated?(): void\r\n  deactivated?(): void\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?(): void\r\n  beforeUnmount?(): void\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?(): void\r\n  unmounted?(): void\r\n  renderTracked?: DebuggerHook\r\n  renderTriggered?: DebuggerHook\r\n  errorCaptured?: ErrorCapturedHook\r\n\r\n  /**\r\n   * runtime compile only\r\n   * @deprecated use `compilerOptions.delimiters` instead.\r\n   */\r\n  delimiters?: [string, string]\r\n\r\n  /**\r\n   * #3468\r\n   *\r\n   * type-only, used to assist Mixin's type inference,\r\n   * typescript will try to simplify the inferred `Mixin` type,\r\n   * with the `__differentiator`, typescript won't be able to combine different mixins,\r\n   * because the `__differentiator` will be different\r\n   */\r\n  __differentiator?: keyof D | keyof C | keyof M\r\n}\r\n\r\ntype MergedHook<T = () => void> = T | T[]\r\n\r\nexport type MergedComponentOptions = ComponentOptions &\r\n  MergedComponentOptionsOverride\r\n\r\nexport type MergedComponentOptionsOverride = {\r\n  beforeCreate?: MergedHook\r\n  created?: MergedHook\r\n  beforeMount?: MergedHook\r\n  mounted?: MergedHook\r\n  beforeUpdate?: MergedHook\r\n  updated?: MergedHook\r\n  activated?: MergedHook\r\n  deactivated?: MergedHook\r\n  /** @deprecated use `beforeUnmount` instead */\r\n  beforeDestroy?: MergedHook\r\n  beforeUnmount?: MergedHook\r\n  /** @deprecated use `unmounted` instead */\r\n  destroyed?: MergedHook\r\n  unmounted?: MergedHook\r\n  renderTracked?: MergedHook<DebuggerHook>\r\n  renderTriggered?: MergedHook<DebuggerHook>\r\n  errorCaptured?: MergedHook<ErrorCapturedHook>\r\n}\r\n\r\nexport type OptionTypesKeys = 'P' | 'B' | 'D' | 'C' | 'M' | 'Defaults'\r\n\r\nexport type OptionTypesType<\r\n  P = {},\r\n  B = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Defaults = {},\r\n> = {\r\n  P: P\r\n  B: B\r\n  D: D\r\n  C: C\r\n  M: M\r\n  Defaults: Defaults\r\n}\r\n\r\nenum OptionTypes {\r\n  PROPS = 'Props',\r\n  DATA = 'Data',\r\n  COMPUTED = 'Computed',\r\n  METHODS = 'Methods',\r\n  INJECT = 'Inject',\r\n}\r\n\r\nfunction createDuplicateChecker() {\r\n  const cache = Object.create(null)\r\n  return (type: OptionTypes, key: string) => {\r\n    if (cache[key]) {\r\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`)\r\n    } else {\r\n      cache[key] = type\r\n    }\r\n  }\r\n}\r\n\r\nexport let shouldCacheAccess = true\r\n\r\nexport function applyOptions(instance: ComponentInternalInstance) {\r\n  const options = resolveMergedOptions(instance)\r\n  const publicThis = instance.proxy! as any\r\n  const ctx = instance.ctx\r\n\r\n  // do not cache property access on public proxy during state initialization\r\n  shouldCacheAccess = false\r\n\r\n  // call beforeCreate first before accessing other options since\r\n  // the hook may mutate resolved options (#2791)\r\n  if (options.beforeCreate) {\r\n    callHook(options.beforeCreate, instance, LifecycleHooks.BEFORE_CREATE)\r\n  }\r\n\r\n  const {\r\n    // state\r\n    data: dataOptions,\r\n    computed: computedOptions,\r\n    methods,\r\n    watch: watchOptions,\r\n    provide: provideOptions,\r\n    inject: injectOptions,\r\n    // lifecycle\r\n    created,\r\n    beforeMount,\r\n    mounted,\r\n    beforeUpdate,\r\n    updated,\r\n    activated,\r\n    deactivated,\r\n    beforeDestroy,\r\n    beforeUnmount,\r\n    destroyed,\r\n    unmounted,\r\n    render,\r\n    renderTracked,\r\n    renderTriggered,\r\n    errorCaptured,\r\n    serverPrefetch,\r\n    // public API\r\n    expose,\r\n    inheritAttrs,\r\n    // assets\r\n    components,\r\n    directives,\r\n    filters,\r\n  } = options\r\n\r\n  const checkDuplicateProperties = __DEV__ ? createDuplicateChecker() : null\r\n\r\n  if (__DEV__) {\r\n    const [propsOptions] = instance.propsOptions\r\n    if (propsOptions) {\r\n      for (const key in propsOptions) {\r\n        checkDuplicateProperties!(OptionTypes.PROPS, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  // options initialization order (to be consistent with Vue 2):\r\n  // - props (already done outside of this function)\r\n  // - inject\r\n  // - methods\r\n  // - data (deferred since it relies on `this` access)\r\n  // - computed\r\n  // - watch (deferred since it relies on `this` access)\r\n\r\n  if (injectOptions) {\r\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties)\r\n  }\r\n\r\n  if (methods) {\r\n    for (const key in methods) {\r\n      const methodHandler = (methods as MethodOptions)[key]\r\n      if (isFunction(methodHandler)) {\r\n        // In dev mode, we use the `createRenderContext` function to define\r\n        // methods to the proxy target, and those are read-only but\r\n        // reconfigurable, so it needs to be redefined here\r\n        if (__DEV__) {\r\n          Object.defineProperty(ctx, key, {\r\n            value: methodHandler.bind(publicThis),\r\n            configurable: true,\r\n            enumerable: true,\r\n            writable: true,\r\n          })\r\n        } else {\r\n          ctx[key] = methodHandler.bind(publicThis)\r\n        }\r\n        if (__DEV__) {\r\n          checkDuplicateProperties!(OptionTypes.METHODS, key)\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n            `Did you reference the function correctly?`,\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (dataOptions) {\r\n    if (__DEV__ && !isFunction(dataOptions)) {\r\n      warn(\r\n        `The data option must be a function. ` +\r\n          `Plain object usage is no longer supported.`,\r\n      )\r\n    }\r\n    const data = dataOptions.call(publicThis, publicThis)\r\n    if (__DEV__ && isPromise(data)) {\r\n      warn(\r\n        `data() returned a Promise - note data() cannot be async; If you ` +\r\n          `intend to perform data fetching before component renders, use ` +\r\n          `async setup() + <Suspense>.`,\r\n      )\r\n    }\r\n    if (!isObject(data)) {\r\n      __DEV__ && warn(`data() should return an object.`)\r\n    } else {\r\n      instance.data = reactive(data)\r\n      if (__DEV__) {\r\n        for (const key in data) {\r\n          checkDuplicateProperties!(OptionTypes.DATA, key)\r\n          // expose data on ctx during dev\r\n          if (!isReservedPrefix(key[0])) {\r\n            Object.defineProperty(ctx, key, {\r\n              configurable: true,\r\n              enumerable: true,\r\n              get: () => data[key],\r\n              set: NOOP,\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // state initialization complete at this point - start caching access\r\n  shouldCacheAccess = true\r\n\r\n  if (computedOptions) {\r\n    for (const key in computedOptions) {\r\n      const opt = (computedOptions as ComputedOptions)[key]\r\n      const get = isFunction(opt)\r\n        ? opt.bind(publicThis, publicThis)\r\n        : isFunction(opt.get)\r\n          ? opt.get.bind(publicThis, publicThis)\r\n          : NOOP\r\n      if (__DEV__ && get === NOOP) {\r\n        warn(`Computed property \"${key}\" has no getter.`)\r\n      }\r\n      const set =\r\n        !isFunction(opt) && isFunction(opt.set)\r\n          ? opt.set.bind(publicThis)\r\n          : __DEV__\r\n            ? () => {\r\n                warn(\r\n                  `Write operation failed: computed property \"${key}\" is readonly.`,\r\n                )\r\n              }\r\n            : NOOP\r\n      const c = computed({\r\n        get,\r\n        set,\r\n      })\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => c.value,\r\n        set: v => (c.value = v),\r\n      })\r\n      if (__DEV__) {\r\n        checkDuplicateProperties!(OptionTypes.COMPUTED, key)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (watchOptions) {\r\n    for (const key in watchOptions) {\r\n      createWatcher(watchOptions[key], ctx, publicThis, key)\r\n    }\r\n  }\r\n\r\n  if (provideOptions) {\r\n    const provides = isFunction(provideOptions)\r\n      ? provideOptions.call(publicThis)\r\n      : provideOptions\r\n    Reflect.ownKeys(provides).forEach(key => {\r\n      provide(key, provides[key])\r\n    })\r\n  }\r\n\r\n  if (created) {\r\n    callHook(created, instance, LifecycleHooks.CREATED)\r\n  }\r\n\r\n  function registerLifecycleHook(\r\n    register: Function,\r\n    hook?: Function | Function[],\r\n  ) {\r\n    if (isArray(hook)) {\r\n      hook.forEach(_hook => register(_hook.bind(publicThis)))\r\n    } else if (hook) {\r\n      register(hook.bind(publicThis))\r\n    }\r\n  }\r\n\r\n  registerLifecycleHook(onBeforeMount, beforeMount)\r\n  registerLifecycleHook(onMounted, mounted)\r\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate)\r\n  registerLifecycleHook(onUpdated, updated)\r\n  registerLifecycleHook(onActivated, activated)\r\n  registerLifecycleHook(onDeactivated, deactivated)\r\n  registerLifecycleHook(onErrorCaptured, errorCaptured)\r\n  registerLifecycleHook(onRenderTracked, renderTracked)\r\n  registerLifecycleHook(onRenderTriggered, renderTriggered)\r\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount)\r\n  registerLifecycleHook(onUnmounted, unmounted)\r\n  registerLifecycleHook(onServerPrefetch, serverPrefetch)\r\n\r\n  if (__COMPAT__) {\r\n    if (\r\n      beforeDestroy &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_BEFORE_DESTROY, instance)\r\n    ) {\r\n      registerLifecycleHook(onBeforeUnmount, beforeDestroy)\r\n    }\r\n    if (\r\n      destroyed &&\r\n      softAssertCompatEnabled(DeprecationTypes.OPTIONS_DESTROYED, instance)\r\n    ) {\r\n      registerLifecycleHook(onUnmounted, destroyed)\r\n    }\r\n  }\r\n\r\n  if (isArray(expose)) {\r\n    if (expose.length) {\r\n      const exposed = instance.exposed || (instance.exposed = {})\r\n      expose.forEach(key => {\r\n        Object.defineProperty(exposed, key, {\r\n          get: () => publicThis[key],\r\n          set: val => (publicThis[key] = val),\r\n        })\r\n      })\r\n    } else if (!instance.exposed) {\r\n      instance.exposed = {}\r\n    }\r\n  }\r\n\r\n  // options that are handled when creating the instance but also need to be\r\n  // applied from mixins\r\n  if (render && instance.render === NOOP) {\r\n    instance.render = render as InternalRenderFunction\r\n  }\r\n  if (inheritAttrs != null) {\r\n    instance.inheritAttrs = inheritAttrs\r\n  }\r\n\r\n  // asset options.\r\n  if (components) instance.components = components as any\r\n  if (directives) instance.directives = directives\r\n  if (\r\n    __COMPAT__ &&\r\n    filters &&\r\n    isCompatEnabled(DeprecationTypes.FILTERS, instance)\r\n  ) {\r\n    instance.filters = filters\r\n  }\r\n}\r\n\r\nexport function resolveInjections(\r\n  injectOptions: ComponentInjectOptions,\r\n  ctx: any,\r\n  checkDuplicateProperties = NOOP as any,\r\n) {\r\n  if (isArray(injectOptions)) {\r\n    injectOptions = normalizeInject(injectOptions)!\r\n  }\r\n  for (const key in injectOptions) {\r\n    const opt = injectOptions[key]\r\n    let injected: unknown\r\n    if (isObject(opt)) {\r\n      if ('default' in opt) {\r\n        injected = inject(\r\n          opt.from || key,\r\n          opt.default,\r\n          true /* treat default function as factory */,\r\n        )\r\n      } else {\r\n        injected = inject(opt.from || key)\r\n      }\r\n    } else {\r\n      injected = inject(opt)\r\n    }\r\n    if (isRef(injected)) {\r\n      // unwrap injected refs (ref #4196)\r\n      Object.defineProperty(ctx, key, {\r\n        enumerable: true,\r\n        configurable: true,\r\n        get: () => (injected as Ref).value,\r\n        set: v => ((injected as Ref).value = v),\r\n      })\r\n    } else {\r\n      ctx[key] = injected\r\n    }\r\n    if (__DEV__) {\r\n      checkDuplicateProperties!(OptionTypes.INJECT, key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction callHook(\r\n  hook: Function,\r\n  instance: ComponentInternalInstance,\r\n  type: LifecycleHooks,\r\n) {\r\n  callWithAsyncErrorHandling(\r\n    isArray(hook)\r\n      ? hook.map(h => h.bind(instance.proxy!))\r\n      : hook.bind(instance.proxy!),\r\n    instance,\r\n    type,\r\n  )\r\n}\r\n\r\nexport function createWatcher(\r\n  raw: ComponentWatchOptionItem,\r\n  ctx: Data,\r\n  publicThis: ComponentPublicInstance,\r\n  key: string,\r\n) {\r\n  const getter = key.includes('.')\r\n    ? createPathGetter(publicThis, key)\r\n    : () => (publicThis as any)[key]\r\n  if (isString(raw)) {\r\n    const handler = ctx[raw]\r\n    if (isFunction(handler)) {\r\n      watch(getter, handler as WatchCallback)\r\n    } else if (__DEV__) {\r\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler)\r\n    }\r\n  } else if (isFunction(raw)) {\r\n    watch(getter, raw.bind(publicThis))\r\n  } else if (isObject(raw)) {\r\n    if (isArray(raw)) {\r\n      raw.forEach(r => createWatcher(r, ctx, publicThis, key))\r\n    } else {\r\n      const handler = isFunction(raw.handler)\r\n        ? raw.handler.bind(publicThis)\r\n        : (ctx[raw.handler] as WatchCallback)\r\n      if (isFunction(handler)) {\r\n        watch(getter, handler, raw)\r\n      } else if (__DEV__) {\r\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler)\r\n      }\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`Invalid watch option: \"${key}\"`, raw)\r\n  }\r\n}\r\n\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nexport function resolveMergedOptions(\r\n  instance: ComponentInternalInstance,\r\n): MergedComponentOptions {\r\n  const base = instance.type as ComponentOptions\r\n  const { mixins, extends: extendsOptions } = base\r\n  const {\r\n    mixins: globalMixins,\r\n    optionsCache: cache,\r\n    config: { optionMergeStrategies },\r\n  } = instance.appContext\r\n  const cached = cache.get(base)\r\n\r\n  let resolved: MergedComponentOptions\r\n\r\n  if (cached) {\r\n    resolved = cached\r\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.PRIVATE_APIS, instance)\r\n    ) {\r\n      resolved = extend({}, base) as MergedComponentOptions\r\n      resolved.parent = instance.parent && instance.parent.proxy\r\n      resolved.propsData = instance.vnode.props\r\n    } else {\r\n      resolved = base as MergedComponentOptions\r\n    }\r\n  } else {\r\n    resolved = {}\r\n    if (globalMixins.length) {\r\n      globalMixins.forEach(m =>\r\n        mergeOptions(resolved, m, optionMergeStrategies, true),\r\n      )\r\n    }\r\n    mergeOptions(resolved, base, optionMergeStrategies)\r\n  }\r\n  if (isObject(base)) {\r\n    cache.set(base, resolved)\r\n  }\r\n  return resolved\r\n}\r\n\r\nexport function mergeOptions(\r\n  to: any,\r\n  from: any,\r\n  strats: Record<string, OptionMergeFunction>,\r\n  asMixin = false,\r\n) {\r\n  if (__COMPAT__ && isFunction(from)) {\r\n    from = from.options\r\n  }\r\n\r\n  const { mixins, extends: extendsOptions } = from\r\n\r\n  if (extendsOptions) {\r\n    mergeOptions(to, extendsOptions, strats, true)\r\n  }\r\n  if (mixins) {\r\n    mixins.forEach((m: ComponentOptionsMixin) =>\r\n      mergeOptions(to, m, strats, true),\r\n    )\r\n  }\r\n\r\n  for (const key in from) {\r\n    if (asMixin && key === 'expose') {\r\n      __DEV__ &&\r\n        warn(\r\n          `\"expose\" option is ignored when declared in mixins or extends. ` +\r\n            `It should only be declared in the base component itself.`,\r\n        )\r\n    } else {\r\n      const strat = internalOptionMergeStrats[key] || (strats && strats[key])\r\n      to[key] = strat ? strat(to[key], from[key]) : from[key]\r\n    }\r\n  }\r\n  return to\r\n}\r\n\r\nexport const internalOptionMergeStrats: Record<string, Function> = {\r\n  data: mergeDataFn,\r\n  props: mergeEmitsOrPropsOptions,\r\n  emits: mergeEmitsOrPropsOptions,\r\n  // objects\r\n  methods: mergeObjectOptions,\r\n  computed: mergeObjectOptions,\r\n  // lifecycle\r\n  beforeCreate: mergeAsArray,\r\n  created: mergeAsArray,\r\n  beforeMount: mergeAsArray,\r\n  mounted: mergeAsArray,\r\n  beforeUpdate: mergeAsArray,\r\n  updated: mergeAsArray,\r\n  beforeDestroy: mergeAsArray,\r\n  beforeUnmount: mergeAsArray,\r\n  destroyed: mergeAsArray,\r\n  unmounted: mergeAsArray,\r\n  activated: mergeAsArray,\r\n  deactivated: mergeAsArray,\r\n  errorCaptured: mergeAsArray,\r\n  serverPrefetch: mergeAsArray,\r\n  // assets\r\n  components: mergeObjectOptions,\r\n  directives: mergeObjectOptions,\r\n  // watch\r\n  watch: mergeWatchOptions,\r\n  // provide / inject\r\n  provide: mergeDataFn,\r\n  inject: mergeInject,\r\n}\r\n\r\nif (__COMPAT__) {\r\n  internalOptionMergeStrats.filters = mergeObjectOptions\r\n}\r\n\r\nfunction mergeDataFn(to: any, from: any) {\r\n  if (!from) {\r\n    return to\r\n  }\r\n  if (!to) {\r\n    return from\r\n  }\r\n  return function mergedDataFn(this: ComponentPublicInstance) {\r\n    return (\r\n      __COMPAT__ && isCompatEnabled(DeprecationTypes.OPTIONS_DATA_MERGE, null)\r\n        ? deepMergeData\r\n        : extend\r\n    )(\r\n      isFunction(to) ? to.call(this, this) : to,\r\n      isFunction(from) ? from.call(this, this) : from,\r\n    )\r\n  }\r\n}\r\n\r\nfunction mergeInject(\r\n  to: ComponentInjectOptions | undefined,\r\n  from: ComponentInjectOptions,\r\n) {\r\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from))\r\n}\r\n\r\nfunction normalizeInject(\r\n  raw: ComponentInjectOptions | undefined,\r\n): ObjectInjectOptions | undefined {\r\n  if (isArray(raw)) {\r\n    const res: ObjectInjectOptions = {}\r\n    for (let i = 0; i < raw.length; i++) {\r\n      res[raw[i]] = raw[i]\r\n    }\r\n    return res\r\n  }\r\n  return raw\r\n}\r\n\r\nfunction mergeAsArray<T = Function>(to: T[] | T | undefined, from: T | T[]) {\r\n  return to ? [...new Set([].concat(to as any, from as any))] : from\r\n}\r\n\r\nfunction mergeObjectOptions(to: Object | undefined, from: Object | undefined) {\r\n  return to ? extend(Object.create(null), to, from) : from\r\n}\r\n\r\nfunction mergeEmitsOrPropsOptions(\r\n  to: EmitsOptions | undefined,\r\n  from: EmitsOptions | undefined,\r\n): EmitsOptions | undefined\r\nfunction mergeEmitsOrPropsOptions(\r\n  to: ComponentPropsOptions | undefined,\r\n  from: ComponentPropsOptions | undefined,\r\n): ComponentPropsOptions | undefined\r\nfunction mergeEmitsOrPropsOptions(\r\n  to: ComponentPropsOptions | EmitsOptions | undefined,\r\n  from: ComponentPropsOptions | EmitsOptions | undefined,\r\n) {\r\n  if (to) {\r\n    if (isArray(to) && isArray(from)) {\r\n      return [...new Set([...to, ...from])]\r\n    }\r\n    return extend(\r\n      Object.create(null),\r\n      normalizePropsOrEmits(to),\r\n      normalizePropsOrEmits(from ?? {}),\r\n    )\r\n  } else {\r\n    return from\r\n  }\r\n}\r\n\r\nfunction mergeWatchOptions(\r\n  to: ComponentWatchOptions | undefined,\r\n  from: ComponentWatchOptions | undefined,\r\n) {\r\n  if (!to) return from\r\n  if (!from) return to\r\n  const merged = extend(Object.create(null), to)\r\n  for (const key in from) {\r\n    merged[key] = mergeAsArray(to[key], from[key])\r\n  }\r\n  return merged\r\n}\r\n","import {\r\n  type Component,\r\n  type ComponentInternalInstance,\r\n  type ConcreteComponent,\r\n  type Data,\r\n  getExposeProxy,\r\n  validateComponentName,\r\n} from './component'\r\nimport type {\r\n  ComponentOptions,\r\n  MergedComponentOptions,\r\n  RuntimeCompilerOptions,\r\n} from './componentOptions'\r\nimport type {\r\n  ComponentCustomProperties,\r\n  ComponentPublicInstance,\r\n} from './componentPublicInstance'\r\nimport { type Directive, validateDirectiveName } from './directives'\r\nimport type { ElementNamespace, RootRenderFunction } from './renderer'\r\nimport type { InjectionKey } from './apiInject'\r\nimport { warn } from './warning'\r\nimport { type VNode, cloneVNode, createVNode } from './vnode'\r\nimport type { RootHydrateFunction } from './hydration'\r\nimport { devtoolsInitApp, devtoolsUnmountApp } from './devtools'\r\nimport { NO, extend, isFunction, isObject } from '@vue/shared'\r\nimport { version } from '.'\r\nimport { installAppCompatProperties } from './compat/global'\r\nimport type { NormalizedPropsOptions } from './componentProps'\r\nimport type { ObjectEmitsOptions } from './componentEmits'\r\nimport type { DefineComponent } from './apiDefineComponent'\r\n\r\nexport interface App<HostElement = any> {\r\n  version: string\r\n  config: AppConfig\r\n\r\n  use<Options extends unknown[]>(\r\n    plugin: Plugin<Options>,\r\n    ...options: Options\r\n  ): this\r\n  use<Options>(plugin: Plugin<Options>, options: Options): this\r\n\r\n  mixin(mixin: ComponentOptions): this\r\n  component(name: string): Component | undefined\r\n  component(name: string, component: Component | DefineComponent): this\r\n  directive<T = any, V = any>(name: string): Directive<T, V> | undefined\r\n  directive<T = any, V = any>(name: string, directive: Directive<T, V>): this\r\n  mount(\r\n    rootContainer: HostElement | string,\r\n    isHydrate?: boolean,\r\n    namespace?: boolean | ElementNamespace,\r\n  ): ComponentPublicInstance\r\n  unmount(): void\r\n  provide<T>(key: InjectionKey<T> | string, value: T): this\r\n\r\n  /**\r\n   * Runs a function with the app as active instance. This allows using of `inject()` within the function to get access\r\n   * to variables provided via `app.provide()`.\r\n   *\r\n   * @param fn - function to run with the app as active instance\r\n   */\r\n  runWithContext<T>(fn: () => T): T\r\n\r\n  // internal, but we need to expose these for the server-renderer and devtools\r\n  _uid: number\r\n  _component: ConcreteComponent\r\n  _props: Data | null\r\n  _container: HostElement | null\r\n  _context: AppContext\r\n  _instance: ComponentInternalInstance | null\r\n\r\n  /**\r\n   * v2 compat only\r\n   */\r\n  filter?(name: string): Function | undefined\r\n  filter?(name: string, filter: Function): this\r\n\r\n  /**\r\n   * @internal v3 compat only\r\n   */\r\n  _createRoot?(options: ComponentOptions): ComponentPublicInstance\r\n}\r\n\r\nexport type OptionMergeFunction = (to: unknown, from: unknown) => any\r\n\r\nexport interface AppConfig {\r\n  // @private\r\n  readonly isNativeTag?: (tag: string) => boolean\r\n\r\n  performance: boolean\r\n  optionMergeStrategies: Record<string, OptionMergeFunction>\r\n  globalProperties: ComponentCustomProperties & Record<string, any>\r\n  errorHandler?: (\r\n    err: unknown,\r\n    instance: ComponentPublicInstance | null,\r\n    info: string,\r\n  ) => void\r\n  warnHandler?: (\r\n    msg: string,\r\n    instance: ComponentPublicInstance | null,\r\n    trace: string,\r\n  ) => void\r\n\r\n  /**\r\n   * Options to pass to `@vue/compiler-dom`.\r\n   * Only supported in runtime compiler build.\r\n   */\r\n  compilerOptions: RuntimeCompilerOptions\r\n\r\n  /**\r\n   * @deprecated use config.compilerOptions.isCustomElement\r\n   */\r\n  isCustomElement?: (tag: string) => boolean\r\n}\r\n\r\nexport interface AppContext {\r\n  app: App // for devtools\r\n  config: AppConfig\r\n  mixins: ComponentOptions[]\r\n  components: Record<string, Component>\r\n  directives: Record<string, Directive>\r\n  provides: Record<string | symbol, any>\r\n\r\n  /**\r\n   * Cache for merged/normalized component options\r\n   * Each app instance has its own cache because app-level global mixins and\r\n   * optionMergeStrategies can affect merge behavior.\r\n   * @internal\r\n   */\r\n  optionsCache: WeakMap<ComponentOptions, MergedComponentOptions>\r\n  /**\r\n   * Cache for normalized props options\r\n   * @internal\r\n   */\r\n  propsCache: WeakMap<ConcreteComponent, NormalizedPropsOptions>\r\n  /**\r\n   * Cache for normalized emits options\r\n   * @internal\r\n   */\r\n  emitsCache: WeakMap<ConcreteComponent, ObjectEmitsOptions | null>\r\n  /**\r\n   * HMR only\r\n   * @internal\r\n   */\r\n  reload?: () => void\r\n  /**\r\n   * v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n}\r\n\r\ntype PluginInstallFunction<Options = any[]> = Options extends unknown[]\r\n  ? (app: App, ...options: Options) => any\r\n  : (app: App, options: Options) => any\r\n\r\nexport type ObjectPlugin<Options = any[]> = {\r\n  install: PluginInstallFunction<Options>\r\n}\r\nexport type FunctionPlugin<Options = any[]> = PluginInstallFunction<Options> &\r\n  Partial<ObjectPlugin<Options>>\r\n\r\nexport type Plugin<Options = any[]> =\r\n  | FunctionPlugin<Options>\r\n  | ObjectPlugin<Options>\r\n\r\nexport function createAppContext(): AppContext {\r\n  return {\r\n    app: null as any,\r\n    config: {\r\n      isNativeTag: NO,\r\n      performance: false,\r\n      globalProperties: {},\r\n      optionMergeStrategies: {},\r\n      errorHandler: undefined,\r\n      warnHandler: undefined,\r\n      compilerOptions: {},\r\n    },\r\n    mixins: [],\r\n    components: {},\r\n    directives: {},\r\n    provides: Object.create(null),\r\n    optionsCache: new WeakMap(),\r\n    propsCache: new WeakMap(),\r\n    emitsCache: new WeakMap(),\r\n  }\r\n}\r\n\r\nexport type CreateAppFunction<HostElement> = (\r\n  rootComponent: Component,\r\n  rootProps?: Data | null,\r\n) => App<HostElement>\r\n\r\nlet uid = 0\r\n\r\nexport function createAppAPI<HostElement>(\r\n  render: RootRenderFunction<HostElement>,\r\n  hydrate?: RootHydrateFunction,\r\n): CreateAppFunction<HostElement> {\r\n  return function createApp(rootComponent, rootProps = null) {\r\n    if (!isFunction(rootComponent)) {\r\n      rootComponent = extend({}, rootComponent)\r\n    }\r\n\r\n    if (rootProps != null && !isObject(rootProps)) {\r\n      __DEV__ && warn(`root props passed to app.mount() must be an object.`)\r\n      rootProps = null\r\n    }\r\n    // 创建全局的context\r\n    const context = createAppContext()\r\n    const installedPlugins = new WeakSet()\r\n\r\n    let isMounted = false\r\n    /**\r\n     * 创建App对象并范围，app对象中_context指向全局的context，\r\n     * 全局的context中保存app字段，这样在任何组件中都可以获取context，进而获取app\r\n     */\r\n    const app: App = (context.app = {\r\n      _uid: uid++,\r\n      _component: rootComponent as ConcreteComponent,\r\n      _props: rootProps,\r\n      _container: null,\r\n      _context: context,\r\n      _instance: null,\r\n\r\n      version,\r\n\r\n      get config() {\r\n        return context.config\r\n      },\r\n\r\n      set config(v) {\r\n        if (__DEV__) {\r\n          warn(\r\n            `app.config cannot be replaced. Modify individual options instead.`,\r\n          )\r\n        }\r\n      },\r\n\r\n      use(plugin: Plugin, ...options: any[]) {\r\n        if (installedPlugins.has(plugin)) {\r\n          __DEV__ && warn(`Plugin has already been applied to target app.`)\r\n        } else if (plugin && isFunction(plugin.install)) {\r\n          installedPlugins.add(plugin)\r\n          plugin.install(app, ...options)\r\n        } else if (isFunction(plugin)) {\r\n          installedPlugins.add(plugin)\r\n          plugin(app, ...options)\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `A plugin must either be a function or an object with an \"install\" ` +\r\n              `function.`,\r\n          )\r\n        }\r\n        return app\r\n      },\r\n\r\n      mixin(mixin: ComponentOptions) {\r\n        if (__FEATURE_OPTIONS_API__) {\r\n          if (!context.mixins.includes(mixin)) {\r\n            context.mixins.push(mixin)\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Mixin has already been applied to target app' +\r\n                (mixin.name ? `: ${mixin.name}` : ''),\r\n            )\r\n          }\r\n        } else if (__DEV__) {\r\n          warn('Mixins are only available in builds supporting Options API')\r\n        }\r\n        return app\r\n      },\r\n\r\n      component(name: string, component?: Component): any {\r\n        if (__DEV__) {\r\n          validateComponentName(name, context.config)\r\n        }\r\n        if (!component) {\r\n          return context.components[name]\r\n        }\r\n        if (__DEV__ && context.components[name]) {\r\n          warn(`Component \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.components[name] = component\r\n        return app\r\n      },\r\n\r\n      directive(name: string, directive?: Directive) {\r\n        if (__DEV__) {\r\n          validateDirectiveName(name)\r\n        }\r\n\r\n        if (!directive) {\r\n          return context.directives[name] as any\r\n        }\r\n        if (__DEV__ && context.directives[name]) {\r\n          warn(`Directive \"${name}\" has already been registered in target app.`)\r\n        }\r\n        context.directives[name] = directive\r\n        return app\r\n      },\r\n\r\n      mount(\r\n        rootContainer: HostElement, // 容器\r\n        isHydrate?: boolean,\r\n        namespace?: boolean | ElementNamespace,\r\n      ): any {\r\n        // 一个app对象只会挂载一次\r\n        if (!isMounted) {\r\n          // #5571\r\n          // 容器只会被挂载一次\r\n          if (__DEV__ && (rootContainer as any).__vue_app__) {\r\n            warn(\r\n              `There is already an app instance mounted on the host container.\\n` +\r\n                ` If you want to mount another app on the same host container,` +\r\n                ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`,\r\n            )\r\n          }\r\n          // 为根组件创建虚拟VNode\r\n          const vnode = createVNode(rootComponent, rootProps)\r\n          // store app context on the root VNode.\r\n          // this will be set on the root instance on initial mount.\r\n          // 给节点赋值全局变量context\r\n          vnode.appContext = context\r\n\r\n          if (namespace === true) {\r\n            namespace = 'svg'\r\n          } else if (namespace === false) {\r\n            namespace = undefined\r\n          }\r\n\r\n          // HMR root reload\r\n          if (__DEV__) {\r\n            context.reload = () => {\r\n              // casting to ElementNamespace because TS doesn't guarantee type narrowing\r\n              // over function boundaries\r\n              render(\r\n                cloneVNode(vnode),\r\n                rootContainer,\r\n                namespace as ElementNamespace,\r\n              )\r\n            }\r\n          }\r\n          /**hydrate是水合函数\r\n           * 在 Vue 3 中，水合函数用于将服务器端渲染（SSR）生成的 HTML 字符串重新变成可交互的、具有响应式特性的 Vue 组件。水合函数的作用是根据服务器端渲染生成的 HTML 字符串来创建对应的虚拟 DOM 树，并与客户端渲染的虚拟 DOM 树进行比较和合并，从而实现客户端的静态内容复用和动态内容更新。\r\n           */\r\n          if (isHydrate && hydrate) {\r\n            hydrate(vnode as VNode<Node, Element>, rootContainer as any)\r\n          } else {\r\n            render(vnode, rootContainer, namespace)\r\n          }\r\n          isMounted = true\r\n          app._container = rootContainer\r\n          // for devtools and telemetry\r\n          ;(rootContainer as any).__vue_app__ = app\r\n\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = vnode.component\r\n            devtoolsInitApp(app, version)\r\n          }\r\n\r\n          return getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n        } else if (__DEV__) {\r\n          warn(\r\n            `App has already been mounted.\\n` +\r\n              `If you want to remount the same app, move your app creation logic ` +\r\n              `into a factory function and create fresh app instances for each ` +\r\n              `mount - e.g. \\`const createMyApp = () => createApp(App)\\``,\r\n          )\r\n        }\r\n      },\r\n\r\n      unmount() {\r\n        if (isMounted) {\r\n          render(null, app._container)\r\n          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n            app._instance = null\r\n            devtoolsUnmountApp(app)\r\n          }\r\n          delete app._container.__vue_app__\r\n        } else if (__DEV__) {\r\n          warn(`Cannot unmount an app that is not mounted.`)\r\n        }\r\n      },\r\n\r\n      provide(key, value) {\r\n        if (__DEV__ && (key as string | symbol) in context.provides) {\r\n          warn(\r\n            `App already provides property with key \"${String(key)}\". ` +\r\n              `It will be overwritten with the new value.`,\r\n          )\r\n        }\r\n\r\n        context.provides[key as string | symbol] = value\r\n\r\n        return app\r\n      },\r\n\r\n      runWithContext(fn) {\r\n        currentApp = app\r\n        try {\r\n          return fn()\r\n        } finally {\r\n          currentApp = null\r\n        }\r\n      },\r\n    })\r\n\r\n    if (__COMPAT__) {\r\n      installAppCompatProperties(app, context, render)\r\n    }\r\n\r\n    return app\r\n  }\r\n}\r\n\r\n/**\r\n * @internal Used to identify the current app when using `inject()` within\r\n * `app.runWithContext()`.\r\n */\r\nexport let currentApp: App<unknown> | null = null\r\n","import { isFunction } from '@vue/shared'\r\nimport { currentInstance } from './component'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { currentApp } from './apiCreateApp'\r\nimport { warn } from './warning'\r\n\r\nexport interface InjectionKey<T> extends Symbol {}\r\n\r\nexport function provide<T, K = InjectionKey<T> | string | number>(\r\n  key: K,\r\n  value: K extends InjectionKey<infer V> ? V : T,\r\n) {\r\n  if (!currentInstance) {\r\n    if (__DEV__) {\r\n      warn(`provide() can only be used inside setup().`)\r\n    }\r\n  } else {\r\n    let provides = currentInstance.provides\r\n    // by default an instance inherits its parent's provides object\r\n    // but when it needs to provide values of its own, it creates its\r\n    // own provides object using parent provides object as prototype.\r\n    // this way in `inject` we can simply look up injections from direct\r\n    // parent and let the prototype chain do the work.\r\n    const parentProvides =\r\n      currentInstance.parent && currentInstance.parent.provides\r\n    if (parentProvides === provides) {\r\n      provides = currentInstance.provides = Object.create(parentProvides)\r\n    }\r\n    // TS doesn't allow symbol as index type\r\n    provides[key as string] = value\r\n  }\r\n}\r\n\r\nexport function inject<T>(key: InjectionKey<T> | string): T | undefined\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T,\r\n  treatDefaultAsFactory?: false,\r\n): T\r\nexport function inject<T>(\r\n  key: InjectionKey<T> | string,\r\n  defaultValue: T | (() => T),\r\n  treatDefaultAsFactory: true,\r\n): T\r\nexport function inject(\r\n  key: InjectionKey<any> | string,\r\n  defaultValue?: unknown,\r\n  treatDefaultAsFactory = false,\r\n) {\r\n  // fallback to `currentRenderingInstance` so that this can be called in\r\n  // a functional component\r\n  const instance = currentInstance || currentRenderingInstance\r\n\r\n  // also support looking up from app-level provides w/ `app.runWithContext()`\r\n  if (instance || currentApp) {\r\n    // #2400\r\n    // to support `app.use` plugins,\r\n    // fallback to appContext's `provides` if the instance is at root\r\n    const provides = instance\r\n      ? instance.parent == null\r\n        ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n        : instance.parent.provides\r\n      : currentApp!._context.provides\r\n\r\n    if (provides && (key as string | symbol) in provides) {\r\n      // TS doesn't allow symbol as index type\r\n      return provides[key as string]\r\n    } else if (arguments.length > 1) {\r\n      return treatDefaultAsFactory && isFunction(defaultValue)\r\n        ? defaultValue.call(instance && instance.proxy)\r\n        : defaultValue\r\n    } else if (__DEV__) {\r\n      warn(`injection \"${String(key)}\" not found.`)\r\n    }\r\n  } else if (__DEV__) {\r\n    warn(`inject() can only be used inside setup() or functional components.`)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns true if `inject()` can be used without warning about being called in the wrong place (e.g. outside of\r\n * setup()). This is used by libraries that want to use `inject()` internally without triggering a warning to the end\r\n * user. One example is `useRoute()` in `vue-router`.\r\n */\r\nexport function hasInjectionContext(): boolean {\r\n  return !!(currentInstance || currentRenderingInstance || currentApp)\r\n}\r\n","import {\r\n  TriggerOpTypes,\r\n  shallowReactive,\r\n  shallowReadonly,\r\n  toRaw,\r\n  trigger,\r\n} from '@vue/reactivity'\r\nimport {\r\n  EMPTY_ARR,\r\n  EMPTY_OBJ,\r\n  type IfAny,\r\n  PatchFlags,\r\n  camelize,\r\n  capitalize,\r\n  def,\r\n  extend,\r\n  hasOwn,\r\n  hyphenate,\r\n  isArray,\r\n  isFunction,\r\n  isObject,\r\n  isOn,\r\n  isReservedProp,\r\n  isString,\r\n  makeMap,\r\n  toRawType,\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport {\r\n  type ComponentInternalInstance,\r\n  type ComponentOptions,\r\n  type ConcreteComponent,\r\n  type Data,\r\n  setCurrentInstance,\r\n} from './component'\r\nimport { isEmitListener } from './componentEmits'\r\nimport { InternalObjectKey } from './vnode'\r\nimport type { AppContext } from './apiCreateApp'\r\nimport { createPropsDefaultThis } from './compat/props'\r\nimport { isCompatEnabled, softAssertCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport { shouldSkipAttr } from './compat/attrsFallthrough'\r\n\r\nexport type ComponentPropsOptions<P = Data> =\r\n  | ComponentObjectPropsOptions<P>\r\n  | string[]\r\n\r\nexport type ComponentObjectPropsOptions<P = Data> = {\r\n  [K in keyof P]: Prop<P[K]> | null\r\n}\r\n\r\nexport type Prop<T, D = T> = PropOptions<T, D> | PropType<T>\r\n\r\ntype DefaultFactory<T> = (props: Data) => T | null | undefined\r\n\r\nexport interface PropOptions<T = any, D = T> {\r\n  type?: PropType<T> | true | null\r\n  required?: boolean\r\n  default?: D | DefaultFactory<D> | null | undefined | object\r\n  validator?(value: unknown, props: Data): boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  skipCheck?: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  skipFactory?: boolean\r\n}\r\n\r\nexport type PropType<T> = PropConstructor<T> | PropConstructor<T>[]\r\n\r\ntype PropConstructor<T = any> =\r\n  | { new (...args: any[]): T & {} }\r\n  | { (): T }\r\n  | PropMethod<T>\r\n\r\ntype PropMethod<T, TConstructor = any> = [T] extends [\r\n  ((...args: any) => any) | undefined,\r\n] // if is function with args, allowing non-required functions\r\n  ? { new (): TConstructor; (): T; readonly prototype: TConstructor } // Create Function like constructor\r\n  : never\r\n\r\ntype RequiredKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { required: true }\r\n    | { default: any }\r\n    // don't mark Boolean props as undefined\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { default: undefined | (() => undefined) }\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype OptionalKeys<T> = Exclude<keyof T, RequiredKeys<T>>\r\n\r\ntype DefaultKeys<T> = {\r\n  [K in keyof T]: T[K] extends\r\n    | { default: any }\r\n    // Boolean implicitly defaults to false\r\n    | BooleanConstructor\r\n    | { type: BooleanConstructor }\r\n    ? T[K] extends { type: BooleanConstructor; required: true } // not default if Boolean is marked as required\r\n      ? never\r\n      : K\r\n    : never\r\n}[keyof T]\r\n\r\ntype InferPropType<T> = [T] extends [null]\r\n  ? any // null & true would fail to infer\r\n  : [T] extends [{ type: null | true }]\r\n    ? any // As TS issue https://github.com/Microsoft/TypeScript/issues/14829 // somehow `ObjectConstructor` when inferred from { (): T } becomes `any` // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\r\n    : [T] extends [ObjectConstructor | { type: ObjectConstructor }]\r\n      ? Record<string, any>\r\n      : [T] extends [BooleanConstructor | { type: BooleanConstructor }]\r\n        ? boolean\r\n        : [T] extends [DateConstructor | { type: DateConstructor }]\r\n          ? Date\r\n          : [T] extends [(infer U)[] | { type: (infer U)[] }]\r\n            ? U extends DateConstructor\r\n              ? Date | InferPropType<U>\r\n              : InferPropType<U>\r\n            : [T] extends [Prop<infer V, infer D>]\r\n              ? unknown extends V\r\n                ? IfAny<V, V, D>\r\n                : V\r\n              : T\r\n\r\n/**\r\n * Extract prop types from a runtime props options object.\r\n * The extracted types are **internal** - i.e. the resolved props received by\r\n * the component.\r\n * - Boolean props are always present\r\n * - Props with default values are always present\r\n *\r\n * To extract accepted props from the parent, use {@link ExtractPublicPropTypes}.\r\n */\r\nexport type ExtractPropTypes<O> = {\r\n  // use `keyof Pick<O, RequiredKeys<O>>` instead of `RequiredKeys<O>` to\r\n  // support IDE features\r\n  [K in keyof Pick<O, RequiredKeys<O>>]: InferPropType<O[K]>\r\n} & {\r\n  // use `keyof Pick<O, OptionalKeys<O>>` instead of `OptionalKeys<O>` to\r\n  // support IDE features\r\n  [K in keyof Pick<O, OptionalKeys<O>>]?: InferPropType<O[K]>\r\n}\r\n\r\ntype PublicRequiredKeys<T> = {\r\n  [K in keyof T]: T[K] extends { required: true } ? K : never\r\n}[keyof T]\r\n\r\ntype PublicOptionalKeys<T> = Exclude<keyof T, PublicRequiredKeys<T>>\r\n\r\n/**\r\n * Extract prop types from a runtime props options object.\r\n * The extracted types are **public** - i.e. the expected props that can be\r\n * passed to component.\r\n */\r\nexport type ExtractPublicPropTypes<O> = {\r\n  [K in keyof Pick<O, PublicRequiredKeys<O>>]: InferPropType<O[K]>\r\n} & {\r\n  [K in keyof Pick<O, PublicOptionalKeys<O>>]?: InferPropType<O[K]>\r\n}\r\n\r\nenum BooleanFlags {\r\n  shouldCast,\r\n  shouldCastTrue,\r\n}\r\n\r\n// extract props which defined with default from prop options\r\nexport type ExtractDefaultPropTypes<O> = O extends object\r\n  ? // use `keyof Pick<O, DefaultKeys<O>>` instead of `DefaultKeys<O>` to support IDE features\r\n    { [K in keyof Pick<O, DefaultKeys<O>>]: InferPropType<O[K]> }\r\n  : {}\r\n\r\ntype NormalizedProp =\r\n  | null\r\n  | (PropOptions & {\r\n      [BooleanFlags.shouldCast]?: boolean\r\n      [BooleanFlags.shouldCastTrue]?: boolean\r\n    })\r\n\r\n// normalized value is a tuple of the actual normalized options\r\n// and an array of prop keys that need value casting (booleans and defaults)\r\nexport type NormalizedProps = Record<string, NormalizedProp>\r\nexport type NormalizedPropsOptions = [NormalizedProps, string[]] | []\r\n\r\nexport function initProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  isStateful: number, // result of bitwise flag comparison\r\n  isSSR = false,\r\n) {\r\n  const props: Data = {}\r\n  const attrs: Data = {}\r\n  def(attrs, InternalObjectKey, 1)\r\n\r\n  instance.propsDefaults = Object.create(null)\r\n\r\n  setFullProps(instance, rawProps, props, attrs)\r\n\r\n  // ensure all declared prop keys are present\r\n  for (const key in instance.propsOptions[0]) {\r\n    if (!(key in props)) {\r\n      props[key] = undefined\r\n    }\r\n  }\r\n\r\n  // validation\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n\r\n  if (isStateful) {\r\n    // stateful\r\n    instance.props = isSSR ? props : shallowReactive(props)\r\n  } else {\r\n    if (!instance.type.props) {\r\n      // functional w/ optional props, props === attrs\r\n      instance.props = attrs\r\n    } else {\r\n      // functional w/ declared props\r\n      instance.props = props\r\n    }\r\n  }\r\n  instance.attrs = attrs\r\n}\r\n\r\nfunction isInHmrContext(instance: ComponentInternalInstance | null) {\r\n  while (instance) {\r\n    if (instance.type.__hmrId) return true\r\n    instance = instance.parent\r\n  }\r\n}\r\n\r\nexport function updateProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  rawPrevProps: Data | null,\r\n  optimized: boolean,\r\n) {\r\n  const {\r\n    props,\r\n    attrs,\r\n    vnode: { patchFlag },\r\n  } = instance\r\n  const rawCurrentProps = toRaw(props)\r\n  const [options] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n\r\n  if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !(__DEV__ && isInHmrContext(instance)) &&\r\n    (optimized || patchFlag > 0) &&\r\n    !(patchFlag & PatchFlags.FULL_PROPS)\r\n  ) {\r\n    if (patchFlag & PatchFlags.PROPS) {\r\n      // Compiler-generated props & no keys change, just set the updated\r\n      // the props.\r\n      const propsToUpdate = instance.vnode.dynamicProps!\r\n      for (let i = 0; i < propsToUpdate.length; i++) {\r\n        let key = propsToUpdate[i]\r\n        // skip if the prop key is a declared emit event listener\r\n        if (isEmitListener(instance.emitsOptions, key)) {\r\n          continue\r\n        }\r\n        // PROPS flag guarantees rawProps to be non-null\r\n        const value = rawProps![key]\r\n        if (options) {\r\n          // attr / props separation was done on init and will be consistent\r\n          // in this code path, so just check if attrs have it.\r\n          if (hasOwn(attrs, key)) {\r\n            if (value !== attrs[key]) {\r\n              attrs[key] = value\r\n              hasAttrsChanged = true\r\n            }\r\n          } else {\r\n            const camelizedKey = camelize(key)\r\n            props[camelizedKey] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              camelizedKey,\r\n              value,\r\n              instance,\r\n              false /* isAbsent */,\r\n            )\r\n          }\r\n        } else {\r\n          if (__COMPAT__) {\r\n            if (isOn(key) && key.endsWith('Native')) {\r\n              key = key.slice(0, -6) // remove Native postfix\r\n            } else if (shouldSkipAttr(key, instance)) {\r\n              continue\r\n            }\r\n          }\r\n          if (value !== attrs[key]) {\r\n            attrs[key] = value\r\n            hasAttrsChanged = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // full props update.\r\n    if (setFullProps(instance, rawProps, props, attrs)) {\r\n      hasAttrsChanged = true\r\n    }\r\n    // in case of dynamic props, check if we need to delete keys from\r\n    // the props object\r\n    let kebabKey: string\r\n    for (const key in rawCurrentProps) {\r\n      if (\r\n        !rawProps ||\r\n        // for camelCase\r\n        (!hasOwn(rawProps, key) &&\r\n          // it's possible the original props was passed in as kebab-case\r\n          // and converted to camelCase (#955)\r\n          ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))\r\n      ) {\r\n        if (options) {\r\n          if (\r\n            rawPrevProps &&\r\n            // for camelCase\r\n            (rawPrevProps[key] !== undefined ||\r\n              // for kebab-case\r\n              rawPrevProps[kebabKey!] !== undefined)\r\n          ) {\r\n            props[key] = resolvePropValue(\r\n              options,\r\n              rawCurrentProps,\r\n              key,\r\n              undefined,\r\n              instance,\r\n              true /* isAbsent */,\r\n            )\r\n          }\r\n        } else {\r\n          delete props[key]\r\n        }\r\n      }\r\n    }\r\n    // in the case of functional component w/o props declaration, props and\r\n    // attrs point to the same object so it should already have been updated.\r\n    if (attrs !== rawCurrentProps) {\r\n      for (const key in attrs) {\r\n        if (\r\n          !rawProps ||\r\n          (!hasOwn(rawProps, key) &&\r\n            (!__COMPAT__ || !hasOwn(rawProps, key + 'Native')))\r\n        ) {\r\n          delete attrs[key]\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // trigger updates for $attrs in case it's used in component slots\r\n  if (hasAttrsChanged) {\r\n    trigger(instance, TriggerOpTypes.SET, '$attrs')\r\n  }\r\n\r\n  if (__DEV__) {\r\n    validateProps(rawProps || {}, props, instance)\r\n  }\r\n}\r\n\r\nfunction setFullProps(\r\n  instance: ComponentInternalInstance,\r\n  rawProps: Data | null,\r\n  props: Data,\r\n  attrs: Data,\r\n) {\r\n  const [options, needCastKeys] = instance.propsOptions\r\n  let hasAttrsChanged = false\r\n  let rawCastValues: Data | undefined\r\n  if (rawProps) {\r\n    for (let key in rawProps) {\r\n      // key, ref are reserved and never passed down\r\n      if (isReservedProp(key)) {\r\n        continue\r\n      }\r\n\r\n      if (__COMPAT__) {\r\n        if (key.startsWith('onHook:')) {\r\n          softAssertCompatEnabled(\r\n            DeprecationTypes.INSTANCE_EVENT_HOOKS,\r\n            instance,\r\n            key.slice(2).toLowerCase(),\r\n          )\r\n        }\r\n        if (key === 'inline-template') {\r\n          continue\r\n        }\r\n      }\r\n\r\n      const value = rawProps[key]\r\n      // prop option names are camelized during normalization, so to support\r\n      // kebab -> camel conversion here we need to camelize the key.\r\n      let camelKey\r\n      if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n          props[camelKey] = value\r\n        } else {\r\n          ;(rawCastValues || (rawCastValues = {}))[camelKey] = value\r\n        }\r\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\r\n        // Any non-declared (either as a prop or an emitted event) props are put\r\n        // into a separate `attrs` object for spreading. Make sure to preserve\r\n        // original key casing\r\n        if (__COMPAT__) {\r\n          if (isOn(key) && key.endsWith('Native')) {\r\n            key = key.slice(0, -6) // remove Native postfix\r\n          } else if (shouldSkipAttr(key, instance)) {\r\n            continue\r\n          }\r\n        }\r\n        if (!(key in attrs) || value !== attrs[key]) {\r\n          attrs[key] = value\r\n          hasAttrsChanged = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (needCastKeys) {\r\n    const rawCurrentProps = toRaw(props)\r\n    const castValues = rawCastValues || EMPTY_OBJ\r\n    for (let i = 0; i < needCastKeys.length; i++) {\r\n      const key = needCastKeys[i]\r\n      props[key] = resolvePropValue(\r\n        options!,\r\n        rawCurrentProps,\r\n        key,\r\n        castValues[key],\r\n        instance,\r\n        !hasOwn(castValues, key),\r\n      )\r\n    }\r\n  }\r\n\r\n  return hasAttrsChanged\r\n}\r\n\r\nfunction resolvePropValue(\r\n  options: NormalizedProps,\r\n  props: Data,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance,\r\n  isAbsent: boolean,\r\n) {\r\n  const opt = options[key]\r\n  if (opt != null) {\r\n    const hasDefault = hasOwn(opt, 'default')\r\n    // default values\r\n    if (hasDefault && value === undefined) {\r\n      const defaultValue = opt.default\r\n      if (\r\n        opt.type !== Function &&\r\n        !opt.skipFactory &&\r\n        isFunction(defaultValue)\r\n      ) {\r\n        const { propsDefaults } = instance\r\n        if (key in propsDefaults) {\r\n          value = propsDefaults[key]\r\n        } else {\r\n          const reset = setCurrentInstance(instance)\r\n          value = propsDefaults[key] = defaultValue.call(\r\n            __COMPAT__ &&\r\n              isCompatEnabled(DeprecationTypes.PROPS_DEFAULT_THIS, instance)\r\n              ? createPropsDefaultThis(instance, props, key)\r\n              : null,\r\n            props,\r\n          )\r\n          reset()\r\n        }\r\n      } else {\r\n        value = defaultValue\r\n      }\r\n    }\r\n    // boolean casting\r\n    if (opt[BooleanFlags.shouldCast]) {\r\n      if (isAbsent && !hasDefault) {\r\n        value = false\r\n      } else if (\r\n        opt[BooleanFlags.shouldCastTrue] &&\r\n        (value === '' || value === hyphenate(key))\r\n      ) {\r\n        value = true\r\n      }\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nexport function normalizePropsOptions(\r\n  comp: ConcreteComponent,\r\n  appContext: AppContext,\r\n  asMixin = false,\r\n): NormalizedPropsOptions {\r\n  const cache = appContext.propsCache\r\n  const cached = cache.get(comp)\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  const raw = comp.props\r\n  const normalized: NormalizedPropsOptions[0] = {}\r\n  const needCastKeys: NormalizedPropsOptions[1] = []\r\n\r\n  // apply mixin/extends props\r\n  let hasExtends = false\r\n  if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n    const extendProps = (raw: ComponentOptions) => {\r\n      if (__COMPAT__ && isFunction(raw)) {\r\n        raw = raw.options\r\n      }\r\n      hasExtends = true\r\n      const [props, keys] = normalizePropsOptions(raw, appContext, true)\r\n      extend(normalized, props)\r\n      if (keys) needCastKeys.push(...keys)\r\n    }\r\n    if (!asMixin && appContext.mixins.length) {\r\n      appContext.mixins.forEach(extendProps)\r\n    }\r\n    if (comp.extends) {\r\n      extendProps(comp.extends)\r\n    }\r\n    if (comp.mixins) {\r\n      comp.mixins.forEach(extendProps)\r\n    }\r\n  }\r\n\r\n  if (!raw && !hasExtends) {\r\n    if (isObject(comp)) {\r\n      cache.set(comp, EMPTY_ARR as any)\r\n    }\r\n    return EMPTY_ARR as any\r\n  }\r\n\r\n  if (isArray(raw)) {\r\n    for (let i = 0; i < raw.length; i++) {\r\n      if (__DEV__ && !isString(raw[i])) {\r\n        warn(`props must be strings when using array syntax.`, raw[i])\r\n      }\r\n      const normalizedKey = camelize(raw[i])\r\n      if (validatePropName(normalizedKey)) {\r\n        normalized[normalizedKey] = EMPTY_OBJ\r\n      }\r\n    }\r\n  } else if (raw) {\r\n    if (__DEV__ && !isObject(raw)) {\r\n      warn(`invalid props options`, raw)\r\n    }\r\n    for (const key in raw) {\r\n      const normalizedKey = camelize(key)\r\n      if (validatePropName(normalizedKey)) {\r\n        const opt = raw[key]\r\n        const prop: NormalizedProp = (normalized[normalizedKey] =\r\n          isArray(opt) || isFunction(opt) ? { type: opt } : extend({}, opt))\r\n        if (prop) {\r\n          const booleanIndex = getTypeIndex(Boolean, prop.type)\r\n          const stringIndex = getTypeIndex(String, prop.type)\r\n          prop[BooleanFlags.shouldCast] = booleanIndex > -1\r\n          prop[BooleanFlags.shouldCastTrue] =\r\n            stringIndex < 0 || booleanIndex < stringIndex\r\n          // if the prop needs boolean casting or default value\r\n          if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n            needCastKeys.push(normalizedKey)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const res: NormalizedPropsOptions = [normalized, needCastKeys]\r\n  if (isObject(comp)) {\r\n    cache.set(comp, res)\r\n  }\r\n  return res\r\n}\r\n\r\nfunction validatePropName(key: string) {\r\n  if (key[0] !== '$') {\r\n    return true\r\n  } else if (__DEV__) {\r\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`)\r\n  }\r\n  return false\r\n}\r\n\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor: Prop<any>): string {\r\n  const match = ctor && ctor.toString().match(/^\\s*(function|class) (\\w+)/)\r\n  return match ? match[2] : ctor === null ? 'null' : ''\r\n}\r\n\r\nfunction isSameType(a: Prop<any>, b: Prop<any>): boolean {\r\n  return getType(a) === getType(b)\r\n}\r\n\r\nfunction getTypeIndex(\r\n  type: Prop<any>,\r\n  expectedTypes: PropType<any> | void | null | true,\r\n): number {\r\n  if (isArray(expectedTypes)) {\r\n    return expectedTypes.findIndex(t => isSameType(t, type))\r\n  } else if (isFunction(expectedTypes)) {\r\n    return isSameType(expectedTypes, type) ? 0 : -1\r\n  }\r\n  return -1\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(\r\n  rawProps: Data,\r\n  props: Data,\r\n  instance: ComponentInternalInstance,\r\n) {\r\n  const resolvedValues = toRaw(props)\r\n  const options = instance.propsOptions[0]\r\n  for (const key in options) {\r\n    let opt = options[key]\r\n    if (opt == null) continue\r\n    validateProp(\r\n      key,\r\n      resolvedValues[key],\r\n      opt,\r\n      __DEV__ ? shallowReadonly(resolvedValues) : resolvedValues,\r\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)),\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(\r\n  name: string,\r\n  value: unknown,\r\n  prop: PropOptions,\r\n  props: Data,\r\n  isAbsent: boolean,\r\n) {\r\n  const { type, required, validator, skipCheck } = prop\r\n  // required!\r\n  if (required && isAbsent) {\r\n    warn('Missing required prop: \"' + name + '\"')\r\n    return\r\n  }\r\n  // missing but optional\r\n  if (value == null && !required) {\r\n    return\r\n  }\r\n  // type check\r\n  if (type != null && type !== true && !skipCheck) {\r\n    let isValid = false\r\n    const types = isArray(type) ? type : [type]\r\n    const expectedTypes = []\r\n    // value is valid as long as one of the specified types match\r\n    for (let i = 0; i < types.length && !isValid; i++) {\r\n      const { valid, expectedType } = assertType(value, types[i])\r\n      expectedTypes.push(expectedType || '')\r\n      isValid = valid\r\n    }\r\n    if (!isValid) {\r\n      warn(getInvalidTypeMessage(name, value, expectedTypes))\r\n      return\r\n    }\r\n  }\r\n  // custom validator\r\n  if (validator && !validator(value, props)) {\r\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".')\r\n  }\r\n}\r\n\r\nconst isSimpleType = /*#__PURE__*/ makeMap(\r\n  'String,Number,Boolean,Function,Symbol,BigInt',\r\n)\r\n\r\ntype AssertionResult = {\r\n  valid: boolean\r\n  expectedType: string\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value: unknown, type: PropConstructor): AssertionResult {\r\n  let valid\r\n  const expectedType = getType(type)\r\n  if (isSimpleType(expectedType)) {\r\n    const t = typeof value\r\n    valid = t === expectedType.toLowerCase()\r\n    // for primitive wrapper objects\r\n    if (!valid && t === 'object') {\r\n      valid = value instanceof type\r\n    }\r\n  } else if (expectedType === 'Object') {\r\n    valid = isObject(value)\r\n  } else if (expectedType === 'Array') {\r\n    valid = isArray(value)\r\n  } else if (expectedType === 'null') {\r\n    valid = value === null\r\n  } else {\r\n    valid = value instanceof type\r\n  }\r\n  return {\r\n    valid,\r\n    expectedType,\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(\r\n  name: string,\r\n  value: unknown,\r\n  expectedTypes: string[],\r\n): string {\r\n  if (expectedTypes.length === 0) {\r\n    return (\r\n      `Prop type [] for prop \"${name}\" won't match anything.` +\r\n      ` Did you mean to use type Array instead?`\r\n    )\r\n  }\r\n  let message =\r\n    `Invalid prop: type check failed for prop \"${name}\".` +\r\n    ` Expected ${expectedTypes.map(capitalize).join(' | ')}`\r\n  const expectedType = expectedTypes[0]\r\n  const receivedType = toRawType(value)\r\n  const expectedValue = styleValue(value, expectedType)\r\n  const receivedValue = styleValue(value, receivedType)\r\n  // check if we need to specify expected value\r\n  if (\r\n    expectedTypes.length === 1 &&\r\n    isExplicable(expectedType) &&\r\n    !isBoolean(expectedType, receivedType)\r\n  ) {\r\n    message += ` with value ${expectedValue}`\r\n  }\r\n  message += `, got ${receivedType} `\r\n  // check if we need to specify received value\r\n  if (isExplicable(receivedType)) {\r\n    message += `with value ${receivedValue}.`\r\n  }\r\n  return message\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value: unknown, type: string): string {\r\n  if (type === 'String') {\r\n    return `\"${value}\"`\r\n  } else if (type === 'Number') {\r\n    return `${Number(value)}`\r\n  } else {\r\n    return `${value}`\r\n  }\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type: string): boolean {\r\n  const explicitTypes = ['string', 'number', 'boolean']\r\n  return explicitTypes.some(elem => type.toLowerCase() === elem)\r\n}\r\n\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args: string[]): boolean {\r\n  return args.some(elem => elem.toLowerCase() === 'boolean')\r\n}\r\n","import { type ComponentInternalInstance, currentInstance } from './component'\r\nimport {\r\n  InternalObjectKey,\r\n  type VNode,\r\n  type VNodeChild,\r\n  type VNodeNormalizedChildren,\r\n  normalizeVNode,\r\n} from './vnode'\r\nimport {\r\n  EMPTY_OBJ,\r\n  type IfAny,\r\n  type Prettify,\r\n  ShapeFlags,\r\n  SlotFlags,\r\n  def,\r\n  extend,\r\n  isArray,\r\n  isFunction,\r\n} from '@vue/shared'\r\nimport { warn } from './warning'\r\nimport { isKeepAlive } from './components/KeepAlive'\r\nimport { type ContextualRenderFn, withCtx } from './componentRenderContext'\r\nimport { isHmrUpdating } from './hmr'\r\nimport { DeprecationTypes, isCompatEnabled } from './compat/compatConfig'\r\nimport { toRaw } from '@vue/reactivity'\r\nimport { trigger } from '@vue/reactivity'\r\nimport { TriggerOpTypes } from '@vue/reactivity'\r\n\r\nexport type Slot<T extends any = any> = (\r\n  ...args: IfAny<T, any[], [T] | (T extends undefined ? [] : never)>\r\n) => VNode[]\r\n\r\nexport type InternalSlots = {\r\n  [name: string]: Slot | undefined\r\n}\r\n\r\nexport type Slots = Readonly<InternalSlots>\r\n\r\ndeclare const SlotSymbol: unique symbol\r\nexport type SlotsType<T extends Record<string, any> = Record<string, any>> = {\r\n  [SlotSymbol]?: T\r\n}\r\n\r\nexport type StrictUnwrapSlotsType<\r\n  S extends SlotsType,\r\n  T = NonNullable<S[typeof SlotSymbol]>,\r\n> = [keyof S] extends [never] ? Slots : Readonly<T> & T\r\n\r\nexport type UnwrapSlotsType<\r\n  S extends SlotsType,\r\n  T = NonNullable<S[typeof SlotSymbol]>,\r\n> = [keyof S] extends [never]\r\n  ? Slots\r\n  : Readonly<\r\n      Prettify<{\r\n        [K in keyof T]: NonNullable<T[K]> extends (...args: any[]) => any\r\n          ? T[K]\r\n          : Slot<T[K]>\r\n      }>\r\n    >\r\n\r\nexport type RawSlots = {\r\n  [name: string]: unknown\r\n  // manual render fn hint to skip forced children updates\r\n  $stable?: boolean\r\n  /**\r\n   * for tracking slot owner instance. This is attached during\r\n   * normalizeChildren when the component vnode is created.\r\n   * @internal\r\n   */\r\n  _ctx?: ComponentInternalInstance | null\r\n  /**\r\n   * indicates compiler generated slots\r\n   * we use a reserved property instead of a vnode patchFlag because the slots\r\n   * object may be directly passed down to a child component in a manual\r\n   * render function, and the optimization hint need to be on the slot object\r\n   * itself to be preserved.\r\n   * @internal\r\n   */\r\n  _?: SlotFlags\r\n}\r\n\r\nconst isInternalKey = (key: string) => key[0] === '_' || key === '$stable'\r\n\r\nconst normalizeSlotValue = (value: unknown): VNode[] =>\r\n  isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value as VNodeChild)]\r\n\r\nconst normalizeSlot = (\r\n  key: string,\r\n  rawSlot: Function,\r\n  ctx: ComponentInternalInstance | null | undefined,\r\n): Slot => {\r\n  if ((rawSlot as any)._n) {\r\n    // already normalized - #5353\r\n    return rawSlot as Slot\r\n  }\r\n  const normalized = withCtx((...args: any[]) => {\r\n    if (\r\n      __DEV__ &&\r\n      currentInstance &&\r\n      (!ctx || ctx.root === currentInstance.root)\r\n    ) {\r\n      warn(\r\n        `Slot \"${key}\" invoked outside of the render function: ` +\r\n          `this will not track dependencies used in the slot. ` +\r\n          `Invoke the slot function inside the render function instead.`,\r\n      )\r\n    }\r\n    return normalizeSlotValue(rawSlot(...args))\r\n  }, ctx) as Slot\r\n  // NOT a compiled slot\r\n  ;(normalized as ContextualRenderFn)._c = false\r\n  return normalized\r\n}\r\n\r\nconst normalizeObjectSlots = (\r\n  rawSlots: RawSlots,\r\n  slots: InternalSlots,\r\n  instance: ComponentInternalInstance,\r\n) => {\r\n  const ctx = rawSlots._ctx\r\n  for (const key in rawSlots) {\r\n    if (isInternalKey(key)) continue\r\n    const value = rawSlots[key]\r\n    if (isFunction(value)) {\r\n      slots[key] = normalizeSlot(key, value, ctx)\r\n    } else if (value != null) {\r\n      if (\r\n        __DEV__ &&\r\n        !(\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance)\r\n        )\r\n      ) {\r\n        warn(\r\n          `Non-function value encountered for slot \"${key}\". ` +\r\n            `Prefer function slots for better performance.`,\r\n        )\r\n      }\r\n      const normalized = normalizeSlotValue(value)\r\n      slots[key] = () => normalized\r\n    }\r\n  }\r\n}\r\n\r\nconst normalizeVNodeSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren,\r\n) => {\r\n  if (\r\n    __DEV__ &&\r\n    !isKeepAlive(instance.vnode) &&\r\n    !(__COMPAT__ && isCompatEnabled(DeprecationTypes.RENDER_FUNCTION, instance))\r\n  ) {\r\n    warn(\r\n      `Non-function value encountered for default slot. ` +\r\n        `Prefer function slots for better performance.`,\r\n    )\r\n  }\r\n  const normalized = normalizeSlotValue(children)\r\n  instance.slots.default = () => normalized\r\n}\r\n\r\nexport const initSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren,\r\n) => {\r\n  if (instance.vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n      // we should avoid the proxy object polluting the slots of the internal instance\r\n      instance.slots = toRaw(children as InternalSlots)\r\n      // make compiler marker non-enumerable\r\n      def(children as InternalSlots, '_', type)\r\n    } else {\r\n      normalizeObjectSlots(\r\n        children as RawSlots,\r\n        (instance.slots = {}),\r\n        instance,\r\n      )\r\n    }\r\n  } else {\r\n    instance.slots = {}\r\n    if (children) {\r\n      normalizeVNodeSlots(instance, children)\r\n    }\r\n  }\r\n  def(instance.slots, InternalObjectKey, 1)\r\n}\r\n\r\nexport const updateSlots = (\r\n  instance: ComponentInternalInstance,\r\n  children: VNodeNormalizedChildren,\r\n  optimized: boolean,\r\n) => {\r\n  const { vnode, slots } = instance\r\n  let needDeletionCheck = true\r\n  let deletionComparisonTarget = EMPTY_OBJ\r\n  if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\r\n    const type = (children as RawSlots)._\r\n    if (type) {\r\n      // compiled slots.\r\n      if (__DEV__ && isHmrUpdating) {\r\n        // Parent was HMR updated so slot content may have changed.\r\n        // force update slots and mark instance for hmr as well\r\n        extend(slots, children as Slots)\r\n        trigger(instance, TriggerOpTypes.SET, '$slots')\r\n      } else if (optimized && type === SlotFlags.STABLE) {\r\n        // compiled AND stable.\r\n        // no need to update, and skip stale slots removal.\r\n        needDeletionCheck = false\r\n      } else {\r\n        // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n        // normalization.\r\n        extend(slots, children as Slots)\r\n        // #2893\r\n        // when rendering the optimized slots by manually written render function,\r\n        // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n        // i.e. let the `renderSlot` create the bailed Fragment\r\n        if (!optimized && type === SlotFlags.STABLE) {\r\n          delete slots._\r\n        }\r\n      }\r\n    } else {\r\n      needDeletionCheck = !(children as RawSlots).$stable\r\n      normalizeObjectSlots(children as RawSlots, slots, instance)\r\n    }\r\n    deletionComparisonTarget = children as RawSlots\r\n  } else if (children) {\r\n    // non slot object children (direct value) passed to a component\r\n    normalizeVNodeSlots(instance, children)\r\n    deletionComparisonTarget = { default: 1 }\r\n  }\r\n\r\n  // delete stale slots\r\n  if (needDeletionCheck) {\r\n    for (const key in slots) {\r\n      if (!isInternalKey(key) && deletionComparisonTarget[key] == null) {\r\n        delete slots[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { SuspenseBoundary } from './components/Suspense'\r\nimport type { VNode, VNodeNormalizedRef, VNodeNormalizedRefAtom } from './vnode'\r\nimport {\r\n  EMPTY_OBJ,\r\n  ShapeFlags,\r\n  hasOwn,\r\n  isArray,\r\n  isFunction,\r\n  isString,\r\n  remove,\r\n} from '@vue/shared'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { getExposeProxy } from './component'\r\nimport { warn } from './warning'\r\nimport { isRef } from '@vue/reactivity'\r\nimport { ErrorCodes, callWithErrorHandling } from './errorHandling'\r\nimport type { SchedulerJob } from './scheduler'\r\nimport { queuePostRenderEffect } from './renderer'\r\n\r\n/**\r\n * Function for handling a template ref\r\n */\r\nexport function setRef(\r\n  rawRef: VNodeNormalizedRef,\r\n  oldRawRef: VNodeNormalizedRef | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  vnode: VNode,\r\n  isUnmount = false,\r\n) {\r\n  if (isArray(rawRef)) {\r\n    rawRef.forEach((r, i) =>\r\n      setRef(\r\n        r,\r\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\r\n        parentSuspense,\r\n        vnode,\r\n        isUnmount,\r\n      ),\r\n    )\r\n    return\r\n  }\r\n\r\n  if (isAsyncWrapper(vnode) && !isUnmount) {\r\n    // when mounting async components, nothing needs to be done,\r\n    // because the template ref is forwarded to inner component\r\n    return\r\n  }\r\n\r\n  const refValue =\r\n    vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n      ? getExposeProxy(vnode.component!) || vnode.component!.proxy\r\n      : vnode.el\r\n  const value = isUnmount ? null : refValue\r\n\r\n  const { i: owner, r: ref } = rawRef\r\n  if (__DEV__ && !owner) {\r\n    warn(\r\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n        `A vnode with ref must be created inside the render function.`,\r\n    )\r\n    return\r\n  }\r\n  const oldRef = oldRawRef && (oldRawRef as VNodeNormalizedRefAtom).r\r\n  const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs\r\n  const setupState = owner.setupState\r\n\r\n  // dynamic ref changed. unset old ref\r\n  if (oldRef != null && oldRef !== ref) {\r\n    if (isString(oldRef)) {\r\n      refs[oldRef] = null\r\n      if (hasOwn(setupState, oldRef)) {\r\n        setupState[oldRef] = null\r\n      }\r\n    } else if (isRef(oldRef)) {\r\n      oldRef.value = null\r\n    }\r\n  }\r\n\r\n  if (isFunction(ref)) {\r\n    callWithErrorHandling(ref, owner, ErrorCodes.FUNCTION_REF, [value, refs])\r\n  } else {\r\n    const _isString = isString(ref)\r\n    const _isRef = isRef(ref)\r\n    const isVFor = rawRef.f\r\n    if (_isString || _isRef) {\r\n      const doSet = () => {\r\n        if (isVFor) {\r\n          const existing = _isString\r\n            ? hasOwn(setupState, ref)\r\n              ? setupState[ref]\r\n              : refs[ref]\r\n            : ref.value\r\n          if (isUnmount) {\r\n            isArray(existing) && remove(existing, refValue)\r\n          } else {\r\n            if (!isArray(existing)) {\r\n              if (_isString) {\r\n                refs[ref] = [refValue]\r\n                if (hasOwn(setupState, ref)) {\r\n                  setupState[ref] = refs[ref]\r\n                }\r\n              } else {\r\n                ref.value = [refValue]\r\n                if (rawRef.k) refs[rawRef.k] = ref.value\r\n              }\r\n            } else if (!existing.includes(refValue)) {\r\n              existing.push(refValue)\r\n            }\r\n          }\r\n        } else if (_isString) {\r\n          refs[ref] = value\r\n          if (hasOwn(setupState, ref)) {\r\n            setupState[ref] = value\r\n          }\r\n        } else if (_isRef) {\r\n          ref.value = value\r\n          if (rawRef.k) refs[rawRef.k] = value\r\n        } else if (__DEV__) {\r\n          warn('Invalid template ref type:', ref, `(${typeof ref})`)\r\n        }\r\n      }\r\n      // #9908 ref on v-for mutates the same array for both mount and unmount\r\n      // and should be done together\r\n      if (isUnmount || isVFor) {\r\n        doSet()\r\n      } else {\r\n        // #1789: set new refs in a post job so that they don't get overwritten\r\n        // by unmounting ones.\r\n        ;(doSet as SchedulerJob).id = -1\r\n        queuePostRenderEffect(doSet, parentSuspense)\r\n      }\r\n    } else if (__DEV__) {\r\n      warn('Invalid template ref type:', ref, `(${typeof ref})`)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Comment,\r\n  Fragment,\r\n  Static,\r\n  Text,\r\n  type VNode,\r\n  type VNodeHook,\r\n  createTextVNode,\r\n  createVNode,\r\n  invokeVNodeHook,\r\n  normalizeVNode,\r\n} from './vnode'\r\nimport { flushPostFlushCbs } from './scheduler'\r\nimport type { ComponentInternalInstance } from './component'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { warn } from './warning'\r\nimport {\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  includeBooleanAttr,\r\n  isBooleanAttr,\r\n  isKnownHtmlAttr,\r\n  isKnownSvgAttr,\r\n  isOn,\r\n  isRenderableAttrValue,\r\n  isReservedProp,\r\n  isString,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n  stringifyStyle,\r\n} from '@vue/shared'\r\nimport { type RendererInternals, needTransition } from './renderer'\r\nimport { setRef } from './rendererTemplateRef'\r\nimport {\r\n  type SuspenseBoundary,\r\n  type SuspenseImpl,\r\n  queueEffectWithSuspense,\r\n} from './components/Suspense'\r\nimport type { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\n\r\nexport type RootHydrateFunction = (\r\n  vnode: VNode<Node, Element>,\r\n  container: (Element | ShadowRoot) & { _vnode?: VNode },\r\n) => void\r\n\r\nenum DOMNodeTypes {\r\n  ELEMENT = 1,\r\n  TEXT = 3,\r\n  COMMENT = 8,\r\n}\r\n\r\nlet hasMismatch = false\r\n\r\nconst isSVGContainer = (container: Element) =>\r\n  container.namespaceURI!.includes('svg') &&\r\n  container.tagName !== 'foreignObject'\r\n\r\nconst isMathMLContainer = (container: Element) =>\r\n  container.namespaceURI!.includes('MathML')\r\n\r\nconst getContainerType = (container: Element): 'svg' | 'mathml' | undefined => {\r\n  if (isSVGContainer(container)) return 'svg'\r\n  if (isMathMLContainer(container)) return 'mathml'\r\n  return undefined\r\n}\r\n\r\nconst isComment = (node: Node): node is Comment =>\r\n  node.nodeType === DOMNodeTypes.COMMENT\r\n\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nexport function createHydrationFunctions(\r\n  rendererInternals: RendererInternals<Node, Element>,\r\n) {\r\n  const {\r\n    mt: mountComponent,\r\n    p: patch,\r\n    o: {\r\n      patchProp,\r\n      createText,\r\n      nextSibling,\r\n      parentNode,\r\n      remove,\r\n      insert,\r\n      createComment,\r\n    },\r\n  } = rendererInternals\r\n\r\n  const hydrate: RootHydrateFunction = (vnode, container) => {\r\n    if (!container.hasChildNodes()) {\r\n      ;(__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\r\n        warn(\r\n          `Attempting to hydrate existing markup but container is empty. ` +\r\n            `Performing full mount instead.`,\r\n        )\r\n      patch(null, vnode, container)\r\n      flushPostFlushCbs()\r\n      container._vnode = vnode\r\n      return\r\n    }\r\n    hasMismatch = false\r\n    hydrateNode(container.firstChild!, vnode, null, null, null)\r\n    flushPostFlushCbs()\r\n    container._vnode = vnode\r\n    if (hasMismatch && !__TEST__) {\r\n      // this error should show up in production\r\n      console.error(`Hydration completed but contains mismatches.`)\r\n    }\r\n  }\r\n\r\n  const hydrateNode = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized = false,\r\n  ): Node | null => {\r\n    const isFragmentStart = isComment(node) && node.data === '['\r\n    const onMismatch = () =>\r\n      handleMismatch(\r\n        node,\r\n        vnode,\r\n        parentComponent,\r\n        parentSuspense,\r\n        slotScopeIds,\r\n        isFragmentStart,\r\n      )\r\n\r\n    const { type, ref, shapeFlag, patchFlag } = vnode\r\n    let domType = node.nodeType\r\n    vnode.el = node\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      if (!('__vnode' in node)) {\r\n        Object.defineProperty(node, '__vnode', {\r\n          value: vnode,\r\n          enumerable: false,\r\n        })\r\n      }\r\n      if (!('__vueParentComponent' in node)) {\r\n        Object.defineProperty(node, '__vueParentComponent', {\r\n          value: parentComponent,\r\n          enumerable: false,\r\n        })\r\n      }\r\n    }\r\n\r\n    if (patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      vnode.dynamicChildren = null\r\n    }\r\n\r\n    let nextNode: Node | null = null\r\n    switch (type) {\r\n      case Text:\r\n        if (domType !== DOMNodeTypes.TEXT) {\r\n          // #5728 empty text node inside a slot can cause hydration failure\r\n          // because the server rendered HTML won't contain a text node\r\n          if (vnode.children === '') {\r\n            insert((vnode.el = createText('')), parentNode(node)!, node)\r\n            nextNode = node\r\n          } else {\r\n            nextNode = onMismatch()\r\n          }\r\n        } else {\r\n          if ((node as Text).data !== vnode.children) {\r\n            hasMismatch = true\r\n            ;(__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\r\n              warn(\r\n                `Hydration text mismatch in`,\r\n                node.parentNode,\r\n                `\\n  - rendered on server: ${JSON.stringify(\r\n                  (node as Text).data,\r\n                )}` +\r\n                  `\\n  - expected on client: ${JSON.stringify(vnode.children)}`,\r\n              )\r\n            ;(node as Text).data = vnode.children as string\r\n          }\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Comment:\r\n        if (isTemplateNode(node)) {\r\n          nextNode = nextSibling(node)\r\n          // wrapped <transition appear>\r\n          // replace <template> node with inner child\r\n          replaceNode(\r\n            (vnode.el = node.content.firstChild!),\r\n            node,\r\n            parentComponent,\r\n          )\r\n        } else if (domType !== DOMNodeTypes.COMMENT || isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = nextSibling(node)\r\n        }\r\n        break\r\n      case Static:\r\n        if (isFragmentStart) {\r\n          // entire template is static but SSRed as a fragment\r\n          node = nextSibling(node)!\r\n          domType = node.nodeType\r\n        }\r\n        if (domType === DOMNodeTypes.ELEMENT || domType === DOMNodeTypes.TEXT) {\r\n          // determine anchor, adopt content\r\n          nextNode = node\r\n          // if the static vnode has its content stripped during build,\r\n          // adopt it from the server-rendered HTML.\r\n          const needToAdoptContent = !(vnode.children as string).length\r\n          for (let i = 0; i < vnode.staticCount!; i++) {\r\n            if (needToAdoptContent)\r\n              vnode.children +=\r\n                nextNode.nodeType === DOMNodeTypes.ELEMENT\r\n                  ? (nextNode as Element).outerHTML\r\n                  : (nextNode as Text).data\r\n            if (i === vnode.staticCount! - 1) {\r\n              vnode.anchor = nextNode\r\n            }\r\n            nextNode = nextSibling(nextNode)!\r\n          }\r\n          return isFragmentStart ? nextSibling(nextNode) : nextNode\r\n        } else {\r\n          onMismatch()\r\n        }\r\n        break\r\n      case Fragment:\r\n        if (!isFragmentStart) {\r\n          nextNode = onMismatch()\r\n        } else {\r\n          nextNode = hydrateFragment(\r\n            node as Comment,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            slotScopeIds,\r\n            optimized,\r\n          )\r\n        }\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          if (\r\n            (domType !== DOMNodeTypes.ELEMENT ||\r\n              (vnode.type as string).toLowerCase() !==\r\n                (node as Element).tagName.toLowerCase()) &&\r\n            !isTemplateNode(node)\r\n          ) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = hydrateElement(\r\n              node as Element,\r\n              vnode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized,\r\n            )\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          // when setting up the render effect, if the initial vnode already\r\n          // has .el set, the component will perform hydration instead of mount\r\n          // on its sub-tree.\r\n          vnode.slotScopeIds = slotScopeIds\r\n          const container = parentNode(node)!\r\n\r\n          // Locate the next node.\r\n          if (isFragmentStart) {\r\n            // If it's a fragment: since components may be async, we cannot rely\r\n            // on component's rendered output to determine the end of the\r\n            // fragment. Instead, we do a lookahead to find the end anchor node.\r\n            nextNode = locateClosingAnchor(node)\r\n          } else if (isComment(node) && node.data === 'teleport start') {\r\n            // #4293 #6152\r\n            // If a teleport is at component root, look ahead for teleport end.\r\n            nextNode = locateClosingAnchor(node, node.data, 'teleport end')\r\n          } else {\r\n            nextNode = nextSibling(node)\r\n          }\r\n\r\n          mountComponent(\r\n            vnode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            getContainerType(container),\r\n            optimized,\r\n          )\r\n\r\n          // #3787\r\n          // if component is async, it may get moved / unmounted before its\r\n          // inner component is loaded, so we need to give it a placeholder\r\n          // vnode that matches its adopted DOM.\r\n          if (isAsyncWrapper(vnode)) {\r\n            let subTree\r\n            if (isFragmentStart) {\r\n              subTree = createVNode(Fragment)\r\n              subTree.anchor = nextNode\r\n                ? nextNode.previousSibling\r\n                : container.lastChild\r\n            } else {\r\n              subTree =\r\n                node.nodeType === 3 ? createTextVNode('') : createVNode('div')\r\n            }\r\n            subTree.el = node\r\n            vnode.component!.subTree = subTree\r\n          }\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          if (domType !== DOMNodeTypes.COMMENT) {\r\n            nextNode = onMismatch()\r\n          } else {\r\n            nextNode = (vnode.type as typeof TeleportImpl).hydrate(\r\n              node,\r\n              vnode as TeleportVNode,\r\n              parentComponent,\r\n              parentSuspense,\r\n              slotScopeIds,\r\n              optimized,\r\n              rendererInternals,\r\n              hydrateChildren,\r\n            )\r\n          }\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          nextNode = (vnode.type as typeof SuspenseImpl).hydrate(\r\n            node,\r\n            vnode,\r\n            parentComponent,\r\n            parentSuspense,\r\n            getContainerType(parentNode(node)!),\r\n            slotScopeIds,\r\n            optimized,\r\n            rendererInternals,\r\n            hydrateNode,\r\n          )\r\n        } else if (__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) {\r\n          warn('Invalid HostVNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode)\r\n    }\r\n\r\n    return nextNode\r\n  }\r\n\r\n  const hydrateElement = (\r\n    el: Element,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ) => {\r\n    optimized = optimized || !!vnode.dynamicChildren\r\n    const { type, props, patchFlag, shapeFlag, dirs, transition } = vnode\r\n    // #4006 for form elements with non-string v-model value bindings\r\n    // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n    // #7476 <input indeterminate>\r\n    const forcePatch = type === 'input' || type === 'option'\r\n    // skip props & children if this is hoisted static nodes\r\n    // #5405 in dev, always hydrate children for HMR\r\n    if (__DEV__ || forcePatch || patchFlag !== PatchFlags.HOISTED) {\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n      }\r\n\r\n      // handle appear transition\r\n      let needCallTransitionHooks = false\r\n      if (isTemplateNode(el)) {\r\n        needCallTransitionHooks =\r\n          needTransition(parentSuspense, transition) &&\r\n          parentComponent &&\r\n          parentComponent.vnode.props &&\r\n          parentComponent.vnode.props.appear\r\n\r\n        const content = (el as HTMLTemplateElement).content\r\n          .firstChild as Element\r\n\r\n        if (needCallTransitionHooks) {\r\n          transition!.beforeEnter(content)\r\n        }\r\n\r\n        // replace <template> node with inner children\r\n        replaceNode(content, el, parentComponent)\r\n        vnode.el = el = content\r\n      }\r\n\r\n      // children\r\n      if (\r\n        shapeFlag & ShapeFlags.ARRAY_CHILDREN &&\r\n        // skip if element has innerHTML / textContent\r\n        !(props && (props.innerHTML || props.textContent))\r\n      ) {\r\n        let next = hydrateChildren(\r\n          el.firstChild,\r\n          vnode,\r\n          el,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n        let hasWarned = false\r\n        while (next) {\r\n          hasMismatch = true\r\n          if (\r\n            (__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\r\n            !hasWarned\r\n          ) {\r\n            warn(\r\n              `Hydration children mismatch on`,\r\n              el,\r\n              `\\nServer rendered element contains more child nodes than client vdom.`,\r\n            )\r\n            hasWarned = true\r\n          }\r\n          // The SSRed DOM contains more nodes than it should. Remove them.\r\n          const cur = next\r\n          next = next.nextSibling\r\n          remove(cur)\r\n        }\r\n      } else if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        if (el.textContent !== vnode.children) {\r\n          hasMismatch = true\r\n          ;(__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\r\n            warn(\r\n              `Hydration text content mismatch on`,\r\n              el,\r\n              `\\n  - rendered on server: ${el.textContent}` +\r\n                `\\n  - expected on client: ${vnode.children as string}`,\r\n            )\r\n          el.textContent = vnode.children as string\r\n        }\r\n      }\r\n\r\n      // props\r\n      if (props) {\r\n        if (\r\n          __DEV__ ||\r\n          forcePatch ||\r\n          !optimized ||\r\n          patchFlag & (PatchFlags.FULL_PROPS | PatchFlags.NEED_HYDRATION)\r\n        ) {\r\n          for (const key in props) {\r\n            // check hydration mismatch\r\n            if (__DEV__ && propHasMismatch(el, key, props[key], vnode)) {\r\n              hasMismatch = true\r\n            }\r\n            if (\r\n              (forcePatch &&\r\n                (key.endsWith('value') || key === 'indeterminate')) ||\r\n              (isOn(key) && !isReservedProp(key)) ||\r\n              // force hydrate v-bind with .prop modifiers\r\n              key[0] === '.'\r\n            ) {\r\n              patchProp(\r\n                el,\r\n                key,\r\n                null,\r\n                props[key],\r\n                undefined,\r\n                undefined,\r\n                parentComponent,\r\n              )\r\n            }\r\n          }\r\n        } else if (props.onClick) {\r\n          // Fast path for click listeners (which is most often) to avoid\r\n          // iterating through props.\r\n          patchProp(\r\n            el,\r\n            'onClick',\r\n            null,\r\n            props.onClick,\r\n            undefined,\r\n            undefined,\r\n            parentComponent,\r\n          )\r\n        }\r\n      }\r\n\r\n      // vnode / directive hooks\r\n      let vnodeHooks: VNodeHook | null | undefined\r\n      if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n      }\r\n      if (dirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n      }\r\n      if (\r\n        (vnodeHooks = props && props.onVnodeMounted) ||\r\n        dirs ||\r\n        needCallTransitionHooks\r\n      ) {\r\n        queueEffectWithSuspense(() => {\r\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode)\r\n          needCallTransitionHooks && transition!.enter(el)\r\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n        }, parentSuspense)\r\n      }\r\n    }\r\n\r\n    return el.nextSibling\r\n  }\r\n\r\n  const hydrateChildren = (\r\n    node: Node | null,\r\n    parentVNode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ): Node | null => {\r\n    optimized = optimized || !!parentVNode.dynamicChildren\r\n    const children = parentVNode.children as VNode[]\r\n    const l = children.length\r\n    let hasWarned = false\r\n    for (let i = 0; i < l; i++) {\r\n      const vnode = optimized\r\n        ? children[i]\r\n        : (children[i] = normalizeVNode(children[i]))\r\n      if (node) {\r\n        node = hydrateNode(\r\n          node,\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n      } else if (vnode.type === Text && !vnode.children) {\r\n        continue\r\n      } else {\r\n        hasMismatch = true\r\n        if (\r\n          (__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\r\n          !hasWarned\r\n        ) {\r\n          warn(\r\n            `Hydration children mismatch on`,\r\n            container,\r\n            `\\nServer rendered element contains fewer child nodes than client vdom.`,\r\n          )\r\n          hasWarned = true\r\n        }\r\n        // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n        patch(\r\n          null,\r\n          vnode,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          getContainerType(container),\r\n          slotScopeIds,\r\n        )\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  const hydrateFragment = (\r\n    node: Comment,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ) => {\r\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    const container = parentNode(node)!\r\n    const next = hydrateChildren(\r\n      nextSibling(node)!,\r\n      vnode,\r\n      container,\r\n      parentComponent,\r\n      parentSuspense,\r\n      slotScopeIds,\r\n      optimized,\r\n    )\r\n    if (next && isComment(next) && next.data === ']') {\r\n      return nextSibling((vnode.anchor = next))\r\n    } else {\r\n      // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n      // back. This should have led to node/children mismatch warnings.\r\n      hasMismatch = true\r\n      // since the anchor is missing, we need to create one and insert it\r\n      insert((vnode.anchor = createComment(`]`)), container, next)\r\n      return next\r\n    }\r\n  }\r\n\r\n  const handleMismatch = (\r\n    node: Node,\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    isFragment: boolean,\r\n  ): Node | null => {\r\n    hasMismatch = true\r\n    ;(__DEV__ || __FEATURE_PROD_HYDRATION_MISMATCH_DETAILS__) &&\r\n      warn(\r\n        `Hydration node mismatch:\\n- rendered on server:`,\r\n        node,\r\n        node.nodeType === DOMNodeTypes.TEXT\r\n          ? `(text)`\r\n          : isComment(node) && node.data === '['\r\n            ? `(start of fragment)`\r\n            : ``,\r\n        `\\n- expected on client:`,\r\n        vnode.type,\r\n      )\r\n    vnode.el = null\r\n\r\n    if (isFragment) {\r\n      // remove excessive fragment nodes\r\n      const end = locateClosingAnchor(node)\r\n      while (true) {\r\n        const next = nextSibling(node)\r\n        if (next && next !== end) {\r\n          remove(next)\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    const next = nextSibling(node)\r\n    const container = parentNode(node)!\r\n    remove(node)\r\n\r\n    patch(\r\n      null,\r\n      vnode,\r\n      container,\r\n      next,\r\n      parentComponent,\r\n      parentSuspense,\r\n      getContainerType(container),\r\n      slotScopeIds,\r\n    )\r\n    return next\r\n  }\r\n\r\n  // looks ahead for a start and closing comment node\r\n  const locateClosingAnchor = (\r\n    node: Node | null,\r\n    open = '[',\r\n    close = ']',\r\n  ): Node | null => {\r\n    let match = 0\r\n    while (node) {\r\n      node = nextSibling(node)\r\n      if (node && isComment(node)) {\r\n        if (node.data === open) match++\r\n        if (node.data === close) {\r\n          if (match === 0) {\r\n            return nextSibling(node)\r\n          } else {\r\n            match--\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return node\r\n  }\r\n\r\n  const replaceNode = (\r\n    newNode: Node,\r\n    oldNode: Node,\r\n    parentComponent: ComponentInternalInstance | null,\r\n  ): void => {\r\n    // replace node\r\n    const parentNode = oldNode.parentNode\r\n    if (parentNode) {\r\n      parentNode.replaceChild(newNode, oldNode)\r\n    }\r\n\r\n    // update vnode\r\n    let parent = parentComponent\r\n    while (parent) {\r\n      if (parent.vnode.el === oldNode) {\r\n        parent.vnode.el = parent.subTree.el = newNode\r\n      }\r\n      parent = parent.parent\r\n    }\r\n  }\r\n\r\n  const isTemplateNode = (node: Node): node is HTMLTemplateElement => {\r\n    return (\r\n      node.nodeType === DOMNodeTypes.ELEMENT &&\r\n      (node as Element).tagName.toLowerCase() === 'template'\r\n    )\r\n  }\r\n\r\n  return [hydrate, hydrateNode] as const\r\n}\r\n\r\n/**\r\n * Dev only\r\n */\r\nfunction propHasMismatch(\r\n  el: Element,\r\n  key: string,\r\n  clientValue: any,\r\n  vnode: VNode,\r\n): boolean {\r\n  let mismatchType: string | undefined\r\n  let mismatchKey: string | undefined\r\n  let actual: any\r\n  let expected: any\r\n  if (key === 'class') {\r\n    // classes might be in different order, but that doesn't affect cascade\r\n    // so we just need to check if the class lists contain the same classes.\r\n    actual = el.getAttribute('class')\r\n    expected = normalizeClass(clientValue)\r\n    if (!isSetEqual(toClassSet(actual || ''), toClassSet(expected))) {\r\n      mismatchType = mismatchKey = `class`\r\n    }\r\n  } else if (key === 'style') {\r\n    // style might be in different order, but that doesn't affect cascade\r\n    actual = el.getAttribute('style')\r\n    expected = isString(clientValue)\r\n      ? clientValue\r\n      : stringifyStyle(normalizeStyle(clientValue))\r\n    const actualMap = toStyleMap(actual)\r\n    const expectedMap = toStyleMap(expected)\r\n    // If `v-show=false`, `display: 'none'` should be added to expected\r\n    if (vnode.dirs) {\r\n      for (const { dir, value } of vnode.dirs) {\r\n        // @ts-expect-error only vShow has this internal name\r\n        if (dir.name === 'show' && !value) {\r\n          expectedMap.set('display', 'none')\r\n        }\r\n      }\r\n    }\r\n    if (!isMapEqual(actualMap, expectedMap)) {\r\n      mismatchType = mismatchKey = 'style'\r\n    }\r\n  } else if (\r\n    (el instanceof SVGElement && isKnownSvgAttr(key)) ||\r\n    (el instanceof HTMLElement && (isBooleanAttr(key) || isKnownHtmlAttr(key)))\r\n  ) {\r\n    if (isBooleanAttr(key)) {\r\n      actual = el.hasAttribute(key)\r\n      expected = includeBooleanAttr(clientValue)\r\n    } else if (clientValue == null) {\r\n      actual = el.hasAttribute(key)\r\n      expected = false\r\n    } else {\r\n      if (el.hasAttribute(key)) {\r\n        actual = el.getAttribute(key)\r\n      } else if (key === 'value' && el.tagName === 'TEXTAREA') {\r\n        // #10000 textarea.value can't be retrieved by `hasAttribute`\r\n        actual = (el as HTMLTextAreaElement).value\r\n      } else {\r\n        actual = false\r\n      }\r\n      expected = isRenderableAttrValue(clientValue)\r\n        ? String(clientValue)\r\n        : false\r\n    }\r\n    if (actual !== expected) {\r\n      mismatchType = `attribute`\r\n      mismatchKey = key\r\n    }\r\n  }\r\n\r\n  if (mismatchType) {\r\n    const format = (v: any) =>\r\n      v === false ? `(not rendered)` : `${mismatchKey}=\"${v}\"`\r\n    const preSegment = `Hydration ${mismatchType} mismatch on`\r\n    const postSegment =\r\n      `\\n  - rendered on server: ${format(actual)}` +\r\n      `\\n  - expected on client: ${format(expected)}` +\r\n      `\\n  Note: this mismatch is check-only. The DOM will not be rectified ` +\r\n      `in production due to performance overhead.` +\r\n      `\\n  You should fix the source of the mismatch.`\r\n    if (__TEST__) {\r\n      // during tests, log the full message in one single string for easier\r\n      // debugging.\r\n      warn(`${preSegment} ${el.tagName}${postSegment}`)\r\n    } else {\r\n      warn(preSegment, el, postSegment)\r\n    }\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nfunction toClassSet(str: string): Set<string> {\r\n  return new Set(str.trim().split(/\\s+/))\r\n}\r\n\r\nfunction isSetEqual(a: Set<string>, b: Set<string>): boolean {\r\n  if (a.size !== b.size) {\r\n    return false\r\n  }\r\n  for (const s of a) {\r\n    if (!b.has(s)) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction toStyleMap(str: string): Map<string, string> {\r\n  const styleMap: Map<string, string> = new Map()\r\n  for (const item of str.split(';')) {\r\n    let [key, value] = item.split(':')\r\n    key = key?.trim()\r\n    value = value?.trim()\r\n    if (key && value) {\r\n      styleMap.set(key, value)\r\n    }\r\n  }\r\n  return styleMap\r\n}\r\n\r\nfunction isMapEqual(a: Map<string, string>, b: Map<string, string>): boolean {\r\n  if (a.size !== b.size) {\r\n    return false\r\n  }\r\n  for (const [key, value] of a) {\r\n    if (value !== b.get(key)) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n","import {\r\n  Comment,\r\n  Fragment,\r\n  Static,\r\n  Text,\r\n  type VNode,\r\n  type VNodeArrayChildren,\r\n  type VNodeHook,\r\n  type VNodeProps,\r\n  cloneIfMounted,\r\n  createVNode,\r\n  invokeVNodeHook,\r\n  isSameVNodeType,\r\n  normalizeVNode,\r\n} from './vnode'\r\nimport {\r\n  type ComponentInternalInstance,\r\n  type ComponentOptions,\r\n  type Data,\r\n  createComponentInstance,\r\n  setupComponent,\r\n} from './component'\r\nimport {\r\n  filterSingleRoot,\r\n  renderComponentRoot,\r\n  shouldUpdateComponent,\r\n  updateHOCHostEl,\r\n} from './componentRenderUtils'\r\nimport {\r\n  EMPTY_ARR,\r\n  EMPTY_OBJ,\r\n  NOOP,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  getGlobalThis,\r\n  invokeArrayFns,\r\n  isArray,\r\n  isReservedProp,\r\n} from '@vue/shared'\r\nimport {\r\n  type SchedulerJob,\r\n  flushPostFlushCbs,\r\n  flushPreFlushCbs,\r\n  invalidateJob,\r\n  queueJob,\r\n  queuePostFlushCb,\r\n} from './scheduler'\r\nimport { ReactiveEffect, pauseTracking, resetTracking } from '@vue/reactivity'\r\nimport { updateProps } from './componentProps'\r\nimport { updateSlots } from './componentSlots'\r\nimport { popWarningContext, pushWarningContext, warn } from './warning'\r\nimport { type CreateAppFunction, createAppAPI } from './apiCreateApp'\r\nimport { setRef } from './rendererTemplateRef'\r\nimport {\r\n  type SuspenseBoundary,\r\n  type SuspenseImpl,\r\n  queueEffectWithSuspense,\r\n} from './components/Suspense'\r\nimport type { TeleportImpl, TeleportVNode } from './components/Teleport'\r\nimport { type KeepAliveContext, isKeepAlive } from './components/KeepAlive'\r\nimport { isHmrUpdating, registerHMR, unregisterHMR } from './hmr'\r\nimport { type RootHydrateFunction, createHydrationFunctions } from './hydration'\r\nimport { invokeDirectiveHook } from './directives'\r\nimport { endMeasure, startMeasure } from './profiling'\r\nimport {\r\n  devtoolsComponentAdded,\r\n  devtoolsComponentRemoved,\r\n  devtoolsComponentUpdated,\r\n  setDevtoolsHook,\r\n} from './devtools'\r\nimport { initFeatureFlags } from './featureFlags'\r\nimport { isAsyncWrapper } from './apiAsyncComponent'\r\nimport { isCompatEnabled } from './compat/compatConfig'\r\nimport { DeprecationTypes } from './compat/compatConfig'\r\nimport type { TransitionHooks } from './components/BaseTransition'\r\n\r\nexport interface Renderer<HostElement = RendererElement> {\r\n  render: RootRenderFunction<HostElement>\r\n  createApp: CreateAppFunction<HostElement>\r\n}\r\n\r\nexport interface HydrationRenderer extends Renderer<Element | ShadowRoot> {\r\n  hydrate: RootHydrateFunction\r\n}\r\n\r\nexport type ElementNamespace = 'svg' | 'mathml' | undefined\r\n\r\nexport type RootRenderFunction<HostElement = RendererElement> = (\r\n  vnode: VNode | null,\r\n  container: HostElement,\r\n  namespace?: ElementNamespace,\r\n) => void\r\n\r\nexport interface RendererOptions<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n> {\r\n  patchProp(\r\n    el: HostElement,\r\n    key: string,\r\n    prevValue: any,\r\n    nextValue: any,\r\n    namespace?: ElementNamespace,\r\n    prevChildren?: VNode<HostNode, HostElement>[],\r\n    parentComponent?: ComponentInternalInstance | null,\r\n    parentSuspense?: SuspenseBoundary | null,\r\n    unmountChildren?: UnmountChildrenFn,\r\n  ): void\r\n  insert(el: HostNode, parent: HostElement, anchor?: HostNode | null): void\r\n  remove(el: HostNode): void\r\n  createElement(\r\n    type: string,\r\n    namespace?: ElementNamespace,\r\n    isCustomizedBuiltIn?: string,\r\n    vnodeProps?: (VNodeProps & { [key: string]: any }) | null,\r\n  ): HostElement\r\n  createText(text: string): HostNode\r\n  createComment(text: string): HostNode\r\n  setText(node: HostNode, text: string): void\r\n  setElementText(node: HostElement, text: string): void\r\n  parentNode(node: HostNode): HostElement | null\r\n  nextSibling(node: HostNode): HostNode | null\r\n  querySelector?(selector: string): HostElement | null\r\n  setScopeId?(el: HostElement, id: string): void\r\n  cloneNode?(node: HostNode): HostNode\r\n  insertStaticContent?(\r\n    content: string,\r\n    parent: HostElement,\r\n    anchor: HostNode | null,\r\n    namespace: ElementNamespace,\r\n    start?: HostNode | null,\r\n    end?: HostNode | null,\r\n  ): [HostNode, HostNode]\r\n}\r\n\r\n// Renderer Node can technically be any object in the context of core renderer\r\n// logic - they are never directly operated on and always passed to the node op\r\n// functions provided via options, so the internal constraint is really just\r\n// a generic object.\r\nexport interface RendererNode {\r\n  [key: string]: any\r\n}\r\n\r\nexport interface RendererElement extends RendererNode {}\r\n\r\n// An object exposing the internals of a renderer, passed to tree-shakeable\r\n// features so that they can be decoupled from this file. Keys are shortened\r\n// to optimize bundle size.\r\nexport interface RendererInternals<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n> {\r\n  p: PatchFn\r\n  um: UnmountFn\r\n  r: RemoveFn\r\n  m: MoveFn\r\n  mt: MountComponentFn\r\n  mc: MountChildrenFn\r\n  pc: PatchChildrenFn\r\n  pbc: PatchBlockChildrenFn\r\n  n: NextFn\r\n  o: RendererOptions<HostNode, HostElement>\r\n}\r\n\r\n// These functions are created inside a closure and therefore their types cannot\r\n// be directly exported. In order to avoid maintaining function signatures in\r\n// two places, we declare them once here and use them inside the closure.\r\ntype PatchFn = (\r\n  n1: VNode | null, // null means this is a mount\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor?: RendererNode | null,\r\n  parentComponent?: ComponentInternalInstance | null,\r\n  parentSuspense?: SuspenseBoundary | null,\r\n  namespace?: ElementNamespace,\r\n  slotScopeIds?: string[] | null,\r\n  optimized?: boolean,\r\n) => void\r\n\r\ntype MountChildrenFn = (\r\n  children: VNodeArrayChildren,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  namespace: ElementNamespace,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  start?: number,\r\n) => void\r\n\r\ntype PatchChildrenFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  namespace: ElementNamespace,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n) => void\r\n\r\ntype PatchBlockChildrenFn = (\r\n  oldChildren: VNode[],\r\n  newChildren: VNode[],\r\n  fallbackContainer: RendererElement,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  namespace: ElementNamespace,\r\n  slotScopeIds: string[] | null,\r\n) => void\r\n\r\ntype MoveFn = (\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  type: MoveType,\r\n  parentSuspense?: SuspenseBoundary | null,\r\n) => void\r\n\r\ntype NextFn = (vnode: VNode) => RendererNode | null\r\n\r\ntype UnmountFn = (\r\n  vnode: VNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean,\r\n) => void\r\n\r\ntype RemoveFn = (vnode: VNode) => void\r\n\r\ntype UnmountChildrenFn = (\r\n  children: VNode[],\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  doRemove?: boolean,\r\n  optimized?: boolean,\r\n  start?: number,\r\n) => void\r\n\r\nexport type MountComponentFn = (\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  namespace: ElementNamespace,\r\n  optimized: boolean,\r\n) => void\r\n\r\ntype ProcessTextOrCommentFn = (\r\n  n1: VNode | null,\r\n  n2: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n) => void\r\n\r\nexport type SetupRenderEffectFn = (\r\n  instance: ComponentInternalInstance,\r\n  initialVNode: VNode,\r\n  container: RendererElement,\r\n  anchor: RendererNode | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  namespace: ElementNamespace,\r\n  optimized: boolean,\r\n) => void\r\n\r\nexport enum MoveType {\r\n  ENTER,\r\n  LEAVE,\r\n  REORDER, \r\n}\r\n\r\nexport const queuePostRenderEffect = __FEATURE_SUSPENSE__\r\n  ? __TEST__\r\n    ? // vitest can't seem to handle eager circular dependency\r\n      (fn: Function | Function[], suspense: SuspenseBoundary | null) =>\r\n        queueEffectWithSuspense(fn, suspense)\r\n    : queueEffectWithSuspense\r\n  : queuePostFlushCb\r\n\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nexport function createRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n>(options: RendererOptions<HostNode, HostElement>) {\r\n  return baseCreateRenderer<HostNode, HostElement>(options)\r\n}\r\n\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nexport function createHydrationRenderer(\r\n  options: RendererOptions<Node, Element>,\r\n) {\r\n  return baseCreateRenderer(options, createHydrationFunctions)\r\n}\r\n\r\n// overload 1: no hydration\r\nfunction baseCreateRenderer<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n>(options: RendererOptions<HostNode, HostElement>): Renderer<HostElement>\r\n\r\n// overload 2: with hydration\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions<Node, Element>,\r\n  createHydrationFns: typeof createHydrationFunctions,\r\n): HydrationRenderer\r\n\r\n// implementation\r\nfunction baseCreateRenderer(\r\n  options: RendererOptions,\r\n  createHydrationFns?: typeof createHydrationFunctions,\r\n): any {\r\n  // compile-time feature flags check\r\n  if (__ESM_BUNDLER__ && !__TEST__) {\r\n    initFeatureFlags()\r\n  }\r\n\r\n  const target = getGlobalThis()\r\n  target.__VUE__ = true\r\n  if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target)\r\n  }\r\n\r\n  const {\r\n    insert: hostInsert,\r\n    remove: hostRemove,\r\n    patchProp: hostPatchProp,\r\n    createElement: hostCreateElement,\r\n    createText: hostCreateText,\r\n    createComment: hostCreateComment,\r\n    setText: hostSetText,\r\n    setElementText: hostSetElementText,\r\n    parentNode: hostParentNode,\r\n    nextSibling: hostNextSibling,\r\n    setScopeId: hostSetScopeId = NOOP,\r\n    insertStaticContent: hostInsertStaticContent,\r\n  } = options\r\n\r\n  // Note: functions inside this closure should use `const xxx = () => {}`\r\n  // style in order to prevent being inlined by minifiers.\r\n  const patch: PatchFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor = null,\r\n    parentComponent = null,\r\n    parentSuspense = null,\r\n    namespace = undefined,\r\n    slotScopeIds = null,\r\n    /**\r\n     * 在 Vue 3 的虚拟 DOM 中，一个 VNode 可以包含静态子节点和动态子节点。静态子节点在渲染过程中不会发生变化，而动态子节点可能会根据数据变化而更新\r\n     */\r\n    optimized = __DEV__ && isHmrUpdating ? false : !!n2.dynamicChildren,\r\n  ) => {\r\n    // 两个节点一样就返回\r\n    if (n1 === n2) {\r\n      return\r\n    }\r\n\r\n    // patching & not same type, unmount old tree\r\n    // old node存在且类型不一样，就卸载原来的节点\r\n    if (n1 && !isSameVNodeType(n1, n2)) {\r\n      anchor = getNextHostNode(n1)\r\n      unmount(n1, parentComponent, parentSuspense, true)\r\n      n1 = null\r\n    }\r\n\r\n    // 是否不需要优化\r\n    if (n2.patchFlag === PatchFlags.BAIL) {\r\n      optimized = false\r\n      n2.dynamicChildren = null\r\n    }\r\n\r\n    const { type, ref, shapeFlag } = n2\r\n    switch (type) {\r\n      case Text:\r\n        processText(n1, n2, container, anchor)\r\n        break\r\n      case Comment:\r\n        processCommentNode(n1, n2, container, anchor)\r\n        break\r\n      case Static:\r\n        if (n1 == null) {\r\n          mountStaticNode(n2, container, anchor, namespace)\r\n        } else if (__DEV__) {\r\n          patchStaticNode(n1, n2, container, namespace)\r\n        }\r\n        break\r\n      case Fragment:\r\n        processFragment(\r\n          n1,\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          namespace,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n        break\r\n      default:\r\n        if (shapeFlag & ShapeFlags.ELEMENT) {\r\n          processElement(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.COMPONENT) {\r\n          processComponent(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n          )\r\n        } else if (shapeFlag & ShapeFlags.TELEPORT) {\r\n          ;(type as typeof TeleportImpl).process(\r\n            n1 as TeleportVNode,\r\n            n2 as TeleportVNode,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals,\r\n          )\r\n        } else if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n          ;(type as typeof SuspenseImpl).process(\r\n            n1,\r\n            n2,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n            internals,\r\n          )\r\n        } else if (__DEV__) {\r\n          warn('Invalid VNode type:', type, `(${typeof type})`)\r\n        }\r\n    }\r\n\r\n    // set ref\r\n    if (ref != null && parentComponent) {\r\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2)\r\n    }\r\n  }\r\n\r\n  const processText: ProcessTextOrCommentFn = (n1, n2, container, anchor) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateText(n2.children as string)),\r\n        container,\r\n        anchor,\r\n      )\r\n    } else {\r\n      const el = (n2.el = n1.el!)\r\n      if (n2.children !== n1.children) {\r\n        hostSetText(el, n2.children as string)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processCommentNode: ProcessTextOrCommentFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor,\r\n  ) => {\r\n    if (n1 == null) {\r\n      hostInsert(\r\n        (n2.el = hostCreateComment((n2.children as string) || '')),\r\n        container,\r\n        anchor,\r\n      )\r\n    } else {\r\n      // there's no support for dynamic comments\r\n      n2.el = n1.el\r\n    }\r\n  }\r\n\r\n  const mountStaticNode = (\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    namespace: ElementNamespace,\r\n  ) => {\r\n    // static nodes are only present when used with compiler-dom/runtime-dom\r\n    // which guarantees presence of hostInsertStaticContent.\r\n    ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n      n2.children as string,\r\n      container,\r\n      anchor,\r\n      namespace,\r\n      n2.el,\r\n      n2.anchor,\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Dev / HMR only\r\n   */\r\n  const patchStaticNode = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    namespace: ElementNamespace,\r\n  ) => {\r\n    // static nodes are only patched during dev for HMR\r\n    if (n2.children !== n1.children) {\r\n      const anchor = hostNextSibling(n1.anchor!)\r\n      // remove existing\r\n      removeStaticNode(n1)\r\n      // insert new\r\n      ;[n2.el, n2.anchor] = hostInsertStaticContent!(\r\n        n2.children as string,\r\n        container,\r\n        anchor,\r\n        namespace,\r\n      )\r\n    } else {\r\n      n2.el = n1.el\r\n      n2.anchor = n1.anchor\r\n    }\r\n  }\r\n\r\n  const moveStaticNode = (\r\n    { el, anchor }: VNode,\r\n    container: RendererElement,\r\n    nextSibling: RendererNode | null,\r\n  ) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostInsert(el, container, nextSibling)\r\n      el = next\r\n    }\r\n    hostInsert(anchor!, container, nextSibling)\r\n  }\r\n\r\n  const removeStaticNode = ({ el, anchor }: VNode) => {\r\n    let next\r\n    while (el && el !== anchor) {\r\n      next = hostNextSibling(el)\r\n      hostRemove(el)\r\n      el = next\r\n    }\r\n    hostRemove(anchor!)\r\n  }\r\n\r\n  const processElement = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ) => {\r\n    if (n2.type === 'svg') {\r\n      namespace = 'svg'\r\n    } else if (n2.type === 'math') {\r\n      namespace = 'mathml'\r\n    }\r\n\r\n    if (n1 == null) {\r\n      mountElement(\r\n        n2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        namespace,\r\n        slotScopeIds,\r\n        optimized,\r\n      )\r\n    } else {\r\n      patchElement(\r\n        n1,\r\n        n2,\r\n        parentComponent,\r\n        parentSuspense,\r\n        namespace,\r\n        slotScopeIds,\r\n        optimized,\r\n      )\r\n    }\r\n  }\r\n\r\n  const mountElement = (\r\n    vnode: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ) => {\r\n    let el: RendererElement\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    const { props, shapeFlag, transition, dirs } = vnode\r\n\r\n    el = vnode.el = hostCreateElement(\r\n      vnode.type as string,\r\n      namespace,\r\n      props && props.is,\r\n      props,\r\n    )\r\n\r\n    // mount children first, since some props may rely on child content\r\n    // being already rendered, e.g. `<select value>`\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      hostSetElementText(el, vnode.children as string)\r\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      mountChildren(\r\n        vnode.children as VNodeArrayChildren,\r\n        el,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        resolveChildrenNamespace(vnode, namespace),\r\n        slotScopeIds,\r\n        optimized,\r\n      )\r\n    }\r\n\r\n    if (dirs) {\r\n      invokeDirectiveHook(vnode, null, parentComponent, 'created')\r\n    }\r\n    // scopeId\r\n    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent)\r\n    // props\r\n    if (props) {\r\n      for (const key in props) {\r\n        if (key !== 'value' && !isReservedProp(key)) {\r\n          hostPatchProp(\r\n            el,\r\n            key,\r\n            null,\r\n            props[key],\r\n            namespace,\r\n            vnode.children as VNode[],\r\n            parentComponent,\r\n            parentSuspense,\r\n            unmountChildren,\r\n          )\r\n        }\r\n      }\r\n      /**\r\n       * Special case for setting value on DOM elements:\r\n       * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n       * - it needs to be forced (#1471)\r\n       * #2353 proposes adding another renderer option to configure this, but\r\n       * the properties affects are so finite it is worth special casing it\r\n       * here to reduce the complexity. (Special casing it also should not\r\n       * affect non-DOM renderers)\r\n       */\r\n      if ('value' in props) {\r\n        hostPatchProp(el, 'value', null, props.value, namespace)\r\n      }\r\n      if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n        invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n      }\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      Object.defineProperty(el, '__vnode', {\r\n        value: vnode,\r\n        enumerable: false,\r\n      })\r\n      Object.defineProperty(el, '__vueParentComponent', {\r\n        value: parentComponent,\r\n        enumerable: false,\r\n      })\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount')\r\n    }\r\n    // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n    // #1689 For inside suspense + suspense resolved case, just call it\r\n    const needCallTransitionHooks = needTransition(parentSuspense, transition)\r\n    if (needCallTransitionHooks) {\r\n      transition!.beforeEnter(el)\r\n    }\r\n    hostInsert(el, container, anchor)\r\n    if (\r\n      (vnodeHook = props && props.onVnodeMounted) ||\r\n      needCallTransitionHooks ||\r\n      dirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        needCallTransitionHooks && transition!.enter(el)\r\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const setScopeId = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    scopeId: string | null,\r\n    slotScopeIds: string[] | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n  ) => {\r\n    if (scopeId) {\r\n      hostSetScopeId(el, scopeId)\r\n    }\r\n    if (slotScopeIds) {\r\n      for (let i = 0; i < slotScopeIds.length; i++) {\r\n        hostSetScopeId(el, slotScopeIds[i])\r\n      }\r\n    }\r\n    if (parentComponent) {\r\n      let subTree = parentComponent.subTree\r\n      if (\r\n        __DEV__ &&\r\n        subTree.patchFlag > 0 &&\r\n        subTree.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT\r\n      ) {\r\n        subTree =\r\n          filterSingleRoot(subTree.children as VNodeArrayChildren) || subTree\r\n      }\r\n      if (vnode === subTree) {\r\n        const parentVNode = parentComponent.vnode\r\n        setScopeId(\r\n          el,\r\n          parentVNode,\r\n          parentVNode.scopeId,\r\n          parentVNode.slotScopeIds,\r\n          parentComponent.parent,\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const mountChildren: MountChildrenFn = (\r\n    children,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds,\r\n    optimized,\r\n    start = 0,\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      const child = (children[i] = optimized\r\n        ? cloneIfMounted(children[i] as VNode)\r\n        : normalizeVNode(children[i]))\r\n      patch(\r\n        null,\r\n        child,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        namespace,\r\n        slotScopeIds,\r\n        optimized,\r\n      )\r\n    }\r\n  }\r\n\r\n  const patchElement = (\r\n    n1: VNode,\r\n    n2: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ) => {\r\n    const el = (n2.el = n1.el!)\r\n    let { patchFlag, dynamicChildren, dirs } = n2\r\n    // #1426 take the old vnode's patch flag into account since user may clone a compiler-generated vnode, which de-opts to FULL_PROPS\r\n    /**\r\n     * 这段代码的主要目的是确保在某些特殊情况下（如用户克隆了一个编译器生成的 VNode），仍然能够正确处理属性的更新。具体来说，若旧的 VNode 是 FULL_PROPS，则新 VNode 也应该继承这个标志，从而避免性能优化的失效或更新行为的不一致性。\r\n    比如v-bind\r\n    */\r\n    patchFlag |= n1.patchFlag & PatchFlags.FULL_PROPS\r\n    const oldProps = n1.props || EMPTY_OBJ\r\n    const newProps = n2.props || EMPTY_OBJ\r\n    let vnodeHook: VNodeHook | undefined | null\r\n\r\n    // disable recurse in beforeUpdate hooks\r\n    /**\r\n     * 这段代码的主要作用是在组件更新前暂时禁用父组件的递归更新，确保更新过程不会出现递归循环问题。它同时还会触发 beforeUpdate 钩子函数和指令钩子函数，在更新发生前执行必要的操作。最后重新启用父组件的递归更新。\r\n     */\r\n    parentComponent && toggleRecurse(parentComponent, false)\r\n    if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n    }\r\n    if (dirs) {\r\n      invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate')\r\n    }\r\n    parentComponent && toggleRecurse(parentComponent, true)\r\n\r\n    if (__DEV__ && isHmrUpdating) {\r\n      // HMR updated, force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (dynamicChildren) {\r\n      // \r\n      patchBlockChildren(\r\n        n1.dynamicChildren!,\r\n        dynamicChildren,\r\n        el,\r\n        parentComponent,\r\n        parentSuspense,\r\n        resolveChildrenNamespace(n2, namespace),\r\n        slotScopeIds,\r\n      )\r\n      if (__DEV__) {\r\n        // necessary for HMR\r\n        traverseStaticChildren(n1, n2)\r\n      }\r\n    } else if (!optimized) {\r\n      // full diff\r\n      patchChildren(\r\n        n1,\r\n        n2,\r\n        el,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        resolveChildrenNamespace(n2, namespace),\r\n        slotScopeIds,\r\n        false,\r\n      )\r\n    }\r\n\r\n    if (patchFlag > 0) {\r\n      // the presence of a patchFlag means this element's render code was\r\n      // generated by the compiler and can take the fast path.\r\n      // in this path old node and new node are guaranteed to have the same shape\r\n      // (i.e. at the exact same position in the source template)\r\n      if (patchFlag & PatchFlags.FULL_PROPS) { // 全部props都更新\r\n        // element props contain dynamic keys, full diff needed\r\n        patchProps(\r\n          el,\r\n          n2,\r\n          oldProps,\r\n          newProps,\r\n          parentComponent,\r\n          parentSuspense,\r\n          namespace,\r\n        )\r\n      } else {\r\n        // class\r\n        // this flag is matched when the element has dynamic class bindings.\r\n        // 只更新class\r\n        if (patchFlag & PatchFlags.CLASS) {\r\n          if (oldProps.class !== newProps.class) {\r\n            hostPatchProp(el, 'class', null, newProps.class, namespace)\r\n          }\r\n        }\r\n\r\n        // style\r\n        // this flag is matched when the element has dynamic style bindings\r\n        // 只更新style\r\n        if (patchFlag & PatchFlags.STYLE) {\r\n          hostPatchProp(el, 'style', oldProps.style, newProps.style, namespace)\r\n        }\r\n\r\n        // props\r\n        // This flag is matched when the element has dynamic prop/attr bindings\r\n        // other than class and style. The keys of dynamic prop/attrs are saved for\r\n        // faster iteration.\r\n        // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n        // bail out and go through a full diff because we need to unset the old key\r\n        // 只更新动态props\r\n        if (patchFlag & PatchFlags.PROPS) {\r\n          // if the flag is present then dynamicProps must be non-null\r\n          const propsToUpdate = n2.dynamicProps!\r\n          for (let i = 0; i < propsToUpdate.length; i++) {\r\n            const key = propsToUpdate[i]\r\n            const prev = oldProps[key]\r\n            const next = newProps[key]\r\n            // #1471 force patch value\r\n            if (next !== prev || key === 'value') {\r\n              hostPatchProp(\r\n                el,\r\n                key,\r\n                prev,\r\n                next,\r\n                namespace,\r\n                n1.children as VNode[],\r\n                parentComponent,\r\n                parentSuspense,\r\n                unmountChildren,\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // text\r\n      // This flag is matched when the element has only dynamic text children.\r\n      // 更新文本\r\n      if (patchFlag & PatchFlags.TEXT) {\r\n        if (n1.children !== n2.children) {\r\n          hostSetElementText(el, n2.children as string)\r\n        }\r\n      }\r\n    } else if (!optimized && dynamicChildren == null) {\r\n      // unoptimized, full diff\r\n      patchProps(\r\n        el,\r\n        n2,\r\n        oldProps,\r\n        newProps,\r\n        parentComponent,\r\n        parentSuspense,\r\n        namespace,\r\n      )\r\n    }\r\n\r\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1)\r\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  // The fast path for blocks.\r\n  const patchBlockChildren: PatchBlockChildrenFn = (\r\n    oldChildren,\r\n    newChildren,\r\n    fallbackContainer,\r\n    parentComponent,\r\n    parentSuspense,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds,\r\n  ) => {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n      const oldVNode = oldChildren[i]\r\n      const newVNode = newChildren[i]\r\n      // Determine the container (parent element) for the patch.\r\n      const container =\r\n        // oldVNode may be an errored async setup() component inside Suspense\r\n        // which will not have a mounted element\r\n        oldVNode.el &&\r\n        // - In the case of a Fragment, we need to provide the actual parent\r\n        // of the Fragment itself so it can move its children.\r\n        (oldVNode.type === Fragment ||\r\n          // - In the case of different nodes, there is going to be a replacement\r\n          // which also requires the correct parent container\r\n          !isSameVNodeType(oldVNode, newVNode) ||\r\n          // - In the case of a component, it could contain anything.\r\n          oldVNode.shapeFlag & (ShapeFlags.COMPONENT | ShapeFlags.TELEPORT))\r\n          ? hostParentNode(oldVNode.el)!\r\n          : // In other cases, the parent container is not actually used so we\r\n            // just pass the block element here to avoid a DOM parentNode call.\r\n            fallbackContainer\r\n      patch(\r\n        oldVNode,\r\n        newVNode,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        namespace,\r\n        slotScopeIds,\r\n        true,\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新属性props\r\n   */\r\n  const patchProps = (\r\n    el: RendererElement,\r\n    vnode: VNode,\r\n    oldProps: Data,\r\n    newProps: Data,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    namespace: ElementNamespace,\r\n  ) => {\r\n    if (oldProps !== newProps) {\r\n      if (oldProps !== EMPTY_OBJ) {\r\n        for (const key in oldProps) {\r\n          if (!isReservedProp(key) && !(key in newProps)) {\r\n            // 在oldProps，不在newProps的卸载\r\n            hostPatchProp(\r\n              el,\r\n              key,\r\n              oldProps[key],\r\n              null,\r\n              namespace,\r\n              vnode.children as VNode[],\r\n              parentComponent,\r\n              parentSuspense,\r\n              unmountChildren,\r\n            )\r\n          }\r\n        }\r\n      }\r\n      // 在newProps的更新上去\r\n      for (const key in newProps) {\r\n        // empty string is not valid prop\r\n        if (isReservedProp(key)) continue\r\n        const next = newProps[key]\r\n        const prev = oldProps[key]\r\n        // defer patching value\r\n        if (next !== prev && key !== 'value') {\r\n          hostPatchProp(\r\n            el,\r\n            key,\r\n            prev,\r\n            next,\r\n            namespace,\r\n            vnode.children as VNode[],\r\n            parentComponent,\r\n            parentSuspense,\r\n            unmountChildren,\r\n          )\r\n        }\r\n      }\r\n      if ('value' in newProps) {\r\n        hostPatchProp(el, 'value', oldProps.value, newProps.value, namespace)\r\n      }\r\n    }\r\n  }\r\n\r\n  const processFragment = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ) => {\r\n    const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''))!\r\n    const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''))!\r\n\r\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2\r\n\r\n    if (\r\n      __DEV__ &&\r\n      // #5523 dev root fragment may inherit directives\r\n      (isHmrUpdating || patchFlag & PatchFlags.DEV_ROOT_FRAGMENT)\r\n    ) {\r\n      // HMR updated / Dev root fragment (w/ comments), force full diff\r\n      patchFlag = 0\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    // check if this is a slot fragment with :slotted scope ids\r\n    if (fragmentSlotScopeIds) {\r\n      slotScopeIds = slotScopeIds\r\n        ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n        : fragmentSlotScopeIds\r\n    }\r\n\r\n    if (n1 == null) {\r\n      hostInsert(fragmentStartAnchor, container, anchor)\r\n      hostInsert(fragmentEndAnchor, container, anchor)\r\n      // a fragment can only have array children\r\n      // since they are either generated by the compiler, or implicitly created\r\n      // from arrays.\r\n      mountChildren(\r\n        // #10007\r\n        // such fragment like `<></>` will be compiled into\r\n        // a fragment which doesn't have a children.\r\n        // In this case fallback to an empty array\r\n        (n2.children || []) as VNodeArrayChildren,\r\n        container,\r\n        fragmentEndAnchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        namespace,\r\n        slotScopeIds,\r\n        optimized,\r\n      )\r\n    } else {\r\n      if (\r\n        patchFlag > 0 &&\r\n        patchFlag & PatchFlags.STABLE_FRAGMENT &&\r\n        dynamicChildren &&\r\n        // #2715 the previous fragment could've been a BAILed one as a result\r\n        // of renderSlot() with no valid children\r\n        n1.dynamicChildren\r\n      ) {\r\n        // a stable fragment (template root or <template v-for>) doesn't need to\r\n        // patch children order, but it may contain dynamicChildren.\r\n        patchBlockChildren(\r\n          n1.dynamicChildren,\r\n          dynamicChildren,\r\n          container,\r\n          parentComponent,\r\n          parentSuspense,\r\n          namespace,\r\n          slotScopeIds,\r\n        )\r\n        if (__DEV__) {\r\n          // necessary for HMR\r\n          traverseStaticChildren(n1, n2)\r\n        } else if (\r\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n          //  get moved around. Make sure all root level vnodes inherit el.\r\n          // #2134 or if it's a component root, it may also get moved around\r\n          // as the component is being moved.\r\n          n2.key != null ||\r\n          (parentComponent && n2 === parentComponent.subTree)\r\n        ) {\r\n          traverseStaticChildren(n1, n2, true /* shallow */)\r\n        }\r\n      } else {\r\n        // keyed / unkeyed, or manual fragments.\r\n        // for keyed & unkeyed, since they are compiler generated from v-for,\r\n        // each child is guaranteed to be a block so the fragment will never\r\n        // have dynamicChildren.\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          container,\r\n          fragmentEndAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          namespace,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const processComponent = (\r\n    n1: VNode | null,\r\n    n2: VNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ) => {\r\n    n2.slotScopeIds = slotScopeIds\r\n    if (n1 == null) {\r\n      // 如果是keep-alive的模式，则是激活组件\r\n      if (n2.shapeFlag & ShapeFlags.COMPONENT_KEPT_ALIVE) {\r\n        ;(parentComponent!.ctx as KeepAliveContext).activate(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          namespace,\r\n          optimized,\r\n        )\r\n      } else {\r\n        // n1不存在挂载节点\r\n        mountComponent(\r\n          n2,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          namespace,\r\n          optimized,\r\n        )\r\n      }\r\n    } else {\r\n      // 如果n1、n2都存在就是更新\r\n      updateComponent(n1, n2, optimized)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 执行\r\n   */\r\n  const mountComponent: MountComponentFn = (\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    namespace: ElementNamespace,\r\n    optimized,\r\n  ) => {\r\n    // 2.x compat may pre-create the component instance before actually\r\n    // mounting\r\n    const compatMountInstance =\r\n      __COMPAT__ && initialVNode.isCompatRoot && initialVNode.component\r\n    // 创建虚拟节点对应的组件实例对象\r\n    const instance: ComponentInternalInstance =\r\n      compatMountInstance ||\r\n      (initialVNode.component = createComponentInstance(\r\n        initialVNode,\r\n        parentComponent,\r\n        parentSuspense,\r\n      ))\r\n\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      registerHMR(instance)\r\n    }\r\n\r\n    if (__DEV__) {\r\n      pushWarningContext(initialVNode)\r\n      startMeasure(instance, `mount`)\r\n    }\r\n\r\n    // inject renderer internals for keepAlive\r\n    if (isKeepAlive(initialVNode)) {\r\n      ;(instance.ctx as KeepAliveContext).renderer = internals\r\n    }\r\n\r\n    // resolve props and slots for setup context\r\n    // 先记录setupComponent方法执行所使用的时间\r\n    if (!(__COMPAT__ && compatMountInstance)) {\r\n      if (__DEV__) {\r\n        startMeasure(instance, `init`)\r\n      }\r\n      //执行组件的setup方法，然后根据template模板（解析模板）组装render函数\r\n      setupComponent(instance)\r\n      if (__DEV__) {\r\n        endMeasure(instance, `init`)\r\n      }\r\n    }\r\n\r\n    // setup() is async. This component relies on async logic to be resolved\r\n    // before proceeding\r\n    if (__FEATURE_SUSPENSE__ && instance.asyncDep) {\r\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect)\r\n\r\n      // Give it a placeholder if this is not hydration\r\n      // TODO handle self-defined fallback\r\n      if (!initialVNode.el) {\r\n        const placeholder = (instance.subTree = createVNode(Comment))\r\n        processCommentNode(null, placeholder, container!, anchor)\r\n      }\r\n    } else {\r\n      // 执行render函数\r\n      setupRenderEffect(\r\n        instance,\r\n        initialVNode,\r\n        container,\r\n        anchor,\r\n        parentSuspense,\r\n        namespace,\r\n        optimized,\r\n      )\r\n    }\r\n\r\n    if (__DEV__) {\r\n      popWarningContext()\r\n      endMeasure(instance, `mount`)\r\n    }\r\n  }\r\n\r\n  const updateComponent = (n1: VNode, n2: VNode, optimized: boolean) => {\r\n    const instance = (n2.component = n1.component)!\r\n    if (shouldUpdateComponent(n1, n2, optimized)) {\r\n      if (\r\n        __FEATURE_SUSPENSE__ &&\r\n        instance.asyncDep &&\r\n        !instance.asyncResolved\r\n      ) {\r\n        // async & still pending - just update props and slots\r\n        // since the component's reactive effect for render isn't set-up yet\r\n        if (__DEV__) {\r\n          pushWarningContext(n2)\r\n        }\r\n        updateComponentPreRender(instance, n2, optimized)\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n        return\r\n      } else {\r\n        // normal update\r\n        instance.next = n2\r\n        // in case the child component is also queued, remove it to avoid\r\n        // double updating the same child component in the same flush.\r\n        invalidateJob(instance.update)\r\n        // instance.update is the reactive effect.\r\n        instance.effect.dirty = true\r\n        instance.update()\r\n      }\r\n    } else {\r\n      // no update needed. just copy over properties\r\n      n2.el = n1.el\r\n      instance.vnode = n2\r\n    }\r\n  }\r\n\r\n  const setupRenderEffect: SetupRenderEffectFn = (\r\n    instance,\r\n    initialVNode,\r\n    container,\r\n    anchor,\r\n    parentSuspense,\r\n    namespace: ElementNamespace,\r\n    optimized,\r\n  ) => {\r\n    const componentUpdateFn = () => {\r\n      if (!instance.isMounted) {\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        const { el, props } = initialVNode\r\n        const { bm, m, parent } = instance\r\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode)\r\n\r\n        toggleRecurse(instance, false)\r\n        // beforeMount hook\r\n        if (bm) {\r\n          invokeArrayFns(bm)\r\n        }\r\n        // onVnodeBeforeMount\r\n        if (\r\n          !isAsyncWrapperVNode &&\r\n          (vnodeHook = props && props.onVnodeBeforeMount)\r\n        ) {\r\n          invokeVNodeHook(vnodeHook, parent, initialVNode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeMount')\r\n        }\r\n        toggleRecurse(instance, true)\r\n\r\n        if (el && hydrateNode) {\r\n          // vnode has adopted host node - perform hydration instead of mount.\r\n          const hydrateSubTree = () => {\r\n            if (__DEV__) {\r\n              startMeasure(instance, `render`)\r\n            }\r\n            instance.subTree = renderComponentRoot(instance)\r\n            if (__DEV__) {\r\n              endMeasure(instance, `render`)\r\n            }\r\n            if (__DEV__) {\r\n              startMeasure(instance, `hydrate`)\r\n            }\r\n            hydrateNode!(\r\n              el as Node,\r\n              instance.subTree,\r\n              instance,\r\n              parentSuspense,\r\n              null,\r\n            )\r\n            if (__DEV__) {\r\n              endMeasure(instance, `hydrate`)\r\n            }\r\n          }\r\n\r\n          if (isAsyncWrapperVNode) {\r\n            ;(initialVNode.type as ComponentOptions).__asyncLoader!().then(\r\n              // note: we are moving the render call into an async callback,\r\n              // which means it won't track dependencies - but it's ok because\r\n              // a server-rendered async wrapper is already in resolved state\r\n              // and it will never need to change.\r\n              () => !instance.isUnmounted && hydrateSubTree(),\r\n            )\r\n          } else {\r\n            hydrateSubTree()\r\n          }\r\n        } else {\r\n          if (__DEV__) {\r\n            startMeasure(instance, `render`)\r\n          }\r\n          const subTree = (instance.subTree = renderComponentRoot(instance))\r\n          if (__DEV__) {\r\n            endMeasure(instance, `render`)\r\n          }\r\n          if (__DEV__) {\r\n            startMeasure(instance, `patch`)\r\n          }\r\n          patch(\r\n            null,\r\n            subTree,\r\n            container,\r\n            anchor,\r\n            instance,\r\n            parentSuspense,\r\n            namespace,\r\n          )\r\n          if (__DEV__) {\r\n            endMeasure(instance, `patch`)\r\n          }\r\n          initialVNode.el = subTree.el\r\n        }\r\n        // mounted hook\r\n        if (m) {\r\n          queuePostRenderEffect(m, parentSuspense)\r\n        }\r\n        // onVnodeMounted\r\n        if (\r\n          !isAsyncWrapperVNode &&\r\n          (vnodeHook = props && props.onVnodeMounted)\r\n        ) {\r\n          const scopedInitialVNode = initialVNode\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, scopedInitialVNode),\r\n            parentSuspense,\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:mounted'),\r\n            parentSuspense,\r\n          )\r\n        }\r\n\r\n        // activated hook for keep-alive roots.\r\n        // #1742 activated hook must be accessed after first render\r\n        // since the hook may be injected by a child keep-alive\r\n        if (\r\n          initialVNode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE ||\r\n          (parent &&\r\n            isAsyncWrapper(parent.vnode) &&\r\n            parent.vnode.shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE)\r\n        ) {\r\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense)\r\n          if (\r\n            __COMPAT__ &&\r\n            isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n          ) {\r\n            queuePostRenderEffect(\r\n              () => instance.emit('hook:activated'),\r\n              parentSuspense,\r\n            )\r\n          }\r\n        }\r\n        instance.isMounted = true\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentAdded(instance)\r\n        }\r\n\r\n        // #2458: deference mount-only object parameters to prevent memleaks\r\n        initialVNode = container = anchor = null as any\r\n      } else {\r\n        let { next, bu, u, parent, vnode } = instance\r\n\r\n        if (__FEATURE_SUSPENSE__) {\r\n          const nonHydratedAsyncRoot = locateNonHydratedAsyncRoot(instance)\r\n          // we are trying to update some async comp before hydration\r\n          // this will cause crash because we don't know the root node yet\r\n          if (nonHydratedAsyncRoot) {\r\n            // only sync the properties and abort the rest of operations\r\n            if (next) {\r\n              next.el = vnode.el\r\n              updateComponentPreRender(instance, next, optimized)\r\n            }\r\n            // and continue the rest of operations once the deps are resolved\r\n            nonHydratedAsyncRoot.asyncDep!.then(() => {\r\n              // the instance may be destroyed during the time period\r\n              if (!instance.isUnmounted) {\r\n                componentUpdateFn()\r\n              }\r\n            })\r\n            return\r\n          }\r\n        }\r\n\r\n        // updateComponent\r\n        // This is triggered by mutation of component's own state (next: null)\r\n        // OR parent calling processComponent (next: VNode)\r\n        let originNext = next\r\n        let vnodeHook: VNodeHook | null | undefined\r\n        if (__DEV__) {\r\n          pushWarningContext(next || instance.vnode)\r\n        }\r\n\r\n        // Disallow component effect recursion during pre-lifecycle hooks.\r\n        toggleRecurse(instance, false)\r\n        if (next) {\r\n          next.el = vnode.el\r\n          updateComponentPreRender(instance, next, optimized)\r\n        } else {\r\n          next = vnode\r\n        }\r\n\r\n        // beforeUpdate hook\r\n        if (bu) {\r\n          invokeArrayFns(bu)\r\n        }\r\n        // onVnodeBeforeUpdate\r\n        if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n          invokeVNodeHook(vnodeHook, parent, next, vnode)\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          instance.emit('hook:beforeUpdate')\r\n        }\r\n        toggleRecurse(instance, true)\r\n\r\n        // render\r\n        if (__DEV__) {\r\n          startMeasure(instance, `render`)\r\n        }\r\n        const nextTree = renderComponentRoot(instance)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `render`)\r\n        }\r\n        const prevTree = instance.subTree\r\n        instance.subTree = nextTree\r\n\r\n        if (__DEV__) {\r\n          startMeasure(instance, `patch`)\r\n        }\r\n        patch(\r\n          prevTree,\r\n          nextTree,\r\n          // parent may have changed if it's in a teleport\r\n          hostParentNode(prevTree.el!)!,\r\n          // anchor may have changed if it's in a fragment\r\n          getNextHostNode(prevTree),\r\n          instance,\r\n          parentSuspense,\r\n          namespace,\r\n        )\r\n        if (__DEV__) {\r\n          endMeasure(instance, `patch`)\r\n        }\r\n        next.el = nextTree.el\r\n        if (originNext === null) {\r\n          // self-triggered update. In case of HOC, update parent component\r\n          // vnode el. HOC is indicated by parent instance's subTree pointing\r\n          // to child component's vnode\r\n          updateHOCHostEl(instance, nextTree.el)\r\n        }\r\n        // updated hook\r\n        if (u) {\r\n          queuePostRenderEffect(u, parentSuspense)\r\n        }\r\n        // onVnodeUpdated\r\n        if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n          queuePostRenderEffect(\r\n            () => invokeVNodeHook(vnodeHook!, parent, next!, vnode),\r\n            parentSuspense,\r\n          )\r\n        }\r\n        if (\r\n          __COMPAT__ &&\r\n          isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n        ) {\r\n          queuePostRenderEffect(\r\n            () => instance.emit('hook:updated'),\r\n            parentSuspense,\r\n          )\r\n        }\r\n\r\n        if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n          devtoolsComponentUpdated(instance)\r\n        }\r\n\r\n        if (__DEV__) {\r\n          popWarningContext()\r\n        }\r\n      }\r\n    }\r\n\r\n    // create reactive effect for rendering\r\n    const effect = (instance.effect = new ReactiveEffect(\r\n      componentUpdateFn,\r\n      NOOP,\r\n      () => queueJob(update),\r\n      instance.scope, // track it in component's effect scope\r\n    ))\r\n\r\n    const update: SchedulerJob = (instance.update = () => {\r\n      if (effect.dirty) {\r\n        effect.run()\r\n      }\r\n    })\r\n    update.id = instance.uid\r\n    // allowRecurse\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    toggleRecurse(instance, true)\r\n\r\n    if (__DEV__) {\r\n      effect.onTrack = instance.rtc\r\n        ? e => invokeArrayFns(instance.rtc!, e)\r\n        : void 0\r\n      effect.onTrigger = instance.rtg\r\n        ? e => invokeArrayFns(instance.rtg!, e)\r\n        : void 0\r\n      update.ownerInstance = instance\r\n    }\r\n\r\n    update()\r\n  }\r\n\r\n  const updateComponentPreRender = (\r\n    instance: ComponentInternalInstance,\r\n    nextVNode: VNode,\r\n    optimized: boolean,\r\n  ) => {\r\n    nextVNode.component = instance\r\n    const prevProps = instance.vnode.props\r\n    instance.vnode = nextVNode\r\n    instance.next = null\r\n    updateProps(instance, nextVNode.props, prevProps, optimized)\r\n    updateSlots(instance, nextVNode.children, optimized)\r\n\r\n    pauseTracking()\r\n    // props update may have triggered pre-flush watchers.\r\n    // flush them before the render update.\r\n    flushPreFlushCbs(instance)\r\n    resetTracking()\r\n  }\r\n\r\n  const patchChildren: PatchChildrenFn = (\r\n    n1,\r\n    n2,\r\n    container,\r\n    anchor,\r\n    parentComponent,\r\n    parentSuspense,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds,\r\n    optimized = false,\r\n  ) => {\r\n    const c1 = n1 && n1.children\r\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0\r\n    const c2 = n2.children\r\n\r\n    const { patchFlag, shapeFlag } = n2\r\n    // fast path\r\n    if (patchFlag > 0) {\r\n      if (patchFlag & PatchFlags.KEYED_FRAGMENT) {\r\n        // this could be either fully-keyed or mixed (some keyed some not)\r\n        // presence of patchFlag means children are guaranteed to be arrays\r\n        patchKeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          namespace,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n        return\r\n      } else if (patchFlag & PatchFlags.UNKEYED_FRAGMENT) {\r\n        // unkeyed\r\n        patchUnkeyedChildren(\r\n          c1 as VNode[],\r\n          c2 as VNodeArrayChildren,\r\n          container,\r\n          anchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          namespace,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n        return\r\n      }\r\n    }\r\n\r\n    // children has 3 possibilities: text, array or no children.\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n      // text children fast path\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        unmountChildren(c1 as VNode[], parentComponent, parentSuspense)\r\n      }\r\n      if (c2 !== c1) {\r\n        hostSetElementText(container, c2 as string)\r\n      }\r\n    } else {\r\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        // prev children was array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          // two arrays, cannot assume anything, do full diff\r\n          patchKeyedChildren(\r\n            c1 as VNode[],\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n          )\r\n        } else {\r\n          // no new children, just unmount old\r\n          unmountChildren(c1 as VNode[], parentComponent, parentSuspense, true)\r\n        }\r\n      } else {\r\n        // prev children was text OR null\r\n        // new children is array OR null\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n          hostSetElementText(container, '')\r\n        }\r\n        // mount new if array\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            c2 as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 元素没有key的情况下，先获取共同长度的key，执行patch，多余的卸载，新添加的挂载\r\n   */\r\n  const patchUnkeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ) => {\r\n    c1 = c1 || EMPTY_ARR\r\n    c2 = c2 || EMPTY_ARR\r\n    const oldLength = c1.length\r\n    const newLength = c2.length\r\n    const commonLength = Math.min(oldLength, newLength)\r\n    let i\r\n    for (i = 0; i < commonLength; i++) {\r\n      /**\r\n       * 这行代码的作用是在子节点更新过程中，根据是否启用了优化模式来选择合适的处理方式。如果在优化模式下，使用 cloneIfMounted 来处理已经挂载的节点，以避免副作用。\r\n       * 如果不在优化模式下，则使用 normalizeVNode 确保输入子节点是标准的 VNode 对象\r\n       */\r\n      const nextChild = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      patch(\r\n        c1[i],\r\n        nextChild,\r\n        container,\r\n        null,\r\n        parentComponent,\r\n        parentSuspense,\r\n        namespace,\r\n        slotScopeIds,\r\n        optimized,\r\n      )\r\n    }\r\n    if (oldLength > newLength) {\r\n      // remove old\r\n      unmountChildren(\r\n        c1,\r\n        parentComponent,\r\n        parentSuspense,\r\n        true,\r\n        false,\r\n        commonLength,\r\n      )\r\n    } else {\r\n      // mount new\r\n      mountChildren(\r\n        c2,\r\n        container,\r\n        anchor,\r\n        parentComponent,\r\n        parentSuspense,\r\n        namespace,\r\n        slotScopeIds,\r\n        optimized,\r\n        commonLength,\r\n      )\r\n    }\r\n  }\r\n\r\n  // can be all-keyed or mixed\r\n  const patchKeyedChildren = (\r\n    c1: VNode[],\r\n    c2: VNodeArrayChildren,\r\n    container: RendererElement,\r\n    parentAnchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ) => {\r\n    let i = 0\r\n    const l2 = c2.length\r\n    let e1 = c1.length - 1 // prev ending index\r\n    let e2 = l2 - 1 // next ending index\r\n\r\n    // 1. sync from start\r\n    // (a b) c\r\n    // (a b) d e\r\n    // 快速diff算法\r\n    // step 1. 找到开头那些key相同的（相同的前置元素），对那些节点执行patch \r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[i]\r\n      const n2 = (c2[i] = optimized\r\n        ? cloneIfMounted(c2[i] as VNode)\r\n        : normalizeVNode(c2[i]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          namespace,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      i++\r\n    }\r\n\r\n    // 2. sync from end\r\n    // a (b c)\r\n    // d e (b c)\r\n    // step 2. 找到末尾那些key相同的（相同的后置元素），对那些节点执行patch\r\n    while (i <= e1 && i <= e2) {\r\n      const n1 = c1[e1]\r\n      const n2 = (c2[e2] = optimized\r\n        ? cloneIfMounted(c2[e2] as VNode)\r\n        : normalizeVNode(c2[e2]))\r\n      if (isSameVNodeType(n1, n2)) {\r\n        patch(\r\n          n1,\r\n          n2,\r\n          container,\r\n          null,\r\n          parentComponent,\r\n          parentSuspense,\r\n          namespace,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n      } else {\r\n        break\r\n      }\r\n      e1--\r\n      e2--\r\n    }\r\n\r\n    // 3. common sequence + mount\r\n    // (a b)\r\n    // (a b) c\r\n    // i = 2, e1 = 1, e2 = 2\r\n    // (a b)\r\n    // c (a b)\r\n    // i = 0, e1 = -1, e2 = 0\r\n    // 如果是新的节点多，那么多余的节点执行mount,\r\n    if (i > e1) {\r\n      if (i <= e2) {\r\n        const nextPos = e2 + 1\r\n        const anchor = nextPos < l2 ? (c2[nextPos] as VNode).el : parentAnchor\r\n        while (i <= e2) {\r\n          patch(\r\n            null,\r\n            (c2[i] = optimized\r\n              ? cloneIfMounted(c2[i] as VNode)\r\n              : normalizeVNode(c2[i])),\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n          )\r\n          i++\r\n        }\r\n      }\r\n    }\r\n\r\n    // 4. common sequence + unmount\r\n    // (a b) c\r\n    // (a b)\r\n    // i = 2, e1 = 2, e2 = 1\r\n    // a (b c)\r\n    // (b c)\r\n    // i = 0, e1 = 0, e2 = -1\r\n    // step 4. 如果是有多余的old node，执行卸载\r\n    else if (i > e2) {\r\n      while (i <= e1) {\r\n        unmount(c1[i], parentComponent, parentSuspense, true)\r\n        i++\r\n      }\r\n    }\r\n\r\n    // 5. unknown sequence\r\n    // [i ... e1 + 1]: a b [c d e] f g\r\n    // [i ... e2 + 1]: a b [e d c h] f g\r\n    // i = 2, e1 = 4, e2 = 5\r\n    else {\r\n      // 如果两个都有多余，寻找最长递增子序列\r\n      const s1 = i // prev starting index\r\n      const s2 = i // next starting index\r\n\r\n      // 5.1 build key:index map for newChildren  先获取 new nodes的key map集合\r\n      const keyToNewIndexMap: Map<string | number | symbol, number> = new Map()\r\n      for (i = s2; i <= e2; i++) {\r\n        const nextChild = (c2[i] = optimized\r\n          ? cloneIfMounted(c2[i] as VNode)\r\n          : normalizeVNode(c2[i]))\r\n        if (nextChild.key != null) {\r\n          if (__DEV__ && keyToNewIndexMap.has(nextChild.key)) {\r\n            warn(\r\n              `Duplicate keys found during update:`,\r\n              JSON.stringify(nextChild.key),\r\n              `Make sure keys are unique.`,\r\n            )\r\n          }\r\n          keyToNewIndexMap.set(nextChild.key, i)\r\n        }\r\n      }\r\n\r\n      // 5.2 loop through old children left to be patched and try to patch\r\n      // matching nodes & remove nodes that are no longer present\r\n      let j\r\n      let patched = 0\r\n      const toBePatched = e2 - s2 + 1 // 剩余new nodes 的长度\r\n      let moved = false // 判断是否需要移动，如果每一个新节点在old nodes的索引值大于当前最大的索引值，则不需要移动\r\n      // used to track whether any node has moved\r\n      let maxNewIndexSoFar = 0 // 当前遍历中最大的索引值（新节点在旧节点数组的索引值）\r\n      // works as Map<newIndex, oldIndex>\r\n      // Note that oldIndex is offset by +1\r\n      // and oldIndex = 0 is a special value indicating the new node has\r\n      // no corresponding old node.\r\n      // used for determining longest stable subsequence\r\n      // 创建一个与剩余new nodes长度相同的数组，初始值设置为0。  用来存储新的一组节点在旧的一组节点中的索引位置\r\n      const newIndexToOldIndexMap = new Array(toBePatched)\r\n      for (i = 0; i < toBePatched; i++) newIndexToOldIndexMap[i] = 0\r\n\r\n      // 遍历old nodes数组\r\n      for (i = s1; i <= e1; i++) {\r\n        const prevChild = c1[i]\r\n        // 判断已经匹配了的old node 数目，如果已经大于new nodes的数目，那么直接unmount\r\n        if (patched >= toBePatched) {\r\n          // all new children have been patched so this can only be a removal\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n          continue\r\n        }\r\n        let newIndex\r\n        // \r\n        if (prevChild.key != null) {\r\n          newIndex = keyToNewIndexMap.get(prevChild.key)\r\n        } else {\r\n          // key-less node, try to locate a key-less node of the same type\r\n          for (j = s2; j <= e2; j++) {\r\n            if (\r\n              newIndexToOldIndexMap[j - s2] === 0 &&\r\n              isSameVNodeType(prevChild, c2[j] as VNode)\r\n            ) {\r\n              newIndex = j\r\n              break\r\n            }\r\n          }\r\n        }\r\n        // 没有找到，说明是多余的节点，应该unmount\r\n        if (newIndex === undefined) {\r\n          unmount(prevChild, parentComponent, parentSuspense, true)\r\n        } else {\r\n          //否则记录这个新节点在旧节点的位置\r\n          newIndexToOldIndexMap[newIndex - s2] = i + 1\r\n          if (newIndex >= maxNewIndexSoFar) {\r\n            maxNewIndexSoFar = newIndex\r\n          } else {\r\n            moved = true\r\n          }\r\n          // 先对这个节点本身patch\r\n          patch(\r\n            prevChild,\r\n            c2[newIndex] as VNode,\r\n            container,\r\n            null,\r\n            parentComponent,\r\n            parentSuspense,\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n          )\r\n          patched++\r\n        }\r\n      }\r\n\r\n      // 5.3 move and mount\r\n      // generate longest stable subsequence only when nodes have moved\r\n      // 如果moved为true，说明需要移动，否则就不需要移动，找到source的最长递增子序列。。返回的是位置\r\n      const increasingNewIndexSequence = moved\r\n        ? getSequence(newIndexToOldIndexMap)\r\n        : EMPTY_ARR\r\n      j = increasingNewIndexSequence.length - 1\r\n      // looping backwards so that we can use last patched node as anchor\r\n      // 遍历source，从最后一个元素开始，\r\n      for (i = toBePatched - 1; i >= 0; i--) {\r\n        const nextIndex = s2 + i\r\n        const nextChild = c2[nextIndex] as VNode\r\n        const anchor =\r\n          nextIndex + 1 < l2 ? (c2[nextIndex + 1] as VNode).el : parentAnchor\r\n        if (newIndexToOldIndexMap[i] === 0) { // 如果是0 说明是mount\r\n          // mount new\r\n          patch(\r\n            null,\r\n            nextChild,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n          )\r\n        } else if (moved) {\r\n          // move if:\r\n          // There is no stable subsequence (e.g. a reverse)\r\n          // OR current node is not among the stable sequence\r\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n            // 以下个节点为描点，移动\r\n            move(nextChild, container, anchor, MoveType.REORDER)\r\n          } else {\r\n             // 如果是最长递增子序列中的，则不需要移动，只要patch node\r\n            j--\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const move: MoveFn = (\r\n    vnode,\r\n    container,\r\n    anchor,\r\n    moveType,\r\n    parentSuspense = null,\r\n  ) => {\r\n    const { el, type, transition, children, shapeFlag } = vnode\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      move(vnode.component!.subTree, container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      vnode.suspense!.move(container, anchor, moveType)\r\n      return\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      ;(type as typeof TeleportImpl).move(vnode, container, anchor, internals)\r\n      return\r\n    }\r\n\r\n    if (type === Fragment) {\r\n      hostInsert(el!, container, anchor)\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move((children as VNode[])[i], container, anchor, moveType)\r\n      }\r\n      hostInsert(vnode.anchor!, container, anchor)\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      moveStaticNode(vnode, container, anchor)\r\n      return\r\n    }\r\n\r\n    // single nodes\r\n    const needTransition =\r\n      moveType !== MoveType.REORDER &&\r\n      shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition\r\n    if (needTransition) {\r\n      if (moveType === MoveType.ENTER) {\r\n        transition!.beforeEnter(el!)\r\n        hostInsert(el!, container, anchor)\r\n        queuePostRenderEffect(() => transition!.enter(el!), parentSuspense)\r\n      } else {\r\n        const { leave, delayLeave, afterLeave } = transition!\r\n        const remove = () => hostInsert(el!, container, anchor)\r\n        const performLeave = () => {\r\n          leave(el!, () => {\r\n            remove()\r\n            afterLeave && afterLeave()\r\n          })\r\n        }\r\n        if (delayLeave) {\r\n          delayLeave(el!, remove, performLeave)\r\n        } else {\r\n          performLeave()\r\n        }\r\n      }\r\n    } else {\r\n      hostInsert(el!, container, anchor)\r\n    }\r\n  }\r\n\r\n  const unmount: UnmountFn = (\r\n    vnode,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false,\r\n  ) => {\r\n    const {\r\n      type,\r\n      props,\r\n      ref,\r\n      children,\r\n      dynamicChildren,\r\n      shapeFlag,\r\n      patchFlag,\r\n      dirs,\r\n    } = vnode\r\n    // unset ref\r\n    if (ref != null) {\r\n      setRef(ref, null, parentSuspense, vnode, true)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE) {\r\n      ;(parentComponent!.ctx as KeepAliveContext).deactivate(vnode)\r\n      return\r\n    }\r\n\r\n    const shouldInvokeDirs = shapeFlag & ShapeFlags.ELEMENT && dirs\r\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode)\r\n\r\n    let vnodeHook: VNodeHook | undefined | null\r\n    if (\r\n      shouldInvokeVnodeHook &&\r\n      (vnodeHook = props && props.onVnodeBeforeUnmount)\r\n    ) {\r\n      invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n    }\r\n\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n      unmountComponent(vnode.component!, parentSuspense, doRemove)\r\n    } else {\r\n      if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n        vnode.suspense!.unmount(parentSuspense, doRemove)\r\n        return\r\n      }\r\n\r\n      if (shouldInvokeDirs) {\r\n        invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount')\r\n      }\r\n\r\n      if (shapeFlag & ShapeFlags.TELEPORT) {\r\n        ;(vnode.type as typeof TeleportImpl).remove(\r\n          vnode,\r\n          parentComponent,\r\n          parentSuspense,\r\n          optimized,\r\n          internals,\r\n          doRemove,\r\n        )\r\n      } else if (\r\n        dynamicChildren &&\r\n        // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n        (type !== Fragment ||\r\n          (patchFlag > 0 && patchFlag & PatchFlags.STABLE_FRAGMENT))\r\n      ) {\r\n        // fast path for block nodes: only need to unmount dynamic children.\r\n        unmountChildren(\r\n          dynamicChildren,\r\n          parentComponent,\r\n          parentSuspense,\r\n          false,\r\n          true,\r\n        )\r\n      } else if (\r\n        (type === Fragment &&\r\n          patchFlag &\r\n            (PatchFlags.KEYED_FRAGMENT | PatchFlags.UNKEYED_FRAGMENT)) ||\r\n        (!optimized && shapeFlag & ShapeFlags.ARRAY_CHILDREN)\r\n      ) {\r\n        unmountChildren(children as VNode[], parentComponent, parentSuspense)\r\n      }\r\n\r\n      if (doRemove) {\r\n        remove(vnode)\r\n      }\r\n    }\r\n\r\n    if (\r\n      (shouldInvokeVnodeHook &&\r\n        (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n      shouldInvokeDirs\r\n    ) {\r\n      queuePostRenderEffect(() => {\r\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode)\r\n        shouldInvokeDirs &&\r\n          invokeDirectiveHook(vnode, null, parentComponent, 'unmounted')\r\n      }, parentSuspense)\r\n    }\r\n  }\r\n\r\n  const remove: RemoveFn = vnode => {\r\n    const { type, el, anchor, transition } = vnode\r\n    if (type === Fragment) {\r\n      if (\r\n        __DEV__ &&\r\n        vnode.patchFlag > 0 &&\r\n        vnode.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT &&\r\n        transition &&\r\n        !transition.persisted\r\n      ) {\r\n        ;(vnode.children as VNode[]).forEach(child => {\r\n          if (child.type === Comment) {\r\n            hostRemove(child.el!)\r\n          } else {\r\n            remove(child)\r\n          }\r\n        })\r\n      } else {\r\n        removeFragment(el!, anchor!)\r\n      }\r\n      return\r\n    }\r\n\r\n    if (type === Static) {\r\n      removeStaticNode(vnode)\r\n      return\r\n    }\r\n\r\n    const performRemove = () => {\r\n      hostRemove(el!)\r\n      if (transition && !transition.persisted && transition.afterLeave) {\r\n        transition.afterLeave()\r\n      }\r\n    }\r\n\r\n    if (\r\n      vnode.shapeFlag & ShapeFlags.ELEMENT &&\r\n      transition &&\r\n      !transition.persisted\r\n    ) {\r\n      const { leave, delayLeave } = transition\r\n      const performLeave = () => leave(el!, performRemove)\r\n      if (delayLeave) {\r\n        delayLeave(vnode.el!, performRemove, performLeave)\r\n      } else {\r\n        performLeave()\r\n      }\r\n    } else {\r\n      performRemove()\r\n    }\r\n  }\r\n\r\n  const removeFragment = (cur: RendererNode, end: RendererNode) => {\r\n    // For fragments, directly remove all contained DOM nodes.\r\n    // (fragment child nodes cannot have transition)\r\n    let next\r\n    while (cur !== end) {\r\n      next = hostNextSibling(cur)!\r\n      hostRemove(cur)\r\n      cur = next\r\n    }\r\n    hostRemove(end)\r\n  }\r\n\r\n  const unmountComponent = (\r\n    instance: ComponentInternalInstance,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    doRemove?: boolean,\r\n  ) => {\r\n    if (__DEV__ && instance.type.__hmrId) {\r\n      unregisterHMR(instance)\r\n    }\r\n\r\n    const { bum, scope, update, subTree, um } = instance\r\n\r\n    // beforeUnmount hook\r\n    if (bum) {\r\n      invokeArrayFns(bum)\r\n    }\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      instance.emit('hook:beforeDestroy')\r\n    }\r\n\r\n    // stop effects in component scope\r\n    scope.stop()\r\n\r\n    // update may be null if a component is unmounted before its async\r\n    // setup has resolved.\r\n    if (update) {\r\n      // so that scheduler will no longer invoke it\r\n      update.active = false\r\n      unmount(subTree, instance, parentSuspense, doRemove)\r\n    }\r\n    // unmounted hook\r\n    if (um) {\r\n      queuePostRenderEffect(um, parentSuspense)\r\n    }\r\n    if (\r\n      __COMPAT__ &&\r\n      isCompatEnabled(DeprecationTypes.INSTANCE_EVENT_HOOKS, instance)\r\n    ) {\r\n      queuePostRenderEffect(\r\n        () => instance.emit('hook:destroyed'),\r\n        parentSuspense,\r\n      )\r\n    }\r\n    queuePostRenderEffect(() => {\r\n      instance.isUnmounted = true\r\n    }, parentSuspense)\r\n\r\n    // A component with async dep inside a pending suspense is unmounted before\r\n    // its async dep resolves. This should remove the dep from the suspense, and\r\n    // cause the suspense to resolve immediately if that was the last dep.\r\n    if (\r\n      __FEATURE_SUSPENSE__ &&\r\n      parentSuspense &&\r\n      parentSuspense.pendingBranch &&\r\n      !parentSuspense.isUnmounted &&\r\n      instance.asyncDep &&\r\n      !instance.asyncResolved &&\r\n      instance.suspenseId === parentSuspense.pendingId\r\n    ) {\r\n      parentSuspense.deps--\r\n      if (parentSuspense.deps === 0) {\r\n        parentSuspense.resolve()\r\n      }\r\n    }\r\n\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      devtoolsComponentRemoved(instance)\r\n    }\r\n  }\r\n\r\n  const unmountChildren: UnmountChildrenFn = (\r\n    children,\r\n    parentComponent,\r\n    parentSuspense,\r\n    doRemove = false,\r\n    optimized = false,\r\n    start = 0,\r\n  ) => {\r\n    for (let i = start; i < children.length; i++) {\r\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized)\r\n    }\r\n  }\r\n\r\n  const getNextHostNode: NextFn = vnode => {\r\n    if (vnode.shapeFlag & ShapeFlags.COMPONENT) {\r\n      return getNextHostNode(vnode.component!.subTree)\r\n    }\r\n    if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n      return vnode.suspense!.next()\r\n    }\r\n    return hostNextSibling((vnode.anchor || vnode.el)!)\r\n  }\r\n\r\n  let isFlushing = false\r\n  // render函数渲染\r\n  const render: RootRenderFunction = (vnode, container, namespace) => {\r\n    // vnode不存在，就卸载原来的\r\n    if (vnode == null) {\r\n      if (container._vnode) {\r\n        unmount(container._vnode, null, null, true)\r\n      }\r\n    } else {\r\n      patch(\r\n        container._vnode || null,\r\n        vnode,\r\n        container,\r\n        null,\r\n        null,\r\n        null,\r\n        namespace,\r\n      )\r\n    }\r\n    if (!isFlushing) {\r\n      isFlushing = true\r\n      flushPreFlushCbs()\r\n      flushPostFlushCbs()\r\n      isFlushing = false\r\n    }\r\n    container._vnode = vnode\r\n  }\r\n\r\n  const internals: RendererInternals = {\r\n    p: patch,\r\n    um: unmount,\r\n    m: move,\r\n    r: remove,\r\n    mt: mountComponent,\r\n    mc: mountChildren,\r\n    pc: patchChildren,\r\n    pbc: patchBlockChildren,\r\n    n: getNextHostNode,\r\n    o: options,\r\n  }\r\n\r\n  let hydrate: ReturnType<typeof createHydrationFunctions>[0] | undefined\r\n  let hydrateNode: ReturnType<typeof createHydrationFunctions>[1] | undefined\r\n  if (createHydrationFns) {\r\n    ;[hydrate, hydrateNode] = createHydrationFns(\r\n      internals as RendererInternals<Node, Element>,\r\n    )\r\n  }\r\n\r\n  return {\r\n    render,\r\n    hydrate,\r\n    createApp: createAppAPI(render, hydrate),\r\n  }\r\n}\r\n\r\nfunction resolveChildrenNamespace(\r\n  { type, props }: VNode,\r\n  currentNamespace: ElementNamespace,\r\n): ElementNamespace {\r\n  return (currentNamespace === 'svg' && type === 'foreignObject') ||\r\n    (currentNamespace === 'mathml' &&\r\n      type === 'annotation-xml' &&\r\n      props &&\r\n      props.encoding &&\r\n      props.encoding.includes('html'))\r\n    ? undefined\r\n    : currentNamespace\r\n}\r\n\r\nfunction toggleRecurse(\r\n  { effect, update }: ComponentInternalInstance,\r\n  allowed: boolean,\r\n) {\r\n  effect.allowRecurse = update.allowRecurse = allowed\r\n}\r\n\r\nexport function needTransition(\r\n  parentSuspense: SuspenseBoundary | null,\r\n  transition: TransitionHooks | null,\r\n) {\r\n  return (\r\n    (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n    transition &&\r\n    !transition.persisted\r\n  )\r\n}\r\n\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\r\nexport function traverseStaticChildren(n1: VNode, n2: VNode, shallow = false) {\r\n  const ch1 = n1.children\r\n  const ch2 = n2.children\r\n  if (isArray(ch1) && isArray(ch2)) {\r\n    for (let i = 0; i < ch1.length; i++) {\r\n      // this is only called in the optimized path so array children are\r\n      // guaranteed to be vnodes\r\n      const c1 = ch1[i] as VNode\r\n      let c2 = ch2[i] as VNode\r\n      if (c2.shapeFlag & ShapeFlags.ELEMENT && !c2.dynamicChildren) {\r\n        if (c2.patchFlag <= 0 || c2.patchFlag === PatchFlags.NEED_HYDRATION) {\r\n          c2 = ch2[i] = cloneIfMounted(ch2[i] as VNode)\r\n          c2.el = c1.el\r\n        }\r\n        if (!shallow) traverseStaticChildren(c1, c2)\r\n      }\r\n      // #6852 also inherit for text nodes\r\n      if (c2.type === Text) {\r\n        c2.el = c1.el\r\n      }\r\n      // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n      // would have received .el during block patch)\r\n      if (__DEV__ && c2.type === Comment && !c2.el) {\r\n        c2.el = c1.el\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\n// 贪心+二分法实现\r\nfunction getSequence(arr: number[]): number[] {\r\n  const p = arr.slice()\r\n  const result = [0]\r\n  let i, j, u, v, c\r\n  const len = arr.length\r\n  for (i = 0; i < len; i++) {\r\n    const arrI = arr[i]\r\n    if (arrI !== 0) { // 为0 是默认初始值，说明是新增的节点\r\n      j = result[result.length - 1]\r\n      if (arr[j] < arrI) {\r\n        p[i] = j //p用来记录这个元素加入前最长子序列最后一个元素的位置 []\r\n        result.push(i)\r\n        continue\r\n      }\r\n      u = 0\r\n      v = result.length - 1\r\n      while (u < v) {\r\n        c = (u + v) >> 1\r\n        if (arr[result[c]] < arrI) {\r\n          u = c + 1\r\n        } else {\r\n          v = c\r\n        }\r\n      }\r\n      if (arrI < arr[result[u]]) {\r\n        if (u > 0) {\r\n          p[i] = result[u - 1]\r\n        }\r\n        result[u] = i\r\n      }\r\n    }\r\n  }\r\n  u = result.length\r\n  v = result[u - 1]\r\n  while (u-- > 0) { // 结果result最长递增子序列元素个数是没有问题，但是位置可能有误（最后一个元素不会有错），重新纠正\r\n    result[u] = v\r\n    v = p[v]\r\n  }\r\n  return result\r\n}\r\n\r\nfunction locateNonHydratedAsyncRoot(\r\n  instance: ComponentInternalInstance,\r\n): ComponentInternalInstance | undefined {\r\n  const subComponent = instance.subTree.component\r\n  if (subComponent) {\r\n    if (subComponent.asyncDep && !subComponent.asyncResolved) {\r\n      return subComponent\r\n    } else {\r\n      return locateNonHydratedAsyncRoot(subComponent)\r\n    }\r\n  }\r\n}\r\n","import { type VNode, type VNodeChild, isVNode } from './vnode'\r\nimport {\r\n  EffectScope,\r\n  type ReactiveEffect,\r\n  TrackOpTypes,\r\n  isRef,\r\n  markRaw,\r\n  pauseTracking,\r\n  proxyRefs,\r\n  resetTracking,\r\n  shallowReadonly,\r\n  track,\r\n} from '@vue/reactivity'\r\nimport {\r\n  type ComponentPublicInstance,\r\n  type ComponentPublicInstanceConstructor,\r\n  PublicInstanceProxyHandlers,\r\n  RuntimeCompiledPublicInstanceProxyHandlers,\r\n  createDevRenderContext,\r\n  exposePropsOnRenderContext,\r\n  exposeSetupStateOnRenderContext,\r\n  publicPropertiesMap,\r\n} from './componentPublicInstance'\r\nimport {\r\n  type ComponentPropsOptions,\r\n  type NormalizedPropsOptions,\r\n  initProps,\r\n  normalizePropsOptions,\r\n} from './componentProps'\r\nimport {\r\n  type InternalSlots,\r\n  type Slots,\r\n  type SlotsType,\r\n  type UnwrapSlotsType,\r\n  initSlots,\r\n} from './componentSlots'\r\nimport { warn } from './warning'\r\nimport { ErrorCodes, callWithErrorHandling, handleError } from './errorHandling'\r\nimport {\r\n  type AppConfig,\r\n  type AppContext,\r\n  createAppContext,\r\n} from './apiCreateApp'\r\nimport { type Directive, validateDirectiveName } from './directives'\r\nimport {\r\n  type ComponentOptions,\r\n  type ComputedOptions,\r\n  type MethodOptions,\r\n  applyOptions,\r\n  resolveMergedOptions,\r\n} from './componentOptions'\r\nimport {\r\n  type EmitFn,\r\n  type EmitsOptions,\r\n  type EmitsToProps,\r\n  type ObjectEmitsOptions,\r\n  type ShortEmitsToObject,\r\n  emit,\r\n  normalizeEmitsOptions,\r\n} from './componentEmits'\r\nimport {\r\n  EMPTY_OBJ,\r\n  type IfAny,\r\n  NO,\r\n  NOOP,\r\n  ShapeFlags,\r\n  extend,\r\n  getGlobalThis,\r\n  isArray,\r\n  isFunction,\r\n  isObject,\r\n  isPromise,\r\n  makeMap,\r\n} from '@vue/shared'\r\nimport type { SuspenseBoundary } from './components/Suspense'\r\nimport type { CompilerOptions } from '@vue/compiler-core'\r\nimport { markAttrsAccessed } from './componentRenderUtils'\r\nimport { currentRenderingInstance } from './componentRenderContext'\r\nimport { endMeasure, startMeasure } from './profiling'\r\nimport { convertLegacyRenderFn } from './compat/renderFn'\r\nimport {\r\n  type CompatConfig,\r\n  globalCompatConfig,\r\n  validateCompatConfig,\r\n} from './compat/compatConfig'\r\nimport type { SchedulerJob } from './scheduler'\r\nimport type { LifecycleHooks } from './enums'\r\n\r\nexport type Data = Record<string, unknown>\r\n\r\n/**\r\n * Public utility type for extracting the instance type of a component.\r\n * Works with all valid component definition types. This is intended to replace\r\n * the usage of `InstanceType<typeof Comp>` which only works for\r\n * constructor-based component definition types.\r\n *\r\n * Exmaple:\r\n * ```ts\r\n * const MyComp = { ... }\r\n * declare const instance: ComponentInstance<typeof MyComp>\r\n * ```\r\n */\r\nexport type ComponentInstance<T> = T extends { new (): ComponentPublicInstance }\r\n  ? InstanceType<T>\r\n  : T extends FunctionalComponent<infer Props, infer Emits>\r\n    ? ComponentPublicInstance<Props, {}, {}, {}, {}, ShortEmitsToObject<Emits>>\r\n    : T extends Component<\r\n          infer Props,\r\n          infer RawBindings,\r\n          infer D,\r\n          infer C,\r\n          infer M\r\n        >\r\n      ? // NOTE we override Props/RawBindings/D to make sure is not `unknown`\r\n        ComponentPublicInstance<\r\n          unknown extends Props ? {} : Props,\r\n          unknown extends RawBindings ? {} : RawBindings,\r\n          unknown extends D ? {} : D,\r\n          C,\r\n          M\r\n        >\r\n      : never // not a vue Component\r\n\r\n/**\r\n * For extending allowed non-declared props on components in TSX\r\n */\r\nexport interface ComponentCustomProps {}\r\n\r\n/**\r\n * Default allowed non-declared props on component in TSX\r\n */\r\nexport interface AllowedComponentProps {\r\n  class?: unknown\r\n  style?: unknown\r\n}\r\n\r\n// Note: can't mark this whole interface internal because some public interfaces\r\n// extend it.\r\nexport interface ComponentInternalOptions {\r\n  /**\r\n   * @internal\r\n   */\r\n  __scopeId?: string\r\n  /**\r\n   * @internal\r\n   */\r\n  __cssModules?: Data\r\n  /**\r\n   * @internal\r\n   */\r\n  __hmrId?: string\r\n  /**\r\n   * Compat build only, for bailing out of certain compatibility behavior\r\n   */\r\n  __isBuiltIn?: boolean\r\n  /**\r\n   * This one should be exposed so that devtools can make use of it\r\n   */\r\n  __file?: string\r\n  /**\r\n   * name inferred from filename\r\n   */\r\n  __name?: string\r\n}\r\n\r\nexport interface FunctionalComponent<\r\n  P = {},\r\n  E extends EmitsOptions | Record<string, any[]> = {},\r\n  S extends Record<string, any> = any,\r\n  EE extends EmitsOptions = ShortEmitsToObject<E>,\r\n> extends ComponentInternalOptions {\r\n  // use of any here is intentional so it can be a valid JSX Element constructor\r\n  (\r\n    props: P & EmitsToProps<EE>,\r\n    ctx: Omit<SetupContext<EE, IfAny<S, {}, SlotsType<S>>>, 'expose'>,\r\n  ): any\r\n  props?: ComponentPropsOptions<P>\r\n  emits?: EE | (keyof EE)[]\r\n  slots?: IfAny<S, Slots, SlotsType<S>>\r\n  inheritAttrs?: boolean\r\n  displayName?: string\r\n  compatConfig?: CompatConfig\r\n}\r\n\r\nexport interface ClassComponent {\r\n  new (...args: any[]): ComponentPublicInstance<any, any, any, any, any>\r\n  __vccOpts: ComponentOptions\r\n}\r\n\r\n/**\r\n * Concrete component type matches its actual value: it's either an options\r\n * object, or a function. Use this where the code expects to work with actual\r\n * values, e.g. checking if its a function or not. This is mostly for internal\r\n * implementation code.\r\n */\r\nexport type ConcreteComponent<\r\n  Props = {},\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions,\r\n  E extends EmitsOptions | Record<string, any[]> = {},\r\n  S extends Record<string, any> = any,\r\n> =\r\n  | ComponentOptions<Props, RawBindings, D, C, M>\r\n  | FunctionalComponent<Props, E, S>\r\n\r\n/**\r\n * A type used in public APIs where a component type is expected.\r\n * The constructor type is an artificial type returned by defineComponent().\r\n */\r\nexport type Component<\r\n  Props = any,\r\n  RawBindings = any,\r\n  D = any,\r\n  C extends ComputedOptions = ComputedOptions,\r\n  M extends MethodOptions = MethodOptions,\r\n  E extends EmitsOptions | Record<string, any[]> = {},\r\n  S extends Record<string, any> = any,\r\n> =\r\n  | ConcreteComponent<Props, RawBindings, D, C, M, E, S>\r\n  | ComponentPublicInstanceConstructor<Props>\r\n\r\nexport type { ComponentOptions }\r\n\r\ntype LifecycleHook<TFn = Function> = TFn[] | null\r\n\r\n// use `E extends any` to force evaluating type to fix #2362\r\nexport type SetupContext<\r\n  E = EmitsOptions,\r\n  S extends SlotsType = {},\r\n> = E extends any\r\n  ? {\r\n      attrs: Data\r\n      slots: UnwrapSlotsType<S>\r\n      emit: EmitFn<E>\r\n      expose: (exposed?: Record<string, any>) => void\r\n    }\r\n  : never\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type InternalRenderFunction = {\r\n  (\r\n    ctx: ComponentPublicInstance,\r\n    cache: ComponentInternalInstance['renderCache'],\r\n    // for compiler-optimized bindings\r\n    $props: ComponentInternalInstance['props'],\r\n    $setup: ComponentInternalInstance['setupState'],\r\n    $data: ComponentInternalInstance['data'],\r\n    $options: ComponentInternalInstance['ctx'],\r\n  ): VNodeChild\r\n  _rc?: boolean // isRuntimeCompiled\r\n\r\n  // __COMPAT__ only\r\n  _compatChecked?: boolean // v3 and already checked for v2 compat\r\n  _compatWrapped?: boolean // is wrapped for v2 compat\r\n}\r\n\r\n/**\r\n * We expose a subset of properties on the internal instance as they are\r\n * useful for advanced external libraries and tools.\r\n */\r\nexport interface ComponentInternalInstance {\r\n  uid: number\r\n  type: ConcreteComponent\r\n  parent: ComponentInternalInstance | null\r\n  root: ComponentInternalInstance\r\n  appContext: AppContext\r\n  /**\r\n   * Vnode representing this component in its parent's vdom tree\r\n   */\r\n  vnode: VNode\r\n  /**\r\n   * The pending new vnode from parent updates\r\n   * @internal\r\n   */\r\n  next: VNode | null\r\n  /**\r\n   * Root vnode of this component's own vdom tree\r\n   */\r\n  subTree: VNode\r\n  /**\r\n   * Render effect instance\r\n   */\r\n  effect: ReactiveEffect\r\n  /**\r\n   * Bound effect runner to be passed to schedulers\r\n   */\r\n  update: SchedulerJob\r\n  /**\r\n   * The render function that returns vdom tree.\r\n   * @internal\r\n   */\r\n  render: InternalRenderFunction | null\r\n  /**\r\n   * SSR render function\r\n   * @internal\r\n   */\r\n  ssrRender?: Function | null\r\n  /**\r\n   * Object containing values this component provides for its descendants\r\n   * @internal\r\n   */\r\n  provides: Data\r\n  /**\r\n   * Tracking reactive effects (e.g. watchers) associated with this component\r\n   * so that they can be automatically stopped on component unmount\r\n   * @internal\r\n   */\r\n  scope: EffectScope\r\n  /**\r\n   * cache for proxy access type to avoid hasOwnProperty calls\r\n   * @internal\r\n   */\r\n  accessCache: Data | null\r\n  /**\r\n   * cache for render function values that rely on _ctx but won't need updates\r\n   * after initialized (e.g. inline handlers)\r\n   * @internal\r\n   */\r\n  renderCache: (Function | VNode)[]\r\n\r\n  /**\r\n   * Resolved component registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  components: Record<string, ConcreteComponent> | null\r\n  /**\r\n   * Resolved directive registry, only for components with mixins or extends\r\n   * @internal\r\n   */\r\n  directives: Record<string, Directive> | null\r\n  /**\r\n   * Resolved filters registry, v2 compat only\r\n   * @internal\r\n   */\r\n  filters?: Record<string, Function>\r\n  /**\r\n   * resolved props options\r\n   * @internal\r\n   */\r\n  propsOptions: NormalizedPropsOptions\r\n  /**\r\n   * resolved emits options\r\n   * @internal\r\n   */\r\n  emitsOptions: ObjectEmitsOptions | null\r\n  /**\r\n   * resolved inheritAttrs options\r\n   * @internal\r\n   */\r\n  inheritAttrs?: boolean\r\n  /**\r\n   * is custom element?\r\n   * @internal\r\n   */\r\n  isCE?: boolean\r\n  /**\r\n   * custom element specific HMR method\r\n   * @internal\r\n   */\r\n  ceReload?: (newStyles?: string[]) => void\r\n\r\n  // the rest are only for stateful components ---------------------------------\r\n\r\n  // main proxy that serves as the public instance (`this`)\r\n  proxy: ComponentPublicInstance | null\r\n\r\n  // exposed properties via expose()\r\n  exposed: Record<string, any> | null\r\n  exposeProxy: Record<string, any> | null\r\n\r\n  /**\r\n   * alternative proxy used only for runtime-compiled render functions using\r\n   * `with` block\r\n   * @internal\r\n   */\r\n  withProxy: ComponentPublicInstance | null\r\n  /**\r\n   * This is the target for the public instance proxy. It also holds properties\r\n   * injected by user options (computed, methods etc.) and user-attached\r\n   * custom properties (via `this.x = ...`)\r\n   * @internal\r\n   */\r\n  ctx: Data\r\n\r\n  // state\r\n  data: Data\r\n  props: Data\r\n  attrs: Data\r\n  slots: InternalSlots\r\n  refs: Data\r\n  emit: EmitFn\r\n\r\n  attrsProxy: Data | null\r\n  slotsProxy: Slots | null\r\n\r\n  /**\r\n   * used for keeping track of .once event handlers on components\r\n   * @internal\r\n   */\r\n  emitted: Record<string, boolean> | null\r\n  /**\r\n   * used for caching the value returned from props default factory functions to\r\n   * avoid unnecessary watcher trigger\r\n   * @internal\r\n   */\r\n  propsDefaults: Data\r\n  /**\r\n   * setup related\r\n   * @internal\r\n   */\r\n  setupState: Data\r\n  /**\r\n   * devtools access to additional info\r\n   * @internal\r\n   */\r\n  devtoolsRawSetupState?: any\r\n  /**\r\n   * @internal\r\n   */\r\n  setupContext: SetupContext | null\r\n\r\n  /**\r\n   * suspense related\r\n   * @internal\r\n   */\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * suspense pending batch id\r\n   * @internal\r\n   */\r\n  suspenseId: number\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncDep: Promise<any> | null\r\n  /**\r\n   * @internal\r\n   */\r\n  asyncResolved: boolean\r\n\r\n  // lifecycle\r\n  isMounted: boolean\r\n  isUnmounted: boolean\r\n  isDeactivated: boolean\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_CREATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.CREATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_MOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.MOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UPDATE]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UPDATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.BEFORE_UNMOUNT]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.UNMOUNTED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRACKED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.RENDER_TRIGGERED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.DEACTIVATED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.ERROR_CAPTURED]: LifecycleHook\r\n  /**\r\n   * @internal\r\n   */\r\n  [LifecycleHooks.SERVER_PREFETCH]: LifecycleHook<() => Promise<unknown>>\r\n\r\n  /**\r\n   * For caching bound $forceUpdate on public proxy access\r\n   * @internal\r\n   */\r\n  f?: () => void\r\n  /**\r\n   * For caching bound $nextTick on public proxy access\r\n   * @internal\r\n   */\r\n  n?: () => Promise<void>\r\n  /**\r\n   * `updateTeleportCssVars`\r\n   * For updating css vars on contained teleports\r\n   * @internal\r\n   */\r\n  ut?: (vars?: Record<string, string>) => void\r\n}\r\n\r\nconst emptyAppContext = createAppContext()\r\n\r\nlet uid = 0\r\n\r\nexport function createComponentInstance(\r\n  vnode: VNode,\r\n  parent: ComponentInternalInstance | null,\r\n  suspense: SuspenseBoundary | null,\r\n) {\r\n  const type = vnode.type as ConcreteComponent\r\n  // inherit parent app context - or - if root, adopt from root vnode\r\n  const appContext =\r\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\r\n\r\n  // 定义的组件（ConcreteComponent）--> 创建虚拟Dom（VNode，包含了context） --> 创建组件实例（包含type/vnode）\r\n  const instance: ComponentInternalInstance = {\r\n    uid: uid++, // 组件的唯一标识\r\n    vnode, // 虚拟dom\r\n    type, // 用户定义的组件\r\n    parent,\r\n    appContext,//全局的context上下文\r\n    root: null!, // to be immediately set\r\n    next: null,\r\n    subTree: null!, // will be set synchronously right after creation\r\n    effect: null!,\r\n    update: null!, // will be set synchronously right after creation\r\n    scope: new EffectScope(true /* detached */),\r\n    render: null,\r\n    proxy: null,\r\n    exposed: null,\r\n    exposeProxy: null,\r\n    withProxy: null,\r\n    provides: parent ? parent.provides : Object.create(appContext.provides),\r\n    accessCache: null!,\r\n    renderCache: [],\r\n\r\n    // local resolved assets\r\n    components: null,\r\n    directives: null,\r\n\r\n    // resolved props and emits options\r\n    propsOptions: normalizePropsOptions(type, appContext),\r\n    emitsOptions: normalizeEmitsOptions(type, appContext),\r\n\r\n    // emit\r\n    emit: null!, // to be set immediately\r\n    emitted: null,\r\n\r\n    // props default value\r\n    propsDefaults: EMPTY_OBJ,\r\n\r\n    // inheritAttrs\r\n    inheritAttrs: type.inheritAttrs,\r\n\r\n    // state\r\n    ctx: EMPTY_OBJ,\r\n    data: EMPTY_OBJ,\r\n    props: EMPTY_OBJ,\r\n    attrs: EMPTY_OBJ,\r\n    slots: EMPTY_OBJ,\r\n    refs: EMPTY_OBJ,\r\n    setupState: EMPTY_OBJ,\r\n    setupContext: null,\r\n\r\n    attrsProxy: null,\r\n    slotsProxy: null,\r\n\r\n    // suspense related\r\n    suspense,\r\n    suspenseId: suspense ? suspense.pendingId : 0,\r\n    asyncDep: null,\r\n    asyncResolved: false,\r\n\r\n    // lifecycle hooks\r\n    // not using enums here because it results in computed properties\r\n    isMounted: false,\r\n    isUnmounted: false,\r\n    isDeactivated: false,\r\n    bc: null,\r\n    c: null,\r\n    bm: null,\r\n    m: null,\r\n    bu: null,\r\n    u: null,\r\n    um: null,\r\n    bum: null,\r\n    da: null,\r\n    a: null,\r\n    rtg: null,\r\n    rtc: null,\r\n    ec: null,\r\n    sp: null,\r\n  }\r\n  // 将组件实例本身作为ctx字段的值存储起来\r\n  if (__DEV__) {\r\n    instance.ctx = createDevRenderContext(instance)\r\n  } else {\r\n    instance.ctx = { _: instance }\r\n  }\r\n  instance.root = parent ? parent.root : instance\r\n  instance.emit = emit.bind(null, instance)\r\n\r\n  // apply custom element special handling\r\n  if (vnode.ce) {\r\n    vnode.ce(instance)\r\n  }\r\n\r\n  return instance\r\n}\r\n\r\nexport let currentInstance: ComponentInternalInstance | null = null\r\n\r\nexport const getCurrentInstance: () => ComponentInternalInstance | null = () =>\r\n  currentInstance || currentRenderingInstance\r\n\r\nlet internalSetCurrentInstance: (\r\n  instance: ComponentInternalInstance | null,\r\n) => void\r\nlet setInSSRSetupState: (state: boolean) => void\r\n\r\n/**\r\n * The following makes getCurrentInstance() usage across multiple copies of Vue\r\n * work. Some cases of how this can happen are summarized in #7590. In principle\r\n * the duplication should be avoided, but in practice there are often cases\r\n * where the user is unable to resolve on their own, especially in complicated\r\n * SSR setups.\r\n *\r\n * Note this fix is technically incomplete, as we still rely on other singletons\r\n * for effectScope and global reactive dependency maps. However, it does make\r\n * some of the most common cases work. It also warns if the duplication is\r\n * found during browser execution.\r\n */\r\nif (__SSR__) {\r\n  type Setter = (v: any) => void\r\n  const g = getGlobalThis()\r\n  const registerGlobalSetter = (key: string, setter: Setter) => {\r\n    let setters: Setter[]\r\n    if (!(setters = g[key])) setters = g[key] = []\r\n    setters.push(setter)\r\n    return (v: any) => {\r\n      if (setters.length > 1) setters.forEach(set => set(v))\r\n      else setters[0](v)\r\n    }\r\n  }\r\n  internalSetCurrentInstance = registerGlobalSetter(\r\n    `__VUE_INSTANCE_SETTERS__`,\r\n    v => (currentInstance = v),\r\n  )\r\n  // also make `isInSSRComponentSetup` sharable across copies of Vue.\r\n  // this is needed in the SFC playground when SSRing async components, since\r\n  // we have to load both the runtime and the server-renderer from CDNs, they\r\n  // contain duplicated copies of Vue runtime code.\r\n  setInSSRSetupState = registerGlobalSetter(\r\n    `__VUE_SSR_SETTERS__`,\r\n    v => (isInSSRComponentSetup = v),\r\n  )\r\n} else {\r\n  internalSetCurrentInstance = i => {\r\n    currentInstance = i\r\n  }\r\n  setInSSRSetupState = v => {\r\n    isInSSRComponentSetup = v\r\n  }\r\n}\r\n\r\nexport const setCurrentInstance = (instance: ComponentInternalInstance) => {\r\n  const prev = currentInstance\r\n  internalSetCurrentInstance(instance)\r\n  instance.scope.on()\r\n  return () => {\r\n    instance.scope.off()\r\n    internalSetCurrentInstance(prev)\r\n  }\r\n}\r\n\r\nexport const unsetCurrentInstance = () => {\r\n  currentInstance && currentInstance.scope.off()\r\n  internalSetCurrentInstance(null)\r\n}\r\n\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component')\r\n\r\nexport function validateComponentName(name: string, config: AppConfig) {\r\n  const appIsNativeTag = config.isNativeTag || NO\r\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n    warn(\r\n      'Do not use built-in or reserved HTML elements as component id: ' + name,\r\n    )\r\n  }\r\n}\r\n\r\nexport function isStatefulComponent(instance: ComponentInternalInstance) {\r\n  return instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT\r\n}\r\n\r\nexport let isInSSRComponentSetup = false\r\n\r\nexport function setupComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR = false,\r\n) {\r\n  isSSR && setInSSRSetupState(isSSR)\r\n\r\n  const { props, children } = instance.vnode\r\n  // 是否是一个有状态的组件\r\n  const isStateful = isStatefulComponent(instance)\r\n  initProps(instance, props, isStateful, isSSR)\r\n  initSlots(instance, children)\r\n\r\n  const setupResult = isStateful\r\n    ? setupStatefulComponent(instance, isSSR)\r\n    : undefined\r\n\r\n  isSSR && setInSSRSetupState(false)\r\n  return setupResult\r\n}\r\n\r\nfunction setupStatefulComponent(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean,\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__DEV__) {\r\n    if (Component.name) {\r\n      validateComponentName(Component.name, instance.appContext.config)\r\n    }\r\n    if (Component.components) {\r\n      const names = Object.keys(Component.components)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateComponentName(names[i], instance.appContext.config)\r\n      }\r\n    }\r\n    if (Component.directives) {\r\n      const names = Object.keys(Component.directives)\r\n      for (let i = 0; i < names.length; i++) {\r\n        validateDirectiveName(names[i])\r\n      }\r\n    }\r\n    if (Component.compilerOptions && isRuntimeOnly()) {\r\n      warn(\r\n        `\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n          `includes the runtime compiler. Since you are using a runtime-only ` +\r\n          `build, the options should be passed via your build tool config instead.`,\r\n      )\r\n    }\r\n  }\r\n  // 0. create render proxy property access cache\r\n  // 组件的属性访问缓存\r\n  instance.accessCache = Object.create(null)\r\n  // 1. create public instance / render proxy\r\n  // also mark it raw so it's never observed\r\n  /**\r\n   * 给ctx创建一个代理对象，并标识为非响应式，赋值给proxy字段\r\n   * 代理的处理对象为PublicInstanceProxyHandlers\r\n   */\r\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers))\r\n  if (__DEV__) {\r\n    exposePropsOnRenderContext(instance)\r\n  }\r\n  // 2. call setup()\r\n  const { setup } = Component\r\n  // 如果存在setup函数就调用setup函数\r\n  if (setup) {\r\n    const setupContext = (instance.setupContext =\r\n      setup.length > 1 ? createSetupContext(instance) : null)\r\n\r\n    const reset = setCurrentInstance(instance)\r\n    pauseTracking()\r\n    const setupResult = callWithErrorHandling(\r\n      setup,\r\n      instance,\r\n      ErrorCodes.SETUP_FUNCTION,\r\n      [\r\n        __DEV__ ? shallowReadonly(instance.props) : instance.props,\r\n        setupContext,\r\n      ],\r\n    )\r\n    resetTracking()\r\n    reset()\r\n\r\n    if (isPromise(setupResult)) {\r\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance)\r\n      if (isSSR) {\r\n        // return the promise so server-renderer can wait on it\r\n        return setupResult\r\n          .then((resolvedResult: unknown) => {\r\n            handleSetupResult(instance, resolvedResult, isSSR)\r\n          })\r\n          .catch(e => {\r\n            handleError(e, instance, ErrorCodes.SETUP_FUNCTION)\r\n          })\r\n      } else if (__FEATURE_SUSPENSE__) {\r\n        // async setup returned Promise.\r\n        // bail here and wait for re-entry.\r\n        instance.asyncDep = setupResult\r\n        if (__DEV__ && !instance.suspense) {\r\n          const name = Component.name ?? 'Anonymous'\r\n          warn(\r\n            `Component <${name}>: setup function returned a promise, but no ` +\r\n              `<Suspense> boundary was found in the parent component tree. ` +\r\n              `A component with async setup() must be nested in a <Suspense> ` +\r\n              `in order to be rendered.`,\r\n          )\r\n        }\r\n      } else if (__DEV__) {\r\n        warn(\r\n          `setup() returned a Promise, but the version of Vue you are using ` +\r\n            `does not support it yet.`,\r\n        )\r\n      }\r\n    } else {\r\n      handleSetupResult(instance, setupResult, isSSR)\r\n    }\r\n  } else {\r\n    finishComponentSetup(instance, isSSR)\r\n  }\r\n}\r\n\r\nexport function handleSetupResult(\r\n  instance: ComponentInternalInstance,\r\n  setupResult: unknown,\r\n  isSSR: boolean,\r\n) {\r\n  if (isFunction(setupResult)) {\r\n    // setup returned an inline render function\r\n    if (__SSR__ && (instance.type as ComponentOptions).__ssrInlineRender) {\r\n      // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n      // set it as ssrRender instead.\r\n      instance.ssrRender = setupResult\r\n    } else {\r\n      instance.render = setupResult as InternalRenderFunction\r\n    }\r\n  } else if (isObject(setupResult)) {\r\n    if (__DEV__ && isVNode(setupResult)) {\r\n      warn(\r\n        `setup() should not return VNodes directly - ` +\r\n          `return a render function instead.`,\r\n      )\r\n    }\r\n    // setup returned bindings.\r\n    // assuming a render function compiled from template is present.\r\n    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {\r\n      instance.devtoolsRawSetupState = setupResult\r\n    }\r\n    instance.setupState = proxyRefs(setupResult)\r\n    if (__DEV__) {\r\n      exposeSetupStateOnRenderContext(instance)\r\n    }\r\n  } else if (__DEV__ && setupResult !== undefined) {\r\n    warn(\r\n      `setup() should return an object. Received: ${\r\n        setupResult === null ? 'null' : typeof setupResult\r\n      }`,\r\n    )\r\n  }\r\n  finishComponentSetup(instance, isSSR)\r\n}\r\n\r\ntype CompileFunction = (\r\n  template: string | object,\r\n  options?: CompilerOptions,\r\n) => InternalRenderFunction\r\n\r\nlet compile: CompileFunction | undefined\r\nlet installWithProxy: (i: ComponentInternalInstance) => void\r\n\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nexport function registerRuntimeCompiler(_compile: any) {\r\n  compile = _compile\r\n  installWithProxy = i => {\r\n    if (i.render!._rc) {\r\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers)\r\n    }\r\n  }\r\n}\r\n\r\n// dev only\r\nexport const isRuntimeOnly = () => !compile\r\n\r\n/**\r\n * 先执行组件的setup方法，然后判断组件是否有render函数，如果没有render函数，通过template构建render函数\r\n * \r\n */\r\nexport function finishComponentSetup(\r\n  instance: ComponentInternalInstance,\r\n  isSSR: boolean,\r\n  skipOptions?: boolean,\r\n) {\r\n  const Component = instance.type as ComponentOptions\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyRenderFn(instance)\r\n\r\n    if (__DEV__ && Component.compatConfig) {\r\n      validateCompatConfig(Component.compatConfig)\r\n    }\r\n  }\r\n\r\n  // template / render function normalization\r\n  // could be already set when returned from setup()\r\n  if (!instance.render) {\r\n    // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\r\n    // is done by server-renderer\r\n    if (!isSSR && compile && !Component.render) {\r\n      const template =\r\n        (__COMPAT__ &&\r\n          instance.vnode.props &&\r\n          instance.vnode.props['inline-template']) ||\r\n        Component.template ||\r\n        resolveMergedOptions(instance).template\r\n      if (template) {\r\n        if (__DEV__) {\r\n          startMeasure(instance, `compile`)\r\n        }\r\n        const { isCustomElement, compilerOptions } = instance.appContext.config\r\n        const { delimiters, compilerOptions: componentCompilerOptions } =\r\n          Component\r\n        const finalCompilerOptions: CompilerOptions = extend(\r\n          extend(\r\n            {\r\n              isCustomElement,\r\n              delimiters,\r\n            },\r\n            compilerOptions,\r\n          ),\r\n          componentCompilerOptions,\r\n        )\r\n        if (__COMPAT__) {\r\n          // pass runtime compat config into the compiler\r\n          finalCompilerOptions.compatConfig = Object.create(globalCompatConfig)\r\n          if (Component.compatConfig) {\r\n            // @ts-expect-error types are not compatible\r\n            extend(finalCompilerOptions.compatConfig, Component.compatConfig)\r\n          }\r\n        }\r\n        /**\r\n         * 生成render渲染函数\r\n         * 如果template是dom元素，就取dom元素的innerHtml\r\n         * 如果是dom元素的id，就取该dom元素的innerHtml\r\n         * 最后生成render函数\r\n         */\r\n        Component.render = compile(template, finalCompilerOptions)\r\n        if (__DEV__) {\r\n          endMeasure(instance, `compile`)\r\n        }\r\n      }\r\n    }\r\n\r\n    instance.render = (Component.render || NOOP) as InternalRenderFunction\r\n\r\n    // for runtime-compiled render functions using `with` blocks, the render\r\n    // proxy used needs a different `has` handler which is more performant and\r\n    // also only allows a whitelist of globals to fallthrough.\r\n    if (installWithProxy) {\r\n      installWithProxy(instance)\r\n    }\r\n  }\r\n\r\n  // support for 2.x options\r\n  if (__FEATURE_OPTIONS_API__ && !(__COMPAT__ && skipOptions)) {\r\n    const reset = setCurrentInstance(instance)\r\n    pauseTracking()\r\n    try {\r\n      applyOptions(instance)\r\n    } finally {\r\n      resetTracking()\r\n      reset()\r\n    }\r\n  }\r\n\r\n  // warn missing template/render\r\n  // the runtime compilation of template in SSR is done by server-render\r\n  if (__DEV__ && !Component.render && instance.render === NOOP && !isSSR) {\r\n    /* istanbul ignore if */\r\n    if (!compile && Component.template) {\r\n      warn(\r\n        `Component provided template option but ` +\r\n          `runtime compilation is not supported in this build of Vue.` +\r\n          (__ESM_BUNDLER__\r\n            ? ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n            : __ESM_BROWSER__\r\n              ? ` Use \"vue.esm-browser.js\" instead.`\r\n              : __GLOBAL__\r\n                ? ` Use \"vue.global.js\" instead.`\r\n                : ``) /* should not happen */,\r\n      )\r\n    } else {\r\n      warn(`Component is missing template or render function.`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction getAttrsProxy(instance: ComponentInternalInstance): Data {\r\n  return (\r\n    instance.attrsProxy ||\r\n    (instance.attrsProxy = new Proxy(\r\n      instance.attrs,\r\n      __DEV__\r\n        ? {\r\n            get(target, key: string) {\r\n              markAttrsAccessed()\r\n              track(instance, TrackOpTypes.GET, '$attrs')\r\n              return target[key]\r\n            },\r\n            set() {\r\n              warn(`setupContext.attrs is readonly.`)\r\n              return false\r\n            },\r\n            deleteProperty() {\r\n              warn(`setupContext.attrs is readonly.`)\r\n              return false\r\n            },\r\n          }\r\n        : {\r\n            get(target, key: string) {\r\n              track(instance, TrackOpTypes.GET, '$attrs')\r\n              return target[key]\r\n            },\r\n          },\r\n    ))\r\n  )\r\n}\r\n\r\n/**\r\n * Dev-only\r\n */\r\nfunction getSlotsProxy(instance: ComponentInternalInstance): Slots {\r\n  return (\r\n    instance.slotsProxy ||\r\n    (instance.slotsProxy = new Proxy(instance.slots, {\r\n      get(target, key: string) {\r\n        track(instance, TrackOpTypes.GET, '$slots')\r\n        return target[key]\r\n      },\r\n    }))\r\n  )\r\n}\r\n\r\nexport function createSetupContext(\r\n  instance: ComponentInternalInstance,\r\n): SetupContext {\r\n  const expose: SetupContext['expose'] = exposed => {\r\n    if (__DEV__) {\r\n      if (instance.exposed) {\r\n        warn(`expose() should be called only once per setup().`)\r\n      }\r\n      if (exposed != null) {\r\n        let exposedType: string = typeof exposed\r\n        if (exposedType === 'object') {\r\n          if (isArray(exposed)) {\r\n            exposedType = 'array'\r\n          } else if (isRef(exposed)) {\r\n            exposedType = 'ref'\r\n          }\r\n        }\r\n        if (exposedType !== 'object') {\r\n          warn(\r\n            `expose() should be passed a plain object, received ${exposedType}.`,\r\n          )\r\n        }\r\n      }\r\n    }\r\n    instance.exposed = exposed || {}\r\n  }\r\n\r\n  if (__DEV__) {\r\n    // We use getters in dev in case libs like test-utils overwrite instance\r\n    // properties (overwrites should not be done in prod)\r\n    return Object.freeze({\r\n      get attrs() {\r\n        return getAttrsProxy(instance)\r\n      },\r\n      get slots() {\r\n        return getSlotsProxy(instance)\r\n      },\r\n      get emit() {\r\n        return (event: string, ...args: any[]) => instance.emit(event, ...args)\r\n      },\r\n      expose,\r\n    })\r\n  } else {\r\n    return {\r\n      get attrs() {\r\n        return getAttrsProxy(instance)\r\n      },\r\n      slots: instance.slots,\r\n      emit: instance.emit,\r\n      expose,\r\n    }\r\n  }\r\n}\r\n\r\nexport function getExposeProxy(instance: ComponentInternalInstance) {\r\n  if (instance.exposed) {\r\n    return (\r\n      instance.exposeProxy ||\r\n      (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n        get(target, key: string) {\r\n          if (key in target) {\r\n            return target[key]\r\n          } else if (key in publicPropertiesMap) {\r\n            return publicPropertiesMap[key](instance)\r\n          }\r\n        },\r\n        has(target, key: string) {\r\n          return key in target || key in publicPropertiesMap\r\n        },\r\n      }))\r\n    )\r\n  }\r\n}\r\n\r\nconst classifyRE = /(?:^|[-_])(\\w)/g\r\nconst classify = (str: string): string =>\r\n  str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '')\r\n\r\nexport function getComponentName(\r\n  Component: ConcreteComponent,\r\n  includeInferred = true,\r\n): string | false | undefined {\r\n  return isFunction(Component)\r\n    ? Component.displayName || Component.name\r\n    : Component.name || (includeInferred && Component.__name)\r\n}\r\n\r\n/* istanbul ignore next */\r\nexport function formatComponentName(\r\n  instance: ComponentInternalInstance | null,\r\n  Component: ConcreteComponent,\r\n  isRoot = false,\r\n): string {\r\n  let name = getComponentName(Component)\r\n  if (!name && Component.__file) {\r\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/)\r\n    if (match) {\r\n      name = match[1]\r\n    }\r\n  }\r\n\r\n  if (!name && instance && instance.parent) {\r\n    // try to infer the name based on reverse resolution\r\n    const inferFromRegistry = (registry: Record<string, any> | undefined) => {\r\n      for (const key in registry) {\r\n        if (registry[key] === Component) {\r\n          return key\r\n        }\r\n      }\r\n    }\r\n    name =\r\n      inferFromRegistry(\r\n        instance.components ||\r\n          (instance.parent.type as ComponentOptions).components,\r\n      ) || inferFromRegistry(instance.appContext.components)\r\n  }\r\n\r\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`\r\n}\r\n\r\nexport function isClassComponent(value: unknown): value is ClassComponent {\r\n  return isFunction(value) && '__vccOpts' in value\r\n}\r\n","import type { ComponentInternalInstance } from '../component'\r\nimport type { SuspenseBoundary } from './Suspense'\r\nimport {\r\n  type ElementNamespace,\r\n  MoveType,\r\n  type RendererElement,\r\n  type RendererInternals,\r\n  type RendererNode,\r\n  type RendererOptions,\r\n  traverseStaticChildren,\r\n} from '../renderer'\r\nimport type { VNode, VNodeArrayChildren, VNodeProps } from '../vnode'\r\nimport { ShapeFlags, isString } from '@vue/shared'\r\nimport { warn } from '../warning'\r\nimport { isHmrUpdating } from '../hmr'\r\n\r\nexport type TeleportVNode = VNode<RendererNode, RendererElement, TeleportProps>\r\n\r\nexport interface TeleportProps {\r\n  to: string | RendererElement | null | undefined\r\n  disabled?: boolean\r\n}\r\n\r\nexport const isTeleport = (type: any): boolean => type.__isTeleport\r\n\r\nconst isTeleportDisabled = (props: VNode['props']): boolean =>\r\n  props && (props.disabled || props.disabled === '')\r\n\r\nconst isTargetSVG = (target: RendererElement): boolean =>\r\n  typeof SVGElement !== 'undefined' && target instanceof SVGElement\r\n\r\nconst isTargetMathML = (target: RendererElement): boolean =>\r\n  typeof MathMLElement === 'function' && target instanceof MathMLElement\r\n\r\nconst resolveTarget = <T = RendererElement>(\r\n  props: TeleportProps | null,\r\n  select: RendererOptions['querySelector'],\r\n): T | null => {\r\n  const targetSelector = props && props.to\r\n  if (isString(targetSelector)) {\r\n    if (!select) {\r\n      __DEV__ &&\r\n        warn(\r\n          `Current renderer does not support string target for Teleports. ` +\r\n            `(missing querySelector renderer option)`,\r\n        )\r\n      return null\r\n    } else {\r\n      const target = select(targetSelector)\r\n      if (!target) {\r\n        __DEV__ &&\r\n          warn(\r\n            `Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n              `Note the target element must exist before the component is mounted - ` +\r\n              `i.e. the target cannot be rendered by the component itself, and ` +\r\n              `ideally should be outside of the entire Vue component tree.`,\r\n          )\r\n      }\r\n      return target as T\r\n    }\r\n  } else {\r\n    if (__DEV__ && !targetSelector && !isTeleportDisabled(props)) {\r\n      warn(`Invalid Teleport target: ${targetSelector}`)\r\n    }\r\n    return targetSelector as T\r\n  }\r\n}\r\n\r\nexport const TeleportImpl = {\r\n  name: 'Teleport',\r\n  __isTeleport: true,\r\n  process(\r\n    n1: TeleportVNode | null,\r\n    n2: TeleportVNode,\r\n    container: RendererElement,\r\n    anchor: RendererNode | null,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    namespace: ElementNamespace,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n    internals: RendererInternals,\r\n  ) {\r\n    const {\r\n      mc: mountChildren,\r\n      pc: patchChildren,\r\n      pbc: patchBlockChildren,\r\n      o: { insert, querySelector, createText, createComment },\r\n    } = internals\r\n\r\n    const disabled = isTeleportDisabled(n2.props)\r\n    let { shapeFlag, children, dynamicChildren } = n2\r\n\r\n    // #3302\r\n    // HMR updated, force full diff\r\n    if (__DEV__ && isHmrUpdating) {\r\n      optimized = false\r\n      dynamicChildren = null\r\n    }\r\n\r\n    if (n1 == null) {\r\n      // insert anchors in the main view\r\n      const placeholder = (n2.el = __DEV__\r\n        ? createComment('teleport start')\r\n        : createText(''))\r\n      const mainAnchor = (n2.anchor = __DEV__\r\n        ? createComment('teleport end')\r\n        : createText(''))\r\n      insert(placeholder, container, anchor)\r\n      insert(mainAnchor, container, anchor)\r\n      const target = (n2.target = resolveTarget(n2.props, querySelector))\r\n      const targetAnchor = (n2.targetAnchor = createText(''))\r\n      if (target) {\r\n        insert(targetAnchor, target)\r\n        // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n        if (namespace === 'svg' || isTargetSVG(target)) {\r\n          namespace = 'svg'\r\n        } else if (namespace === 'mathml' || isTargetMathML(target)) {\r\n          namespace = 'mathml'\r\n        }\r\n      } else if (__DEV__ && !disabled) {\r\n        warn('Invalid Teleport target on mount:', target, `(${typeof target})`)\r\n      }\r\n\r\n      const mount = (container: RendererElement, anchor: RendererNode) => {\r\n        // Teleport *always* has Array children. This is enforced in both the\r\n        // compiler and vnode children normalization.\r\n        if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n          mountChildren(\r\n            children as VNodeArrayChildren,\r\n            container,\r\n            anchor,\r\n            parentComponent,\r\n            parentSuspense,\r\n            namespace,\r\n            slotScopeIds,\r\n            optimized,\r\n          )\r\n        }\r\n      }\r\n\r\n      if (disabled) {\r\n        mount(container, mainAnchor)\r\n      } else if (target) {\r\n        mount(target, targetAnchor)\r\n      }\r\n    } else {\r\n      // update content\r\n      n2.el = n1.el\r\n      const mainAnchor = (n2.anchor = n1.anchor)!\r\n      const target = (n2.target = n1.target)!\r\n      const targetAnchor = (n2.targetAnchor = n1.targetAnchor)!\r\n      const wasDisabled = isTeleportDisabled(n1.props)\r\n      const currentContainer = wasDisabled ? container : target\r\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor\r\n\r\n      if (namespace === 'svg' || isTargetSVG(target)) {\r\n        namespace = 'svg'\r\n      } else if (namespace === 'mathml' || isTargetMathML(target)) {\r\n        namespace = 'mathml'\r\n      }\r\n\r\n      if (dynamicChildren) {\r\n        // fast path when the teleport happens to be a block root\r\n        patchBlockChildren(\r\n          n1.dynamicChildren!,\r\n          dynamicChildren,\r\n          currentContainer,\r\n          parentComponent,\r\n          parentSuspense,\r\n          namespace,\r\n          slotScopeIds,\r\n        )\r\n        // even in block tree mode we need to make sure all root-level nodes\r\n        // in the teleport inherit previous DOM references so that they can\r\n        // be moved in future patches.\r\n        traverseStaticChildren(n1, n2, true)\r\n      } else if (!optimized) {\r\n        patchChildren(\r\n          n1,\r\n          n2,\r\n          currentContainer,\r\n          currentAnchor,\r\n          parentComponent,\r\n          parentSuspense,\r\n          namespace,\r\n          slotScopeIds,\r\n          false,\r\n        )\r\n      }\r\n\r\n      if (disabled) {\r\n        if (!wasDisabled) {\r\n          // enabled -> disabled\r\n          // move into main container\r\n          moveTeleport(\r\n            n2,\r\n            container,\r\n            mainAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE,\r\n          )\r\n        } else {\r\n          // #7835\r\n          // When `teleport` is disabled, `to` may change, making it always old,\r\n          // to ensure the correct `to` when enabled\r\n          if (n2.props && n1.props && n2.props.to !== n1.props.to) {\r\n            n2.props.to = n1.props.to\r\n          }\r\n        }\r\n      } else {\r\n        // target changed\r\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n          const nextTarget = (n2.target = resolveTarget(\r\n            n2.props,\r\n            querySelector,\r\n          ))\r\n          if (nextTarget) {\r\n            moveTeleport(\r\n              n2,\r\n              nextTarget,\r\n              null,\r\n              internals,\r\n              TeleportMoveTypes.TARGET_CHANGE,\r\n            )\r\n          } else if (__DEV__) {\r\n            warn(\r\n              'Invalid Teleport target on update:',\r\n              target,\r\n              `(${typeof target})`,\r\n            )\r\n          }\r\n        } else if (wasDisabled) {\r\n          // disabled -> enabled\r\n          // move into teleport target\r\n          moveTeleport(\r\n            n2,\r\n            target,\r\n            targetAnchor,\r\n            internals,\r\n            TeleportMoveTypes.TOGGLE,\r\n          )\r\n        }\r\n      }\r\n    }\r\n\r\n    updateCssVars(n2)\r\n  },\r\n\r\n  remove(\r\n    vnode: VNode,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    optimized: boolean,\r\n    { um: unmount, o: { remove: hostRemove } }: RendererInternals,\r\n    doRemove: boolean,\r\n  ) {\r\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode\r\n\r\n    if (target) {\r\n      hostRemove(targetAnchor!)\r\n    }\r\n\r\n    // an unmounted teleport should always unmount its children whether it's disabled or not\r\n    doRemove && hostRemove(anchor!)\r\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      const shouldRemove = doRemove || !isTeleportDisabled(props)\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        const child = (children as VNode[])[i]\r\n        unmount(\r\n          child,\r\n          parentComponent,\r\n          parentSuspense,\r\n          shouldRemove,\r\n          !!child.dynamicChildren,\r\n        )\r\n      }\r\n    }\r\n  },\r\n\r\n  move: moveTeleport,\r\n  hydrate: hydrateTeleport,\r\n}\r\n\r\nexport enum TeleportMoveTypes {\r\n  TARGET_CHANGE,\r\n  TOGGLE, // enable / disable\r\n  REORDER, // moved in the main view\r\n}\r\n\r\nfunction moveTeleport(\r\n  vnode: VNode,\r\n  container: RendererElement,\r\n  parentAnchor: RendererNode | null,\r\n  { o: { insert }, m: move }: RendererInternals,\r\n  moveType: TeleportMoveTypes = TeleportMoveTypes.REORDER,\r\n) {\r\n  // move target anchor if this is a target change.\r\n  if (moveType === TeleportMoveTypes.TARGET_CHANGE) {\r\n    insert(vnode.targetAnchor!, container, parentAnchor)\r\n  }\r\n  const { el, anchor, shapeFlag, children, props } = vnode\r\n  const isReorder = moveType === TeleportMoveTypes.REORDER\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(el!, container, parentAnchor)\r\n  }\r\n  // if this is a re-order and teleport is enabled (content is in target)\r\n  // do not move children. So the opposite is: only move children if this\r\n  // is not a reorder, or the teleport is disabled\r\n  if (!isReorder || isTeleportDisabled(props)) {\r\n    // Teleport has either Array children or no children.\r\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      for (let i = 0; i < (children as VNode[]).length; i++) {\r\n        move(\r\n          (children as VNode[])[i],\r\n          container,\r\n          parentAnchor,\r\n          MoveType.REORDER,\r\n        )\r\n      }\r\n    }\r\n  }\r\n  // move main view anchor if this is a re-order.\r\n  if (isReorder) {\r\n    insert(anchor!, container, parentAnchor)\r\n  }\r\n}\r\n\r\ninterface TeleportTargetElement extends Element {\r\n  // last teleport target\r\n  _lpa?: Node | null\r\n}\r\n\r\nfunction hydrateTeleport(\r\n  node: Node,\r\n  vnode: TeleportVNode,\r\n  parentComponent: ComponentInternalInstance | null,\r\n  parentSuspense: SuspenseBoundary | null,\r\n  slotScopeIds: string[] | null,\r\n  optimized: boolean,\r\n  {\r\n    o: { nextSibling, parentNode, querySelector },\r\n  }: RendererInternals<Node, Element>,\r\n  hydrateChildren: (\r\n    node: Node | null,\r\n    vnode: VNode,\r\n    container: Element,\r\n    parentComponent: ComponentInternalInstance | null,\r\n    parentSuspense: SuspenseBoundary | null,\r\n    slotScopeIds: string[] | null,\r\n    optimized: boolean,\r\n  ) => Node | null,\r\n): Node | null {\r\n  const target = (vnode.target = resolveTarget<Element>(\r\n    vnode.props,\r\n    querySelector,\r\n  ))\r\n  if (target) {\r\n    // if multiple teleports rendered to the same target element, we need to\r\n    // pick up from where the last teleport finished instead of the first node\r\n    const targetNode =\r\n      (target as TeleportTargetElement)._lpa || target.firstChild\r\n    if (vnode.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n      if (isTeleportDisabled(vnode.props)) {\r\n        vnode.anchor = hydrateChildren(\r\n          nextSibling(node),\r\n          vnode,\r\n          parentNode(node)!,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n        vnode.targetAnchor = targetNode\r\n      } else {\r\n        vnode.anchor = nextSibling(node)\r\n\r\n        // lookahead until we find the target anchor\r\n        // we cannot rely on return value of hydrateChildren() because there\r\n        // could be nested teleports\r\n        let targetAnchor = targetNode\r\n        while (targetAnchor) {\r\n          targetAnchor = nextSibling(targetAnchor)\r\n          if (\r\n            targetAnchor &&\r\n            targetAnchor.nodeType === 8 &&\r\n            (targetAnchor as Comment).data === 'teleport anchor'\r\n          ) {\r\n            vnode.targetAnchor = targetAnchor\r\n            ;(target as TeleportTargetElement)._lpa =\r\n              vnode.targetAnchor && nextSibling(vnode.targetAnchor as Node)\r\n            break\r\n          }\r\n        }\r\n\r\n        hydrateChildren(\r\n          targetNode,\r\n          vnode,\r\n          target,\r\n          parentComponent,\r\n          parentSuspense,\r\n          slotScopeIds,\r\n          optimized,\r\n        )\r\n      }\r\n    }\r\n    updateCssVars(vnode)\r\n  }\r\n  return vnode.anchor && nextSibling(vnode.anchor as Node)\r\n}\r\n\r\n// Force-casted public typing for h and TSX props inference\r\nexport const Teleport = TeleportImpl as unknown as {\r\n  __isTeleport: true\r\n  new (): {\r\n    $props: VNodeProps & TeleportProps\r\n    $slots: {\r\n      default(): VNode[]\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateCssVars(vnode: VNode) {\r\n  // presence of .ut method indicates owner component uses css vars.\r\n  // code path here can assume browser environment.\r\n  const ctx = vnode.ctx\r\n  if (ctx && ctx.ut) {\r\n    let node = (vnode.children as VNode[])[0].el!\r\n    while (node && node !== vnode.targetAnchor) {\r\n      if (node.nodeType === 1) node.setAttribute('data-v-owner', ctx.uid)\r\n      node = node.nextSibling\r\n    }\r\n    ctx.ut()\r\n  }\r\n}\r\n","import {\r\n  EMPTY_ARR,\r\n  PatchFlags,\r\n  ShapeFlags,\r\n  SlotFlags,\r\n  extend,\r\n  isArray,\r\n  isFunction,\r\n  isObject,\r\n  isOn,\r\n  isString,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n} from '@vue/shared'\r\nimport {\r\n  type ClassComponent,\r\n  type Component,\r\n  type ComponentInternalInstance,\r\n  type ConcreteComponent,\r\n  type Data,\r\n  isClassComponent,\r\n} from './component'\r\nimport type { RawSlots } from './componentSlots'\r\nimport {\r\n  type ReactiveFlags,\r\n  type Ref,\r\n  isProxy,\r\n  isRef,\r\n  toRaw,\r\n} from '@vue/reactivity'\r\nimport type { AppContext } from './apiCreateApp'\r\nimport {\r\n  type Suspense,\r\n  type SuspenseBoundary,\r\n  type SuspenseImpl,\r\n  isSuspense,\r\n} from './components/Suspense'\r\nimport type { DirectiveBinding } from './directives'\r\nimport type { TransitionHooks } from './components/BaseTransition'\r\nimport { warn } from './warning'\r\nimport {\r\n  type Teleport,\r\n  type TeleportImpl,\r\n  isTeleport,\r\n} from './components/Teleport'\r\nimport {\r\n  currentRenderingInstance,\r\n  currentScopeId,\r\n} from './componentRenderContext'\r\nimport type { RendererElement, RendererNode } from './renderer'\r\nimport { NULL_DYNAMIC_COMPONENT } from './helpers/resolveAssets'\r\nimport { hmrDirtyComponents } from './hmr'\r\nimport { convertLegacyComponent } from './compat/component'\r\nimport { convertLegacyVModelProps } from './compat/componentVModel'\r\nimport { defineLegacyVNodeProperties } from './compat/renderFn'\r\nimport { ErrorCodes, callWithAsyncErrorHandling } from './errorHandling'\r\nimport type { ComponentPublicInstance } from './componentPublicInstance'\r\n\r\nexport const Fragment = Symbol.for('v-fgt') as any as {\r\n  __isFragment: true\r\n  new (): {\r\n    $props: VNodeProps\r\n  }\r\n}\r\nexport const Text = Symbol.for('v-txt')\r\nexport const Comment = Symbol.for('v-cmt')\r\nexport const Static = Symbol.for('v-stc')\r\n\r\nexport type VNodeTypes =\r\n  | string\r\n  | VNode\r\n  | Component\r\n  | typeof Text\r\n  | typeof Static\r\n  | typeof Comment\r\n  | typeof Fragment\r\n  | typeof Teleport\r\n  | typeof TeleportImpl\r\n  | typeof Suspense\r\n  | typeof SuspenseImpl\r\n\r\nexport type VNodeRef =\r\n  | string\r\n  | Ref\r\n  | ((\r\n      ref: Element | ComponentPublicInstance | null,\r\n      refs: Record<string, any>,\r\n    ) => void)\r\n\r\nexport type VNodeNormalizedRefAtom = {\r\n  i: ComponentInternalInstance\r\n  r: VNodeRef\r\n  k?: string // setup ref key\r\n  f?: boolean // refInFor marker\r\n}\r\n\r\nexport type VNodeNormalizedRef =\r\n  | VNodeNormalizedRefAtom\r\n  | VNodeNormalizedRefAtom[]\r\n\r\ntype VNodeMountHook = (vnode: VNode) => void\r\ntype VNodeUpdateHook = (vnode: VNode, oldVNode: VNode) => void\r\nexport type VNodeHook =\r\n  | VNodeMountHook\r\n  | VNodeUpdateHook\r\n  | VNodeMountHook[]\r\n  | VNodeUpdateHook[]\r\n\r\n// https://github.com/microsoft/TypeScript/issues/33099\r\nexport type VNodeProps = {\r\n  key?: string | number | symbol\r\n  ref?: VNodeRef\r\n  ref_for?: boolean\r\n  ref_key?: string\r\n\r\n  // vnode hooks\r\n  onVnodeBeforeMount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeMounted?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeBeforeUpdate?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeUpdated?: VNodeUpdateHook | VNodeUpdateHook[]\r\n  onVnodeBeforeUnmount?: VNodeMountHook | VNodeMountHook[]\r\n  onVnodeUnmounted?: VNodeMountHook | VNodeMountHook[]\r\n}\r\n\r\ntype VNodeChildAtom =\r\n  | VNode\r\n  | string\r\n  | number\r\n  | boolean\r\n  | null\r\n  | undefined\r\n  | void\r\n\r\nexport type VNodeArrayChildren = Array<VNodeArrayChildren | VNodeChildAtom>\r\n\r\nexport type VNodeChild = VNodeChildAtom | VNodeArrayChildren\r\n\r\nexport type VNodeNormalizedChildren =\r\n  | string\r\n  | VNodeArrayChildren\r\n  | RawSlots\r\n  | null\r\n\r\nexport interface VNode<\r\n  HostNode = RendererNode,\r\n  HostElement = RendererElement,\r\n  ExtraProps = { [key: string]: any },\r\n> {\r\n  /**\r\n   * @internal\r\n   */\r\n  __v_isVNode: true\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  [ReactiveFlags.SKIP]: true\r\n  // 表示 VNode 的类型，可以是组件类型、原生 HTML 标签类型、注释节点、文本节点等; 区分不同类型的 VNode，在后续渲染或更新时采用不同的处理逻辑。\r\n  type: VNodeTypes\r\n  // 表示与该 VNode 相关的属性或特性，类似于 HTML 元素的属性； 包含传递给组件或元素的各种属性（例如 class、style、自定义属性等），这些属性会在渲染时应用到真实 DOM 或组件实例上。\r\n  props: (VNodeProps & ExtraProps) | null\r\n  // 表示 VNode 的唯一标识，用于优化 diff 算法。 在 VNode 的更新过程中，key 用于判断哪些节点需要被更新、移动或删除。拥有 key 的 VNode 可以更高效地进行节点复用。\r\n  key: string | number | symbol | null\r\n  ref: VNodeNormalizedRef | null\r\n  /**\r\n   * SFC only. This is assigned on vnode creation using currentScopeId\r\n   * which is set alongside currentRenderingInstance.\r\n   */\r\n  // 表示与 VNode 关联的作用域 ID。 在使用 `scoped` 样式时，这个 ID 会被附加到元素上，以确保样式作用范围正确。\r\n  scopeId: string | null\r\n  /**\r\n   * SFC only. This is assigned to:\r\n   * - Slot fragment vnodes with :slotted SFC styles.\r\n   * - Component vnodes (during patch/hydration) so that its root node can\r\n   *   inherit the component's slotScopeIds\r\n   * @internal\r\n   */\r\n  /**\r\n   * 当使用 scoped slots（作用域插槽）时，父组件会将数据传递给子组件的插槽。slotScopeIds 用于跟踪这些插槽的作用域 ID，以便在渲染时正确地处理这些插槽。Vue 通过这些 ID 来确保作用域插槽能够正确地绑定到合适的上下文。\r\n   */\r\n  slotScopeIds: string[] | null\r\n  // 表示当前 VNode 的子节点，可以是数组、文本或 null。   描述子元素的 VNode，如果有子元素，这个字段会包含这些子元素的 VNode 列表，文本节点则直接以字符串形式表示。\r\n  children: VNodeNormalizedChildren\r\n  // 表示如果 VNode 是一个组件，该字段会存储组件实例。  用于管理组件的生命周期和状态，例如在 VNode 更新时，可能会通过这个字段访问组件实例并进行相应的更新操作。 \r\n  component: ComponentInternalInstance | null\r\n  // 存储与 VNode 关联的指令列表   当 VNode 被挂载或更新时，这些指令会被调用来执行相应的逻辑\r\n  dirs: DirectiveBinding[] | null\r\n  // 与 VNode 关联的过渡效果信息。  如果 VNode 包含过渡效果，这个字段会存储相关的配置和状态，用于在元素进入或离开时执行动画。\r\n  transition: TransitionHooks<HostElement> | null\r\n\r\n  // 表示与 VNode 对应的真实 DOM 元素。  在 VNode 被挂载后，此字段会指向对应的真实 DOM 元素，用于后续的更新或操作。\r\n  el: HostNode | null\r\n  anchor: HostNode | null // fragment anchor\r\n  target: HostElement | null // teleport target\r\n  targetAnchor: HostNode | null // teleport target anchor\r\n  /**\r\n   * number of elements contained in a static vnode\r\n   * @internal\r\n   */\r\n  staticCount: number\r\n\r\n  // suspense\r\n  suspense: SuspenseBoundary | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssContent: VNode | null\r\n  /**\r\n   * @internal\r\n   */\r\n  ssFallback: VNode | null\r\n\r\n  // optimization only\r\n  //表示 VNode 的类型标志（flag），通过位运算标记 VNode 是元素、组件、文本等不同类型。  在 VNode 的处理过程中，用来快速判断和区分不同类型的 VNode，以决定如何处理该节点。\r\n  shapeFlag: number\r\n  // 表示 VNode 的优化标志，用于指示哪些部分在更新时可能会发生变化。  通过该标志，Vue 可以在更新时跳过不必要的 diff 计算，直接更新有变化的部分，从而提升性能。\r\n  patchFlag: number\r\n  /**\r\n   * @internal\r\n   * 在 Vue 3 中，VNode 中的属性可以是静态的或动态的。静态属性是不会在后续渲染中发生变化的，而动态属性则可能随数据变化而变化。dynamicProps 用于标记那些在后续更新中可能会发生变化的属性，这样 Vue 就可以有选择性地更新这些属性，而不是整个 VNode，从而提高渲染性能\r\n   */\r\n  dynamicProps: string[] | null\r\n  /**\r\n   * @internal\r\n   * dynamicChildren 用于标记那些包含动态内容的子节点。与 dynamicProps 类似，dynamicChildren 帮助 Vue 优化更新流程。Vue 会优先更新这些动态子节点，而不是整个子节点树，这样可以减少不必要的 DOM 操作，提高渲染效率。\r\n   */\r\n  dynamicChildren: VNode[] | null\r\n\r\n  // application root node only\r\n  appContext: AppContext | null\r\n\r\n  /**\r\n   * @internal lexical scope owner instance\r\n   */\r\n  // 存储与 VNode 相关的上下文对象。  通常用于存储渲染上下文，如当前的组件实例等。\r\n  ctx: ComponentInternalInstance | null\r\n\r\n  /**\r\n   * @internal attached by v-memo\r\n   * memo 属性是 Vue 3 中的一种优化手段，通过缓存和复用 VNode，避免不必要的重新渲染，以提升性能。它主要与 v-memo 指令配合使用，用于指示 Vue 仅在特定条件变化时更新节点。\r\n   */\r\n  memo?: any[]\r\n  /**\r\n   * @internal __COMPAT__ only\r\n   */\r\n  isCompatRoot?: true\r\n  /**\r\n   * @internal custom element interception hook\r\n   */\r\n  ce?: (instance: ComponentInternalInstance) => void\r\n}\r\n\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nexport const blockStack: (VNode[] | null)[] = []\r\nexport let currentBlock: VNode[] | null = null\r\n\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nexport function openBlock(disableTracking = false) {\r\n  blockStack.push((currentBlock = disableTracking ? null : []))\r\n}\r\n\r\nexport function closeBlock() {\r\n  blockStack.pop()\r\n  currentBlock = blockStack[blockStack.length - 1] || null\r\n}\r\n\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nexport let isBlockTreeEnabled = 1\r\n\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nexport function setBlockTracking(value: number) {\r\n  isBlockTreeEnabled += value\r\n}\r\n\r\nfunction setupBlock(vnode: VNode) {\r\n  // save current block children on the block vnode\r\n  vnode.dynamicChildren =\r\n    isBlockTreeEnabled > 0 ? currentBlock || (EMPTY_ARR as any) : null\r\n  // close block\r\n  closeBlock()\r\n  // a block is always going to be patched, so track it as a child of its\r\n  // parent block\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(vnode)\r\n  }\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createElementBlock(\r\n  type: string | typeof Fragment,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[],\r\n  shapeFlag?: number,\r\n) {\r\n  return setupBlock(\r\n    createBaseVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      shapeFlag,\r\n      true /* isBlock */,\r\n    ),\r\n  )\r\n}\r\n\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nexport function createBlock(\r\n  type: VNodeTypes | ClassComponent,\r\n  props?: Record<string, any> | null,\r\n  children?: any,\r\n  patchFlag?: number,\r\n  dynamicProps?: string[],\r\n): VNode {\r\n  return setupBlock(\r\n    createVNode(\r\n      type,\r\n      props,\r\n      children,\r\n      patchFlag,\r\n      dynamicProps,\r\n      true /* isBlock: prevent a block from tracking itself */,\r\n    ),\r\n  )\r\n}\r\n\r\nexport function isVNode(value: any): value is VNode {\r\n  return value ? value.__v_isVNode === true : false\r\n}\r\n\r\nexport function isSameVNodeType(n1: VNode, n2: VNode): boolean {\r\n  if (\r\n    __DEV__ &&\r\n    n2.shapeFlag & ShapeFlags.COMPONENT &&\r\n    hmrDirtyComponents.has(n2.type as ConcreteComponent)\r\n  ) {\r\n    // #7042, ensure the vnode being unmounted during HMR\r\n    // bitwise operations to remove keep alive flags\r\n    n1.shapeFlag &= ~ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE\r\n    n2.shapeFlag &= ~ShapeFlags.COMPONENT_KEPT_ALIVE\r\n    // HMR only: if the component has been hot-updated, force a reload.\r\n    return false\r\n  }\r\n  return n1.type === n2.type && n1.key === n2.key\r\n}\r\n\r\nlet vnodeArgsTransformer:\r\n  | ((\r\n      args: Parameters<typeof _createVNode>,\r\n      instance: ComponentInternalInstance | null,\r\n    ) => Parameters<typeof _createVNode>)\r\n  | undefined\r\n\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nexport function transformVNodeArgs(transformer?: typeof vnodeArgsTransformer) {\r\n  vnodeArgsTransformer = transformer\r\n}\r\n\r\nconst createVNodeWithArgsTransform = (\r\n  ...args: Parameters<typeof _createVNode>\r\n): VNode => {\r\n  return _createVNode(\r\n    ...(vnodeArgsTransformer\r\n      ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n      : args),\r\n  )\r\n}\r\n\r\nexport const InternalObjectKey = `__vInternal`\r\n\r\nconst normalizeKey = ({ key }: VNodeProps): VNode['key'] =>\r\n  key != null ? key : null\r\n\r\nconst normalizeRef = ({\r\n  ref,\r\n  ref_key,\r\n  ref_for,\r\n}: VNodeProps): VNodeNormalizedRefAtom | null => {\r\n  if (typeof ref === 'number') {\r\n    ref = '' + ref\r\n  }\r\n  return (\r\n    ref != null\r\n      ? isString(ref) || isRef(ref) || isFunction(ref)\r\n        ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\r\n        : ref\r\n      : null\r\n  ) as any\r\n}\r\n\r\nfunction createBaseVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag = 0,\r\n  dynamicProps: string[] | null = null,\r\n  shapeFlag = type === Fragment ? 0 : ShapeFlags.ELEMENT,\r\n  isBlockNode = false,\r\n  needFullChildrenNormalization = false,\r\n) {\r\n  const vnode = {\r\n    __v_isVNode: true, // 标识是一个VNode\r\n    __v_skip: true, // 标识在渲染过程中是否跳过该VNode，用于优化过程\r\n    type,\r\n    props, // 标识节点的各种属性\r\n    key: props && normalizeKey(props), // 节点的唯一标识，用于优化DOM更新\r\n    ref: props && normalizeRef(props), // 节点的引用，可以是字符串或者函数\r\n    scopeId: currentScopeId, // 表示节点的作用域ID，用于样式隔离\r\n    slotScopeIds: null, // 表示节点的插槽作用域ID\r\n    children, // 表示节点的子节点，可以是字符串、VNode对象或者VNode数组\r\n    component: null, // 表示节点对应的组件实例\r\n    suspense: null,\r\n    ssContent: null,\r\n    ssFallback: null,\r\n    dirs: null,\r\n    transition: null,\r\n    el: null,\r\n    anchor: null,\r\n    target: null,\r\n    targetAnchor: null,\r\n    staticCount: 0,\r\n    shapeFlag,\r\n    patchFlag,\r\n    dynamicProps,\r\n    dynamicChildren: null,\r\n    appContext: null,\r\n    ctx: currentRenderingInstance,\r\n  } as VNode\r\n\r\n  if (needFullChildrenNormalization) {\r\n    normalizeChildren(vnode, children)\r\n    // normalize suspense children\r\n    if (__FEATURE_SUSPENSE__ && shapeFlag & ShapeFlags.SUSPENSE) {\r\n      ;(type as typeof SuspenseImpl).normalize(vnode)\r\n    }\r\n  } else if (children) {\r\n    // compiled element vnode - if children is passed, only possible types are\r\n    // string or Array.\r\n    vnode.shapeFlag |= isString(children)\r\n      ? ShapeFlags.TEXT_CHILDREN\r\n      : ShapeFlags.ARRAY_CHILDREN\r\n  }\r\n\r\n  // validate key\r\n  if (__DEV__ && vnode.key !== vnode.key) {\r\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type)\r\n  }\r\n\r\n  // track vnode for block tree\r\n  if (\r\n    isBlockTreeEnabled > 0 &&\r\n    // avoid a block node from tracking itself\r\n    !isBlockNode &&\r\n    // has current parent block\r\n    currentBlock &&\r\n    // presence of a patch flag indicates this node needs patching on updates.\r\n    // component nodes also should always be patched, because even if the\r\n    // component doesn't need to update, it needs to persist the instance on to\r\n    // the next vnode so that it can be properly unmounted later.\r\n    (vnode.patchFlag > 0 || shapeFlag & ShapeFlags.COMPONENT) &&\r\n    // the EVENTS flag is only for hydration and if it is the only flag, the\r\n    // vnode should not be considered dynamic due to handler caching.\r\n    vnode.patchFlag !== PatchFlags.NEED_HYDRATION\r\n  ) {\r\n    currentBlock.push(vnode)\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    convertLegacyVModelProps(vnode)\r\n    defineLegacyVNodeProperties(vnode)\r\n  }\r\n\r\n  return vnode\r\n}\r\n\r\nexport { createBaseVNode as createElementVNode }\r\n\r\nexport const createVNode = (\r\n  __DEV__ ? createVNodeWithArgsTransform : _createVNode // 提供了扩展的接口，可以给用户自己定义转换创建虚拟dom节点\r\n) as typeof _createVNode\r\n\r\nfunction _createVNode(\r\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\r\n  props: (Data & VNodeProps) | null = null,\r\n  children: unknown = null,\r\n  patchFlag: number = 0,\r\n  dynamicProps: string[] | null = null,\r\n  isBlockNode = false,\r\n): VNode {\r\n  /**\r\n   * NULL_DYNAMIC_COMPONENT表示动态组件的空值\r\n   */\r\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n    if (__DEV__ && !type) {\r\n      warn(`Invalid vnode type when creating vnode: ${type}.`)\r\n    }\r\n    type = Comment\r\n  }\r\n\r\n  if (isVNode(type)) {\r\n    // createVNode receiving an existing vnode. This happens in cases like\r\n    // <component :is=\"vnode\"/>\r\n    // #2078 make sure to merge refs during the clone instead of overwriting it\r\n    const cloned = cloneVNode(type, props, true /* mergeRef: true */)\r\n    if (children) {\r\n      normalizeChildren(cloned, children)\r\n    }\r\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\r\n      if (cloned.shapeFlag & ShapeFlags.COMPONENT) {\r\n        currentBlock[currentBlock.indexOf(type)] = cloned\r\n      } else {\r\n        currentBlock.push(cloned)\r\n      }\r\n    }\r\n    cloned.patchFlag |= PatchFlags.BAIL\r\n    return cloned\r\n  }\r\n\r\n  // class component normalization.\r\n  if (isClassComponent(type)) {\r\n    type = type.__vccOpts\r\n  }\r\n\r\n  // 2.x async/functional component compat\r\n  if (__COMPAT__) {\r\n    type = convertLegacyComponent(type, currentRenderingInstance)\r\n  }\r\n\r\n  // class & style normalization.\r\n  if (props) {\r\n    // for reactive or proxy objects, we need to clone it to enable mutation.\r\n    /**\r\n     * 这个函数的目的是确保在组件内部使用 props 对象时不会直接修改原始的属性，以确保数据的稳定性和可预测性\r\n     */\r\n    props = guardReactiveProps(props)!\r\n    let { class: klass, style } = props\r\n    if (klass && !isString(klass)) {\r\n      /**\r\n       * class可以是如下形式\r\n       * 'text-center, search'\r\n       * {search: true, 'text-center': true }\r\n       * ['text-center', 'search', {'filename': true }]\r\n       */\r\n      props.class = normalizeClass(klass)\r\n    }\r\n    if (isObject(style)) {\r\n      // reactive state objects need to be cloned since they are likely to be\r\n      // mutated\r\n      if (isProxy(style) && !isArray(style)) {\r\n        style = extend({}, style)\r\n      }\r\n      props.style = normalizeStyle(style)\r\n    }\r\n  }\r\n\r\n  // encode the vnode type information into a bitmap\r\n  // 获取组件的类型\r\n  const shapeFlag = isString(type)\r\n    ? ShapeFlags.ELEMENT\r\n    : __FEATURE_SUSPENSE__ && isSuspense(type)\r\n      ? ShapeFlags.SUSPENSE\r\n      : isTeleport(type)\r\n        ? ShapeFlags.TELEPORT\r\n        : isObject(type)\r\n          ? ShapeFlags.STATEFUL_COMPONENT\r\n          : isFunction(type)\r\n            ? ShapeFlags.FUNCTIONAL_COMPONENT\r\n            : 0\r\n\r\n  if (__DEV__ && shapeFlag & ShapeFlags.STATEFUL_COMPONENT && isProxy(type)) {\r\n    type = toRaw(type)\r\n    warn(\r\n      `Vue received a Component that was made a reactive object. This can ` +\r\n        `lead to unnecessary performance overhead and should be avoided by ` +\r\n        `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n        `instead of \\`ref\\`.`,\r\n      `\\nComponent that was made reactive: `,\r\n      type,\r\n    )\r\n  }\r\n\r\n  return createBaseVNode(\r\n    type,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    shapeFlag,\r\n    isBlockNode,\r\n    true,\r\n  )\r\n}\r\n\r\nexport function guardReactiveProps(props: (Data & VNodeProps) | null) {\r\n  if (!props) return null\r\n  return isProxy(props) || InternalObjectKey in props\r\n    ? extend({}, props)\r\n    : props\r\n}\r\n\r\nexport function cloneVNode<T, U>(\r\n  vnode: VNode<T, U>,\r\n  extraProps?: (Data & VNodeProps) | null,\r\n  mergeRef = false,\r\n): VNode<T, U> {\r\n  // This is intentionally NOT using spread or extend to avoid the runtime\r\n  // key enumeration cost.\r\n  const { props, ref, patchFlag, children } = vnode\r\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props\r\n  const cloned: VNode<T, U> = {\r\n    __v_isVNode: true,\r\n    __v_skip: true,\r\n    type: vnode.type,\r\n    props: mergedProps,\r\n    key: mergedProps && normalizeKey(mergedProps),\r\n    ref:\r\n      extraProps && extraProps.ref\r\n        ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n          // if the vnode itself already has a ref, cloneVNode will need to merge\r\n          // the refs so the single vnode can be set on multiple refs\r\n          mergeRef && ref\r\n          ? isArray(ref)\r\n            ? ref.concat(normalizeRef(extraProps)!)\r\n            : [ref, normalizeRef(extraProps)!]\r\n          : normalizeRef(extraProps)\r\n        : ref,\r\n    scopeId: vnode.scopeId,\r\n    slotScopeIds: vnode.slotScopeIds,\r\n    children:\r\n      __DEV__ && patchFlag === PatchFlags.HOISTED && isArray(children)\r\n        ? (children as VNode[]).map(deepCloneVNode)\r\n        : children,\r\n    target: vnode.target,\r\n    targetAnchor: vnode.targetAnchor,\r\n    staticCount: vnode.staticCount,\r\n    shapeFlag: vnode.shapeFlag,\r\n    // if the vnode is cloned with extra props, we can no longer assume its\r\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n    // note: preserve flag for fragments since they use the flag for children\r\n    // fast paths only.\r\n    patchFlag:\r\n      extraProps && vnode.type !== Fragment\r\n        ? patchFlag === PatchFlags.HOISTED // hoisted node\r\n          ? PatchFlags.FULL_PROPS\r\n          : patchFlag | PatchFlags.FULL_PROPS\r\n        : patchFlag,\r\n    dynamicProps: vnode.dynamicProps,\r\n    dynamicChildren: vnode.dynamicChildren,\r\n    appContext: vnode.appContext,\r\n    dirs: vnode.dirs,\r\n    transition: vnode.transition,\r\n\r\n    // These should technically only be non-null on mounted VNodes. However,\r\n    // they *should* be copied for kept-alive vnodes. So we just always copy\r\n    // them since them being non-null during a mount doesn't affect the logic as\r\n    // they will simply be overwritten.\r\n    component: vnode.component,\r\n    suspense: vnode.suspense,\r\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n    el: vnode.el,\r\n    anchor: vnode.anchor,\r\n    ctx: vnode.ctx,\r\n    ce: vnode.ce,\r\n  }\r\n  if (__COMPAT__) {\r\n    defineLegacyVNodeProperties(cloned as VNode)\r\n  }\r\n  return cloned\r\n}\r\n\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode: VNode): VNode {\r\n  const cloned = cloneVNode(vnode)\r\n  if (isArray(vnode.children)) {\r\n    cloned.children = (vnode.children as VNode[]).map(deepCloneVNode)\r\n  }\r\n  return cloned\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createTextVNode(text: string = ' ', flag: number = 0): VNode {\r\n  return createVNode(Text, null, text, flag)\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createStaticVNode(\r\n  content: string,\r\n  numberOfNodes: number,\r\n): VNode {\r\n  // A static vnode can contain multiple stringified elements, and the number\r\n  // of elements is necessary for hydration.\r\n  const vnode = createVNode(Static, null, content)\r\n  vnode.staticCount = numberOfNodes\r\n  return vnode\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function createCommentVNode(\r\n  text: string = '',\r\n  // when used as the v-else branch, the comment node must be created as a\r\n  // block to ensure correct updates.\r\n  asBlock: boolean = false,\r\n): VNode {\r\n  return asBlock\r\n    ? (openBlock(), createBlock(Comment, null, text))\r\n    : createVNode(Comment, null, text)\r\n}\r\n\r\nexport function normalizeVNode(child: VNodeChild): VNode {\r\n  if (child == null || typeof child === 'boolean') {\r\n    // empty placeholder\r\n    return createVNode(Comment)\r\n  } else if (isArray(child)) {\r\n    // fragment\r\n    return createVNode(\r\n      Fragment,\r\n      null,\r\n      // #3666, avoid reference pollution when reusing vnode\r\n      child.slice(),\r\n    )\r\n  } else if (typeof child === 'object') {\r\n    // already vnode, this should be the most common since compiled templates\r\n    // always produce all-vnode children arrays\r\n    return cloneIfMounted(child)\r\n  } else {\r\n    // strings and numbers\r\n    return createVNode(Text, null, String(child))\r\n  }\r\n}\r\n\r\n// optimized normalization for template-compiled render fns\r\nexport function cloneIfMounted(child: VNode): VNode {\r\n  return (child.el === null && child.patchFlag !== PatchFlags.HOISTED) ||\r\n    child.memo\r\n    ? child\r\n    : cloneVNode(child)\r\n}\r\n\r\nexport function normalizeChildren(vnode: VNode, children: unknown) {\r\n  let type = 0\r\n  const { shapeFlag } = vnode\r\n  if (children == null) {\r\n    children = null\r\n  } else if (isArray(children)) {\r\n    type = ShapeFlags.ARRAY_CHILDREN\r\n  } else if (typeof children === 'object') {\r\n    if (shapeFlag & (ShapeFlags.ELEMENT | ShapeFlags.TELEPORT)) {\r\n      // Normalize slot to plain children for plain element and Teleport\r\n      const slot = (children as any).default\r\n      if (slot) {\r\n        // _c marker is added by withCtx() indicating this is a compiled slot\r\n        slot._c && (slot._d = false)\r\n        normalizeChildren(vnode, slot())\r\n        slot._c && (slot._d = true)\r\n      }\r\n      return\r\n    } else {\r\n      type = ShapeFlags.SLOTS_CHILDREN\r\n      const slotFlag = (children as RawSlots)._\r\n      if (!slotFlag && !(InternalObjectKey in children!)) {\r\n        // if slots are not normalized, attach context instance\r\n        // (compiled / normalized slots already have context)\r\n        ;(children as RawSlots)._ctx = currentRenderingInstance\r\n      } else if (slotFlag === SlotFlags.FORWARDED && currentRenderingInstance) {\r\n        // a child component receives forwarded slots from the parent.\r\n        // its slot type is determined by its parent's slot type.\r\n        if (\r\n          (currentRenderingInstance.slots as RawSlots)._ === SlotFlags.STABLE\r\n        ) {\r\n          ;(children as RawSlots)._ = SlotFlags.STABLE\r\n        } else {\r\n          ;(children as RawSlots)._ = SlotFlags.DYNAMIC\r\n          vnode.patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      }\r\n    }\r\n  } else if (isFunction(children)) {\r\n    children = { default: children, _ctx: currentRenderingInstance }\r\n    type = ShapeFlags.SLOTS_CHILDREN\r\n  } else {\r\n    children = String(children)\r\n    // force teleport children to array so it can be moved around\r\n    if (shapeFlag & ShapeFlags.TELEPORT) {\r\n      type = ShapeFlags.ARRAY_CHILDREN\r\n      children = [createTextVNode(children as string)]\r\n    } else {\r\n      type = ShapeFlags.TEXT_CHILDREN\r\n    }\r\n  }\r\n  vnode.children = children as VNodeNormalizedChildren\r\n  vnode.shapeFlag |= type\r\n}\r\n\r\nexport function mergeProps(...args: (Data & VNodeProps)[]) {\r\n  const ret: Data = {}\r\n  for (let i = 0; i < args.length; i++) {\r\n    const toMerge = args[i]\r\n    for (const key in toMerge) {\r\n      if (key === 'class') {\r\n        if (ret.class !== toMerge.class) {\r\n          ret.class = normalizeClass([ret.class, toMerge.class])\r\n        }\r\n      } else if (key === 'style') {\r\n        ret.style = normalizeStyle([ret.style, toMerge.style])\r\n      } else if (isOn(key)) {\r\n        const existing = ret[key]\r\n        const incoming = toMerge[key]\r\n        if (\r\n          incoming &&\r\n          existing !== incoming &&\r\n          !(isArray(existing) && existing.includes(incoming))\r\n        ) {\r\n          ret[key] = existing\r\n            ? [].concat(existing as any, incoming as any)\r\n            : incoming\r\n        }\r\n      } else if (key !== '') {\r\n        ret[key] = toMerge[key]\r\n      }\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function invokeVNodeHook(\r\n  hook: VNodeHook,\r\n  instance: ComponentInternalInstance | null,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null = null,\r\n) {\r\n  callWithAsyncErrorHandling(hook, instance, ErrorCodes.VNODE_HOOK, [\r\n    vnode,\r\n    prevVNode,\r\n  ])\r\n}\r\n","import { computed as _computed } from '@vue/reactivity'\r\nimport { isInSSRComponentSetup } from './component'\r\n\r\nexport const computed: typeof _computed = (\r\n  getterOrOptions: any,\r\n  debugOptions?: any,\r\n) => {\r\n  // @ts-expect-error\r\n  return _computed(getterOrOptions, debugOptions, isInSSRComponentSetup)\r\n}\r\n","import {\r\n  type Comment,\r\n  type Fragment,\r\n  type Text,\r\n  type VNode,\r\n  type VNodeArrayChildren,\r\n  type VNodeProps,\r\n  createVNode,\r\n  isVNode,\r\n} from './vnode'\r\nimport type { Teleport, TeleportProps } from './components/Teleport'\r\nimport type { Suspense, SuspenseProps } from './components/Suspense'\r\nimport { type IfAny, isArray, isObject } from '@vue/shared'\r\nimport type { RawSlots } from './componentSlots'\r\nimport type {\r\n  Component,\r\n  ComponentOptions,\r\n  ConcreteComponent,\r\n  FunctionalComponent,\r\n} from './component'\r\nimport type { EmitsOptions } from './componentEmits'\r\nimport type { DefineComponent } from './apiDefineComponent'\r\n\r\n// `h` is a more user-friendly version of `createVNode` that allows omitting the\r\n// props when possible. It is intended for manually written render functions.\r\n// Compiler-generated code uses `createVNode` because\r\n// 1. it is monomorphic and avoids the extra call overhead\r\n// 2. it allows specifying patchFlags for optimization\r\n\r\n/*\r\n// type only\r\nh('div')\r\n\r\n// type + props\r\nh('div', {})\r\n\r\n// type + omit props + children\r\n// Omit props does NOT support named slots\r\nh('div', []) // array\r\nh('div', 'foo') // text\r\nh('div', h('br')) // vnode\r\nh(Component, () => {}) // default slot\r\n\r\n// type + props + children\r\nh('div', {}, []) // array\r\nh('div', {}, 'foo') // text\r\nh('div', {}, h('br')) // vnode\r\nh(Component, {}, () => {}) // default slot\r\nh(Component, {}, {}) // named slots\r\n\r\n// named slots without props requires explicit `null` to avoid ambiguity\r\nh(Component, null, {})\r\n**/\r\n\r\ntype RawProps = VNodeProps & {\r\n  // used to differ from a single VNode object as children\r\n  __v_isVNode?: never\r\n  // used to differ from Array children\r\n  [Symbol.iterator]?: never\r\n} & Record<string, any>\r\n\r\ntype RawChildren =\r\n  | string\r\n  | number\r\n  | boolean\r\n  | VNode\r\n  | VNodeArrayChildren\r\n  | (() => any)\r\n\r\n// fake constructor type returned from `defineComponent`\r\ninterface Constructor<P = any> {\r\n  __isFragment?: never\r\n  __isTeleport?: never\r\n  __isSuspense?: never\r\n  new (...args: any[]): { $props: P }\r\n}\r\n\r\ntype HTMLElementEventHandler = {\r\n  [K in keyof HTMLElementEventMap as `on${Capitalize<K>}`]?: (\r\n    ev: HTMLElementEventMap[K],\r\n  ) => any\r\n}\r\n\r\n// The following is a series of overloads for providing props validation of\r\n// manually written render functions.\r\n\r\n// element\r\nexport function h<K extends keyof HTMLElementTagNameMap>(\r\n  type: K,\r\n  children?: RawChildren,\r\n): VNode\r\nexport function h<K extends keyof HTMLElementTagNameMap>(\r\n  type: K,\r\n  props?: (RawProps & HTMLElementEventHandler) | null,\r\n  children?: RawChildren | RawSlots,\r\n): VNode\r\n\r\n// custom element\r\nexport function h(type: string, children?: RawChildren): VNode\r\nexport function h(\r\n  type: string,\r\n  props?: RawProps | null,\r\n  children?: RawChildren | RawSlots,\r\n): VNode\r\n\r\n// text/comment\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  children?: string | number | boolean,\r\n): VNode\r\nexport function h(\r\n  type: typeof Text | typeof Comment,\r\n  props?: null,\r\n  children?: string | number | boolean,\r\n): VNode\r\n// fragment\r\nexport function h(type: typeof Fragment, children?: VNodeArrayChildren): VNode\r\nexport function h(\r\n  type: typeof Fragment,\r\n  props?: RawProps | null,\r\n  children?: VNodeArrayChildren,\r\n): VNode\r\n\r\n// teleport (target prop is required)\r\nexport function h(\r\n  type: typeof Teleport,\r\n  props: RawProps & TeleportProps,\r\n  children: RawChildren | RawSlots,\r\n): VNode\r\n\r\n// suspense\r\nexport function h(type: typeof Suspense, children?: RawChildren): VNode\r\nexport function h(\r\n  type: typeof Suspense,\r\n  props?: (RawProps & SuspenseProps) | null,\r\n  children?: RawChildren | RawSlots,\r\n): VNode\r\n\r\n// functional component\r\nexport function h<\r\n  P,\r\n  E extends EmitsOptions = {},\r\n  S extends Record<string, any> = any,\r\n>(\r\n  type: FunctionalComponent<P, any, S, any>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | IfAny<S, RawSlots, S>,\r\n): VNode\r\n\r\n// catch-all for generic component types\r\nexport function h(type: Component, children?: RawChildren): VNode\r\n\r\n// concrete component\r\nexport function h<P>(\r\n  type: ConcreteComponent | string,\r\n  children?: RawChildren,\r\n): VNode\r\nexport function h<P>(\r\n  type: ConcreteComponent<P> | string,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren,\r\n): VNode\r\n\r\n// component without props\r\nexport function h<P>(\r\n  type: Component<P>,\r\n  props?: (RawProps & P) | null,\r\n  children?: RawChildren | RawSlots,\r\n): VNode\r\n\r\n// exclude `defineComponent` constructors\r\nexport function h<P>(\r\n  type: ComponentOptions<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots,\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent` or class component\r\nexport function h(type: Constructor, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: Constructor<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots,\r\n): VNode\r\n\r\n// fake constructor type returned by `defineComponent`\r\nexport function h(type: DefineComponent, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: DefineComponent<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots,\r\n): VNode\r\n\r\n// catch all types\r\nexport function h(type: string | Component, children?: RawChildren): VNode\r\nexport function h<P>(\r\n  type: string | Component<P>,\r\n  props?: (RawProps & P) | ({} extends P ? null : never),\r\n  children?: RawChildren | RawSlots,\r\n): VNode\r\n\r\n// Actual implementation\r\nexport function h(type: any, propsOrChildren?: any, children?: any): VNode {\r\n  const l = arguments.length\r\n  if (l === 2) {\r\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n      // single vnode without props\r\n      if (isVNode(propsOrChildren)) {\r\n        return createVNode(type, null, [propsOrChildren])\r\n      }\r\n      // props without children\r\n      return createVNode(type, propsOrChildren)\r\n    } else {\r\n      // omit props\r\n      return createVNode(type, null, propsOrChildren)\r\n    }\r\n  } else {\r\n    if (l > 3) {\r\n      children = Array.prototype.slice.call(arguments, 2)\r\n    } else if (l === 3 && isVNode(children)) {\r\n      children = [children]\r\n    }\r\n    return createVNode(type, propsOrChildren, children)\r\n  }\r\n}\r\n","import { hasChanged } from '@vue/shared'\r\nimport { type VNode, currentBlock, isBlockTreeEnabled } from '../vnode'\r\n\r\nexport function withMemo(\r\n  memo: any[],\r\n  render: () => VNode<any, any>,\r\n  cache: any[],\r\n  index: number,\r\n) {\r\n  const cached = cache[index] as VNode | undefined\r\n  if (cached && isMemoSame(cached, memo)) {\r\n    return cached\r\n  }\r\n  const ret = render()\r\n\r\n  // shallow clone\r\n  ret.memo = memo.slice()\r\n  return (cache[index] = ret)\r\n}\r\n\r\nexport function isMemoSame(cached: VNode, memo: any[]) {\r\n  const prev: any[] = cached.memo!\r\n  if (prev.length != memo.length) {\r\n    return false\r\n  }\r\n\r\n  for (let i = 0; i < prev.length; i++) {\r\n    if (hasChanged(prev[i], memo[i])) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // make sure to let parent block track it when returning cached\r\n  if (isBlockTreeEnabled > 0 && currentBlock) {\r\n    currentBlock.push(cached)\r\n  }\r\n  return true\r\n}\r\n","// Core API ------------------------------------------------------------------\r\n\r\nexport const version = __VERSION__\r\nexport {\r\n  // core\r\n  reactive,\r\n  ref,\r\n  readonly,\r\n  // utilities\r\n  unref,\r\n  proxyRefs,\r\n  isRef,\r\n  toRef,\r\n  toValue,\r\n  toRefs,\r\n  isProxy,\r\n  isReactive,\r\n  isReadonly,\r\n  isShallow,\r\n  // advanced\r\n  customRef,\r\n  triggerRef,\r\n  shallowRef,\r\n  shallowReactive,\r\n  shallowReadonly,\r\n  markRaw,\r\n  toRaw,\r\n  // effect\r\n  effect,\r\n  stop,\r\n  ReactiveEffect,\r\n  // effect scope\r\n  effectScope,\r\n  EffectScope,\r\n  getCurrentScope,\r\n  onScopeDispose,\r\n} from '@vue/reactivity'\r\nexport { computed } from './apiComputed'\r\nexport {\r\n  watch,\r\n  watchEffect,\r\n  watchPostEffect,\r\n  watchSyncEffect,\r\n} from './apiWatch'\r\nexport {\r\n  onBeforeMount,\r\n  onMounted,\r\n  onBeforeUpdate,\r\n  onUpdated,\r\n  onBeforeUnmount,\r\n  onUnmounted,\r\n  onActivated,\r\n  onDeactivated,\r\n  onRenderTracked,\r\n  onRenderTriggered,\r\n  onErrorCaptured,\r\n  onServerPrefetch,\r\n} from './apiLifecycle'\r\nexport { provide, inject, hasInjectionContext } from './apiInject'\r\nexport { nextTick } from './scheduler'\r\nexport { defineComponent } from './apiDefineComponent'\r\nexport { defineAsyncComponent } from './apiAsyncComponent'\r\nexport { useAttrs, useSlots } from './apiSetupHelpers'\r\nexport { useModel } from './helpers/useModel'\r\n\r\n// <script setup> API ----------------------------------------------------------\r\n\r\nexport {\r\n  // macros runtime, for typing and warnings only\r\n  defineProps,\r\n  defineEmits,\r\n  defineExpose,\r\n  defineOptions,\r\n  defineSlots,\r\n  defineModel,\r\n  withDefaults,\r\n  type DefineProps,\r\n  type ModelRef,\r\n} from './apiSetupHelpers'\r\n\r\n/**\r\n * @internal\r\n */\r\nexport {\r\n  mergeDefaults,\r\n  mergeModels,\r\n  createPropsRestProxy,\r\n  withAsyncContext,\r\n} from './apiSetupHelpers'\r\n\r\n// Advanced API ----------------------------------------------------------------\r\n\r\n// For getting a hold of the internal instance in setup() - useful for advanced\r\n// plugins\r\nexport { getCurrentInstance } from './component'\r\n\r\n// For raw render function users\r\nexport { h } from './h'\r\n// Advanced render function utilities\r\nexport { createVNode, cloneVNode, mergeProps, isVNode } from './vnode'\r\n// VNode types\r\nexport { Fragment, Text, Comment, Static, type VNodeRef } from './vnode'\r\n// Built-in components\r\nexport { Teleport, type TeleportProps } from './components/Teleport'\r\nexport { Suspense, type SuspenseProps } from './components/Suspense'\r\nexport { KeepAlive, type KeepAliveProps } from './components/KeepAlive'\r\nexport {\r\n  BaseTransition,\r\n  BaseTransitionPropsValidators,\r\n  type BaseTransitionProps,\r\n} from './components/BaseTransition'\r\n// For using custom directives\r\nexport { withDirectives } from './directives'\r\n// SSR context\r\nexport { useSSRContext, ssrContextKey } from './helpers/useSsrContext'\r\n\r\n// Custom Renderer API ---------------------------------------------------------\r\n\r\nexport { createRenderer, createHydrationRenderer } from './renderer'\r\nexport { queuePostFlushCb } from './scheduler'\r\nimport { warn as _warn } from './warning'\r\nexport const warn = (__DEV__ ? _warn : NOOP) as typeof _warn\r\n\r\n/** @internal */\r\nexport { assertNumber } from './warning'\r\nexport {\r\n  handleError,\r\n  callWithErrorHandling,\r\n  callWithAsyncErrorHandling,\r\n  ErrorCodes,\r\n} from './errorHandling'\r\nexport {\r\n  resolveComponent,\r\n  resolveDirective,\r\n  resolveDynamicComponent,\r\n} from './helpers/resolveAssets'\r\n// For integration with runtime compiler\r\nexport { registerRuntimeCompiler, isRuntimeOnly } from './component'\r\nexport {\r\n  useTransitionState,\r\n  resolveTransitionHooks,\r\n  setTransitionHooks,\r\n  getTransitionRawChildren,\r\n} from './components/BaseTransition'\r\nexport { initCustomFormatter } from './customFormatter'\r\n\r\nimport { ErrorTypeStrings as _ErrorTypeStrings } from './errorHandling'\r\n/**\r\n * Runtime error messages. Only exposed in dev or esm builds.\r\n * @internal\r\n */\r\nexport const ErrorTypeStrings = (\r\n  __ESM_BUNDLER__ || __CJS__ || __DEV__ ? _ErrorTypeStrings : null\r\n) as typeof _ErrorTypeStrings\r\n\r\n// For devtools\r\nimport {\r\n  type DevtoolsHook,\r\n  devtools as _devtools,\r\n  setDevtoolsHook as _setDevtoolsHook,\r\n} from './devtools'\r\n\r\nexport const devtools = (\r\n  __DEV__ || __ESM_BUNDLER__ ? _devtools : undefined\r\n) as DevtoolsHook\r\nexport const setDevtoolsHook = (\r\n  __DEV__ || __ESM_BUNDLER__ ? _setDevtoolsHook : NOOP\r\n) as typeof _setDevtoolsHook\r\n\r\n// Types -----------------------------------------------------------------------\r\n\r\nimport type { VNode } from './vnode'\r\nimport type { ComponentInternalInstance } from './component'\r\n\r\n// Augment Ref unwrap bail types.\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    runtimeCoreBailTypes:\r\n      | VNode\r\n      | {\r\n          // directly bailing on ComponentPublicInstance results in recursion\r\n          // so we use this as a bail hint\r\n          $: ComponentInternalInstance\r\n        }\r\n  }\r\n}\r\n\r\nexport { TrackOpTypes, TriggerOpTypes } from '@vue/reactivity'\r\nexport type {\r\n  Ref,\r\n  MaybeRef,\r\n  MaybeRefOrGetter,\r\n  ToRef,\r\n  ToRefs,\r\n  UnwrapRef,\r\n  ShallowRef,\r\n  ShallowUnwrapRef,\r\n  CustomRefFactory,\r\n  ReactiveFlags,\r\n  DeepReadonly,\r\n  ShallowReactive,\r\n  UnwrapNestedRefs,\r\n  ComputedRef,\r\n  WritableComputedRef,\r\n  WritableComputedOptions,\r\n  ComputedGetter,\r\n  ComputedSetter,\r\n  ReactiveEffectRunner,\r\n  ReactiveEffectOptions,\r\n  EffectScheduler,\r\n  DebuggerOptions,\r\n  DebuggerEvent,\r\n  DebuggerEventExtraInfo,\r\n  Raw,\r\n} from '@vue/reactivity'\r\nexport type {\r\n  WatchEffect,\r\n  WatchOptions,\r\n  WatchOptionsBase,\r\n  WatchCallback,\r\n  WatchSource,\r\n  WatchStopHandle,\r\n} from './apiWatch'\r\nexport type { InjectionKey } from './apiInject'\r\nexport type {\r\n  App,\r\n  AppConfig,\r\n  AppContext,\r\n  Plugin,\r\n  ObjectPlugin,\r\n  FunctionPlugin,\r\n  CreateAppFunction,\r\n  OptionMergeFunction,\r\n} from './apiCreateApp'\r\nexport type {\r\n  VNode,\r\n  VNodeChild,\r\n  VNodeTypes,\r\n  VNodeProps,\r\n  VNodeArrayChildren,\r\n  VNodeNormalizedChildren,\r\n} from './vnode'\r\nexport type {\r\n  Component,\r\n  ConcreteComponent,\r\n  FunctionalComponent,\r\n  ComponentInternalInstance,\r\n  SetupContext,\r\n  ComponentCustomProps,\r\n  AllowedComponentProps,\r\n  ComponentInstance,\r\n} from './component'\r\nexport type { DefineComponent, PublicProps } from './apiDefineComponent'\r\nexport type {\r\n  ComponentOptions,\r\n  ComponentOptionsMixin,\r\n  ComponentOptionsWithoutProps,\r\n  ComponentOptionsWithObjectProps,\r\n  ComponentOptionsWithArrayProps,\r\n  ComponentCustomOptions,\r\n  ComponentOptionsBase,\r\n  ComponentProvideOptions,\r\n  RenderFunction,\r\n  MethodOptions,\r\n  ComputedOptions,\r\n  RuntimeCompilerOptions,\r\n  ComponentInjectOptions,\r\n} from './componentOptions'\r\nexport type { EmitsOptions, ObjectEmitsOptions } from './componentEmits'\r\nexport type {\r\n  ComponentPublicInstance,\r\n  ComponentCustomProperties,\r\n  CreateComponentPublicInstance,\r\n} from './componentPublicInstance'\r\nexport type {\r\n  Renderer,\r\n  RendererNode,\r\n  RendererElement,\r\n  HydrationRenderer,\r\n  RendererOptions,\r\n  RootRenderFunction,\r\n  ElementNamespace,\r\n} from './renderer'\r\nexport type { RootHydrateFunction } from './hydration'\r\nexport type { Slot, Slots, SlotsType } from './componentSlots'\r\nexport type {\r\n  Prop,\r\n  PropType,\r\n  ComponentPropsOptions,\r\n  ComponentObjectPropsOptions,\r\n  ExtractPropTypes,\r\n  ExtractPublicPropTypes,\r\n  ExtractDefaultPropTypes,\r\n} from './componentProps'\r\nexport type {\r\n  Directive,\r\n  DirectiveBinding,\r\n  DirectiveHook,\r\n  ObjectDirective,\r\n  FunctionDirective,\r\n  DirectiveArguments,\r\n} from './directives'\r\nexport type { SuspenseBoundary } from './components/Suspense'\r\nexport type {\r\n  TransitionState,\r\n  TransitionHooks,\r\n} from './components/BaseTransition'\r\nexport type {\r\n  AsyncComponentOptions,\r\n  AsyncComponentLoader,\r\n} from './apiAsyncComponent'\r\nexport type { HMRRuntime } from './hmr'\r\n\r\n// Internal API ----------------------------------------------------------------\r\n\r\n// **IMPORTANT** Internal APIs may change without notice between versions and\r\n// user code should avoid relying on them.\r\n\r\n// For compiler generated code\r\n// should sync with '@vue/compiler-core/src/runtimeHelpers.ts'\r\nexport {\r\n  withCtx,\r\n  pushScopeId,\r\n  popScopeId,\r\n  withScopeId,\r\n} from './componentRenderContext'\r\nexport { renderList } from './helpers/renderList'\r\nexport { toHandlers } from './helpers/toHandlers'\r\nexport { renderSlot } from './helpers/renderSlot'\r\nexport { createSlots } from './helpers/createSlots'\r\nexport { withMemo, isMemoSame } from './helpers/withMemo'\r\nexport {\r\n  openBlock,\r\n  createBlock,\r\n  setBlockTracking,\r\n  createTextVNode,\r\n  createCommentVNode,\r\n  createStaticVNode,\r\n  createElementVNode,\r\n  createElementBlock,\r\n  guardReactiveProps,\r\n} from './vnode'\r\nexport {\r\n  toDisplayString,\r\n  camelize,\r\n  capitalize,\r\n  toHandlerKey,\r\n  normalizeProps,\r\n  normalizeClass,\r\n  normalizeStyle,\r\n} from '@vue/shared'\r\n\r\n// For test-utils\r\nexport { transformVNodeArgs } from './vnode'\r\n\r\n// SSR -------------------------------------------------------------------------\r\n\r\n// **IMPORTANT** These APIs are exposed solely for @vue/server-renderer and may\r\n// change without notice between versions. User code should never rely on them.\r\n\r\nimport { createComponentInstance, setupComponent } from './component'\r\nimport { renderComponentRoot } from './componentRenderUtils'\r\nimport { setCurrentRenderingInstance } from './componentRenderContext'\r\nimport { isVNode, normalizeVNode } from './vnode'\r\n\r\nconst _ssrUtils = {\r\n  createComponentInstance,\r\n  setupComponent,\r\n  renderComponentRoot,\r\n  setCurrentRenderingInstance,\r\n  isVNode,\r\n  normalizeVNode,\r\n}\r\n\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\r\n * @internal\r\n */\r\nexport const ssrUtils = (__SSR__ ? _ssrUtils : null) as typeof _ssrUtils\r\n\r\n// 2.x COMPAT ------------------------------------------------------------------\r\n\r\nimport { DeprecationTypes as _DeprecationTypes } from './compat/compatConfig'\r\nexport type { CompatVue } from './compat/global'\r\nexport type { LegacyConfig } from './compat/globalConfig'\r\n\r\nimport { warnDeprecation } from './compat/compatConfig'\r\nimport { createCompatVue } from './compat/global'\r\nimport {\r\n  checkCompatEnabled,\r\n  isCompatEnabled,\r\n  softAssertCompatEnabled,\r\n} from './compat/compatConfig'\r\nimport { resolveFilter as _resolveFilter } from './helpers/resolveAssets'\r\nimport { NOOP } from '@vue/shared'\r\n\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nexport const resolveFilter = __COMPAT__ ? _resolveFilter : null\r\n\r\nconst _compatUtils = {\r\n  warnDeprecation,\r\n  createCompatVue,\r\n  isCompatEnabled,\r\n  checkCompatEnabled,\r\n  softAssertCompatEnabled,\r\n}\r\n\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nexport const compatUtils = (\r\n  __COMPAT__ ? _compatUtils : null\r\n) as typeof _compatUtils\r\n\r\nexport const DeprecationTypes = (\r\n  __COMPAT__ ? _DeprecationTypes : null\r\n) as typeof _DeprecationTypes\r\n","import type { RendererOptions } from '@vue/runtime-core'\r\n\r\nexport const svgNS = 'http://www.w3.org/2000/svg'\r\nexport const mathmlNS = 'http://www.w3.org/1998/Math/MathML'\r\n\r\nconst doc = (typeof document !== 'undefined' ? document : null) as Document\r\n\r\nconst templateContainer = doc && /*#__PURE__*/ doc.createElement('template')\r\n\r\nexport const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\r\n  insert: (child, parent, anchor) => {\r\n    parent.insertBefore(child, anchor || null)\r\n  },\r\n\r\n  remove: child => {\r\n    const parent = child.parentNode\r\n    if (parent) {\r\n      parent.removeChild(child)\r\n    }\r\n  },\r\n\r\n  createElement: (tag, namespace, is, props): Element => {\r\n    const el =\r\n      namespace === 'svg'\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : namespace === 'mathml'\r\n          ? doc.createElementNS(mathmlNS, tag)\r\n          : doc.createElement(tag, is ? { is } : undefined)\r\n\r\n    if (tag === 'select' && props && props.multiple != null) {\r\n      ;(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\r\n    }\r\n\r\n    return el\r\n  },\r\n\r\n  createText: text => doc.createTextNode(text),\r\n\r\n  createComment: text => doc.createComment(text),\r\n\r\n  setText: (node, text) => {\r\n    node.nodeValue = text\r\n  },\r\n\r\n  setElementText: (el, text) => {\r\n    el.textContent = text\r\n  },\r\n\r\n  parentNode: node => node.parentNode as Element | null,\r\n\r\n  nextSibling: node => node.nextSibling,\r\n\r\n  querySelector: selector => doc.querySelector(selector),\r\n\r\n  setScopeId(el, id) {\r\n    el.setAttribute(id, '')\r\n  },\r\n\r\n  // __UNSAFE__\r\n  // Reason: innerHTML.\r\n  // Static content here can only come from compiled templates.\r\n  // As long as the user only uses trusted templates, this is safe.\r\n  insertStaticContent(content, parent, anchor, namespace, start, end) {\r\n    // <parent> before | first ... last | anchor </parent>\r\n    const before = anchor ? anchor.previousSibling : parent.lastChild\r\n    // #5308 can only take cached path if:\r\n    // - has a single root node\r\n    // - nextSibling info is still available\r\n    if (start && (start === end || start.nextSibling)) {\r\n      // cached\r\n      while (true) {\r\n        parent.insertBefore(start!.cloneNode(true), anchor)\r\n        if (start === end || !(start = start!.nextSibling)) break\r\n      }\r\n    } else {\r\n      // fresh insert\r\n      templateContainer.innerHTML =\r\n        namespace === 'svg'\r\n          ? `<svg>${content}</svg>`\r\n          : namespace === 'mathml'\r\n            ? `<math>${content}</math>`\r\n            : content\r\n\r\n      const template = templateContainer.content\r\n      if (namespace === 'svg' || namespace === 'mathml') {\r\n        // remove outer svg/math wrapper\r\n        const wrapper = template.firstChild!\r\n        while (wrapper.firstChild) {\r\n          template.appendChild(wrapper.firstChild)\r\n        }\r\n        template.removeChild(wrapper)\r\n      }\r\n      parent.insertBefore(template, anchor)\r\n    }\r\n    return [\r\n      // first\r\n      before ? before.nextSibling! : parent.firstChild!,\r\n      // last\r\n      anchor ? anchor.previousSibling! : parent.lastChild!,\r\n    ]\r\n  },\r\n}\r\n","import {\r\n  BaseTransition,\r\n  type BaseTransitionProps,\r\n  BaseTransitionPropsValidators,\r\n  DeprecationTypes,\r\n  type FunctionalComponent,\r\n  assertNumber,\r\n  compatUtils,\r\n  h,\r\n} from '@vue/runtime-core'\r\nimport { extend, isArray, isObject, toNumber } from '@vue/shared'\r\n\r\nconst TRANSITION = 'transition'\r\nconst ANIMATION = 'animation'\r\n\r\ntype AnimationTypes = typeof TRANSITION | typeof ANIMATION\r\n\r\nexport interface TransitionProps extends BaseTransitionProps<Element> {\r\n  name?: string\r\n  type?: AnimationTypes\r\n  css?: boolean\r\n  duration?: number | { enter: number; leave: number }\r\n  // custom transition classes\r\n  enterFromClass?: string\r\n  enterActiveClass?: string\r\n  enterToClass?: string\r\n  appearFromClass?: string\r\n  appearActiveClass?: string\r\n  appearToClass?: string\r\n  leaveFromClass?: string\r\n  leaveActiveClass?: string\r\n  leaveToClass?: string\r\n}\r\n\r\nexport const vtcKey = Symbol('_vtc')\r\n\r\nexport interface ElementWithTransition extends HTMLElement {\r\n  // _vtc = Vue Transition Classes.\r\n  // Store the temporarily-added transition classes on the element\r\n  // so that we can avoid overwriting them if the element's class is patched\r\n  // during the transition.\r\n  [vtcKey]?: Set<string>\r\n}\r\n\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nexport const Transition: FunctionalComponent<TransitionProps> = (\r\n  props,\r\n  { slots },\r\n) => h(BaseTransition, resolveTransitionProps(props), slots)\r\n\r\nTransition.displayName = 'Transition'\r\n\r\nif (__COMPAT__) {\r\n  Transition.__isBuiltIn = true\r\n}\r\n\r\nconst DOMTransitionPropsValidators = {\r\n  name: String,\r\n  type: String,\r\n  css: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n  duration: [String, Number, Object],\r\n  enterFromClass: String,\r\n  enterActiveClass: String,\r\n  enterToClass: String,\r\n  appearFromClass: String,\r\n  appearActiveClass: String,\r\n  appearToClass: String,\r\n  leaveFromClass: String,\r\n  leaveActiveClass: String,\r\n  leaveToClass: String,\r\n}\r\n\r\nexport const TransitionPropsValidators = (Transition.props =\r\n  /*#__PURE__*/ extend(\r\n    {},\r\n    BaseTransitionPropsValidators as any,\r\n    DOMTransitionPropsValidators,\r\n  ))\r\n\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (\r\n  hook: Function | Function[] | undefined,\r\n  args: any[] = [],\r\n) => {\r\n  if (isArray(hook)) {\r\n    hook.forEach(h => h(...args))\r\n  } else if (hook) {\r\n    hook(...args)\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (\r\n  hook: Function | Function[] | undefined,\r\n): boolean => {\r\n  return hook\r\n    ? isArray(hook)\r\n      ? hook.some(h => h.length > 1)\r\n      : hook.length > 1\r\n    : false\r\n}\r\n\r\nexport function resolveTransitionProps(\r\n  rawProps: TransitionProps,\r\n): BaseTransitionProps<Element> {\r\n  const baseProps: BaseTransitionProps<Element> = {}\r\n  for (const key in rawProps) {\r\n    if (!(key in DOMTransitionPropsValidators)) {\r\n      ;(baseProps as any)[key] = (rawProps as any)[key]\r\n    }\r\n  }\r\n\r\n  if (rawProps.css === false) {\r\n    return baseProps\r\n  }\r\n\r\n  const {\r\n    name = 'v',\r\n    type,\r\n    duration,\r\n    enterFromClass = `${name}-enter-from`,\r\n    enterActiveClass = `${name}-enter-active`,\r\n    enterToClass = `${name}-enter-to`,\r\n    appearFromClass = enterFromClass,\r\n    appearActiveClass = enterActiveClass,\r\n    appearToClass = enterToClass,\r\n    leaveFromClass = `${name}-leave-from`,\r\n    leaveActiveClass = `${name}-leave-active`,\r\n    leaveToClass = `${name}-leave-to`,\r\n  } = rawProps\r\n\r\n  // legacy transition class compat\r\n  const legacyClassEnabled =\r\n    __COMPAT__ &&\r\n    compatUtils.isCompatEnabled(DeprecationTypes.TRANSITION_CLASSES, null)\r\n  let legacyEnterFromClass: string\r\n  let legacyAppearFromClass: string\r\n  let legacyLeaveFromClass: string\r\n  if (__COMPAT__ && legacyClassEnabled) {\r\n    const toLegacyClass = (cls: string) => cls.replace(/-from$/, '')\r\n    if (!rawProps.enterFromClass) {\r\n      legacyEnterFromClass = toLegacyClass(enterFromClass)\r\n    }\r\n    if (!rawProps.appearFromClass) {\r\n      legacyAppearFromClass = toLegacyClass(appearFromClass)\r\n    }\r\n    if (!rawProps.leaveFromClass) {\r\n      legacyLeaveFromClass = toLegacyClass(leaveFromClass)\r\n    }\r\n  }\r\n\r\n  const durations = normalizeDuration(duration)\r\n  const enterDuration = durations && durations[0]\r\n  const leaveDuration = durations && durations[1]\r\n  const {\r\n    onBeforeEnter,\r\n    onEnter,\r\n    onEnterCancelled,\r\n    onLeave,\r\n    onLeaveCancelled,\r\n    onBeforeAppear = onBeforeEnter,\r\n    onAppear = onEnter,\r\n    onAppearCancelled = onEnterCancelled,\r\n  } = baseProps\r\n\r\n  const finishEnter = (el: Element, isAppear: boolean, done?: () => void) => {\r\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const finishLeave = (\r\n    el: Element & { _isLeaving?: boolean },\r\n    done?: () => void,\r\n  ) => {\r\n    el._isLeaving = false\r\n    removeTransitionClass(el, leaveFromClass)\r\n    removeTransitionClass(el, leaveToClass)\r\n    removeTransitionClass(el, leaveActiveClass)\r\n    done && done()\r\n  }\r\n\r\n  const makeEnterHook = (isAppear: boolean) => {\r\n    return (el: Element, done: () => void) => {\r\n      const hook = isAppear ? onAppear : onEnter\r\n      const resolve = () => finishEnter(el, isAppear, done)\r\n      callHook(hook, [el, resolve])\r\n      nextFrame(() => {\r\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled) {\r\n          const legacyClass = isAppear\r\n            ? legacyAppearFromClass\r\n            : legacyEnterFromClass\r\n          if (legacyClass) {\r\n            removeTransitionClass(el, legacyClass)\r\n          }\r\n        }\r\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass)\r\n        if (!hasExplicitCallback(hook)) {\r\n          whenTransitionEnds(el, type, enterDuration, resolve)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return extend(baseProps, {\r\n    onBeforeEnter(el) {\r\n      callHook(onBeforeEnter, [el])\r\n      addTransitionClass(el, enterFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled && legacyEnterFromClass) {\r\n        addTransitionClass(el, legacyEnterFromClass)\r\n      }\r\n      addTransitionClass(el, enterActiveClass)\r\n    },\r\n    onBeforeAppear(el) {\r\n      callHook(onBeforeAppear, [el])\r\n      addTransitionClass(el, appearFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled && legacyAppearFromClass) {\r\n        addTransitionClass(el, legacyAppearFromClass)\r\n      }\r\n      addTransitionClass(el, appearActiveClass)\r\n    },\r\n    onEnter: makeEnterHook(false),\r\n    onAppear: makeEnterHook(true),\r\n    onLeave(el: Element & { _isLeaving?: boolean }, done) {\r\n      el._isLeaving = true\r\n      const resolve = () => finishLeave(el, done)\r\n      addTransitionClass(el, leaveFromClass)\r\n      if (__COMPAT__ && legacyClassEnabled && legacyLeaveFromClass) {\r\n        addTransitionClass(el, legacyLeaveFromClass)\r\n      }\r\n      // force reflow so *-leave-from classes immediately take effect (#2593)\r\n      forceReflow()\r\n      addTransitionClass(el, leaveActiveClass)\r\n      nextFrame(() => {\r\n        if (!el._isLeaving) {\r\n          // cancelled\r\n          return\r\n        }\r\n        removeTransitionClass(el, leaveFromClass)\r\n        if (__COMPAT__ && legacyClassEnabled && legacyLeaveFromClass) {\r\n          removeTransitionClass(el, legacyLeaveFromClass)\r\n        }\r\n        addTransitionClass(el, leaveToClass)\r\n        if (!hasExplicitCallback(onLeave)) {\r\n          whenTransitionEnds(el, type, leaveDuration, resolve)\r\n        }\r\n      })\r\n      callHook(onLeave, [el, resolve])\r\n    },\r\n    onEnterCancelled(el) {\r\n      finishEnter(el, false)\r\n      callHook(onEnterCancelled, [el])\r\n    },\r\n    onAppearCancelled(el) {\r\n      finishEnter(el, true)\r\n      callHook(onAppearCancelled, [el])\r\n    },\r\n    onLeaveCancelled(el) {\r\n      finishLeave(el)\r\n      callHook(onLeaveCancelled, [el])\r\n    },\r\n  } as BaseTransitionProps<Element>)\r\n}\r\n\r\nfunction normalizeDuration(\r\n  duration: TransitionProps['duration'],\r\n): [number, number] | null {\r\n  if (duration == null) {\r\n    return null\r\n  } else if (isObject(duration)) {\r\n    return [NumberOf(duration.enter), NumberOf(duration.leave)]\r\n  } else {\r\n    const n = NumberOf(duration)\r\n    return [n, n]\r\n  }\r\n}\r\n\r\nfunction NumberOf(val: unknown): number {\r\n  const res = toNumber(val)\r\n  if (__DEV__) {\r\n    assertNumber(res, '<transition> explicit duration')\r\n  }\r\n  return res\r\n}\r\n\r\nexport function addTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.add(c))\r\n  ;(\r\n    (el as ElementWithTransition)[vtcKey] ||\r\n    ((el as ElementWithTransition)[vtcKey] = new Set())\r\n  ).add(cls)\r\n}\r\n\r\nexport function removeTransitionClass(el: Element, cls: string) {\r\n  cls.split(/\\s+/).forEach(c => c && el.classList.remove(c))\r\n  const _vtc = (el as ElementWithTransition)[vtcKey]\r\n  if (_vtc) {\r\n    _vtc.delete(cls)\r\n    if (!_vtc!.size) {\r\n      ;(el as ElementWithTransition)[vtcKey] = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction nextFrame(cb: () => void) {\r\n  requestAnimationFrame(() => {\r\n    requestAnimationFrame(cb)\r\n  })\r\n}\r\n\r\nlet endId = 0\r\n\r\nfunction whenTransitionEnds(\r\n  el: Element & { _endId?: number },\r\n  expectedType: TransitionProps['type'] | undefined,\r\n  explicitTimeout: number | null,\r\n  resolve: () => void,\r\n) {\r\n  const id = (el._endId = ++endId)\r\n  const resolveIfNotStale = () => {\r\n    if (id === el._endId) {\r\n      resolve()\r\n    }\r\n  }\r\n\r\n  if (explicitTimeout) {\r\n    return setTimeout(resolveIfNotStale, explicitTimeout)\r\n  }\r\n\r\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType)\r\n  if (!type) {\r\n    return resolve()\r\n  }\r\n\r\n  const endEvent = type + 'end'\r\n  let ended = 0\r\n  const end = () => {\r\n    el.removeEventListener(endEvent, onEnd)\r\n    resolveIfNotStale()\r\n  }\r\n  const onEnd = (e: Event) => {\r\n    if (e.target === el && ++ended >= propCount) {\r\n      end()\r\n    }\r\n  }\r\n  setTimeout(() => {\r\n    if (ended < propCount) {\r\n      end()\r\n    }\r\n  }, timeout + 1)\r\n  el.addEventListener(endEvent, onEnd)\r\n}\r\n\r\ninterface CSSTransitionInfo {\r\n  type: AnimationTypes | null\r\n  propCount: number\r\n  timeout: number\r\n  hasTransform: boolean\r\n}\r\n\r\ntype AnimationProperties = 'Delay' | 'Duration'\r\ntype StylePropertiesKey =\r\n  | `${AnimationTypes}${AnimationProperties}`\r\n  | `${typeof TRANSITION}Property`\r\n\r\nexport function getTransitionInfo(\r\n  el: Element,\r\n  expectedType?: TransitionProps['type'],\r\n): CSSTransitionInfo {\r\n  const styles = window.getComputedStyle(el) as Pick<\r\n    CSSStyleDeclaration,\r\n    StylePropertiesKey\r\n  >\r\n  // JSDOM may return undefined for transition properties\r\n  const getStyleProperties = (key: StylePropertiesKey) =>\r\n    (styles[key] || '').split(', ')\r\n  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`)\r\n  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`)\r\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations)\r\n  const animationDelays = getStyleProperties(`${ANIMATION}Delay`)\r\n  const animationDurations = getStyleProperties(`${ANIMATION}Duration`)\r\n  const animationTimeout = getTimeout(animationDelays, animationDurations)\r\n\r\n  let type: CSSTransitionInfo['type'] = null\r\n  let timeout = 0\r\n  let propCount = 0\r\n  /* istanbul ignore if */\r\n  if (expectedType === TRANSITION) {\r\n    if (transitionTimeout > 0) {\r\n      type = TRANSITION\r\n      timeout = transitionTimeout\r\n      propCount = transitionDurations.length\r\n    }\r\n  } else if (expectedType === ANIMATION) {\r\n    if (animationTimeout > 0) {\r\n      type = ANIMATION\r\n      timeout = animationTimeout\r\n      propCount = animationDurations.length\r\n    }\r\n  } else {\r\n    timeout = Math.max(transitionTimeout, animationTimeout)\r\n    type =\r\n      timeout > 0\r\n        ? transitionTimeout > animationTimeout\r\n          ? TRANSITION\r\n          : ANIMATION\r\n        : null\r\n    propCount = type\r\n      ? type === TRANSITION\r\n        ? transitionDurations.length\r\n        : animationDurations.length\r\n      : 0\r\n  }\r\n  const hasTransform =\r\n    type === TRANSITION &&\r\n    /\\b(transform|all)(,|$)/.test(\r\n      getStyleProperties(`${TRANSITION}Property`).toString(),\r\n    )\r\n  return {\r\n    type,\r\n    timeout,\r\n    propCount,\r\n    hasTransform,\r\n  }\r\n}\r\n\r\nfunction getTimeout(delays: string[], durations: string[]): number {\r\n  while (delays.length < durations.length) {\r\n    delays = delays.concat(delays)\r\n  }\r\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])))\r\n}\r\n\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s: string): number {\r\n  // #8409 default value for CSS durations can be 'auto'\r\n  if (s === 'auto') return 0\r\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\r\n}\r\n\r\n// synchronously force layout to put elements into a certain state\r\nexport function forceReflow() {\r\n  return document.body.offsetHeight\r\n}\r\n","import type { ObjectDirective } from '@vue/runtime-core'\r\n\r\nexport const vShowOldKey = Symbol('_vod')\r\n\r\ninterface VShowElement extends HTMLElement {\r\n  // _vod = vue original display\r\n  [vShowOldKey]: string\r\n}\r\n\r\nexport const vShow: ObjectDirective<VShowElement> & { name?: 'show' } = {\r\n  beforeMount(el, { value }, { transition }) {\r\n    el[vShowOldKey] = el.style.display === 'none' ? '' : el.style.display\r\n    if (transition && value) {\r\n      transition.beforeEnter(el)\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  mounted(el, { value }, { transition }) {\r\n    if (transition && value) {\r\n      transition.enter(el)\r\n    }\r\n  },\r\n  updated(el, { value, oldValue }, { transition }) {\r\n    if (!value === !oldValue) return\r\n    if (transition) {\r\n      if (value) {\r\n        transition.beforeEnter(el)\r\n        setDisplay(el, true)\r\n        transition.enter(el)\r\n      } else {\r\n        transition.leave(el, () => {\r\n          setDisplay(el, false)\r\n        })\r\n      }\r\n    } else {\r\n      setDisplay(el, value)\r\n    }\r\n  },\r\n  beforeUnmount(el, { value }) {\r\n    setDisplay(el, value)\r\n  },\r\n}\r\n\r\nif (__DEV__) {\r\n  vShow.name = 'show'\r\n}\r\n\r\nfunction setDisplay(el: VShowElement, value: unknown): void {\r\n  el.style.display = value ? el[vShowOldKey] : 'none'\r\n}\r\n\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nexport function initVShowForSSR() {\r\n  vShow.getSSRProps = ({ value }) => {\r\n    if (!value) {\r\n      return { style: { display: 'none' } }\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Fragment,\r\n  Static,\r\n  type VNode,\r\n  getCurrentInstance,\r\n  onMounted,\r\n  onUnmounted,\r\n  warn,\r\n  watchPostEffect,\r\n} from '@vue/runtime-core'\r\nimport { ShapeFlags } from '@vue/shared'\r\n\r\nexport const CSS_VAR_TEXT = Symbol(__DEV__ ? 'CSS_VAR_TEXT' : '')\r\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nexport function useCssVars(getter: (ctx: any) => Record<string, string>) {\r\n  if (!__BROWSER__ && !__TEST__) return\r\n\r\n  const instance = getCurrentInstance()\r\n  /* istanbul ignore next */\r\n  if (!instance) {\r\n    __DEV__ &&\r\n      warn(`useCssVars is called without current active component instance.`)\r\n    return\r\n  }\r\n\r\n  const updateTeleports = (instance.ut = (vars = getter(instance.proxy)) => {\r\n    Array.from(\r\n      document.querySelectorAll(`[data-v-owner=\"${instance.uid}\"]`),\r\n    ).forEach(node => setVarsOnNode(node, vars))\r\n  })\r\n\r\n  const setVars = () => {\r\n    const vars = getter(instance.proxy)\r\n    setVarsOnVNode(instance.subTree, vars)\r\n    updateTeleports(vars)\r\n  }\r\n\r\n  watchPostEffect(setVars)\r\n\r\n  onMounted(() => {\r\n    const ob = new MutationObserver(setVars)\r\n    ob.observe(instance.subTree.el!.parentNode, { childList: true })\r\n    onUnmounted(() => ob.disconnect())\r\n  })\r\n}\r\n\r\nfunction setVarsOnVNode(vnode: VNode, vars: Record<string, string>) {\r\n  if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & ShapeFlags.SUSPENSE) {\r\n    const suspense = vnode.suspense!\r\n    vnode = suspense.activeBranch!\r\n    if (suspense.pendingBranch && !suspense.isHydrating) {\r\n      suspense.effects.push(() => {\r\n        setVarsOnVNode(suspense.activeBranch!, vars)\r\n      })\r\n    }\r\n  }\r\n\r\n  // drill down HOCs until it's a non-component vnode\r\n  while (vnode.component) {\r\n    vnode = vnode.component.subTree\r\n  }\r\n\r\n  if (vnode.shapeFlag & ShapeFlags.ELEMENT && vnode.el) {\r\n    setVarsOnNode(vnode.el as Node, vars)\r\n  } else if (vnode.type === Fragment) {\r\n    ;(vnode.children as VNode[]).forEach(c => setVarsOnVNode(c, vars))\r\n  } else if (vnode.type === Static) {\r\n    let { el, anchor } = vnode\r\n    while (el) {\r\n      setVarsOnNode(el as Node, vars)\r\n      if (el === anchor) break\r\n      el = el.nextSibling\r\n    }\r\n  }\r\n}\r\n\r\nfunction setVarsOnNode(el: Node, vars: Record<string, string>) {\r\n  if (el.nodeType === 1) {\r\n    const style = (el as HTMLElement).style\r\n    let cssText = ''\r\n    for (const key in vars) {\r\n      style.setProperty(`--${key}`, vars[key])\r\n      cssText += `--${key}: ${vars[key]};`\r\n    }\r\n    ;(style as any)[CSS_VAR_TEXT] = cssText\r\n  }\r\n}\r\n","import { capitalize, hyphenate, isArray, isString } from '@vue/shared'\r\nimport { camelize, warn } from '@vue/runtime-core'\r\nimport { vShowOldKey } from '../directives/vShow'\r\nimport { CSS_VAR_TEXT } from '../helpers/useCssVars'\r\n\r\ntype Style = string | Record<string, string | string[]> | null\r\n\r\nexport function patchStyle(el: Element, prev: Style, next: Style) {\r\n  const style = (el as HTMLElement).style\r\n  const currentDisplay = style.display\r\n  const isCssString = isString(next)\r\n  if (next && !isCssString) {\r\n    if (prev && !isString(prev)) {\r\n      for (const key in prev) {\r\n        if (next[key] == null) {\r\n          setStyle(style, key, '')\r\n        }\r\n      }\r\n    }\r\n    for (const key in next) {\r\n      setStyle(style, key, next[key])\r\n    }\r\n  } else {\r\n    if (isCssString) {\r\n      if (prev !== next) {\r\n        // #9821\r\n        const cssVarText = (style as any)[CSS_VAR_TEXT]\r\n        if (cssVarText) {\r\n          ;(next as string) += ';' + cssVarText\r\n        }\r\n        // 设置style也可以通过[Element].style.cssText = 'background: red'\r\n        style.cssText = next as string\r\n      }\r\n    } else if (prev) {\r\n      el.removeAttribute('style')\r\n    }\r\n  }\r\n  // indicates that the `display` of the element is controlled by `v-show`,\r\n  // so we always keep the current `display` value regardless of the `style`\r\n  // value, thus handing over control to `v-show`.\r\n  if (vShowOldKey in el) {\r\n    style.display = currentDisplay\r\n  }\r\n}\r\n\r\nconst semicolonRE = /[^\\\\];\\s*$/\r\nconst importantRE = /\\s*!important$/\r\n\r\nfunction setStyle(\r\n  style: CSSStyleDeclaration,\r\n  name: string,\r\n  val: string | string[],\r\n) {\r\n  if (isArray(val)) {\r\n    val.forEach(v => setStyle(style, name, v))\r\n  } else {\r\n    if (val == null) val = ''\r\n    if (__DEV__) {\r\n      if (semicolonRE.test(val)) {\r\n        warn(\r\n          `Unexpected semicolon at the end of '${name}' style value: '${val}'`,\r\n        )\r\n      }\r\n    }\r\n    if (name.startsWith('--')) {\r\n      // custom property definition\r\n      style.setProperty(name, val)\r\n    } else {\r\n      const prefixed = autoPrefix(style, name)\r\n      if (importantRE.test(val)) {\r\n        // !important 存在important的情况\r\n        style.setProperty(\r\n          hyphenate(prefixed),\r\n          val.replace(importantRE, ''),\r\n          'important',\r\n        )\r\n      } else {\r\n        style[prefixed as any] = val\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst prefixes = ['Webkit', 'Moz', 'ms']\r\nconst prefixCache: Record<string, string> = {}\r\n\r\nfunction autoPrefix(style: CSSStyleDeclaration, rawName: string): string {\r\n  const cached = prefixCache[rawName]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n  let name = camelize(rawName)\r\n  if (name !== 'filter' && name in style) {\r\n    return (prefixCache[rawName] = name)\r\n  }\r\n  name = capitalize(name)\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    const prefixed = prefixes[i] + name\r\n    if (prefixed in style) {\r\n      return (prefixCache[rawName] = prefixed)\r\n    }\r\n  }\r\n  return rawName\r\n}\r\n","import {\r\n  NOOP,\r\n  includeBooleanAttr,\r\n  isSpecialBooleanAttr,\r\n  makeMap,\r\n} from '@vue/shared'\r\nimport {\r\n  type ComponentInternalInstance,\r\n  DeprecationTypes,\r\n  compatUtils,\r\n} from '@vue/runtime-core'\r\n\r\nexport const xlinkNS = 'http://www.w3.org/1999/xlink'\r\n\r\nexport function patchAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: any,\r\n  isSVG: boolean,\r\n  instance?: ComponentInternalInstance | null,\r\n) {\r\n  if (isSVG && key.startsWith('xlink:')) {\r\n    if (value == null) {\r\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length))\r\n    } else {\r\n      el.setAttributeNS(xlinkNS, key, value)\r\n    }\r\n  } else {\r\n    if (__COMPAT__ && compatCoerceAttr(el, key, value, instance)) {\r\n      return\r\n    }\r\n\r\n    // note we are only checking boolean attributes that don't have a\r\n    // corresponding dom prop of the same name here.\r\n    const isBoolean = isSpecialBooleanAttr(key)\r\n    if (value == null || (isBoolean && !includeBooleanAttr(value))) {\r\n      el.removeAttribute(key)\r\n    } else {\r\n      el.setAttribute(key, isBoolean ? '' : value)\r\n    }\r\n  }\r\n}\r\n\r\n// 2.x compat\r\nconst isEnumeratedAttr = __COMPAT__\r\n  ? /*#__PURE__*/ makeMap('contenteditable,draggable,spellcheck')\r\n  : NOOP\r\n\r\nexport function compatCoerceAttr(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  instance: ComponentInternalInstance | null = null,\r\n): boolean {\r\n  if (isEnumeratedAttr(key)) {\r\n    const v2CoercedValue =\r\n      value === null\r\n        ? 'false'\r\n        : typeof value !== 'boolean' && value !== undefined\r\n          ? 'true'\r\n          : null\r\n    if (\r\n      v2CoercedValue &&\r\n      compatUtils.softAssertCompatEnabled(\r\n        DeprecationTypes.ATTR_ENUMERATED_COERCION,\r\n        instance,\r\n        key,\r\n        value,\r\n        v2CoercedValue,\r\n      )\r\n    ) {\r\n      el.setAttribute(key, v2CoercedValue)\r\n      return true\r\n    }\r\n  } else if (\r\n    value === false &&\r\n    !isSpecialBooleanAttr(key) &&\r\n    compatUtils.softAssertCompatEnabled(\r\n      DeprecationTypes.ATTR_FALSE_VALUE,\r\n      instance,\r\n      key,\r\n    )\r\n  ) {\r\n    el.removeAttribute(key)\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import { hyphenate, isArray } from '@vue/shared'\r\nimport {\r\n  type ComponentInternalInstance,\r\n  ErrorCodes,\r\n  callWithAsyncErrorHandling,\r\n} from '@vue/runtime-core'\r\n\r\ninterface Invoker extends EventListener {\r\n  value: EventValue\r\n  attached: number\r\n}\r\n\r\ntype EventValue = Function | Function[]\r\n\r\nexport function addEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions,\r\n) {\r\n  el.addEventListener(event, handler, options)\r\n}\r\n\r\nexport function removeEventListener(\r\n  el: Element,\r\n  event: string,\r\n  handler: EventListener,\r\n  options?: EventListenerOptions,\r\n) {\r\n  el.removeEventListener(event, handler, options)\r\n}\r\n\r\nconst veiKey = Symbol('_vei')\r\n\r\nexport function patchEvent(\r\n  el: Element & { [veiKey]?: Record<string, Invoker | undefined> },\r\n  rawName: string,\r\n  prevValue: EventValue | null,\r\n  nextValue: EventValue | null,\r\n  instance: ComponentInternalInstance | null = null,\r\n) {\r\n  // vei = vue event invokers\r\n  const invokers = el[veiKey] || (el[veiKey] = {})\r\n  const existingInvoker = invokers[rawName]\r\n  if (nextValue && existingInvoker) {\r\n    // patch\r\n    existingInvoker.value = nextValue\r\n  } else {\r\n    const [name, options] = parseName(rawName)\r\n    if (nextValue) {\r\n      // add\r\n      const invoker = (invokers[rawName] = createInvoker(nextValue, instance))\r\n      addEventListener(el, name, invoker, options)\r\n    } else if (existingInvoker) {\r\n      // remove\r\n      removeEventListener(el, name, existingInvoker, options)\r\n      invokers[rawName] = undefined\r\n    }\r\n  }\r\n}\r\n\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/\r\n\r\nfunction parseName(name: string): [string, EventListenerOptions | undefined] {\r\n  let options: EventListenerOptions | undefined\r\n  if (optionsModifierRE.test(name)) {\r\n    options = {}\r\n    let m\r\n    while ((m = name.match(optionsModifierRE))) {\r\n      name = name.slice(0, name.length - m[0].length)\r\n      ;(options as any)[m[0].toLowerCase()] = true\r\n    }\r\n  }\r\n  const event = name[2] === ':' ? name.slice(3) : hyphenate(name.slice(2))\r\n  return [event, options]\r\n}\r\n\r\n// To avoid the overhead of repeatedly calling Date.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow: number = 0\r\nconst p = /*#__PURE__*/ Promise.resolve()\r\nconst getNow = () =>\r\n  cachedNow || (p.then(() => (cachedNow = 0)), (cachedNow = Date.now()))\r\n\r\nfunction createInvoker(\r\n  initialValue: EventValue,\r\n  instance: ComponentInternalInstance | null,\r\n) {\r\n  const invoker: Invoker = (e: Event & { _vts?: number }) => {\r\n    // async edge case vuejs/vue#6566\r\n    // inner click event triggers patch, event handler\r\n    // attached to outer element during patch, and triggered again. This\r\n    // happens because browsers fire microtask ticks between event propagation.\r\n    // this no longer happens for templates in Vue 3, but could still be\r\n    // theoretically possible for hand-written render functions.\r\n    // the solution: we save the timestamp when a handler is attached,\r\n    // and also attach the timestamp to any event that was handled by vue\r\n    // for the first time (to avoid inconsistent event timestamp implementations\r\n    // or events fired from iframes, e.g. #2513)\r\n    // The handler would only fire if the event passed to it was fired\r\n    // AFTER it was attached.\r\n    // 防止因为事件冒泡导致事件在子级产生的时间小于在父级绑定的时间\r\n    if (!e._vts) {\r\n      e._vts = Date.now()\r\n    } else if (e._vts <= invoker.attached) {\r\n      return\r\n    }\r\n    callWithAsyncErrorHandling(\r\n      patchStopImmediatePropagation(e, invoker.value),\r\n      instance,\r\n      ErrorCodes.NATIVE_EVENT_HANDLER,\r\n      [e],\r\n    )\r\n  }\r\n  invoker.value = initialValue\r\n  invoker.attached = getNow()\r\n  return invoker\r\n}\r\n\r\nfunction patchStopImmediatePropagation(\r\n  e: Event,\r\n  value: EventValue,\r\n): EventValue {\r\n  if (isArray(value)) {\r\n    const originalStop = e.stopImmediatePropagation\r\n    e.stopImmediatePropagation = () => {\r\n      originalStop.call(e)\r\n      ;(e as any)._stopped = true\r\n    }\r\n    return value.map(fn => (e: Event) => !(e as any)._stopped && fn && fn(e))\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n","import { patchClass } from './modules/class'\r\nimport { patchStyle } from './modules/style'\r\nimport { patchAttr } from './modules/attrs'\r\nimport { patchDOMProp } from './modules/props'\r\nimport { patchEvent } from './modules/events'\r\nimport { isFunction, isModelListener, isOn, isString } from '@vue/shared'\r\nimport type { RendererOptions } from '@vue/runtime-core'\r\n\r\nconst isNativeOn = (key: string) =>\r\n  key.charCodeAt(0) === 111 /* o */ &&\r\n  key.charCodeAt(1) === 110 /* n */ &&\r\n  // lowercase letter\r\n  key.charCodeAt(2) > 96 &&\r\n  key.charCodeAt(2) < 123\r\n\r\ntype DOMRendererOptions = RendererOptions<Node, Element>\r\n\r\nexport const patchProp: DOMRendererOptions['patchProp'] = (\r\n  el,\r\n  key,\r\n  prevValue,\r\n  nextValue,\r\n  namespace,\r\n  prevChildren,\r\n  parentComponent,\r\n  parentSuspense,\r\n  unmountChildren,\r\n) => {\r\n  const isSVG = namespace === 'svg'\r\n  /**\r\n   * dom.setAttribute('class', 'redbg')  dom.className = 'redbg'\r\n   * 但是性能对比：className > classList > setAttribute\r\n   */\r\n  if (key === 'class') {\r\n    patchClass(el, nextValue, isSVG)\r\n  } else if (key === 'style') {\r\n    /**\r\n     * 设置style的方式有3种：\r\n     * （1）字符串（添加原有style）\r\n     * dom.sytle.color = 'red';\r\n     * dom.sytle.backgroundColor = 'yellow';\r\n     * (2) setProperty（叠加原有style）\r\n     * box.style.setProperty('color', 'pink')\r\n     * （3）cssText（直接覆盖，原有的style会失效）\r\n     * box.style.cssText = 'color: pink';\r\n     */\r\n    patchStyle(el, prevValue, nextValue)\r\n  } else if (isOn(key)) {\r\n    // on开头的事件，排除onUpdate双向绑定的\r\n    // ignore v-model listeners\r\n    if (!isModelListener(key)) {\r\n      patchEvent(el, key, prevValue, nextValue, parentComponent)\r\n    }\r\n  } else if (\r\n    key[0] === '.'\r\n      ? ((key = key.slice(1)), true)\r\n      : key[0] === '^'\r\n        ? ((key = key.slice(1)), false)\r\n        : shouldSetAsProp(el, key, nextValue, isSVG)\r\n  ) {\r\n    patchDOMProp(\r\n      el,\r\n      key,\r\n      nextValue,\r\n      prevChildren,\r\n      parentComponent,\r\n      parentSuspense,\r\n      unmountChildren,\r\n    )\r\n  } else {\r\n    // special case for <input v-model type=\"checkbox\"> with\r\n    // :true-value & :false-value\r\n    // store value as dom properties since non-string values will be\r\n    // stringified.\r\n    if (key === 'true-value') {\r\n      ;(el as any)._trueValue = nextValue\r\n    } else if (key === 'false-value') {\r\n      ;(el as any)._falseValue = nextValue\r\n    }\r\n    patchAttr(el, key, nextValue, isSVG, parentComponent)\r\n  }\r\n}\r\n\r\nfunction shouldSetAsProp(\r\n  el: Element,\r\n  key: string,\r\n  value: unknown,\r\n  isSVG: boolean,\r\n) {\r\n  if (isSVG) {\r\n    // most keys must be set as attribute on svg elements to work\r\n    // ...except innerHTML & textContent\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n      return true\r\n    }\r\n    // or native onclick with function values\r\n    if (key in el && isNativeOn(key) && isFunction(value)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // these are enumerated attrs, however their corresponding DOM properties\r\n  // are actually booleans - this leads to setting it with a string \"false\"\r\n  // value leading it to be coerced to `true`, so we need to always treat\r\n  // them as attributes.\r\n  // Note that `contentEditable` doesn't have this problem: its DOM\r\n  // property is also enumerated string values.\r\n  if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\r\n    return false\r\n  }\r\n\r\n  // #1787, #2840 form property on form elements is readonly and must be set as\r\n  // attribute.\r\n  if (key === 'form') {\r\n    return false\r\n  }\r\n\r\n  // #1526 <input list> must be set as attribute\r\n  if (key === 'list' && el.tagName === 'INPUT') {\r\n    return false\r\n  }\r\n\r\n  // #2766 <textarea type> must be set as attribute\r\n  if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n    return false\r\n  }\r\n\r\n  // #8780 the width or height of embedded tags must be set as attribute\r\n  if (key === 'width' || key === 'height') {\r\n    const tag = el.tagName\r\n    if (\r\n      tag === 'IMG' ||\r\n      tag === 'VIDEO' ||\r\n      tag === 'CANVAS' ||\r\n      tag === 'SOURCE'\r\n    ) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // native onclick with string value, must be set as attribute\r\n  if (isNativeOn(key) && isString(value)) {\r\n    return false\r\n  }\r\n\r\n  return key in el\r\n}\r\n","import {\r\n  type ComponentInjectOptions,\r\n  type ComponentInternalInstance,\r\n  type ComponentOptions,\r\n  type ComponentOptionsMixin,\r\n  type ComponentOptionsWithArrayProps,\r\n  type ComponentOptionsWithObjectProps,\r\n  type ComponentOptionsWithoutProps,\r\n  type ComponentPropsOptions,\r\n  type ComputedOptions,\r\n  type ConcreteComponent,\r\n  type DefineComponent,\r\n  type EmitsOptions,\r\n  type ExtractPropTypes,\r\n  type MethodOptions,\r\n  type RenderFunction,\r\n  type RootHydrateFunction,\r\n  type SetupContext,\r\n  type SlotsType,\r\n  type VNode,\r\n  createVNode,\r\n  defineComponent,\r\n  nextTick,\r\n  warn,\r\n} from '@vue/runtime-core'\r\nimport { camelize, extend, hyphenate, isArray, toNumber } from '@vue/shared'\r\nimport { hydrate, render } from '.'\r\n\r\nexport type VueElementConstructor<P = {}> = {\r\n  new (initialProps?: Record<string, any>): VueElement & P\r\n}\r\n\r\n// defineCustomElement provides the same type inference as defineComponent\r\n// so most of the following overloads should be kept in sync w/ defineComponent.\r\n\r\n// overload 1: direct setup function\r\nexport function defineCustomElement<Props, RawBindings = object>(\r\n  setup: (\r\n    props: Readonly<Props>,\r\n    ctx: SetupContext,\r\n  ) => RawBindings | RenderFunction,\r\n): VueElementConstructor<Props>\r\n\r\n// overload 2: object format with no props\r\nexport function defineCustomElement<\r\n  Props = {},\r\n  RawBindings = {},\r\n  D = {},\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = EmitsOptions,\r\n  EE extends string = string,\r\n  I extends ComponentInjectOptions = {},\r\n  II extends string = string,\r\n  S extends SlotsType = {},\r\n>(\r\n  options: ComponentOptionsWithoutProps<\r\n    Props,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    I,\r\n    II,\r\n    S\r\n  > & { styles?: string[] },\r\n): VueElementConstructor<Props>\r\n\r\n// overload 3: object format with array props declaration\r\nexport function defineCustomElement<\r\n  PropNames extends string,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string,\r\n  I extends ComponentInjectOptions = {},\r\n  II extends string = string,\r\n  S extends SlotsType = {},\r\n>(\r\n  options: ComponentOptionsWithArrayProps<\r\n    PropNames,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    I,\r\n    II,\r\n    S\r\n  > & { styles?: string[] },\r\n): VueElementConstructor<{ [K in PropNames]: any }>\r\n\r\n// overload 4: object format with object props declaration\r\nexport function defineCustomElement<\r\n  PropsOptions extends Readonly<ComponentPropsOptions>,\r\n  RawBindings,\r\n  D,\r\n  C extends ComputedOptions = {},\r\n  M extends MethodOptions = {},\r\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\r\n  E extends EmitsOptions = Record<string, any>,\r\n  EE extends string = string,\r\n  I extends ComponentInjectOptions = {},\r\n  II extends string = string,\r\n  S extends SlotsType = {},\r\n>(\r\n  options: ComponentOptionsWithObjectProps<\r\n    PropsOptions,\r\n    RawBindings,\r\n    D,\r\n    C,\r\n    M,\r\n    Mixin,\r\n    Extends,\r\n    E,\r\n    EE,\r\n    I,\r\n    II,\r\n    S\r\n  > & { styles?: string[] },\r\n): VueElementConstructor<ExtractPropTypes<PropsOptions>>\r\n\r\n// overload 5: defining a custom element from the returned value of\r\n// `defineComponent`\r\nexport function defineCustomElement<P>(\r\n  options: DefineComponent<P, any, any, any>,\r\n): VueElementConstructor<ExtractPropTypes<P>>\r\n\r\n/*! #__NO_SIDE_EFFECTS__ */\r\nexport function defineCustomElement(\r\n  options: any,\r\n  hydrate?: RootHydrateFunction,\r\n): VueElementConstructor {\r\n  const Comp = defineComponent(options) as any\r\n  class VueCustomElement extends VueElement {\r\n    static def = Comp\r\n    constructor(initialProps?: Record<string, any>) {\r\n      super(Comp, initialProps, hydrate)\r\n    }\r\n  }\r\n\r\n  return VueCustomElement\r\n}\r\n\r\n/*! #__NO_SIDE_EFFECTS__ */\r\nexport const defineSSRCustomElement = ((options: any) => {\r\n  // @ts-expect-error\r\n  return defineCustomElement(options, hydrate)\r\n}) as typeof defineCustomElement\r\n\r\nconst BaseClass = (\r\n  typeof HTMLElement !== 'undefined' ? HTMLElement : class {}\r\n) as typeof HTMLElement\r\n\r\ntype InnerComponentDef = ConcreteComponent & { styles?: string[] }\r\n\r\nexport class VueElement extends BaseClass {\r\n  /**\r\n   * @internal\r\n   */\r\n  _instance: ComponentInternalInstance | null = null\r\n\r\n  private _connected = false\r\n  private _resolved = false\r\n  private _numberProps: Record<string, true> | null = null\r\n  private _styles?: HTMLStyleElement[]\r\n  private _ob?: MutationObserver | null = null\r\n  constructor(\r\n    private _def: InnerComponentDef,\r\n    private _props: Record<string, any> = {},\r\n    hydrate?: RootHydrateFunction,\r\n  ) {\r\n    super()\r\n    if (this.shadowRoot && hydrate) {\r\n      hydrate(this._createVNode(), this.shadowRoot)\r\n    } else {\r\n      if (__DEV__ && this.shadowRoot) {\r\n        warn(\r\n          `Custom element has pre-rendered declarative shadow root but is not ` +\r\n            `defined as hydratable. Use \\`defineSSRCustomElement\\`.`,\r\n        )\r\n      }\r\n      this.attachShadow({ mode: 'open' })\r\n      if (!(this._def as ComponentOptions).__asyncLoader) {\r\n        // for sync component defs we can immediately resolve props\r\n        this._resolveProps(this._def)\r\n      }\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    this._connected = true\r\n    if (!this._instance) {\r\n      if (this._resolved) {\r\n        this._update()\r\n      } else {\r\n        this._resolveDef()\r\n      }\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this._connected = false\r\n    if (this._ob) {\r\n      this._ob.disconnect()\r\n      this._ob = null\r\n    }\r\n    nextTick(() => {\r\n      if (!this._connected) {\r\n        render(null, this.shadowRoot!)\r\n        this._instance = null\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * resolve inner component definition (handle possible async component)\r\n   */\r\n  private _resolveDef() {\r\n    this._resolved = true\r\n\r\n    // set initial attrs\r\n    for (let i = 0; i < this.attributes.length; i++) {\r\n      this._setAttr(this.attributes[i].name)\r\n    }\r\n\r\n    // watch future attr changes\r\n    this._ob = new MutationObserver(mutations => {\r\n      for (const m of mutations) {\r\n        this._setAttr(m.attributeName!)\r\n      }\r\n    })\r\n\r\n    this._ob.observe(this, { attributes: true })\r\n\r\n    const resolve = (def: InnerComponentDef, isAsync = false) => {\r\n      const { props, styles } = def\r\n\r\n      // cast Number-type props set before resolve\r\n      let numberProps\r\n      if (props && !isArray(props)) {\r\n        for (const key in props) {\r\n          const opt = props[key]\r\n          if (opt === Number || (opt && opt.type === Number)) {\r\n            if (key in this._props) {\r\n              this._props[key] = toNumber(this._props[key])\r\n            }\r\n            ;(numberProps || (numberProps = Object.create(null)))[\r\n              camelize(key)\r\n            ] = true\r\n          }\r\n        }\r\n      }\r\n      this._numberProps = numberProps\r\n\r\n      if (isAsync) {\r\n        // defining getter/setters on prototype\r\n        // for sync defs, this already happened in the constructor\r\n        this._resolveProps(def)\r\n      }\r\n\r\n      // apply CSS\r\n      this._applyStyles(styles)\r\n\r\n      // initial render\r\n      this._update()\r\n    }\r\n\r\n    const asyncDef = (this._def as ComponentOptions).__asyncLoader\r\n    if (asyncDef) {\r\n      asyncDef().then(def => resolve(def, true))\r\n    } else {\r\n      resolve(this._def)\r\n    }\r\n  }\r\n\r\n  private _resolveProps(def: InnerComponentDef) {\r\n    const { props } = def\r\n    const declaredPropKeys = isArray(props) ? props : Object.keys(props || {})\r\n\r\n    // check if there are props set pre-upgrade or connect\r\n    for (const key of Object.keys(this)) {\r\n      if (key[0] !== '_' && declaredPropKeys.includes(key)) {\r\n        this._setProp(key, this[key as keyof this], true, false)\r\n      }\r\n    }\r\n\r\n    // defining getter/setters on prototype\r\n    for (const key of declaredPropKeys.map(camelize)) {\r\n      Object.defineProperty(this, key, {\r\n        get() {\r\n          return this._getProp(key)\r\n        },\r\n        set(val) {\r\n          this._setProp(key, val)\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  protected _setAttr(key: string) {\r\n    let value = this.getAttribute(key)\r\n    const camelKey = camelize(key)\r\n    if (this._numberProps && this._numberProps[camelKey]) {\r\n      value = toNumber(value)\r\n    }\r\n    this._setProp(camelKey, value, false)\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _getProp(key: string) {\r\n    return this._props[key]\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  protected _setProp(\r\n    key: string,\r\n    val: any,\r\n    shouldReflect = true,\r\n    shouldUpdate = true,\r\n  ) {\r\n    if (val !== this._props[key]) {\r\n      this._props[key] = val\r\n      if (shouldUpdate && this._instance) {\r\n        this._update()\r\n      }\r\n      // reflect\r\n      if (shouldReflect) {\r\n        if (val === true) {\r\n          this.setAttribute(hyphenate(key), '')\r\n        } else if (typeof val === 'string' || typeof val === 'number') {\r\n          this.setAttribute(hyphenate(key), val + '')\r\n        } else if (!val) {\r\n          this.removeAttribute(hyphenate(key))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _update() {\r\n    render(this._createVNode(), this.shadowRoot!)\r\n  }\r\n\r\n  private _createVNode(): VNode<any, any> {\r\n    const vnode = createVNode(this._def, extend({}, this._props))\r\n    if (!this._instance) {\r\n      vnode.ce = instance => {\r\n        this._instance = instance\r\n        instance.isCE = true\r\n        // HMR\r\n        if (__DEV__) {\r\n          instance.ceReload = newStyles => {\r\n            // always reset styles\r\n            if (this._styles) {\r\n              this._styles.forEach(s => this.shadowRoot!.removeChild(s))\r\n              this._styles.length = 0\r\n            }\r\n            this._applyStyles(newStyles)\r\n            this._instance = null\r\n            this._update()\r\n          }\r\n        }\r\n\r\n        const dispatch = (event: string, args: any[]) => {\r\n          this.dispatchEvent(\r\n            new CustomEvent(event, {\r\n              detail: args,\r\n            }),\r\n          )\r\n        }\r\n\r\n        // intercept emit\r\n        instance.emit = (event: string, ...args: any[]) => {\r\n          // dispatch both the raw and hyphenated versions of an event\r\n          // to match Vue behavior\r\n          dispatch(event, args)\r\n          if (hyphenate(event) !== event) {\r\n            dispatch(hyphenate(event), args)\r\n          }\r\n        }\r\n\r\n        // locate nearest Vue custom element parent for provide/inject\r\n        let parent: Node | null = this\r\n        while (\r\n          (parent =\r\n            parent && (parent.parentNode || (parent as ShadowRoot).host))\r\n        ) {\r\n          if (parent instanceof VueElement) {\r\n            instance.parent = parent._instance\r\n            instance.provides = parent._instance!.provides\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return vnode\r\n  }\r\n\r\n  private _applyStyles(styles: string[] | undefined) {\r\n    if (styles) {\r\n      styles.forEach(css => {\r\n        const s = document.createElement('style')\r\n        s.textContent = css\r\n        this.shadowRoot!.appendChild(s)\r\n        // record for HMR\r\n        if (__DEV__) {\r\n          ;(this._styles || (this._styles = [])).push(s)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","import {\r\n  type ElementWithTransition,\r\n  type TransitionProps,\r\n  TransitionPropsValidators,\r\n  addTransitionClass,\r\n  forceReflow,\r\n  getTransitionInfo,\r\n  removeTransitionClass,\r\n  resolveTransitionProps,\r\n  vtcKey,\r\n} from './Transition'\r\nimport {\r\n  type ComponentOptions,\r\n  DeprecationTypes,\r\n  Fragment,\r\n  type SetupContext,\r\n  type VNode,\r\n  compatUtils,\r\n  createVNode,\r\n  getCurrentInstance,\r\n  getTransitionRawChildren,\r\n  onUpdated,\r\n  resolveTransitionHooks,\r\n  setTransitionHooks,\r\n  toRaw,\r\n  useTransitionState,\r\n  warn,\r\n} from '@vue/runtime-core'\r\nimport { extend } from '@vue/shared'\r\n\r\nconst positionMap = new WeakMap<VNode, DOMRect>()\r\nconst newPositionMap = new WeakMap<VNode, DOMRect>()\r\nconst moveCbKey = Symbol('_moveCb')\r\nconst enterCbKey = Symbol('_enterCb')\r\nexport type TransitionGroupProps = Omit<TransitionProps, 'mode'> & {\r\n  tag?: string\r\n  moveClass?: string\r\n}\r\n\r\nconst TransitionGroupImpl: ComponentOptions = {\r\n  name: 'TransitionGroup',\r\n\r\n  props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n    tag: String,\r\n    moveClass: String,\r\n  }),\r\n\r\n  setup(props: TransitionGroupProps, { slots }: SetupContext) {\r\n    const instance = getCurrentInstance()!\r\n    const state = useTransitionState()\r\n    let prevChildren: VNode[]\r\n    let children: VNode[]\r\n\r\n    onUpdated(() => {\r\n      // children is guaranteed to exist after initial render\r\n      if (!prevChildren.length) {\r\n        return\r\n      }\r\n      const moveClass = props.moveClass || `${props.name || 'v'}-move`\r\n\r\n      if (\r\n        !hasCSSTransform(\r\n          prevChildren[0].el as ElementWithTransition,\r\n          instance.vnode.el as Node,\r\n          moveClass,\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // we divide the work into three loops to avoid mixing DOM reads and writes\r\n      // in each iteration - which helps prevent layout thrashing.\r\n      prevChildren.forEach(callPendingCbs)\r\n      prevChildren.forEach(recordPosition)\r\n      const movedChildren = prevChildren.filter(applyTranslation)\r\n\r\n      // force reflow to put everything in position\r\n      forceReflow()\r\n\r\n      movedChildren.forEach(c => {\r\n        const el = c.el as ElementWithTransition\r\n        const style = el.style\r\n        addTransitionClass(el, moveClass)\r\n        style.transform = style.webkitTransform = style.transitionDuration = ''\r\n        const cb = ((el as any)[moveCbKey] = (e: TransitionEvent) => {\r\n          if (e && e.target !== el) {\r\n            return\r\n          }\r\n          if (!e || /transform$/.test(e.propertyName)) {\r\n            el.removeEventListener('transitionend', cb)\r\n            ;(el as any)[moveCbKey] = null\r\n            removeTransitionClass(el, moveClass)\r\n          }\r\n        })\r\n        el.addEventListener('transitionend', cb)\r\n      })\r\n    })\r\n\r\n    return () => {\r\n      const rawProps = toRaw(props)\r\n      const cssTransitionProps = resolveTransitionProps(rawProps)\r\n      let tag = rawProps.tag || Fragment\r\n\r\n      if (\r\n        __COMPAT__ &&\r\n        !rawProps.tag &&\r\n        compatUtils.checkCompatEnabled(\r\n          DeprecationTypes.TRANSITION_GROUP_ROOT,\r\n          instance.parent,\r\n        )\r\n      ) {\r\n        tag = 'span'\r\n      }\r\n\r\n      prevChildren = children\r\n      children = slots.default ? getTransitionRawChildren(slots.default()) : []\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (child.key != null) {\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance),\r\n          )\r\n        } else if (__DEV__) {\r\n          warn(`<TransitionGroup> children must be keyed.`)\r\n        }\r\n      }\r\n\r\n      if (prevChildren) {\r\n        for (let i = 0; i < prevChildren.length; i++) {\r\n          const child = prevChildren[i]\r\n          setTransitionHooks(\r\n            child,\r\n            resolveTransitionHooks(child, cssTransitionProps, state, instance),\r\n          )\r\n          positionMap.set(child, (child.el as Element).getBoundingClientRect())\r\n        }\r\n      }\r\n\r\n      return createVNode(tag, null, children)\r\n    }\r\n  },\r\n}\r\n\r\nif (__COMPAT__) {\r\n  TransitionGroupImpl.__isBuiltIn = true\r\n}\r\n\r\n/**\r\n * TransitionGroup does not support \"mode\" so we need to remove it from the\r\n * props declarations, but direct delete operation is considered a side effect\r\n * and will make the entire transition feature non-tree-shakeable, so we do it\r\n * in a function and mark the function's invocation as pure.\r\n */\r\nconst removeMode = (props: any) => delete props.mode\r\n/*#__PURE__*/ removeMode(TransitionGroupImpl.props)\r\n\r\nexport const TransitionGroup = TransitionGroupImpl as unknown as {\r\n  new (): {\r\n    $props: TransitionGroupProps\r\n  }\r\n}\r\n\r\nfunction callPendingCbs(c: VNode) {\r\n  const el = c.el as any\r\n  if (el[moveCbKey]) {\r\n    el[moveCbKey]()\r\n  }\r\n  if (el[enterCbKey]) {\r\n    el[enterCbKey]()\r\n  }\r\n}\r\n\r\nfunction recordPosition(c: VNode) {\r\n  newPositionMap.set(c, (c.el as Element).getBoundingClientRect())\r\n}\r\n\r\nfunction applyTranslation(c: VNode): VNode | undefined {\r\n  const oldPos = positionMap.get(c)!\r\n  const newPos = newPositionMap.get(c)!\r\n  const dx = oldPos.left - newPos.left\r\n  const dy = oldPos.top - newPos.top\r\n  if (dx || dy) {\r\n    const s = (c.el as HTMLElement).style\r\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`\r\n    s.transitionDuration = '0s'\r\n    return c\r\n  }\r\n}\r\n\r\nfunction hasCSSTransform(\r\n  el: ElementWithTransition,\r\n  root: Node,\r\n  moveClass: string,\r\n): boolean {\r\n  // Detect whether an element with the move class applied has\r\n  // CSS transitions. Since the element may be inside an entering\r\n  // transition at this very moment, we make a clone of it and remove\r\n  // all other transition classes applied to ensure only the move class\r\n  // is applied.\r\n  const clone = el.cloneNode() as HTMLElement\r\n  const _vtc = el[vtcKey]\r\n  if (_vtc) {\r\n    _vtc.forEach(cls => {\r\n      cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c))\r\n    })\r\n  }\r\n  moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c))\r\n  clone.style.display = 'none'\r\n  const container = (\r\n    root.nodeType === 1 ? root : root.parentNode\r\n  ) as HTMLElement\r\n  container.appendChild(clone)\r\n  const { hasTransform } = getTransitionInfo(clone)\r\n  container.removeChild(clone)\r\n  return hasTransform\r\n}\r\n","import {\r\n  type DirectiveBinding,\r\n  type DirectiveHook,\r\n  type ObjectDirective,\r\n  type VNode,\r\n  nextTick,\r\n  warn,\r\n} from '@vue/runtime-core'\r\nimport { addEventListener } from '../modules/events'\r\nimport {\r\n  invokeArrayFns,\r\n  isArray,\r\n  isSet,\r\n  looseEqual,\r\n  looseIndexOf,\r\n  looseToNumber,\r\n} from '@vue/shared'\r\n\r\ntype AssignerFn = (value: any) => void\r\n\r\nconst getModelAssigner = (vnode: VNode): AssignerFn => {\r\n  const fn =\r\n    vnode.props!['onUpdate:modelValue'] ||\r\n    (__COMPAT__ && vnode.props!['onModelCompat:input'])\r\n  return isArray(fn) ? value => invokeArrayFns(fn, value) : fn\r\n}\r\n\r\nfunction onCompositionStart(e: Event) {\r\n  ;(e.target as any).composing = true\r\n}\r\n\r\nfunction onCompositionEnd(e: Event) {\r\n  const target = e.target as any\r\n  if (target.composing) {\r\n    target.composing = false\r\n    target.dispatchEvent(new Event('input'))\r\n  }\r\n}\r\n\r\nconst assignKey = Symbol('_assign')\r\n\r\ntype ModelDirective<T> = ObjectDirective<\r\n  T & { [assignKey]: AssignerFn; _assigning?: boolean }\r\n>\r\n\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nexport const vModelText: ModelDirective<\r\n  HTMLInputElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n    el[assignKey] = getModelAssigner(vnode)\r\n    const castToNumber =\r\n      number || (vnode.props && vnode.props.type === 'number')\r\n    addEventListener(el, lazy ? 'change' : 'input', e => {\r\n      if ((e.target as any).composing) return\r\n      let domValue: string | number = el.value\r\n      if (trim) {\r\n        domValue = domValue.trim()\r\n      }\r\n      if (castToNumber) {\r\n        domValue = looseToNumber(domValue)\r\n      }\r\n      el[assignKey](domValue)\r\n    })\r\n    if (trim) {\r\n      addEventListener(el, 'change', () => {\r\n        el.value = el.value.trim()\r\n      })\r\n    }\r\n    if (!lazy) {\r\n      addEventListener(el, 'compositionstart', onCompositionStart)\r\n      addEventListener(el, 'compositionend', onCompositionEnd)\r\n      // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n      // switching focus before confirming composition choice\r\n      // this also fixes the issue where some browsers e.g. iOS Chrome\r\n      // fires \"change\" instead of \"input\" on autocomplete.\r\n      addEventListener(el, 'change', onCompositionEnd)\r\n    }\r\n  },\r\n  // set value on mounted so it's after min/max for type=\"range\"\r\n  mounted(el, { value }) {\r\n    el.value = value == null ? '' : value\r\n  },\r\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n    el[assignKey] = getModelAssigner(vnode)\r\n    // avoid clearing unresolved text. #2302\r\n    if ((el as any).composing) return\r\n\r\n    const elValue =\r\n      number || el.type === 'number' ? looseToNumber(el.value) : el.value\r\n    const newValue = value == null ? '' : value\r\n\r\n    if (elValue === newValue) {\r\n      return\r\n    }\r\n\r\n    if (document.activeElement === el && el.type !== 'range') {\r\n      if (lazy) {\r\n        return\r\n      }\r\n      if (trim && el.value.trim() === newValue) {\r\n        return\r\n      }\r\n    }\r\n\r\n    el.value = newValue\r\n  },\r\n}\r\n\r\nexport const vModelCheckbox: ModelDirective<HTMLInputElement> = {\r\n  // #4096 array checkboxes need to be deep traversed\r\n  deep: true,\r\n  created(el, _, vnode) {\r\n    el[assignKey] = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      const modelValue = (el as any)._modelValue\r\n      const elementValue = getValue(el)\r\n      const checked = el.checked\r\n      const assign = el[assignKey]\r\n      if (isArray(modelValue)) {\r\n        const index = looseIndexOf(modelValue, elementValue)\r\n        const found = index !== -1\r\n        if (checked && !found) {\r\n          assign(modelValue.concat(elementValue))\r\n        } else if (!checked && found) {\r\n          const filtered = [...modelValue]\r\n          filtered.splice(index, 1)\r\n          assign(filtered)\r\n        }\r\n      } else if (isSet(modelValue)) {\r\n        const cloned = new Set(modelValue)\r\n        if (checked) {\r\n          cloned.add(elementValue)\r\n        } else {\r\n          cloned.delete(elementValue)\r\n        }\r\n        assign(cloned)\r\n      } else {\r\n        assign(getCheckboxValue(el, checked))\r\n      }\r\n    })\r\n  },\r\n  // set initial checked on mount to wait for true-value/false-value\r\n  mounted: setChecked,\r\n  beforeUpdate(el, binding, vnode) {\r\n    el[assignKey] = getModelAssigner(vnode)\r\n    setChecked(el, binding, vnode)\r\n  },\r\n}\r\n\r\nfunction setChecked(\r\n  el: HTMLInputElement,\r\n  { value, oldValue }: DirectiveBinding,\r\n  vnode: VNode,\r\n) {\r\n  // store the v-model value on the element so it can be accessed by the\r\n  // change listener.\r\n  ;(el as any)._modelValue = value\r\n  if (isArray(value)) {\r\n    el.checked = looseIndexOf(value, vnode.props!.value) > -1\r\n  } else if (isSet(value)) {\r\n    el.checked = value.has(vnode.props!.value)\r\n  } else if (value !== oldValue) {\r\n    el.checked = looseEqual(value, getCheckboxValue(el, true))\r\n  }\r\n}\r\n\r\nexport const vModelRadio: ModelDirective<HTMLInputElement> = {\r\n  created(el, { value }, vnode) {\r\n    el.checked = looseEqual(value, vnode.props!.value)\r\n    el[assignKey] = getModelAssigner(vnode)\r\n    addEventListener(el, 'change', () => {\r\n      el[assignKey](getValue(el))\r\n    })\r\n  },\r\n  beforeUpdate(el, { value, oldValue }, vnode) {\r\n    el[assignKey] = getModelAssigner(vnode)\r\n    if (value !== oldValue) {\r\n      el.checked = looseEqual(value, vnode.props!.value)\r\n    }\r\n  },\r\n}\r\n\r\nexport const vModelSelect: ModelDirective<HTMLSelectElement> = {\r\n  // <select multiple> value need to be deep traversed\r\n  deep: true,\r\n  created(el, { value, modifiers: { number } }, vnode) {\r\n    const isSetModel = isSet(value)\r\n    addEventListener(el, 'change', () => {\r\n      const selectedVal = Array.prototype.filter\r\n        .call(el.options, (o: HTMLOptionElement) => o.selected)\r\n        .map((o: HTMLOptionElement) =>\r\n          number ? looseToNumber(getValue(o)) : getValue(o),\r\n        )\r\n      el[assignKey](\r\n        el.multiple\r\n          ? isSetModel\r\n            ? new Set(selectedVal)\r\n            : selectedVal\r\n          : selectedVal[0],\r\n      )\r\n      el._assigning = true\r\n      nextTick(() => {\r\n        el._assigning = false\r\n      })\r\n    })\r\n    el[assignKey] = getModelAssigner(vnode)\r\n  },\r\n  // set value in mounted & updated because <select> relies on its children\r\n  // <option>s.\r\n  mounted(el, { value, oldValue, modifiers: { number } }) {\r\n    setSelected(el, value, oldValue, number)\r\n  },\r\n  beforeUpdate(el, _binding, vnode) {\r\n    el[assignKey] = getModelAssigner(vnode)\r\n  },\r\n  updated(el, { value, oldValue, modifiers: { number } }) {\r\n    if (!el._assigning) {\r\n      setSelected(el, value, oldValue, number)\r\n    }\r\n  },\r\n}\r\n\r\nfunction setSelected(\r\n  el: HTMLSelectElement,\r\n  value: any,\r\n  oldValue: any,\r\n  number: boolean,\r\n) {\r\n  const isMultiple = el.multiple\r\n  const isArrayValue = isArray(value)\r\n  if (isMultiple && !isArrayValue && !isSet(value)) {\r\n    __DEV__ &&\r\n      warn(\r\n        `<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n          `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`,\r\n      )\r\n    return\r\n  }\r\n\r\n  // fast path for updates triggered by other changes\r\n  if (isArrayValue && looseEqual(value, oldValue)) {\r\n    return\r\n  }\r\n\r\n  for (let i = 0, l = el.options.length; i < l; i++) {\r\n    const option = el.options[i]\r\n    const optionValue = getValue(option)\r\n    if (isMultiple) {\r\n      if (isArrayValue) {\r\n        const optionType = typeof optionValue\r\n        // fast path for string / number values\r\n        if (optionType === 'string' || optionType === 'number') {\r\n          option.selected = value.includes(\r\n            number ? looseToNumber(optionValue) : optionValue,\r\n          )\r\n        } else {\r\n          option.selected = looseIndexOf(value, optionValue) > -1\r\n        }\r\n      } else {\r\n        option.selected = value.has(optionValue)\r\n      }\r\n    } else {\r\n      if (looseEqual(getValue(option), value)) {\r\n        if (el.selectedIndex !== i) el.selectedIndex = i\r\n        return\r\n      }\r\n    }\r\n  }\r\n  if (!isMultiple && el.selectedIndex !== -1) {\r\n    el.selectedIndex = -1\r\n  }\r\n}\r\n\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el: HTMLOptionElement | HTMLInputElement) {\r\n  return '_value' in el ? (el as any)._value : el.value\r\n}\r\n\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(\r\n  el: HTMLInputElement & { _trueValue?: any; _falseValue?: any },\r\n  checked: boolean,\r\n) {\r\n  const key = checked ? '_trueValue' : '_falseValue'\r\n  return key in el ? el[key] : checked\r\n}\r\n\r\nexport const vModelDynamic: ObjectDirective<\r\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n> = {\r\n  created(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'created')\r\n  },\r\n  mounted(el, binding, vnode) {\r\n    callModelHook(el, binding, vnode, null, 'mounted')\r\n  },\r\n  beforeUpdate(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate')\r\n  },\r\n  updated(el, binding, vnode, prevVNode) {\r\n    callModelHook(el, binding, vnode, prevVNode, 'updated')\r\n  },\r\n}\r\n\r\nfunction resolveDynamicModel(tagName: string, type: string | undefined) {\r\n  switch (tagName) {\r\n    case 'SELECT':\r\n      return vModelSelect\r\n    case 'TEXTAREA':\r\n      return vModelText\r\n    default:\r\n      switch (type) {\r\n        case 'checkbox':\r\n          return vModelCheckbox\r\n        case 'radio':\r\n          return vModelRadio\r\n        default:\r\n          return vModelText\r\n      }\r\n  }\r\n}\r\n\r\nfunction callModelHook(\r\n  el: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement,\r\n  binding: DirectiveBinding,\r\n  vnode: VNode,\r\n  prevVNode: VNode | null,\r\n  hook: keyof ObjectDirective,\r\n) {\r\n  const modelToUse = resolveDynamicModel(\r\n    el.tagName,\r\n    vnode.props && vnode.props.type,\r\n  )\r\n  const fn = modelToUse[hook] as DirectiveHook\r\n  fn && fn(el, binding, vnode, prevVNode)\r\n}\r\n\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nexport function initVModelForSSR() {\r\n  vModelText.getSSRProps = ({ value }) => ({ value })\r\n\r\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n    if (isArray(value)) {\r\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\r\n        return { checked: true }\r\n      }\r\n    } else if (isSet(value)) {\r\n      if (vnode.props && value.has(vnode.props.value)) {\r\n        return { checked: true }\r\n      }\r\n    } else if (value) {\r\n      return { checked: true }\r\n    }\r\n  }\r\n\r\n  vModelDynamic.getSSRProps = (binding, vnode) => {\r\n    if (typeof vnode.type !== 'string') {\r\n      return\r\n    }\r\n    const modelToUse = resolveDynamicModel(\r\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\r\n      vnode.type.toUpperCase(),\r\n      vnode.props && vnode.props.type,\r\n    )\r\n    if (modelToUse.getSSRProps) {\r\n      return modelToUse.getSSRProps(binding, vnode)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  type ComponentInternalInstance,\r\n  DeprecationTypes,\r\n  type LegacyConfig,\r\n  compatUtils,\r\n  getCurrentInstance,\r\n} from '@vue/runtime-core'\r\nimport { hyphenate, isArray } from '@vue/shared'\r\n\r\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta']\r\n\r\ntype KeyedEvent = KeyboardEvent | MouseEvent | TouchEvent\r\n\r\nconst modifierGuards: Record<\r\n  string,\r\n  (e: Event, modifiers: string[]) => void | boolean\r\n> = {\r\n  stop: e => e.stopPropagation(),\r\n  prevent: e => e.preventDefault(),\r\n  self: e => e.target !== e.currentTarget,\r\n  ctrl: e => !(e as KeyedEvent).ctrlKey,\r\n  shift: e => !(e as KeyedEvent).shiftKey,\r\n  alt: e => !(e as KeyedEvent).altKey,\r\n  meta: e => !(e as KeyedEvent).metaKey,\r\n  left: e => 'button' in e && (e as MouseEvent).button !== 0,\r\n  middle: e => 'button' in e && (e as MouseEvent).button !== 1,\r\n  right: e => 'button' in e && (e as MouseEvent).button !== 2,\r\n  exact: (e, modifiers) =>\r\n    systemModifiers.some(m => (e as any)[`${m}Key`] && !modifiers.includes(m)),\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withModifiers = <\r\n  T extends (event: Event, ...args: unknown[]) => any,\r\n>(\r\n  fn: T & { _withMods?: { [key: string]: T } },\r\n  modifiers: string[],\r\n) => {\r\n  const cache = fn._withMods || (fn._withMods = {})\r\n  const cacheKey = modifiers.join('.')\r\n  return (\r\n    cache[cacheKey] ||\r\n    (cache[cacheKey] = ((event, ...args) => {\r\n      for (let i = 0; i < modifiers.length; i++) {\r\n        const guard = modifierGuards[modifiers[i]]\r\n        if (guard && guard(event, modifiers)) return\r\n      }\r\n      return fn(event, ...args)\r\n    }) as T)\r\n  )\r\n}\r\n\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames: Record<string, string | string[]> = {\r\n  esc: 'escape',\r\n  space: ' ',\r\n  up: 'arrow-up',\r\n  left: 'arrow-left',\r\n  right: 'arrow-right',\r\n  down: 'arrow-down',\r\n  delete: 'backspace',\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport const withKeys = <T extends (event: KeyboardEvent) => any>(\r\n  fn: T & { _withKeys?: { [k: string]: T } },\r\n  modifiers: string[],\r\n) => {\r\n  let globalKeyCodes: LegacyConfig['keyCodes']\r\n  let instance: ComponentInternalInstance | null = null\r\n  if (__COMPAT__) {\r\n    instance = getCurrentInstance()\r\n    if (\r\n      compatUtils.isCompatEnabled(DeprecationTypes.CONFIG_KEY_CODES, instance)\r\n    ) {\r\n      if (instance) {\r\n        globalKeyCodes = (instance.appContext.config as LegacyConfig).keyCodes\r\n      }\r\n    }\r\n    if (__DEV__ && modifiers.some(m => /^\\d+$/.test(m))) {\r\n      compatUtils.warnDeprecation(\r\n        DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n        instance,\r\n      )\r\n    }\r\n  }\r\n\r\n  const cache: { [k: string]: T } = fn._withKeys || (fn._withKeys = {})\r\n  const cacheKey = modifiers.join('.')\r\n\r\n  return (\r\n    cache[cacheKey] ||\r\n    (cache[cacheKey] = (event => {\r\n      if (!('key' in event)) {\r\n        return\r\n      }\r\n\r\n      const eventKey = hyphenate(event.key)\r\n      if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n        return fn(event)\r\n      }\r\n\r\n      if (__COMPAT__) {\r\n        const keyCode = String(event.keyCode)\r\n        if (\r\n          compatUtils.isCompatEnabled(\r\n            DeprecationTypes.V_ON_KEYCODE_MODIFIER,\r\n            instance,\r\n          ) &&\r\n          modifiers.some(mod => mod == keyCode)\r\n        ) {\r\n          return fn(event)\r\n        }\r\n        if (globalKeyCodes) {\r\n          for (const mod of modifiers) {\r\n            const codes = globalKeyCodes[mod]\r\n            if (codes) {\r\n              const matches = isArray(codes)\r\n                ? codes.some(code => String(code) === keyCode)\r\n                : String(codes) === keyCode\r\n              if (matches) {\r\n                return fn(event)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }) as T)\r\n  )\r\n}\r\n","import {\r\n  type App,\r\n  type CreateAppFunction,\r\n  DeprecationTypes,\r\n  type ElementNamespace,\r\n  type HydrationRenderer,\r\n  type Renderer,\r\n  type RootHydrateFunction,\r\n  type RootRenderFunction,\r\n  compatUtils,\r\n  createHydrationRenderer,\r\n  createRenderer,\r\n  isRuntimeOnly,\r\n  warn,\r\n} from '@vue/runtime-core'\r\nimport { nodeOps } from './nodeOps'\r\nimport { patchProp } from './patchProp'\r\n// Importing from the compiler, will be tree-shaken in prod\r\nimport {\r\n  NOOP,\r\n  extend,\r\n  isFunction,\r\n  isHTMLTag,\r\n  isMathMLTag,\r\n  isSVGTag,\r\n  isString,\r\n} from '@vue/shared'\r\n\r\ndeclare module '@vue/reactivity' {\r\n  export interface RefUnwrapBailTypes {\r\n    runtimeDOMBailTypes: Node | Window\r\n  }\r\n}\r\n\r\n//对dom的原生操作，添加、删除之类的\r\nconst rendererOptions = /*#__PURE__*/ extend({ patchProp }, nodeOps)\r\n\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer: Renderer<Element | ShadowRoot> | HydrationRenderer\r\n\r\nlet enabledHydration = false\r\n\r\nfunction ensureRenderer() {\r\n  return (\r\n    renderer ||\r\n    (renderer = createRenderer<Node, Element | ShadowRoot>(rendererOptions))\r\n  )\r\n}\r\n\r\nfunction ensureHydrationRenderer() {\r\n  renderer = enabledHydration\r\n    ? renderer\r\n    : createHydrationRenderer(rendererOptions)\r\n  enabledHydration = true\r\n  return renderer as HydrationRenderer\r\n}\r\n\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nexport const render = ((...args) => {\r\n  ensureRenderer().render(...args)\r\n}) as RootRenderFunction<Element | ShadowRoot>\r\n\r\nexport const hydrate = ((...args) => {\r\n  ensureHydrationRenderer().hydrate(...args)\r\n}) as RootHydrateFunction\r\n\r\nexport const createApp = ((...args) => {\r\n  /**\r\n   * 先通过ensureRenderer方法创建一个具有render对象和createApp函数的对象\r\n   * 再调用createApp创建app，参数传入的是根组件\r\n   */\r\n  const app = ensureRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    // 检查元素是否是原生的标签\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  // 重置了App对象中的mount方法\r\n  const { mount } = app\r\n  /**\r\n   * \r\n   * @param containerOrSelector 传入id/class或者dom元素均可以\r\n   * @returns \r\n   */\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (!container) return\r\n\r\n    //App对象中的_component就是传入的根组件\r\n    // 如果根组件中不存在template或者render函数，就把容器的innerHtml内容复制给根组件的template\r\n    const component = app._component\r\n    if (!isFunction(component) && !component.render && !component.template) {\r\n      // __UNSAFE__\r\n      // Reason: potential execution of JS expressions in in-DOM template.\r\n      // The user must make sure the in-DOM template is trusted. If it's\r\n      // rendered by the server, the template should not contain any user data.\r\n      component.template = container.innerHTML\r\n      // 2.x compat check\r\n      if (__COMPAT__ && __DEV__) {\r\n        for (let i = 0; i < container.attributes.length; i++) {\r\n          const attr = container.attributes[i]\r\n          if (attr.name !== 'v-cloak' && /^(v-|:|@)/.test(attr.name)) {\r\n            compatUtils.warnDeprecation(\r\n              DeprecationTypes.GLOBAL_MOUNT_CONTAINER,\r\n              null,\r\n            )\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // clear content before mounting\r\n    container.innerHTML = ''\r\n    const proxy = mount(container, false, resolveRootNamespace(container))\r\n    if (container instanceof Element) {\r\n      container.removeAttribute('v-cloak')\r\n      container.setAttribute('data-v-app', '')\r\n    }\r\n    return proxy\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nexport const createSSRApp = ((...args) => {\r\n  const app = ensureHydrationRenderer().createApp(...args)\r\n\r\n  if (__DEV__) {\r\n    injectNativeTagCheck(app)\r\n    injectCompilerOptionsCheck(app)\r\n  }\r\n\r\n  const { mount } = app\r\n  app.mount = (containerOrSelector: Element | ShadowRoot | string): any => {\r\n    const container = normalizeContainer(containerOrSelector)\r\n    if (container) {\r\n      return mount(container, true, resolveRootNamespace(container))\r\n    }\r\n  }\r\n\r\n  return app\r\n}) as CreateAppFunction<Element>\r\n\r\nfunction resolveRootNamespace(container: Element): ElementNamespace {\r\n  if (container instanceof SVGElement) {\r\n    return 'svg'\r\n  }\r\n  if (\r\n    typeof MathMLElement === 'function' &&\r\n    container instanceof MathMLElement\r\n  ) {\r\n    return 'mathml'\r\n  }\r\n}\r\n\r\nfunction injectNativeTagCheck(app: App) {\r\n  // Inject `isNativeTag`\r\n  // this is used for component name validation (dev only)\r\n  Object.defineProperty(app.config, 'isNativeTag', {\r\n    value: (tag: string) => isHTMLTag(tag) || isSVGTag(tag) || isMathMLTag(tag),\r\n    writable: false,\r\n  })\r\n}\r\n\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app: App) {\r\n  if (isRuntimeOnly()) {\r\n    const isCustomElement = app.config.isCustomElement\r\n    Object.defineProperty(app.config, 'isCustomElement', {\r\n      get() {\r\n        return isCustomElement\r\n      },\r\n      set() {\r\n        warn(\r\n          `The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n            `\\`compilerOptions.isCustomElement\\` instead.`,\r\n        )\r\n      },\r\n    })\r\n\r\n    const compilerOptions = app.config.compilerOptions\r\n    const msg =\r\n      `The \\`compilerOptions\\` config option is only respected when using ` +\r\n      `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n      `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n      `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n      `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n      `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n      `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`\r\n\r\n    Object.defineProperty(app.config, 'compilerOptions', {\r\n      get() {\r\n        warn(msg)\r\n        return compilerOptions\r\n      },\r\n      set() {\r\n        warn(msg)\r\n      },\r\n    })\r\n  }\r\n}\r\n\r\nfunction normalizeContainer(\r\n  container: Element | ShadowRoot | string,\r\n): Element | null {\r\n  if (isString(container)) {\r\n    const res = document.querySelector(container)\r\n    if (__DEV__ && !res) {\r\n      warn(\r\n        `Failed to mount app: mount target selector \"${container}\" returned null.`,\r\n      )\r\n    }\r\n    return res\r\n  }\r\n  if (\r\n    __DEV__ &&\r\n    window.ShadowRoot &&\r\n    container instanceof window.ShadowRoot &&\r\n    container.mode === 'closed'\r\n  ) {\r\n    warn(\r\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`,\r\n    )\r\n  }\r\n  return container as any\r\n}\r\n\r\n// Custom element support\r\nexport {\r\n  defineCustomElement,\r\n  defineSSRCustomElement,\r\n  VueElement,\r\n  type VueElementConstructor,\r\n} from './apiCustomElement'\r\n\r\n// SFC CSS utilities\r\nexport { useCssModule } from './helpers/useCssModule'\r\nexport { useCssVars } from './helpers/useCssVars'\r\n\r\n// DOM-only components\r\nexport { Transition, type TransitionProps } from './components/Transition'\r\nexport {\r\n  TransitionGroup,\r\n  type TransitionGroupProps,\r\n} from './components/TransitionGroup'\r\n\r\n// **Internal** DOM-only runtime directive helpers\r\nexport {\r\n  vModelText,\r\n  vModelCheckbox,\r\n  vModelRadio,\r\n  vModelSelect,\r\n  vModelDynamic,\r\n} from './directives/vModel'\r\nexport { withModifiers, withKeys } from './directives/vOn'\r\nexport { vShow } from './directives/vShow'\r\n\r\nimport { initVModelForSSR } from './directives/vModel'\r\nimport { initVShowForSSR } from './directives/vShow'\r\n\r\nlet ssrDirectiveInitialized = false\r\n\r\n/**\r\n * @internal\r\n */\r\nexport const initDirectivesForSSR = __SSR__\r\n  ? () => {\r\n      if (!ssrDirectiveInitialized) {\r\n        ssrDirectiveInitialized = true\r\n        initVModelForSSR()\r\n        initVShowForSSR()\r\n      }\r\n    }\r\n  : NOOP\r\n\r\n// re-export everything from core\r\n// h, Component, reactivity API, nextTick, flags & types\r\nexport * from '@vue/runtime-core'\r\n\r\nexport * from './jsx'\r\n","import { type ElementWithTransition, vtcKey } from '../components/Transition'\r\n\r\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nexport function patchClass(el: Element, value: string | null, isSVG: boolean) {\r\n  // directly setting className should be faster than setAttribute in theory\r\n  // if this is an element during a transition, take the temporary transition\r\n  // classes into account.\r\n  const transitionClasses = (el as ElementWithTransition)[vtcKey]\r\n  if (transitionClasses) {\r\n    value = (\r\n      value ? [value, ...transitionClasses] : [...transitionClasses]\r\n    ).join(' ')\r\n  }\r\n  if (value == null) {\r\n    el.removeAttribute('class')\r\n  } else if (isSVG) {\r\n    el.setAttribute('class', value)\r\n  } else {\r\n    el.className = value\r\n  }\r\n}\r\n","// __UNSAFE__\r\n// Reason: potentially setting innerHTML.\r\n// This can come from explicit usage of v-html or innerHTML as a prop in render\r\n\r\nimport { DeprecationTypes, compatUtils, warn } from '@vue/runtime-core'\r\nimport { includeBooleanAttr } from '@vue/shared'\r\n\r\n// functions. The user is responsible for using them with only trusted content.\r\nexport function patchDOMProp(\r\n  el: any,\r\n  key: string,\r\n  value: any,\r\n  // the following args are passed only due to potential innerHTML/textContent\r\n  // overriding existing VNodes, in which case the old tree must be properly\r\n  // unmounted.\r\n  prevChildren: any,\r\n  parentComponent: any,\r\n  parentSuspense: any,\r\n  unmountChildren: any,\r\n) {\r\n  if (key === 'innerHTML' || key === 'textContent') {\r\n    if (prevChildren) {\r\n      unmountChildren(prevChildren, parentComponent, parentSuspense)\r\n    }\r\n    el[key] = value == null ? '' : value\r\n    return\r\n  }\r\n\r\n  const tag = el.tagName\r\n\r\n  if (\r\n    key === 'value' &&\r\n    tag !== 'PROGRESS' &&\r\n    // custom elements may use _value internally\r\n    !tag.includes('-')\r\n  ) {\r\n    // store value as _value as well since\r\n    // non-string values will be stringified.\r\n    el._value = value\r\n    // #4956: <option> value will fallback to its text content so we need to\r\n    // compare against its attribute value instead.\r\n    const oldValue = tag === 'OPTION' ? el.getAttribute('value') : el.value\r\n    const newValue = value == null ? '' : value\r\n    if (oldValue !== newValue) {\r\n      el.value = newValue\r\n    }\r\n    if (value == null) {\r\n      el.removeAttribute(key)\r\n    }\r\n    return\r\n  }\r\n\r\n  let needRemove = false\r\n  if (value === '' || value == null) {\r\n    const type = typeof el[key]\r\n    if (type === 'boolean') {\r\n      // e.g. <select multiple> compiles to { multiple: '' }\r\n      value = includeBooleanAttr(value)\r\n    } else if (value == null && type === 'string') {\r\n      // e.g. <div :id=\"null\">\r\n      value = ''\r\n      needRemove = true\r\n    } else if (type === 'number') {\r\n      // e.g. <img :width=\"null\">\r\n      value = 0\r\n      needRemove = true\r\n    }\r\n  } else {\r\n    if (\r\n      __COMPAT__ &&\r\n      value === false &&\r\n      compatUtils.isCompatEnabled(\r\n        DeprecationTypes.ATTR_FALSE_VALUE,\r\n        parentComponent,\r\n      )\r\n    ) {\r\n      const type = typeof el[key]\r\n      if (type === 'string' || type === 'number') {\r\n        __DEV__ &&\r\n          compatUtils.warnDeprecation(\r\n            DeprecationTypes.ATTR_FALSE_VALUE,\r\n            parentComponent,\r\n            key,\r\n          )\r\n        value = type === 'number' ? 0 : ''\r\n        needRemove = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // some properties perform value validation and throw,\r\n  // some properties has getter, no setter, will error in 'use strict'\r\n  // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\r\n  try {\r\n    el[key] = value\r\n  } catch (e: any) {\r\n    // do not warn if value is auto-coerced from nullish values\r\n    if (__DEV__ && !needRemove) {\r\n      warn(\r\n        `Failed setting prop \"${key}\" on <${tag.toLowerCase()}>: ` +\r\n          `value ${value} is invalid.`,\r\n        e,\r\n      )\r\n    }\r\n  }\r\n  needRemove && el.removeAttribute(key)\r\n}\r\n","export const FRAGMENT = Symbol(__DEV__ ? `Fragment` : ``)\r\nexport const TELEPORT = Symbol(__DEV__ ? `Teleport` : ``)\r\nexport const SUSPENSE = Symbol(__DEV__ ? `Suspense` : ``)\r\nexport const KEEP_ALIVE = Symbol(__DEV__ ? `KeepAlive` : ``)\r\nexport const BASE_TRANSITION = Symbol(__DEV__ ? `BaseTransition` : ``)\r\nexport const OPEN_BLOCK = Symbol(__DEV__ ? `openBlock` : ``)\r\nexport const CREATE_BLOCK = Symbol(__DEV__ ? `createBlock` : ``)\r\nexport const CREATE_ELEMENT_BLOCK = Symbol(__DEV__ ? `createElementBlock` : ``)\r\nexport const CREATE_VNODE = Symbol(__DEV__ ? `createVNode` : ``)\r\nexport const CREATE_ELEMENT_VNODE = Symbol(__DEV__ ? `createElementVNode` : ``)\r\nexport const CREATE_COMMENT = Symbol(__DEV__ ? `createCommentVNode` : ``)\r\nexport const CREATE_TEXT = Symbol(__DEV__ ? `createTextVNode` : ``)\r\nexport const CREATE_STATIC = Symbol(__DEV__ ? `createStaticVNode` : ``)\r\nexport const RESOLVE_COMPONENT = Symbol(__DEV__ ? `resolveComponent` : ``)\r\nexport const RESOLVE_DYNAMIC_COMPONENT = Symbol(\r\n  __DEV__ ? `resolveDynamicComponent` : ``,\r\n)\r\nexport const RESOLVE_DIRECTIVE = Symbol(__DEV__ ? `resolveDirective` : ``)\r\nexport const RESOLVE_FILTER = Symbol(__DEV__ ? `resolveFilter` : ``)\r\nexport const WITH_DIRECTIVES = Symbol(__DEV__ ? `withDirectives` : ``)\r\nexport const RENDER_LIST = Symbol(__DEV__ ? `renderList` : ``)\r\nexport const RENDER_SLOT = Symbol(__DEV__ ? `renderSlot` : ``)\r\nexport const CREATE_SLOTS = Symbol(__DEV__ ? `createSlots` : ``)\r\nexport const TO_DISPLAY_STRING = Symbol(__DEV__ ? `toDisplayString` : ``)\r\nexport const MERGE_PROPS = Symbol(__DEV__ ? `mergeProps` : ``)\r\nexport const NORMALIZE_CLASS = Symbol(__DEV__ ? `normalizeClass` : ``)\r\nexport const NORMALIZE_STYLE = Symbol(__DEV__ ? `normalizeStyle` : ``)\r\nexport const NORMALIZE_PROPS = Symbol(__DEV__ ? `normalizeProps` : ``)\r\nexport const GUARD_REACTIVE_PROPS = Symbol(__DEV__ ? `guardReactiveProps` : ``)\r\nexport const TO_HANDLERS = Symbol(__DEV__ ? `toHandlers` : ``)\r\nexport const CAMELIZE = Symbol(__DEV__ ? `camelize` : ``)\r\nexport const CAPITALIZE = Symbol(__DEV__ ? `capitalize` : ``)\r\nexport const TO_HANDLER_KEY = Symbol(__DEV__ ? `toHandlerKey` : ``)\r\nexport const SET_BLOCK_TRACKING = Symbol(__DEV__ ? `setBlockTracking` : ``)\r\nexport const PUSH_SCOPE_ID = Symbol(__DEV__ ? `pushScopeId` : ``)\r\nexport const POP_SCOPE_ID = Symbol(__DEV__ ? `popScopeId` : ``)\r\nexport const WITH_CTX = Symbol(__DEV__ ? `withCtx` : ``)\r\nexport const UNREF = Symbol(__DEV__ ? `unref` : ``)\r\nexport const IS_REF = Symbol(__DEV__ ? `isRef` : ``)\r\nexport const WITH_MEMO = Symbol(__DEV__ ? `withMemo` : ``)\r\nexport const IS_MEMO_SAME = Symbol(__DEV__ ? `isMemoSame` : ``)\r\n\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\nexport const helperNameMap: Record<symbol, string> = {\r\n  [FRAGMENT]: `Fragment`,\r\n  [TELEPORT]: `Teleport`,\r\n  [SUSPENSE]: `Suspense`,\r\n  [KEEP_ALIVE]: `KeepAlive`,\r\n  [BASE_TRANSITION]: `BaseTransition`,\r\n  [OPEN_BLOCK]: `openBlock`,\r\n  [CREATE_BLOCK]: `createBlock`,\r\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n  [CREATE_VNODE]: `createVNode`,\r\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n  [CREATE_COMMENT]: `createCommentVNode`,\r\n  [CREATE_TEXT]: `createTextVNode`,\r\n  [CREATE_STATIC]: `createStaticVNode`,\r\n  [RESOLVE_COMPONENT]: `resolveComponent`,\r\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n  [RESOLVE_FILTER]: `resolveFilter`,\r\n  [WITH_DIRECTIVES]: `withDirectives`,\r\n  [RENDER_LIST]: `renderList`,\r\n  [RENDER_SLOT]: `renderSlot`,\r\n  [CREATE_SLOTS]: `createSlots`,\r\n  [TO_DISPLAY_STRING]: `toDisplayString`,\r\n  [MERGE_PROPS]: `mergeProps`,\r\n  [NORMALIZE_CLASS]: `normalizeClass`,\r\n  [NORMALIZE_STYLE]: `normalizeStyle`,\r\n  [NORMALIZE_PROPS]: `normalizeProps`,\r\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n  [TO_HANDLERS]: `toHandlers`,\r\n  [CAMELIZE]: `camelize`,\r\n  [CAPITALIZE]: `capitalize`,\r\n  [TO_HANDLER_KEY]: `toHandlerKey`,\r\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n  [PUSH_SCOPE_ID]: `pushScopeId`,\r\n  [POP_SCOPE_ID]: `popScopeId`,\r\n  [WITH_CTX]: `withCtx`,\r\n  [UNREF]: `unref`,\r\n  [IS_REF]: `isRef`,\r\n  [WITH_MEMO]: `withMemo`,\r\n  [IS_MEMO_SAME]: `isMemoSame`,\r\n}\r\n\r\nexport function registerRuntimeHelpers(helpers: Record<symbol, string>) {\r\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n    helperNameMap[s] = helpers[s]\r\n  })\r\n}\r\n","import { isString } from '@vue/shared'\r\nimport {\r\n  CREATE_BLOCK,\r\n  CREATE_ELEMENT_BLOCK,\r\n  CREATE_ELEMENT_VNODE,\r\n  type CREATE_SLOTS,\r\n  CREATE_VNODE,\r\n  type FRAGMENT,\r\n  OPEN_BLOCK,\r\n  type RENDER_LIST,\r\n  type RENDER_SLOT,\r\n  WITH_DIRECTIVES,\r\n  type WITH_MEMO,\r\n} from './runtimeHelpers'\r\nimport type { PropsExpression } from './transforms/transformElement'\r\nimport type { ImportItem, TransformContext } from './transform'\r\nimport type { Node as BabelNode } from '@babel/types'\r\n\r\n// Vue template is a platform-agnostic superset of HTML (syntax only).\r\n// More namespaces can be declared by platform specific compilers.\r\nexport type Namespace = number\r\n\r\nexport enum Namespaces {\r\n  HTML,\r\n  SVG,\r\n  MATH_ML,\r\n}\r\n\r\nexport enum NodeTypes {\r\n  ROOT,\r\n  ELEMENT,\r\n  TEXT,\r\n  COMMENT,\r\n  SIMPLE_EXPRESSION,\r\n  INTERPOLATION,\r\n  ATTRIBUTE,\r\n  DIRECTIVE,\r\n  // containers\r\n  COMPOUND_EXPRESSION,\r\n  IF,\r\n  IF_BRANCH,\r\n  FOR,\r\n  TEXT_CALL,\r\n  // codegen\r\n  VNODE_CALL,\r\n  JS_CALL_EXPRESSION,\r\n  JS_OBJECT_EXPRESSION,\r\n  JS_PROPERTY,\r\n  JS_ARRAY_EXPRESSION,\r\n  JS_FUNCTION_EXPRESSION,\r\n  JS_CONDITIONAL_EXPRESSION,\r\n  JS_CACHE_EXPRESSION,\r\n\r\n  // ssr codegen\r\n  JS_BLOCK_STATEMENT,\r\n  JS_TEMPLATE_LITERAL,\r\n  JS_IF_STATEMENT,\r\n  JS_ASSIGNMENT_EXPRESSION,\r\n  JS_SEQUENCE_EXPRESSION,\r\n  JS_RETURN_STATEMENT,\r\n}\r\n\r\nexport enum ElementTypes {\r\n  ELEMENT,\r\n  COMPONENT,\r\n  SLOT,\r\n  TEMPLATE,\r\n}\r\n\r\nexport interface Node {\r\n  type: NodeTypes\r\n  loc: SourceLocation\r\n}\r\n\r\n// The node's range. The `start` is inclusive and `end` is exclusive.\r\n// [start, end)\r\nexport interface SourceLocation {\r\n  start: Position\r\n  end: Position\r\n  source: string\r\n}\r\n\r\nexport interface Position {\r\n  offset: number // from start of file\r\n  line: number\r\n  column: number\r\n}\r\n\r\nexport type ParentNode = RootNode | ElementNode | IfBranchNode | ForNode\r\n\r\nexport type ExpressionNode = SimpleExpressionNode | CompoundExpressionNode\r\n\r\nexport type TemplateChildNode =\r\n  | ElementNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n  | TextNode\r\n  | CommentNode\r\n  | IfNode\r\n  | IfBranchNode\r\n  | ForNode\r\n  | TextCallNode\r\n\r\nexport interface RootNode extends Node {\r\n  type: NodeTypes.ROOT\r\n  source: string\r\n  children: TemplateChildNode[]\r\n  helpers: Set<symbol>\r\n  components: string[]\r\n  directives: string[]\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  cached: number\r\n  temps: number\r\n  ssrHelpers?: symbol[]\r\n  codegenNode?: TemplateChildNode | JSChildNode | BlockStatement\r\n  transformed?: boolean\r\n\r\n  // v2 compat only\r\n  filters?: string[]\r\n}\r\n\r\nexport type ElementNode =\r\n  | PlainElementNode\r\n  | ComponentNode\r\n  | SlotOutletNode\r\n  | TemplateNode\r\n\r\nexport interface BaseElementNode extends Node {\r\n  type: NodeTypes.ELEMENT\r\n  ns: Namespace\r\n  tag: string\r\n  tagType: ElementTypes\r\n  props: Array<AttributeNode | DirectiveNode>\r\n  children: TemplateChildNode[]\r\n  isSelfClosing?: boolean\r\n  innerLoc?: SourceLocation // only for SFC root level elements\r\n}\r\n\r\nexport interface PlainElementNode extends BaseElementNode {\r\n  tagType: ElementTypes.ELEMENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | SimpleExpressionNode // when hoisted\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: TemplateLiteral\r\n}\r\n\r\nexport interface ComponentNode extends BaseElementNode {\r\n  tagType: ElementTypes.COMPONENT\r\n  codegenNode:\r\n    | VNodeCall\r\n    | CacheExpression // when cached by v-once\r\n    | MemoExpression // when cached by v-memo\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface SlotOutletNode extends BaseElementNode {\r\n  tagType: ElementTypes.SLOT\r\n  codegenNode:\r\n    | RenderSlotCall\r\n    | CacheExpression // when cached by v-once\r\n    | undefined\r\n  ssrCodegenNode?: CallExpression\r\n}\r\n\r\nexport interface TemplateNode extends BaseElementNode {\r\n  tagType: ElementTypes.TEMPLATE\r\n  // TemplateNode is a container type that always gets compiled away\r\n  codegenNode: undefined\r\n}\r\n\r\nexport interface TextNode extends Node {\r\n  type: NodeTypes.TEXT\r\n  content: string\r\n}\r\n\r\nexport interface CommentNode extends Node {\r\n  type: NodeTypes.COMMENT\r\n  content: string\r\n}\r\n\r\nexport interface AttributeNode extends Node {\r\n  type: NodeTypes.ATTRIBUTE\r\n  name: string\r\n  nameLoc: SourceLocation\r\n  value: TextNode | undefined\r\n}\r\n\r\nexport interface DirectiveNode extends Node {\r\n  type: NodeTypes.DIRECTIVE\r\n  /**\r\n   * the normalized name without prefix or shorthands, e.g. \"bind\", \"on\"\r\n   */\r\n  name: string\r\n  /**\r\n   * the raw attribute name, preserving shorthand, and including arg & modifiers\r\n   * this is only used during parse.\r\n   */\r\n  rawName?: string\r\n  exp: ExpressionNode | undefined\r\n  arg: ExpressionNode | undefined\r\n  modifiers: string[]\r\n  /**\r\n   * optional property to cache the expression parse result for v-for\r\n   */\r\n  forParseResult?: ForParseResult\r\n}\r\n\r\n/**\r\n * Static types have several levels.\r\n * Higher levels implies lower levels. e.g. a node that can be stringified\r\n * can always be hoisted and skipped for patch.\r\n */\r\nexport enum ConstantTypes {\r\n  NOT_CONSTANT = 0,\r\n  CAN_SKIP_PATCH,\r\n  CAN_HOIST,\r\n  CAN_STRINGIFY,\r\n}\r\n\r\nexport interface SimpleExpressionNode extends Node {\r\n  type: NodeTypes.SIMPLE_EXPRESSION\r\n  content: string\r\n  isStatic: boolean\r\n  constType: ConstantTypes\r\n  /**\r\n   * - `null` means the expression is a simple identifier that doesn't need\r\n   *    parsing\r\n   * - `false` means there was a parsing error\r\n   */\r\n  ast?: BabelNode | null | false\r\n  /**\r\n   * Indicates this is an identifier for a hoist vnode call and points to the\r\n   * hoisted node.\r\n   */\r\n  hoisted?: JSChildNode\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface InterpolationNode extends Node {\r\n  type: NodeTypes.INTERPOLATION\r\n  content: ExpressionNode\r\n}\r\n\r\nexport interface CompoundExpressionNode extends Node {\r\n  type: NodeTypes.COMPOUND_EXPRESSION\r\n  /**\r\n   * - `null` means the expression is a simple identifier that doesn't need\r\n   *    parsing\r\n   * - `false` means there was a parsing error\r\n   */\r\n  ast?: BabelNode | null | false\r\n  children: (\r\n    | SimpleExpressionNode\r\n    | CompoundExpressionNode\r\n    | InterpolationNode\r\n    | TextNode\r\n    | string\r\n    | symbol\r\n  )[]\r\n\r\n  /**\r\n   * an expression parsed as the params of a function will track\r\n   * the identifiers declared inside the function body.\r\n   */\r\n  identifiers?: string[]\r\n  isHandlerKey?: boolean\r\n}\r\n\r\nexport interface IfNode extends Node {\r\n  type: NodeTypes.IF\r\n  branches: IfBranchNode[]\r\n  codegenNode?: IfConditionalExpression | CacheExpression // <div v-if v-once>\r\n}\r\n\r\nexport interface IfBranchNode extends Node {\r\n  type: NodeTypes.IF_BRANCH\r\n  condition: ExpressionNode | undefined // else\r\n  children: TemplateChildNode[]\r\n  userKey?: AttributeNode | DirectiveNode\r\n  isTemplateIf?: boolean\r\n}\r\n\r\nexport interface ForNode extends Node {\r\n  type: NodeTypes.FOR\r\n  source: ExpressionNode\r\n  valueAlias: ExpressionNode | undefined\r\n  keyAlias: ExpressionNode | undefined\r\n  objectIndexAlias: ExpressionNode | undefined\r\n  parseResult: ForParseResult\r\n  children: TemplateChildNode[]\r\n  codegenNode?: ForCodegenNode\r\n}\r\n\r\nexport interface ForParseResult {\r\n  source: ExpressionNode\r\n  value: ExpressionNode | undefined\r\n  key: ExpressionNode | undefined\r\n  index: ExpressionNode | undefined\r\n  finalized: boolean\r\n}\r\n\r\nexport interface TextCallNode extends Node {\r\n  type: NodeTypes.TEXT_CALL\r\n  content: TextNode | InterpolationNode | CompoundExpressionNode\r\n  codegenNode: CallExpression | SimpleExpressionNode // when hoisted\r\n}\r\n\r\nexport type TemplateTextChildNode =\r\n  | TextNode\r\n  | InterpolationNode\r\n  | CompoundExpressionNode\r\n\r\nexport interface VNodeCall extends Node {\r\n  type: NodeTypes.VNODE_CALL\r\n  tag: string | symbol | CallExpression\r\n  props: PropsExpression | undefined\r\n  children:\r\n    | TemplateChildNode[] // multiple children\r\n    | TemplateTextChildNode // single text child\r\n    | SlotsExpression // component slots\r\n    | ForRenderListExpression // v-for fragment call\r\n    | SimpleExpressionNode // hoisted\r\n    | undefined\r\n  patchFlag: string | undefined\r\n  dynamicProps: string | SimpleExpressionNode | undefined\r\n  directives: DirectiveArguments | undefined\r\n  isBlock: boolean\r\n  disableTracking: boolean\r\n  isComponent: boolean\r\n}\r\n\r\n// JS Node Types ---------------------------------------------------------------\r\n\r\n// We also include a number of JavaScript AST nodes for code generation.\r\n// The AST is an intentionally minimal subset just to meet the exact needs of\r\n// Vue render function generation.\r\n\r\nexport type JSChildNode =\r\n  | VNodeCall\r\n  | CallExpression\r\n  | ObjectExpression\r\n  | ArrayExpression\r\n  | ExpressionNode\r\n  | FunctionExpression\r\n  | ConditionalExpression\r\n  | CacheExpression\r\n  | AssignmentExpression\r\n  | SequenceExpression\r\n\r\nexport interface CallExpression extends Node {\r\n  type: NodeTypes.JS_CALL_EXPRESSION\r\n  callee: string | symbol\r\n  arguments: (\r\n    | string\r\n    | symbol\r\n    | JSChildNode\r\n    | SSRCodegenNode\r\n    | TemplateChildNode\r\n    | TemplateChildNode[]\r\n  )[]\r\n}\r\n\r\nexport interface ObjectExpression extends Node {\r\n  type: NodeTypes.JS_OBJECT_EXPRESSION\r\n  properties: Array<Property>\r\n}\r\n\r\nexport interface Property extends Node {\r\n  type: NodeTypes.JS_PROPERTY\r\n  key: ExpressionNode\r\n  value: JSChildNode\r\n}\r\n\r\nexport interface ArrayExpression extends Node {\r\n  type: NodeTypes.JS_ARRAY_EXPRESSION\r\n  elements: Array<string | Node>\r\n}\r\n\r\nexport interface FunctionExpression extends Node {\r\n  type: NodeTypes.JS_FUNCTION_EXPRESSION\r\n  params: ExpressionNode | string | (ExpressionNode | string)[] | undefined\r\n  returns?: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n  body?: BlockStatement | IfStatement\r\n  newline: boolean\r\n  /**\r\n   * This flag is for codegen to determine whether it needs to generate the\r\n   * withScopeId() wrapper\r\n   */\r\n  isSlot: boolean\r\n  /**\r\n   * __COMPAT__ only, indicates a slot function that should be excluded from\r\n   * the legacy $scopedSlots instance property.\r\n   */\r\n  isNonScopedSlot?: boolean\r\n}\r\n\r\nexport interface ConditionalExpression extends Node {\r\n  type: NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  test: JSChildNode\r\n  consequent: JSChildNode\r\n  alternate: JSChildNode\r\n  newline: boolean\r\n}\r\n\r\nexport interface CacheExpression extends Node {\r\n  type: NodeTypes.JS_CACHE_EXPRESSION\r\n  index: number\r\n  value: JSChildNode\r\n  isVNode: boolean\r\n}\r\n\r\nexport interface MemoExpression extends CallExpression {\r\n  callee: typeof WITH_MEMO\r\n  arguments: [ExpressionNode, MemoFactory, string, string]\r\n}\r\n\r\ninterface MemoFactory extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// SSR-specific Node Types -----------------------------------------------------\r\n\r\nexport type SSRCodegenNode =\r\n  | BlockStatement\r\n  | TemplateLiteral\r\n  | IfStatement\r\n  | AssignmentExpression\r\n  | ReturnStatement\r\n  | SequenceExpression\r\n\r\nexport interface BlockStatement extends Node {\r\n  type: NodeTypes.JS_BLOCK_STATEMENT\r\n  body: (JSChildNode | IfStatement)[]\r\n}\r\n\r\nexport interface TemplateLiteral extends Node {\r\n  type: NodeTypes.JS_TEMPLATE_LITERAL\r\n  elements: (string | JSChildNode)[]\r\n}\r\n\r\nexport interface IfStatement extends Node {\r\n  type: NodeTypes.JS_IF_STATEMENT\r\n  test: ExpressionNode\r\n  consequent: BlockStatement\r\n  alternate: IfStatement | BlockStatement | ReturnStatement | undefined\r\n}\r\n\r\nexport interface AssignmentExpression extends Node {\r\n  type: NodeTypes.JS_ASSIGNMENT_EXPRESSION\r\n  left: SimpleExpressionNode\r\n  right: JSChildNode\r\n}\r\n\r\nexport interface SequenceExpression extends Node {\r\n  type: NodeTypes.JS_SEQUENCE_EXPRESSION\r\n  expressions: JSChildNode[]\r\n}\r\n\r\nexport interface ReturnStatement extends Node {\r\n  type: NodeTypes.JS_RETURN_STATEMENT\r\n  returns: TemplateChildNode | TemplateChildNode[] | JSChildNode\r\n}\r\n\r\n// Codegen Node Types ----------------------------------------------------------\r\n\r\nexport interface DirectiveArguments extends ArrayExpression {\r\n  elements: DirectiveArgumentNode[]\r\n}\r\n\r\nexport interface DirectiveArgumentNode extends ArrayExpression {\r\n  elements: // dir, exp, arg, modifiers\r\n  | [string]\r\n    | [string, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode]\r\n    | [string, ExpressionNode, ExpressionNode, ObjectExpression]\r\n}\r\n\r\n// renderSlot(...)\r\nexport interface RenderSlotCall extends CallExpression {\r\n  callee: typeof RENDER_SLOT\r\n  arguments: // $slots, name, props, fallback\r\n  | [string, string | ExpressionNode]\r\n    | [string, string | ExpressionNode, PropsExpression]\r\n    | [\r\n        string,\r\n        string | ExpressionNode,\r\n        PropsExpression | '{}',\r\n        TemplateChildNode[],\r\n      ]\r\n}\r\n\r\nexport type SlotsExpression = SlotsObjectExpression | DynamicSlotsExpression\r\n\r\n// { foo: () => [...] }\r\nexport interface SlotsObjectExpression extends ObjectExpression {\r\n  properties: SlotsObjectProperty[]\r\n}\r\n\r\nexport interface SlotsObjectProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport interface SlotFunctionExpression extends FunctionExpression {\r\n  returns: TemplateChildNode[]\r\n}\r\n\r\n// createSlots({ ... }, [\r\n//    foo ? () => [] : undefined,\r\n//    renderList(list, i => () => [i])\r\n// ])\r\nexport interface DynamicSlotsExpression extends CallExpression {\r\n  callee: typeof CREATE_SLOTS\r\n  arguments: [SlotsObjectExpression, DynamicSlotEntries]\r\n}\r\n\r\nexport interface DynamicSlotEntries extends ArrayExpression {\r\n  elements: (ConditionalDynamicSlotNode | ListDynamicSlotNode)[]\r\n}\r\n\r\nexport interface ConditionalDynamicSlotNode extends ConditionalExpression {\r\n  consequent: DynamicSlotNode\r\n  alternate: DynamicSlotNode | SimpleExpressionNode\r\n}\r\n\r\nexport interface ListDynamicSlotNode extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ListDynamicSlotIterator]\r\n}\r\n\r\nexport interface ListDynamicSlotIterator extends FunctionExpression {\r\n  returns: DynamicSlotNode\r\n}\r\n\r\nexport interface DynamicSlotNode extends ObjectExpression {\r\n  properties: [Property, DynamicSlotFnProperty]\r\n}\r\n\r\nexport interface DynamicSlotFnProperty extends Property {\r\n  value: SlotFunctionExpression\r\n}\r\n\r\nexport type BlockCodegenNode = VNodeCall | RenderSlotCall\r\n\r\nexport interface IfConditionalExpression extends ConditionalExpression {\r\n  consequent: BlockCodegenNode | MemoExpression\r\n  alternate: BlockCodegenNode | IfConditionalExpression | MemoExpression\r\n}\r\n\r\nexport interface ForCodegenNode extends VNodeCall {\r\n  isBlock: true\r\n  tag: typeof FRAGMENT\r\n  props: undefined\r\n  children: ForRenderListExpression\r\n  patchFlag: string\r\n  disableTracking: boolean\r\n}\r\n\r\nexport interface ForRenderListExpression extends CallExpression {\r\n  callee: typeof RENDER_LIST\r\n  arguments: [ExpressionNode, ForIteratorExpression]\r\n}\r\n\r\nexport interface ForIteratorExpression extends FunctionExpression {\r\n  returns: BlockCodegenNode\r\n}\r\n\r\n// AST Utilities ---------------------------------------------------------------\r\n\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nexport const locStub: SourceLocation = {\r\n  start: { line: 1, column: 1, offset: 0 },\r\n  end: { line: 1, column: 1, offset: 0 },\r\n  source: '',\r\n}\r\n\r\nexport function createRoot(\r\n  children: TemplateChildNode[],\r\n  source = '',\r\n): RootNode {\r\n  return {\r\n    type: NodeTypes.ROOT,\r\n    source,\r\n    children,\r\n    helpers: new Set(),\r\n    components: [],\r\n    directives: [],\r\n    hoists: [],\r\n    imports: [],\r\n    cached: 0,\r\n    temps: 0,\r\n    codegenNode: undefined,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createVNodeCall(\r\n  context: TransformContext | null,\r\n  tag: VNodeCall['tag'],\r\n  props?: VNodeCall['props'],\r\n  children?: VNodeCall['children'],\r\n  patchFlag?: VNodeCall['patchFlag'],\r\n  dynamicProps?: VNodeCall['dynamicProps'],\r\n  directives?: VNodeCall['directives'],\r\n  isBlock: VNodeCall['isBlock'] = false,\r\n  disableTracking: VNodeCall['disableTracking'] = false,\r\n  isComponent: VNodeCall['isComponent'] = false,\r\n  loc = locStub,\r\n): VNodeCall {\r\n  if (context) {\r\n    if (isBlock) {\r\n      context.helper(OPEN_BLOCK)\r\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent))\r\n    } else {\r\n      context.helper(getVNodeHelper(context.inSSR, isComponent))\r\n    }\r\n    if (directives) {\r\n      context.helper(WITH_DIRECTIVES)\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: NodeTypes.VNODE_CALL,\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent,\r\n    loc,\r\n  }\r\n}\r\n\r\nexport function createArrayExpression(\r\n  elements: ArrayExpression['elements'],\r\n  loc: SourceLocation = locStub,\r\n): ArrayExpression {\r\n  return {\r\n    type: NodeTypes.JS_ARRAY_EXPRESSION,\r\n    loc,\r\n    elements,\r\n  }\r\n}\r\n\r\nexport function createObjectExpression(\r\n  properties: ObjectExpression['properties'],\r\n  loc: SourceLocation = locStub,\r\n): ObjectExpression {\r\n  return {\r\n    type: NodeTypes.JS_OBJECT_EXPRESSION,\r\n    loc,\r\n    properties,\r\n  }\r\n}\r\n\r\nexport function createObjectProperty(\r\n  key: Property['key'] | string,\r\n  value: Property['value'],\r\n): Property {\r\n  return {\r\n    type: NodeTypes.JS_PROPERTY,\r\n    loc: locStub,\r\n    key: isString(key) ? createSimpleExpression(key, true) : key,\r\n    value,\r\n  }\r\n}\r\n\r\nexport function createSimpleExpression(\r\n  content: SimpleExpressionNode['content'],\r\n  isStatic: SimpleExpressionNode['isStatic'] = false,\r\n  loc: SourceLocation = locStub,\r\n  constType: ConstantTypes = ConstantTypes.NOT_CONSTANT,\r\n): SimpleExpressionNode {\r\n  return {\r\n    type: NodeTypes.SIMPLE_EXPRESSION,\r\n    loc,\r\n    content,\r\n    isStatic,\r\n    constType: isStatic ? ConstantTypes.CAN_STRINGIFY : constType,\r\n  }\r\n}\r\n\r\nexport function createInterpolation(\r\n  content: InterpolationNode['content'] | string,\r\n  loc: SourceLocation,\r\n): InterpolationNode {\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    loc,\r\n    content: isString(content)\r\n      ? createSimpleExpression(content, false, loc)\r\n      : content,\r\n  }\r\n}\r\n\r\nexport function createCompoundExpression(\r\n  children: CompoundExpressionNode['children'],\r\n  loc: SourceLocation = locStub,\r\n): CompoundExpressionNode {\r\n  return {\r\n    type: NodeTypes.COMPOUND_EXPRESSION,\r\n    loc,\r\n    children,\r\n  }\r\n}\r\n\r\ntype InferCodegenNodeType<T> = T extends typeof RENDER_SLOT\r\n  ? RenderSlotCall\r\n  : CallExpression\r\n\r\nexport function createCallExpression<T extends CallExpression['callee']>(\r\n  callee: T,\r\n  args: CallExpression['arguments'] = [],\r\n  loc: SourceLocation = locStub,\r\n): InferCodegenNodeType<T> {\r\n  return {\r\n    type: NodeTypes.JS_CALL_EXPRESSION,\r\n    loc,\r\n    callee,\r\n    arguments: args,\r\n  } as InferCodegenNodeType<T>\r\n}\r\n\r\nexport function createFunctionExpression(\r\n  params: FunctionExpression['params'],\r\n  returns: FunctionExpression['returns'] = undefined,\r\n  newline: boolean = false,\r\n  isSlot: boolean = false,\r\n  loc: SourceLocation = locStub,\r\n): FunctionExpression {\r\n  return {\r\n    type: NodeTypes.JS_FUNCTION_EXPRESSION,\r\n    params,\r\n    returns,\r\n    newline,\r\n    isSlot,\r\n    loc,\r\n  }\r\n}\r\n\r\nexport function createConditionalExpression(\r\n  test: ConditionalExpression['test'],\r\n  consequent: ConditionalExpression['consequent'],\r\n  alternate: ConditionalExpression['alternate'],\r\n  newline = true,\r\n): ConditionalExpression {\r\n  return {\r\n    type: NodeTypes.JS_CONDITIONAL_EXPRESSION,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    newline,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createCacheExpression(\r\n  index: number,\r\n  value: JSChildNode,\r\n  isVNode: boolean = false,\r\n): CacheExpression {\r\n  return {\r\n    type: NodeTypes.JS_CACHE_EXPRESSION,\r\n    index,\r\n    value,\r\n    isVNode,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createBlockStatement(\r\n  body: BlockStatement['body'],\r\n): BlockStatement {\r\n  return {\r\n    type: NodeTypes.JS_BLOCK_STATEMENT,\r\n    body,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createTemplateLiteral(\r\n  elements: TemplateLiteral['elements'],\r\n): TemplateLiteral {\r\n  return {\r\n    type: NodeTypes.JS_TEMPLATE_LITERAL,\r\n    elements,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createIfStatement(\r\n  test: IfStatement['test'],\r\n  consequent: IfStatement['consequent'],\r\n  alternate?: IfStatement['alternate'],\r\n): IfStatement {\r\n  return {\r\n    type: NodeTypes.JS_IF_STATEMENT,\r\n    test,\r\n    consequent,\r\n    alternate,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createAssignmentExpression(\r\n  left: AssignmentExpression['left'],\r\n  right: AssignmentExpression['right'],\r\n): AssignmentExpression {\r\n  return {\r\n    type: NodeTypes.JS_ASSIGNMENT_EXPRESSION,\r\n    left,\r\n    right,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createSequenceExpression(\r\n  expressions: SequenceExpression['expressions'],\r\n): SequenceExpression {\r\n  return {\r\n    type: NodeTypes.JS_SEQUENCE_EXPRESSION,\r\n    expressions,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function createReturnStatement(\r\n  returns: ReturnStatement['returns'],\r\n): ReturnStatement {\r\n  return {\r\n    type: NodeTypes.JS_RETURN_STATEMENT,\r\n    returns,\r\n    loc: locStub,\r\n  }\r\n}\r\n\r\nexport function getVNodeHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE\r\n}\r\n\r\nexport function getVNodeBlockHelper(ssr: boolean, isComponent: boolean) {\r\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK\r\n}\r\n\r\nexport function convertToBlock(\r\n  node: VNodeCall,\r\n  { helper, removeHelper, inSSR }: TransformContext,\r\n) {\r\n  if (!node.isBlock) {\r\n    node.isBlock = true\r\n    removeHelper(getVNodeHelper(inSSR, node.isComponent))\r\n    helper(OPEN_BLOCK)\r\n    helper(getVNodeBlockHelper(inSSR, node.isComponent))\r\n  }\r\n}\r\n","/**\r\n * This Tokenizer is adapted from htmlparser2 under the MIT License listed at\r\n * https://github.com/fb55/htmlparser2/blob/master/LICENSE\r\n\r\nCopyright 2010, 2011, Chris Winberry <chris@winberry.net>. All rights reserved.\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to\r\ndeal in the Software without restriction, including without limitation the\r\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\nsell copies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\nIN THE SOFTWARE.\r\n */\r\n\r\nimport { ErrorCodes } from './errors'\r\nimport type { ElementNode, Position } from './ast'\r\n\r\n/**\r\n * Note: entities is a non-browser-build-only dependency.\r\n * In the browser, we use an HTML element to do the decoding.\r\n * Make sure all imports from entities are only used in non-browser branches\r\n * so that it can be properly treeshaken.\r\n */\r\nimport {\r\n  DecodingMode,\r\n  EntityDecoder,\r\n  fromCodePoint,\r\n  htmlDecodeTree,\r\n} from 'entities/lib/decode.js'\r\n\r\nexport enum ParseMode {\r\n  BASE,\r\n  HTML,\r\n  SFC,\r\n}\r\n\r\nexport enum CharCodes {\r\n  Tab = 0x9, // \"\\t\"\r\n  NewLine = 0xa, // \"\\n\"\r\n  FormFeed = 0xc, // \"\\f\"\r\n  CarriageReturn = 0xd, // \"\\r\"\r\n  Space = 0x20, // \" \"\r\n  ExclamationMark = 0x21, // \"!\"\r\n  Number = 0x23, // \"#\"\r\n  Amp = 0x26, // \"&\"\r\n  SingleQuote = 0x27, // \"'\"\r\n  DoubleQuote = 0x22, // '\"'\r\n  GraveAccent = 96, // \"`\"\r\n  Dash = 0x2d, // \"-\"\r\n  Slash = 0x2f, // \"/\"\r\n  Zero = 0x30, // \"0\"\r\n  Nine = 0x39, // \"9\"\r\n  Semi = 0x3b, // \";\"\r\n  Lt = 0x3c, // \"<\"\r\n  Eq = 0x3d, // \"=\"\r\n  Gt = 0x3e, // \">\"\r\n  Questionmark = 0x3f, // \"?\"\r\n  UpperA = 0x41, // \"A\"\r\n  LowerA = 0x61, // \"a\"\r\n  UpperF = 0x46, // \"F\"\r\n  LowerF = 0x66, // \"f\"\r\n  UpperZ = 0x5a, // \"Z\"\r\n  LowerZ = 0x7a, // \"z\"\r\n  LowerX = 0x78, // \"x\"\r\n  LowerV = 0x76, // \"v\"\r\n  Dot = 0x2e, // \".\"\r\n  Colon = 0x3a, // \":\"\r\n  At = 0x40, // \"@\"\r\n  LeftSquare = 91, // \"[\"\r\n  RightSquare = 93, // \"]\"\r\n}\r\n\r\nconst defaultDelimitersOpen = new Uint8Array([123, 123]) // \"{{\"\r\nconst defaultDelimitersClose = new Uint8Array([125, 125]) // \"}}\"\r\n\r\n/** All the states the tokenizer can be in. */\r\nexport enum State {\r\n  Text = 1,\r\n\r\n  // interpolation\r\n  InterpolationOpen,\r\n  Interpolation,\r\n  InterpolationClose,\r\n\r\n  // Tags\r\n  BeforeTagName, // After <\r\n  InTagName,\r\n  InSelfClosingTag,\r\n  BeforeClosingTagName,\r\n  InClosingTagName,\r\n  AfterClosingTagName,\r\n\r\n  // Attrs\r\n  BeforeAttrName,\r\n  InAttrName,\r\n  InDirName,\r\n  InDirArg,\r\n  InDirDynamicArg,\r\n  InDirModifier,\r\n  AfterAttrName,\r\n  BeforeAttrValue,\r\n  InAttrValueDq, // \"\r\n  InAttrValueSq, // '\r\n  InAttrValueNq,\r\n\r\n  // Declarations\r\n  BeforeDeclaration, // !\r\n  InDeclaration,\r\n\r\n  // Processing instructions\r\n  InProcessingInstruction, // ?\r\n\r\n  // Comments & CDATA\r\n  BeforeComment,\r\n  CDATASequence,\r\n  InSpecialComment,\r\n  InCommentLike,\r\n\r\n  // Special tags\r\n  BeforeSpecialS, // Decide if we deal with `<script` or `<style`\r\n  BeforeSpecialT, // Decide if we deal with `<title` or `<textarea`\r\n  SpecialStartSequence,\r\n  InRCDATA,\r\n\r\n  InEntity,\r\n\r\n  InSFCRootTagName,\r\n}\r\n\r\n/**\r\n * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a\r\n * tag name.\r\n */\r\nfunction isTagStartChar(c: number): boolean {\r\n  return (\r\n    (c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\r\n    (c >= CharCodes.UpperA && c <= CharCodes.UpperZ)\r\n  )\r\n}\r\n\r\nexport function isWhitespace(c: number): boolean {\r\n  return (\r\n    c === CharCodes.Space ||\r\n    c === CharCodes.NewLine ||\r\n    c === CharCodes.Tab ||\r\n    c === CharCodes.FormFeed ||\r\n    c === CharCodes.CarriageReturn\r\n  )\r\n}\r\n\r\nfunction isEndOfTagSection(c: number): boolean {\r\n  return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c)\r\n}\r\n\r\nexport function toCharCodes(str: string): Uint8Array {\r\n  const ret = new Uint8Array(str.length)\r\n  for (let i = 0; i < str.length; i++) {\r\n    ret[i] = str.charCodeAt(i)\r\n  }\r\n  return ret\r\n}\r\n\r\nexport enum QuoteType {\r\n  NoValue = 0,\r\n  Unquoted = 1,\r\n  Single = 2,\r\n  Double = 3,\r\n}\r\n\r\nexport interface Callbacks {\r\n  ontext(start: number, endIndex: number): void\r\n  ontextentity(char: string, start: number, endIndex: number): void\r\n\r\n  oninterpolation(start: number, endIndex: number): void\r\n\r\n  onopentagname(start: number, endIndex: number): void\r\n  onopentagend(endIndex: number): void\r\n  onselfclosingtag(endIndex: number): void\r\n  onclosetag(start: number, endIndex: number): void\r\n\r\n  onattribdata(start: number, endIndex: number): void\r\n  onattribentity(char: string, start: number, end: number): void\r\n  onattribend(quote: QuoteType, endIndex: number): void\r\n  onattribname(start: number, endIndex: number): void\r\n  onattribnameend(endIndex: number): void\r\n\r\n  ondirname(start: number, endIndex: number): void\r\n  ondirarg(start: number, endIndex: number): void\r\n  ondirmodifier(start: number, endIndex: number): void\r\n\r\n  oncomment(start: number, endIndex: number): void\r\n  oncdata(start: number, endIndex: number): void\r\n\r\n  onprocessinginstruction(start: number, endIndex: number): void\r\n  // ondeclaration(start: number, endIndex: number): void\r\n  onend(): void\r\n  onerr(code: ErrorCodes, index: number): void\r\n}\r\n\r\n/**\r\n * Sequences used to match longer strings.\r\n *\r\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\r\n * sequences with an increased offset.\r\n */\r\nexport const Sequences = {\r\n  Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]), // CDATA[\r\n  CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]), // ]]>\r\n  CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]), // `-->`\r\n  ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]), // `</script`\r\n  StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]), // `</style`\r\n  TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\r\n  TextareaEnd: new Uint8Array([\r\n    0x3c, 0x2f, 116, 101, 120, 116, 97, 114, 101, 97,\r\n  ]), // `</textarea\r\n}\r\n\r\nexport default class Tokenizer {\r\n  /** The current state the tokenizer is in. */\r\n  public state = State.Text\r\n  /** The read buffer. */\r\n  private buffer = ''\r\n  /** The beginning of the section that is currently being read. */\r\n  public sectionStart = 0\r\n  /** The index within the buffer that we are currently looking at. */\r\n  private index = 0\r\n  /** The start of the last entity. */\r\n  private entityStart = 0\r\n  /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\r\n  private baseState = State.Text\r\n  /** For special parsing behavior inside of script and style tags. */\r\n  public inRCDATA = false\r\n  /** For disabling RCDATA tags handling */\r\n  public inXML = false\r\n  /** For disabling interpolation parsing in v-pre */\r\n  public inVPre = false\r\n  /** Record newline positions for fast line / column calculation */\r\n  private newlines: number[] = []\r\n\r\n  private readonly entityDecoder?: EntityDecoder\r\n\r\n  public mode = ParseMode.BASE\r\n  public get inSFCRoot() {\r\n    return this.mode === ParseMode.SFC && this.stack.length === 0\r\n  }\r\n\r\n  constructor(\r\n    private readonly stack: ElementNode[],\r\n    private readonly cbs: Callbacks,\r\n  ) {\r\n    if (!__BROWSER__) {\r\n      this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) =>\r\n        this.emitCodePoint(cp, consumed),\r\n      )\r\n    }\r\n  }\r\n\r\n  public reset(): void {\r\n    this.state = State.Text\r\n    this.mode = ParseMode.BASE\r\n    this.buffer = ''\r\n    this.sectionStart = 0\r\n    this.index = 0\r\n    this.baseState = State.Text\r\n    this.inRCDATA = false\r\n    this.currentSequence = undefined!\r\n    this.newlines.length = 0\r\n    this.delimiterOpen = defaultDelimitersOpen\r\n    this.delimiterClose = defaultDelimitersClose\r\n  }\r\n\r\n  /**\r\n   * Generate Position object with line / column information using recorded\r\n   * newline positions. We know the index is always going to be an already\r\n   * processed index, so all the newlines up to this index should have been\r\n   * recorded.\r\n   */\r\n  public getPos(index: number): Position {\r\n    let line = 1\r\n    let column = index + 1\r\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\r\n      const newlineIndex = this.newlines[i]\r\n      if (index > newlineIndex) {\r\n        line = i + 2\r\n        column = index - newlineIndex\r\n        break\r\n      }\r\n    }\r\n    return {\r\n      column,\r\n      line,\r\n      offset: index,\r\n    }\r\n  }\r\n\r\n  private peek() {\r\n    return this.buffer.charCodeAt(this.index + 1)\r\n  }\r\n\r\n  private stateText(c: number): void {\r\n    if (c === CharCodes.Lt) {\r\n      if (this.index > this.sectionStart) {\r\n        this.cbs.ontext(this.sectionStart, this.index)\r\n      }\r\n      this.state = State.BeforeTagName\r\n      this.sectionStart = this.index\r\n    } else if (!__BROWSER__ && c === CharCodes.Amp) {\r\n      this.startEntity()\r\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\r\n      this.state = State.InterpolationOpen\r\n      this.delimiterIndex = 0\r\n      this.stateInterpolationOpen(c)\r\n    }\r\n  }\r\n\r\n  public delimiterOpen: Uint8Array = defaultDelimitersOpen\r\n  public delimiterClose: Uint8Array = defaultDelimitersClose\r\n  private delimiterIndex = -1\r\n\r\n  private stateInterpolationOpen(c: number): void {\r\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\r\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\r\n        const start = this.index + 1 - this.delimiterOpen.length\r\n        if (start > this.sectionStart) {\r\n          this.cbs.ontext(this.sectionStart, start)\r\n        }\r\n        this.state = State.Interpolation\r\n        this.sectionStart = start\r\n      } else {\r\n        this.delimiterIndex++\r\n      }\r\n    } else if (this.inRCDATA) {\r\n      this.state = State.InRCDATA\r\n      this.stateInRCDATA(c)\r\n    } else {\r\n      this.state = State.Text\r\n      this.stateText(c)\r\n    }\r\n  }\r\n\r\n  private stateInterpolation(c: number): void {\r\n    if (c === this.delimiterClose[0]) {\r\n      this.state = State.InterpolationClose\r\n      this.delimiterIndex = 0\r\n      this.stateInterpolationClose(c)\r\n    }\r\n  }\r\n\r\n  private stateInterpolationClose(c: number) {\r\n    if (c === this.delimiterClose[this.delimiterIndex]) {\r\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\r\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1)\r\n        if (this.inRCDATA) {\r\n          this.state = State.InRCDATA\r\n        } else {\r\n          this.state = State.Text\r\n        }\r\n        this.sectionStart = this.index + 1\r\n      } else {\r\n        this.delimiterIndex++\r\n      }\r\n    } else {\r\n      this.state = State.Interpolation\r\n      this.stateInterpolation(c)\r\n    }\r\n  }\r\n\r\n  public currentSequence: Uint8Array = undefined!\r\n  private sequenceIndex = 0\r\n  private stateSpecialStartSequence(c: number): void {\r\n    const isEnd = this.sequenceIndex === this.currentSequence.length\r\n    const isMatch = isEnd\r\n      ? // If we are at the end of the sequence, make sure the tag name has ended\r\n        isEndOfTagSection(c)\r\n      : // Otherwise, do a case-insensitive comparison\r\n        (c | 0x20) === this.currentSequence[this.sequenceIndex]\r\n\r\n    if (!isMatch) {\r\n      this.inRCDATA = false\r\n    } else if (!isEnd) {\r\n      this.sequenceIndex++\r\n      return\r\n    }\r\n\r\n    this.sequenceIndex = 0\r\n    this.state = State.InTagName\r\n    this.stateInTagName(c)\r\n  }\r\n\r\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\r\n  private stateInRCDATA(c: number): void {\r\n    if (this.sequenceIndex === this.currentSequence.length) {\r\n      if (c === CharCodes.Gt || isWhitespace(c)) {\r\n        const endOfText = this.index - this.currentSequence.length\r\n\r\n        if (this.sectionStart < endOfText) {\r\n          // Spoof the index so that reported locations match up.\r\n          const actualIndex = this.index\r\n          this.index = endOfText\r\n          this.cbs.ontext(this.sectionStart, endOfText)\r\n          this.index = actualIndex\r\n        }\r\n\r\n        this.sectionStart = endOfText + 2 // Skip over the `</`\r\n        this.stateInClosingTagName(c)\r\n        this.inRCDATA = false\r\n        return // We are done; skip the rest of the function.\r\n      }\r\n\r\n      this.sequenceIndex = 0\r\n    }\r\n\r\n    if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\r\n      this.sequenceIndex += 1\r\n    } else if (this.sequenceIndex === 0) {\r\n      if (\r\n        this.currentSequence === Sequences.TitleEnd ||\r\n        (this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot)\r\n      ) {\r\n        // We have to parse entities in <title> and <textarea> tags.\r\n        if (!__BROWSER__ && c === CharCodes.Amp) {\r\n          this.startEntity()\r\n        } else if (c === this.delimiterOpen[0]) {\r\n          // We also need to handle interpolation\r\n          this.state = State.InterpolationOpen\r\n          this.delimiterIndex = 0\r\n          this.stateInterpolationOpen(c)\r\n        }\r\n      } else if (this.fastForwardTo(CharCodes.Lt)) {\r\n        // Outside of <title> and <textarea> tags, we can fast-forward.\r\n        this.sequenceIndex = 1\r\n      }\r\n    } else {\r\n      // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\r\n      this.sequenceIndex = Number(c === CharCodes.Lt)\r\n    }\r\n  }\r\n\r\n  private stateCDATASequence(c: number): void {\r\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\r\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\r\n        this.state = State.InCommentLike\r\n        this.currentSequence = Sequences.CdataEnd\r\n        this.sequenceIndex = 0\r\n        this.sectionStart = this.index + 1\r\n      }\r\n    } else {\r\n      this.sequenceIndex = 0\r\n      this.state = State.InDeclaration\r\n      this.stateInDeclaration(c) // Reconsume the character\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When we wait for one specific character, we can speed things up\r\n   * by skipping through the buffer until we find it.\r\n   *\r\n   * @returns Whether the character was found.\r\n   */\r\n  private fastForwardTo(c: number): boolean {\r\n    while (++this.index < this.buffer.length) {\r\n      const cc = this.buffer.charCodeAt(this.index)\r\n      if (cc === CharCodes.NewLine) {\r\n        this.newlines.push(this.index)\r\n      }\r\n      if (cc === c) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    /*\r\n     * We increment the index at the end of the `parse` loop,\r\n     * so set it to `buffer.length - 1` here.\r\n     *\r\n     * TODO: Refactor `parse` to increment index before calling states.\r\n     */\r\n    this.index = this.buffer.length - 1\r\n\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Comments and CDATA end with `-->` and `]]>`.\r\n   *\r\n   * Their common qualities are:\r\n   * - Their end sequences have a distinct character they start with.\r\n   * - That character is then repeated, so we have to check multiple repeats.\r\n   * - All characters but the start character of the sequence can be skipped.\r\n   */\r\n  private stateInCommentLike(c: number): void {\r\n    if (c === this.currentSequence[this.sequenceIndex]) {\r\n      if (++this.sequenceIndex === this.currentSequence.length) {\r\n        if (this.currentSequence === Sequences.CdataEnd) {\r\n          this.cbs.oncdata(this.sectionStart, this.index - 2)\r\n        } else {\r\n          this.cbs.oncomment(this.sectionStart, this.index - 2)\r\n        }\r\n\r\n        this.sequenceIndex = 0\r\n        this.sectionStart = this.index + 1\r\n        this.state = State.Text\r\n      }\r\n    } else if (this.sequenceIndex === 0) {\r\n      // Fast-forward to the first character of the sequence\r\n      if (this.fastForwardTo(this.currentSequence[0])) {\r\n        this.sequenceIndex = 1\r\n      }\r\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\r\n      // Allow long sequences, eg. --->, ]]]>\r\n      this.sequenceIndex = 0\r\n    }\r\n  }\r\n\r\n  private startSpecial(sequence: Uint8Array, offset: number) {\r\n    this.enterRCDATA(sequence, offset)\r\n    this.state = State.SpecialStartSequence\r\n  }\r\n\r\n  public enterRCDATA(sequence: Uint8Array, offset: number) {\r\n    this.inRCDATA = true\r\n    this.currentSequence = sequence\r\n    this.sequenceIndex = offset\r\n  }\r\n\r\n  private stateBeforeTagName(c: number): void {\r\n    if (c === CharCodes.ExclamationMark) {\r\n      this.state = State.BeforeDeclaration\r\n      this.sectionStart = this.index + 1\r\n    } else if (c === CharCodes.Questionmark) {\r\n      this.state = State.InProcessingInstruction\r\n      this.sectionStart = this.index + 1\r\n    } else if (isTagStartChar(c)) {\r\n      this.sectionStart = this.index\r\n      if (this.mode === ParseMode.BASE) {\r\n        // no special tags in base mode\r\n        this.state = State.InTagName\r\n      } else if (this.inSFCRoot) {\r\n        // SFC mode + root level\r\n        // - everything except <template> is RAWTEXT\r\n        // - <template> with lang other than html is also RAWTEXT\r\n        this.state = State.InSFCRootTagName\r\n      } else if (!this.inXML) {\r\n        // HTML mode\r\n        // - <script>, <style> RAWTEXT\r\n        // - <title>, <textarea> RCDATA\r\n        const lower = c | 0x20\r\n        if (lower === 116 /* t */) {\r\n          this.state = State.BeforeSpecialT\r\n        } else {\r\n          this.state =\r\n            lower === 115 /* s */ ? State.BeforeSpecialS : State.InTagName\r\n        }\r\n      } else {\r\n        this.state = State.InTagName\r\n      }\r\n    } else if (c === CharCodes.Slash) {\r\n      this.state = State.BeforeClosingTagName\r\n    } else {\r\n      this.state = State.Text\r\n      this.stateText(c)\r\n    }\r\n  }\r\n  private stateInTagName(c: number): void {\r\n    if (isEndOfTagSection(c)) {\r\n      this.handleTagName(c)\r\n    }\r\n  }\r\n  private stateInSFCRootTagName(c: number): void {\r\n    if (isEndOfTagSection(c)) {\r\n      const tag = this.buffer.slice(this.sectionStart, this.index)\r\n      if (tag !== 'template') {\r\n        this.enterRCDATA(toCharCodes(`</` + tag), 0)\r\n      }\r\n      this.handleTagName(c)\r\n    }\r\n  }\r\n  private handleTagName(c: number) {\r\n    this.cbs.onopentagname(this.sectionStart, this.index)\r\n    this.sectionStart = -1\r\n    this.state = State.BeforeAttrName\r\n    this.stateBeforeAttrName(c)\r\n  }\r\n  private stateBeforeClosingTagName(c: number): void {\r\n    if (isWhitespace(c)) {\r\n      // Ignore\r\n    } else if (c === CharCodes.Gt) {\r\n      if (__DEV__ || !__BROWSER__) {\r\n        this.cbs.onerr(ErrorCodes.MISSING_END_TAG_NAME, this.index)\r\n      }\r\n      this.state = State.Text\r\n      // Ignore\r\n      this.sectionStart = this.index + 1\r\n    } else {\r\n      this.state = isTagStartChar(c)\r\n        ? State.InClosingTagName\r\n        : State.InSpecialComment\r\n      this.sectionStart = this.index\r\n    }\r\n  }\r\n  private stateInClosingTagName(c: number): void {\r\n    if (c === CharCodes.Gt || isWhitespace(c)) {\r\n      this.cbs.onclosetag(this.sectionStart, this.index)\r\n      this.sectionStart = -1\r\n      this.state = State.AfterClosingTagName\r\n      this.stateAfterClosingTagName(c)\r\n    }\r\n  }\r\n  private stateAfterClosingTagName(c: number): void {\r\n    // Skip everything until \">\"\r\n    if (c === CharCodes.Gt) {\r\n      this.state = State.Text\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateBeforeAttrName(c: number): void {\r\n    if (c === CharCodes.Gt) {\r\n      this.cbs.onopentagend(this.index)\r\n      if (this.inRCDATA) {\r\n        this.state = State.InRCDATA\r\n      } else {\r\n        this.state = State.Text\r\n      }\r\n      this.sectionStart = this.index + 1\r\n    } else if (c === CharCodes.Slash) {\r\n      this.state = State.InSelfClosingTag\r\n      if ((__DEV__ || !__BROWSER__) && this.peek() !== CharCodes.Gt) {\r\n        this.cbs.onerr(ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG, this.index)\r\n      }\r\n    } else if (c === CharCodes.Lt && this.peek() === CharCodes.Slash) {\r\n      // special handling for </ appearing in open tag state\r\n      // this is different from standard HTML parsing but makes practical sense\r\n      // especially for parsing intermediate input state in IDEs.\r\n      this.cbs.onopentagend(this.index)\r\n      this.state = State.BeforeTagName\r\n      this.sectionStart = this.index\r\n    } else if (!isWhitespace(c)) {\r\n      if ((__DEV__ || !__BROWSER__) && c === CharCodes.Eq) {\r\n        this.cbs.onerr(\r\n          ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\r\n          this.index,\r\n        )\r\n      }\r\n      this.handleAttrStart(c)\r\n    }\r\n  }\r\n  private handleAttrStart(c: number) {\r\n    if (c === CharCodes.LowerV && this.peek() === CharCodes.Dash) {\r\n      this.state = State.InDirName\r\n      this.sectionStart = this.index\r\n    } else if (\r\n      c === CharCodes.Dot ||\r\n      c === CharCodes.Colon ||\r\n      c === CharCodes.At ||\r\n      c === CharCodes.Number\r\n    ) {\r\n      this.cbs.ondirname(this.index, this.index + 1)\r\n      this.state = State.InDirArg\r\n      this.sectionStart = this.index + 1\r\n    } else {\r\n      this.state = State.InAttrName\r\n      this.sectionStart = this.index\r\n    }\r\n  }\r\n  private stateInSelfClosingTag(c: number): void {\r\n    if (c === CharCodes.Gt) {\r\n      this.cbs.onselfclosingtag(this.index)\r\n      this.state = State.Text\r\n      this.sectionStart = this.index + 1\r\n      this.inRCDATA = false // Reset special state, in case of self-closing special tags\r\n    } else if (!isWhitespace(c)) {\r\n      this.state = State.BeforeAttrName\r\n      this.stateBeforeAttrName(c)\r\n    }\r\n  }\r\n  private stateInAttrName(c: number): void {\r\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\r\n      this.cbs.onattribname(this.sectionStart, this.index)\r\n      this.handleAttrNameEnd(c)\r\n    } else if (\r\n      (__DEV__ || !__BROWSER__) &&\r\n      (c === CharCodes.DoubleQuote ||\r\n        c === CharCodes.SingleQuote ||\r\n        c === CharCodes.Lt)\r\n    ) {\r\n      this.cbs.onerr(\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n        this.index,\r\n      )\r\n    }\r\n  }\r\n  private stateInDirName(c: number): void {\r\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\r\n      this.cbs.ondirname(this.sectionStart, this.index)\r\n      this.handleAttrNameEnd(c)\r\n    } else if (c === CharCodes.Colon) {\r\n      this.cbs.ondirname(this.sectionStart, this.index)\r\n      this.state = State.InDirArg\r\n      this.sectionStart = this.index + 1\r\n    } else if (c === CharCodes.Dot) {\r\n      this.cbs.ondirname(this.sectionStart, this.index)\r\n      this.state = State.InDirModifier\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateInDirArg(c: number): void {\r\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\r\n      this.cbs.ondirarg(this.sectionStart, this.index)\r\n      this.handleAttrNameEnd(c)\r\n    } else if (c === CharCodes.LeftSquare) {\r\n      this.state = State.InDirDynamicArg\r\n    } else if (c === CharCodes.Dot) {\r\n      this.cbs.ondirarg(this.sectionStart, this.index)\r\n      this.state = State.InDirModifier\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateInDynamicDirArg(c: number): void {\r\n    if (c === CharCodes.RightSquare) {\r\n      this.state = State.InDirArg\r\n    } else if (c === CharCodes.Eq || isEndOfTagSection(c)) {\r\n      this.cbs.ondirarg(this.sectionStart, this.index + 1)\r\n      this.handleAttrNameEnd(c)\r\n      if (__DEV__ || !__BROWSER__) {\r\n        this.cbs.onerr(\r\n          ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\r\n          this.index,\r\n        )\r\n      }\r\n    }\r\n  }\r\n  private stateInDirModifier(c: number): void {\r\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\r\n      this.cbs.ondirmodifier(this.sectionStart, this.index)\r\n      this.handleAttrNameEnd(c)\r\n    } else if (c === CharCodes.Dot) {\r\n      this.cbs.ondirmodifier(this.sectionStart, this.index)\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private handleAttrNameEnd(c: number): void {\r\n    this.sectionStart = this.index\r\n    this.state = State.AfterAttrName\r\n    this.cbs.onattribnameend(this.index)\r\n    this.stateAfterAttrName(c)\r\n  }\r\n  private stateAfterAttrName(c: number): void {\r\n    if (c === CharCodes.Eq) {\r\n      this.state = State.BeforeAttrValue\r\n    } else if (c === CharCodes.Slash || c === CharCodes.Gt) {\r\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart)\r\n      this.sectionStart = -1\r\n      this.state = State.BeforeAttrName\r\n      this.stateBeforeAttrName(c)\r\n    } else if (!isWhitespace(c)) {\r\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart)\r\n      this.handleAttrStart(c)\r\n    }\r\n  }\r\n  private stateBeforeAttrValue(c: number): void {\r\n    if (c === CharCodes.DoubleQuote) {\r\n      this.state = State.InAttrValueDq\r\n      this.sectionStart = this.index + 1\r\n    } else if (c === CharCodes.SingleQuote) {\r\n      this.state = State.InAttrValueSq\r\n      this.sectionStart = this.index + 1\r\n    } else if (!isWhitespace(c)) {\r\n      this.sectionStart = this.index\r\n      this.state = State.InAttrValueNq\r\n      this.stateInAttrValueNoQuotes(c) // Reconsume token\r\n    }\r\n  }\r\n  private handleInAttrValue(c: number, quote: number) {\r\n    if (c === quote || (__BROWSER__ && this.fastForwardTo(quote))) {\r\n      this.cbs.onattribdata(this.sectionStart, this.index)\r\n      this.sectionStart = -1\r\n      this.cbs.onattribend(\r\n        quote === CharCodes.DoubleQuote ? QuoteType.Double : QuoteType.Single,\r\n        this.index + 1,\r\n      )\r\n      this.state = State.BeforeAttrName\r\n    } else if (!__BROWSER__ && c === CharCodes.Amp) {\r\n      this.startEntity()\r\n    }\r\n  }\r\n  private stateInAttrValueDoubleQuotes(c: number): void {\r\n    this.handleInAttrValue(c, CharCodes.DoubleQuote)\r\n  }\r\n  private stateInAttrValueSingleQuotes(c: number): void {\r\n    this.handleInAttrValue(c, CharCodes.SingleQuote)\r\n  }\r\n  private stateInAttrValueNoQuotes(c: number): void {\r\n    if (isWhitespace(c) || c === CharCodes.Gt) {\r\n      this.cbs.onattribdata(this.sectionStart, this.index)\r\n      this.sectionStart = -1\r\n      this.cbs.onattribend(QuoteType.Unquoted, this.index)\r\n      this.state = State.BeforeAttrName\r\n      this.stateBeforeAttrName(c)\r\n    } else if (\r\n      ((__DEV__ || !__BROWSER__) && c === CharCodes.DoubleQuote) ||\r\n      c === CharCodes.SingleQuote ||\r\n      c === CharCodes.Lt ||\r\n      c === CharCodes.Eq ||\r\n      c === CharCodes.GraveAccent\r\n    ) {\r\n      this.cbs.onerr(\r\n        ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n        this.index,\r\n      )\r\n    } else if (!__BROWSER__ && c === CharCodes.Amp) {\r\n      this.startEntity()\r\n    }\r\n  }\r\n  private stateBeforeDeclaration(c: number): void {\r\n    if (c === CharCodes.LeftSquare) {\r\n      this.state = State.CDATASequence\r\n      this.sequenceIndex = 0\r\n    } else {\r\n      this.state =\r\n        c === CharCodes.Dash ? State.BeforeComment : State.InDeclaration\r\n    }\r\n  }\r\n  private stateInDeclaration(c: number): void {\r\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\r\n      // this.cbs.ondeclaration(this.sectionStart, this.index)\r\n      this.state = State.Text\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateInProcessingInstruction(c: number): void {\r\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\r\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index)\r\n      this.state = State.Text\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateBeforeComment(c: number): void {\r\n    if (c === CharCodes.Dash) {\r\n      this.state = State.InCommentLike\r\n      this.currentSequence = Sequences.CommentEnd\r\n      // Allow short comments (eg. <!-->)\r\n      this.sequenceIndex = 2\r\n      this.sectionStart = this.index + 1\r\n    } else {\r\n      this.state = State.InDeclaration\r\n    }\r\n  }\r\n  private stateInSpecialComment(c: number): void {\r\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\r\n      this.cbs.oncomment(this.sectionStart, this.index)\r\n      this.state = State.Text\r\n      this.sectionStart = this.index + 1\r\n    }\r\n  }\r\n  private stateBeforeSpecialS(c: number): void {\r\n    const lower = c | 0x20\r\n    if (lower === Sequences.ScriptEnd[3]) {\r\n      this.startSpecial(Sequences.ScriptEnd, 4)\r\n    } else if (lower === Sequences.StyleEnd[3]) {\r\n      this.startSpecial(Sequences.StyleEnd, 4)\r\n    } else {\r\n      this.state = State.InTagName\r\n      this.stateInTagName(c) // Consume the token again\r\n    }\r\n  }\r\n  private stateBeforeSpecialT(c: number): void {\r\n    const lower = c | 0x20\r\n    if (lower === Sequences.TitleEnd[3]) {\r\n      this.startSpecial(Sequences.TitleEnd, 4)\r\n    } else if (lower === Sequences.TextareaEnd[3]) {\r\n      this.startSpecial(Sequences.TextareaEnd, 4)\r\n    } else {\r\n      this.state = State.InTagName\r\n      this.stateInTagName(c) // Consume the token again\r\n    }\r\n  }\r\n\r\n  private startEntity() {\r\n    if (!__BROWSER__) {\r\n      this.baseState = this.state\r\n      this.state = State.InEntity\r\n      this.entityStart = this.index\r\n      this.entityDecoder!.startEntity(\r\n        this.baseState === State.Text || this.baseState === State.InRCDATA\r\n          ? DecodingMode.Legacy\r\n          : DecodingMode.Attribute,\r\n      )\r\n    }\r\n  }\r\n\r\n  private stateInEntity(): void {\r\n    if (!__BROWSER__) {\r\n      const length = this.entityDecoder!.write(this.buffer, this.index)\r\n\r\n      // If `length` is positive, we are done with the entity.\r\n      if (length >= 0) {\r\n        this.state = this.baseState\r\n\r\n        if (length === 0) {\r\n          this.index = this.entityStart\r\n        }\r\n      } else {\r\n        // Mark buffer as consumed.\r\n        this.index = this.buffer.length - 1\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterates through the buffer, calling the function corresponding to the current state.\r\n   *\r\n   * States that are more likely to be hit are higher up, as a performance improvement.\r\n   */\r\n  public parse(input: string) {\r\n    this.buffer = input\r\n    while (this.index < this.buffer.length) {\r\n      const c = this.buffer.charCodeAt(this.index)\r\n      if (c === CharCodes.NewLine) {\r\n        this.newlines.push(this.index)\r\n      }\r\n      switch (this.state) {\r\n        case State.Text: {\r\n          this.stateText(c)\r\n          break\r\n        }\r\n        case State.InterpolationOpen: {\r\n          this.stateInterpolationOpen(c)\r\n          break\r\n        }\r\n        case State.Interpolation: {\r\n          this.stateInterpolation(c)\r\n          break\r\n        }\r\n        case State.InterpolationClose: {\r\n          this.stateInterpolationClose(c)\r\n          break\r\n        }\r\n        case State.SpecialStartSequence: {\r\n          this.stateSpecialStartSequence(c)\r\n          break\r\n        }\r\n        case State.InRCDATA: {\r\n          this.stateInRCDATA(c)\r\n          break\r\n        }\r\n        case State.CDATASequence: {\r\n          this.stateCDATASequence(c)\r\n          break\r\n        }\r\n        case State.InAttrValueDq: {\r\n          this.stateInAttrValueDoubleQuotes(c)\r\n          break\r\n        }\r\n        case State.InAttrName: {\r\n          this.stateInAttrName(c)\r\n          break\r\n        }\r\n        case State.InDirName: {\r\n          this.stateInDirName(c)\r\n          break\r\n        }\r\n        case State.InDirArg: {\r\n          this.stateInDirArg(c)\r\n          break\r\n        }\r\n        case State.InDirDynamicArg: {\r\n          this.stateInDynamicDirArg(c)\r\n          break\r\n        }\r\n        case State.InDirModifier: {\r\n          this.stateInDirModifier(c)\r\n          break\r\n        }\r\n        case State.InCommentLike: {\r\n          this.stateInCommentLike(c)\r\n          break\r\n        }\r\n        case State.InSpecialComment: {\r\n          this.stateInSpecialComment(c)\r\n          break\r\n        }\r\n        case State.BeforeAttrName: {\r\n          this.stateBeforeAttrName(c)\r\n          break\r\n        }\r\n        case State.InTagName: {\r\n          this.stateInTagName(c)\r\n          break\r\n        }\r\n        case State.InSFCRootTagName: {\r\n          this.stateInSFCRootTagName(c)\r\n          break\r\n        }\r\n        case State.InClosingTagName: {\r\n          this.stateInClosingTagName(c)\r\n          break\r\n        }\r\n        case State.BeforeTagName: {\r\n          this.stateBeforeTagName(c)\r\n          break\r\n        }\r\n        case State.AfterAttrName: {\r\n          this.stateAfterAttrName(c)\r\n          break\r\n        }\r\n        case State.InAttrValueSq: {\r\n          this.stateInAttrValueSingleQuotes(c)\r\n          break\r\n        }\r\n        case State.BeforeAttrValue: {\r\n          this.stateBeforeAttrValue(c)\r\n          break\r\n        }\r\n        case State.BeforeClosingTagName: {\r\n          this.stateBeforeClosingTagName(c)\r\n          break\r\n        }\r\n        case State.AfterClosingTagName: {\r\n          this.stateAfterClosingTagName(c)\r\n          break\r\n        }\r\n        case State.BeforeSpecialS: {\r\n          this.stateBeforeSpecialS(c)\r\n          break\r\n        }\r\n        case State.BeforeSpecialT: {\r\n          this.stateBeforeSpecialT(c)\r\n          break\r\n        }\r\n        case State.InAttrValueNq: {\r\n          this.stateInAttrValueNoQuotes(c)\r\n          break\r\n        }\r\n        case State.InSelfClosingTag: {\r\n          this.stateInSelfClosingTag(c)\r\n          break\r\n        }\r\n        case State.InDeclaration: {\r\n          this.stateInDeclaration(c)\r\n          break\r\n        }\r\n        case State.BeforeDeclaration: {\r\n          this.stateBeforeDeclaration(c)\r\n          break\r\n        }\r\n        case State.BeforeComment: {\r\n          this.stateBeforeComment(c)\r\n          break\r\n        }\r\n        case State.InProcessingInstruction: {\r\n          this.stateInProcessingInstruction(c)\r\n          break\r\n        }\r\n        case State.InEntity: {\r\n          this.stateInEntity()\r\n          break\r\n        }\r\n      }\r\n      this.index++\r\n    }\r\n    this.cleanup()\r\n    this.finish()\r\n  }\r\n\r\n  /**\r\n   * Remove data that has already been consumed from the buffer.\r\n   */\r\n  private cleanup() {\r\n    // If we are inside of text or attributes, emit what we already have.\r\n    if (this.sectionStart !== this.index) {\r\n      if (\r\n        this.state === State.Text ||\r\n        (this.state === State.InRCDATA && this.sequenceIndex === 0)\r\n      ) {\r\n        this.cbs.ontext(this.sectionStart, this.index)\r\n        this.sectionStart = this.index\r\n      } else if (\r\n        this.state === State.InAttrValueDq ||\r\n        this.state === State.InAttrValueSq ||\r\n        this.state === State.InAttrValueNq\r\n      ) {\r\n        this.cbs.onattribdata(this.sectionStart, this.index)\r\n        this.sectionStart = this.index\r\n      }\r\n    }\r\n  }\r\n\r\n  private finish() {\r\n    if (!__BROWSER__ && this.state === State.InEntity) {\r\n      this.entityDecoder!.end()\r\n      this.state = this.baseState\r\n    }\r\n\r\n    this.handleTrailingData()\r\n\r\n    this.cbs.onend()\r\n  }\r\n\r\n  /** Handle any trailing data. */\r\n  private handleTrailingData() {\r\n    const endIndex = this.buffer.length\r\n\r\n    // If there is no remaining data, we are done.\r\n    if (this.sectionStart >= endIndex) {\r\n      return\r\n    }\r\n\r\n    if (this.state === State.InCommentLike) {\r\n      if (this.currentSequence === Sequences.CdataEnd) {\r\n        this.cbs.oncdata(this.sectionStart, endIndex)\r\n      } else {\r\n        this.cbs.oncomment(this.sectionStart, endIndex)\r\n      }\r\n    } else if (\r\n      this.state === State.InTagName ||\r\n      this.state === State.BeforeAttrName ||\r\n      this.state === State.BeforeAttrValue ||\r\n      this.state === State.AfterAttrName ||\r\n      this.state === State.InAttrName ||\r\n      this.state === State.InDirName ||\r\n      this.state === State.InDirArg ||\r\n      this.state === State.InDirDynamicArg ||\r\n      this.state === State.InDirModifier ||\r\n      this.state === State.InAttrValueSq ||\r\n      this.state === State.InAttrValueDq ||\r\n      this.state === State.InAttrValueNq ||\r\n      this.state === State.InClosingTagName\r\n    ) {\r\n      /*\r\n       * If we are currently in an opening or closing tag, us not calling the\r\n       * respective callback signals that the tag should be ignored.\r\n       */\r\n    } else {\r\n      this.cbs.ontext(this.sectionStart, endIndex)\r\n    }\r\n  }\r\n\r\n  private emitCodePoint(cp: number, consumed: number): void {\r\n    if (!__BROWSER__) {\r\n      if (this.baseState !== State.Text && this.baseState !== State.InRCDATA) {\r\n        if (this.sectionStart < this.entityStart) {\r\n          this.cbs.onattribdata(this.sectionStart, this.entityStart)\r\n        }\r\n        this.sectionStart = this.entityStart + consumed\r\n        this.index = this.sectionStart - 1\r\n\r\n        this.cbs.onattribentity(\r\n          fromCodePoint(cp),\r\n          this.entityStart,\r\n          this.sectionStart,\r\n        )\r\n      } else {\r\n        if (this.sectionStart < this.entityStart) {\r\n          this.cbs.ontext(this.sectionStart, this.entityStart)\r\n        }\r\n        this.sectionStart = this.entityStart + consumed\r\n        this.index = this.sectionStart - 1\r\n\r\n        this.cbs.ontextentity(\r\n          fromCodePoint(cp),\r\n          this.entityStart,\r\n          this.sectionStart,\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { SourceLocation } from './ast'\r\n\r\nexport interface CompilerError extends SyntaxError {\r\n  code: number | string\r\n  loc?: SourceLocation\r\n}\r\n\r\nexport interface CoreCompilerError extends CompilerError {\r\n  code: ErrorCodes\r\n}\r\n\r\nexport function defaultOnError(error: CompilerError) {\r\n  throw error\r\n}\r\n\r\nexport function defaultOnWarn(msg: CompilerError) {\r\n  __DEV__ && console.warn(`[Vue warn] ${msg.message}`)\r\n}\r\n\r\ntype InferCompilerError<T> = T extends ErrorCodes\r\n  ? CoreCompilerError\r\n  : CompilerError\r\n\r\nexport function createCompilerError<T extends number>(\r\n  code: T,\r\n  loc?: SourceLocation,\r\n  messages?: { [code: number]: string },\r\n  additionalMessage?: string,\r\n): InferCompilerError<T> {\r\n  const msg =\r\n    __DEV__ || !__BROWSER__\r\n      ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n      : `https://vuejs.org/error-reference/#compiler-${code}`\r\n  const error = new SyntaxError(String(msg)) as InferCompilerError<T>\r\n  error.code = code\r\n  error.loc = loc\r\n  return error\r\n}\r\n\r\nexport enum ErrorCodes {\r\n  // parse errors\r\n  ABRUPT_CLOSING_OF_EMPTY_COMMENT,\r\n  CDATA_IN_HTML_CONTENT,\r\n  DUPLICATE_ATTRIBUTE,\r\n  END_TAG_WITH_ATTRIBUTES,\r\n  END_TAG_WITH_TRAILING_SOLIDUS,\r\n  EOF_BEFORE_TAG_NAME,\r\n  EOF_IN_CDATA,\r\n  EOF_IN_COMMENT,\r\n  EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT,\r\n  EOF_IN_TAG,\r\n  INCORRECTLY_CLOSED_COMMENT,\r\n  INCORRECTLY_OPENED_COMMENT,\r\n  INVALID_FIRST_CHARACTER_OF_TAG_NAME,\r\n  MISSING_ATTRIBUTE_VALUE,\r\n  MISSING_END_TAG_NAME,\r\n  MISSING_WHITESPACE_BETWEEN_ATTRIBUTES,\r\n  NESTED_COMMENT,\r\n  UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME,\r\n  UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE,\r\n  UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME,\r\n  UNEXPECTED_NULL_CHARACTER,\r\n  UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n  UNEXPECTED_SOLIDUS_IN_TAG,\r\n\r\n  // Vue-specific parse errors\r\n  X_INVALID_END_TAG,\r\n  X_MISSING_END_TAG,\r\n  X_MISSING_INTERPOLATION_END,\r\n  X_MISSING_DIRECTIVE_NAME,\r\n  X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END,\r\n\r\n  // transform errors\r\n  X_V_IF_NO_EXPRESSION,\r\n  X_V_IF_SAME_KEY,\r\n  X_V_ELSE_NO_ADJACENT_IF,\r\n  X_V_FOR_NO_EXPRESSION,\r\n  X_V_FOR_MALFORMED_EXPRESSION,\r\n  X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n  X_V_BIND_NO_EXPRESSION,\r\n  X_V_ON_NO_EXPRESSION,\r\n  X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n  X_V_SLOT_MIXED_SLOT_USAGE,\r\n  X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n  X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n  X_V_SLOT_MISPLACED,\r\n  X_V_MODEL_NO_EXPRESSION,\r\n  X_V_MODEL_MALFORMED_EXPRESSION,\r\n  X_V_MODEL_ON_SCOPE_VARIABLE,\r\n  X_V_MODEL_ON_PROPS,\r\n  X_INVALID_EXPRESSION,\r\n  X_KEEP_ALIVE_INVALID_CHILDREN,\r\n\r\n  // generic errors\r\n  X_PREFIX_ID_NOT_SUPPORTED,\r\n  X_MODULE_MODE_NOT_SUPPORTED,\r\n  X_CACHE_HANDLER_NOT_SUPPORTED,\r\n  X_SCOPE_ID_NOT_SUPPORTED,\r\n  X_VNODE_HOOKS,\r\n\r\n  // Special value for higher-order compilers to pick up the last code\r\n  // to avoid collision of error codes. This should always be kept as the last\r\n  // item.\r\n  __EXTEND_POINT__,\r\n}\r\n\r\nexport const errorMessages: Record<ErrorCodes, string> = {\r\n  // parse errors\r\n  [ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT]: 'Illegal comment.',\r\n  [ErrorCodes.CDATA_IN_HTML_CONTENT]:\r\n    'CDATA section is allowed only in XML context.',\r\n  [ErrorCodes.DUPLICATE_ATTRIBUTE]: 'Duplicate attribute.',\r\n  [ErrorCodes.END_TAG_WITH_ATTRIBUTES]: 'End tag cannot have attributes.',\r\n  [ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS]: \"Illegal '/' in tags.\",\r\n  [ErrorCodes.EOF_BEFORE_TAG_NAME]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.EOF_IN_CDATA]: 'Unexpected EOF in CDATA section.',\r\n  [ErrorCodes.EOF_IN_COMMENT]: 'Unexpected EOF in comment.',\r\n  [ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT]:\r\n    'Unexpected EOF in script.',\r\n  [ErrorCodes.EOF_IN_TAG]: 'Unexpected EOF in tag.',\r\n  [ErrorCodes.INCORRECTLY_CLOSED_COMMENT]: 'Incorrectly closed comment.',\r\n  [ErrorCodes.INCORRECTLY_OPENED_COMMENT]: 'Incorrectly opened comment.',\r\n  [ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME]:\r\n    \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n  [ErrorCodes.MISSING_ATTRIBUTE_VALUE]: 'Attribute value was expected.',\r\n  [ErrorCodes.MISSING_END_TAG_NAME]: 'End tag name was expected.',\r\n  [ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES]:\r\n    'Whitespace was expected.',\r\n  [ErrorCodes.NESTED_COMMENT]: \"Unexpected '<!--' in comment.\",\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME]:\r\n    'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n  [ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE]:\r\n    'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n  [ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME]:\r\n    \"Attribute name cannot start with '='.\",\r\n  [ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME]:\r\n    \"'<?' is allowed only in XML context.\",\r\n  [ErrorCodes.UNEXPECTED_NULL_CHARACTER]: `Unexpected null character.`,\r\n  [ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG]: \"Illegal '/' in tags.\",\r\n\r\n  // Vue-specific parse errors\r\n  [ErrorCodes.X_INVALID_END_TAG]: 'Invalid end tag.',\r\n  [ErrorCodes.X_MISSING_END_TAG]: 'Element is missing end tag.',\r\n  [ErrorCodes.X_MISSING_INTERPOLATION_END]:\r\n    'Interpolation end sign was not found.',\r\n  [ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END]:\r\n    'End bracket for dynamic directive argument was not found. ' +\r\n    'Note that dynamic directive argument cannot contain spaces.',\r\n  [ErrorCodes.X_MISSING_DIRECTIVE_NAME]: 'Legal directive name was expected.',\r\n\r\n  // transform errors\r\n  [ErrorCodes.X_V_IF_NO_EXPRESSION]: `v-if/v-else-if is missing expression.`,\r\n  [ErrorCodes.X_V_IF_SAME_KEY]: `v-if/else branches must use unique keys.`,\r\n  [ErrorCodes.X_V_ELSE_NO_ADJACENT_IF]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n  [ErrorCodes.X_V_FOR_NO_EXPRESSION]: `v-for is missing expression.`,\r\n  [ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION]: `v-for has invalid expression.`,\r\n  [ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT]: `<template v-for> key should be placed on the <template> tag.`,\r\n  [ErrorCodes.X_V_BIND_NO_EXPRESSION]: `v-bind is missing expression.`,\r\n  [ErrorCodes.X_V_ON_NO_EXPRESSION]: `v-on is missing expression.`,\r\n  [ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET]: `Unexpected custom directive on <slot> outlet.`,\r\n  [ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE]:\r\n    `Mixed v-slot usage on both the component and nested <template>. ` +\r\n    `When there are multiple named slots, all slots should use <template> ` +\r\n    `syntax to avoid scope ambiguity.`,\r\n  [ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES]: `Duplicate slot names found. `,\r\n  [ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN]:\r\n    `Extraneous children found when component already has explicitly named ` +\r\n    `default slot. These children will be ignored.`,\r\n  [ErrorCodes.X_V_SLOT_MISPLACED]: `v-slot can only be used on components or <template> tags.`,\r\n  [ErrorCodes.X_V_MODEL_NO_EXPRESSION]: `v-model is missing expression.`,\r\n  [ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION]: `v-model value must be a valid JavaScript member expression.`,\r\n  [ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n  [ErrorCodes.X_V_MODEL_ON_PROPS]: `v-model cannot be used on a prop, because local prop bindings are not writable.\\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\r\n  [ErrorCodes.X_INVALID_EXPRESSION]: `Error parsing JavaScript expression: `,\r\n  [ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN]: `<KeepAlive> expects exactly one child component.`,\r\n  [ErrorCodes.X_VNODE_HOOKS]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\r\n\r\n  // generic errors\r\n  [ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED]: `ES module mode is not supported in this build of compiler.`,\r\n  [ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n  [ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED]: `\"scopeId\" option is only supported in module mode.`,\r\n\r\n  // just to fulfill types\r\n  [ErrorCodes.__EXTEND_POINT__]: ``,\r\n}\r\n","import {\r\n  type BlockCodegenNode,\r\n  type CallExpression,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  type IfBranchNode,\r\n  type InterpolationNode,\r\n  type JSChildNode,\r\n  type MemoExpression,\r\n  NodeTypes,\r\n  type ObjectExpression,\r\n  type Position,\r\n  type Property,\r\n  type RenderSlotCall,\r\n  type RootNode,\r\n  type SimpleExpressionNode,\r\n  type SlotOutletNode,\r\n  type TemplateChildNode,\r\n  type TemplateNode,\r\n  type TextNode,\r\n  type VNodeCall,\r\n  createCallExpression,\r\n  createObjectExpression,\r\n} from './ast'\r\nimport type { TransformContext } from './transform'\r\nimport {\r\n  BASE_TRANSITION,\r\n  GUARD_REACTIVE_PROPS,\r\n  KEEP_ALIVE,\r\n  MERGE_PROPS,\r\n  NORMALIZE_PROPS,\r\n  SUSPENSE,\r\n  TELEPORT,\r\n  TO_HANDLERS,\r\n  WITH_MEMO,\r\n} from './runtimeHelpers'\r\nimport { NOOP, isObject, isString } from '@vue/shared'\r\nimport type { PropsExpression } from './transforms/transformElement'\r\nimport { parseExpression } from '@babel/parser'\r\nimport type { Expression } from '@babel/types'\r\nimport { unwrapTSNode } from './babelUtils'\r\n\r\nexport const isStaticExp = (p: JSChildNode): p is SimpleExpressionNode =>\r\n  p.type === NodeTypes.SIMPLE_EXPRESSION && p.isStatic\r\n\r\nexport function isCoreComponent(tag: string): symbol | void {\r\n  switch (tag) {\r\n    case 'Teleport':\r\n    case 'teleport':\r\n      return TELEPORT\r\n    case 'Suspense':\r\n    case 'suspense':\r\n      return SUSPENSE\r\n    case 'KeepAlive':\r\n    case 'keep-alive':\r\n      return KEEP_ALIVE\r\n    case 'BaseTransition':\r\n    case 'base-transition':\r\n      return BASE_TRANSITION\r\n  }\r\n}\r\n\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/\r\nexport const isSimpleIdentifier = (name: string): boolean =>\r\n  !nonIdentifierRE.test(name)\r\n\r\nenum MemberExpLexState {\r\n  inMemberExp,\r\n  inBrackets,\r\n  inParens,\r\n  inString,\r\n}\r\n\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g\r\n\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nexport const isMemberExpressionBrowser = (path: string): boolean => {\r\n  // remove whitespaces around . or [ first\r\n  path = path.trim().replace(whitespaceRE, s => s.trim())\r\n\r\n  let state = MemberExpLexState.inMemberExp\r\n  let stateStack: MemberExpLexState[] = []\r\n  let currentOpenBracketCount = 0\r\n  let currentOpenParensCount = 0\r\n  let currentStringType: \"'\" | '\"' | '`' | null = null\r\n\r\n  for (let i = 0; i < path.length; i++) {\r\n    const char = path.charAt(i)\r\n    switch (state) {\r\n      case MemberExpLexState.inMemberExp:\r\n        if (char === '[') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inBrackets\r\n          currentOpenBracketCount++\r\n        } else if (char === '(') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inParens\r\n          currentOpenParensCount++\r\n        } else if (\r\n          !(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)\r\n        ) {\r\n          return false\r\n        }\r\n        break\r\n      case MemberExpLexState.inBrackets:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `[`) {\r\n          currentOpenBracketCount++\r\n        } else if (char === `]`) {\r\n          if (!--currentOpenBracketCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inParens:\r\n        if (char === `'` || char === `\"` || char === '`') {\r\n          stateStack.push(state)\r\n          state = MemberExpLexState.inString\r\n          currentStringType = char\r\n        } else if (char === `(`) {\r\n          currentOpenParensCount++\r\n        } else if (char === `)`) {\r\n          // if the exp ends as a call then it should not be considered valid\r\n          if (i === path.length - 1) {\r\n            return false\r\n          }\r\n          if (!--currentOpenParensCount) {\r\n            state = stateStack.pop()!\r\n          }\r\n        }\r\n        break\r\n      case MemberExpLexState.inString:\r\n        if (char === currentStringType) {\r\n          state = stateStack.pop()!\r\n          currentStringType = null\r\n        }\r\n        break\r\n    }\r\n  }\r\n  return !currentOpenBracketCount && !currentOpenParensCount\r\n}\r\n\r\nexport const isMemberExpressionNode = __BROWSER__\r\n  ? (NOOP as any as (path: string, context: TransformContext) => boolean)\r\n  : (path: string, context: TransformContext): boolean => {\r\n      try {\r\n        let ret: Expression = parseExpression(path, {\r\n          plugins: context.expressionPlugins,\r\n        })\r\n        ret = unwrapTSNode(ret) as Expression\r\n        return (\r\n          ret.type === 'MemberExpression' ||\r\n          ret.type === 'OptionalMemberExpression' ||\r\n          (ret.type === 'Identifier' && ret.name !== 'undefined')\r\n        )\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    }\r\n\r\nexport const isMemberExpression = __BROWSER__\r\n  ? isMemberExpressionBrowser\r\n  : isMemberExpressionNode\r\n\r\nexport function advancePositionWithClone(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length,\r\n): Position {\r\n  return advancePositionWithMutation(\r\n    {\r\n      offset: pos.offset,\r\n      line: pos.line,\r\n      column: pos.column,\r\n    },\r\n    source,\r\n    numberOfCharacters,\r\n  )\r\n}\r\n\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nexport function advancePositionWithMutation(\r\n  pos: Position,\r\n  source: string,\r\n  numberOfCharacters: number = source.length,\r\n): Position {\r\n  let linesCount = 0\r\n  let lastNewLinePos = -1\r\n  for (let i = 0; i < numberOfCharacters; i++) {\r\n    if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n      linesCount++\r\n      lastNewLinePos = i\r\n    }\r\n  }\r\n\r\n  pos.offset += numberOfCharacters\r\n  pos.line += linesCount\r\n  pos.column =\r\n    lastNewLinePos === -1\r\n      ? pos.column + numberOfCharacters\r\n      : numberOfCharacters - lastNewLinePos\r\n\r\n  return pos\r\n}\r\n\r\nexport function assert(condition: boolean, msg?: string) {\r\n  /* istanbul ignore if */\r\n  if (!condition) {\r\n    throw new Error(msg || `unexpected compiler condition`)\r\n  }\r\n}\r\n\r\nexport function findDir(\r\n  node: ElementNode,\r\n  name: string | RegExp,\r\n  allowEmpty: boolean = false,\r\n): DirectiveNode | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      (allowEmpty || p.exp) &&\r\n      (isString(name) ? p.name === name : name.test(p.name))\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function findProp(\r\n  node: ElementNode,\r\n  name: string,\r\n  dynamicOnly: boolean = false,\r\n  allowEmpty: boolean = false,\r\n): ElementNode['props'][0] | undefined {\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (dynamicOnly) continue\r\n      if (p.name === name && (p.value || allowEmpty)) {\r\n        return p\r\n      }\r\n    } else if (\r\n      p.name === 'bind' &&\r\n      (p.exp || allowEmpty) &&\r\n      isStaticArgOf(p.arg, name)\r\n    ) {\r\n      return p\r\n    }\r\n  }\r\n}\r\n\r\nexport function isStaticArgOf(\r\n  arg: DirectiveNode['arg'],\r\n  name: string,\r\n): boolean {\r\n  return !!(arg && isStaticExp(arg) && arg.content === name)\r\n}\r\n\r\nexport function hasDynamicKeyVBind(node: ElementNode): boolean {\r\n  return node.props.some(\r\n    p =>\r\n      p.type === NodeTypes.DIRECTIVE &&\r\n      p.name === 'bind' &&\r\n      (!p.arg || // v-bind=\"obj\"\r\n        p.arg.type !== NodeTypes.SIMPLE_EXPRESSION || // v-bind:[_ctx.foo]\r\n        !p.arg.isStatic), // v-bind:[foo]\r\n  )\r\n}\r\n\r\nexport function isText(\r\n  node: TemplateChildNode,\r\n): node is TextNode | InterpolationNode {\r\n  return node.type === NodeTypes.INTERPOLATION || node.type === NodeTypes.TEXT\r\n}\r\n\r\nexport function isVSlot(p: ElementNode['props'][0]): p is DirectiveNode {\r\n  return p.type === NodeTypes.DIRECTIVE && p.name === 'slot'\r\n}\r\n\r\nexport function isTemplateNode(\r\n  node: RootNode | TemplateChildNode,\r\n): node is TemplateNode {\r\n  return (\r\n    node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.TEMPLATE\r\n  )\r\n}\r\n\r\nexport function isSlotOutlet(\r\n  node: RootNode | TemplateChildNode,\r\n): node is SlotOutletNode {\r\n  return node.type === NodeTypes.ELEMENT && node.tagType === ElementTypes.SLOT\r\n}\r\n\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS])\r\n\r\nfunction getUnnormalizedProps(\r\n  props: PropsExpression | '{}',\r\n  callPath: CallExpression[] = [],\r\n): [PropsExpression | '{}', CallExpression[]] {\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const callee = props.callee\r\n    if (!isString(callee) && propsHelperSet.has(callee)) {\r\n      return getUnnormalizedProps(\r\n        props.arguments[0] as PropsExpression,\r\n        callPath.concat(props),\r\n      )\r\n    }\r\n  }\r\n  return [props, callPath]\r\n}\r\nexport function injectProp(\r\n  node: VNodeCall | RenderSlotCall,\r\n  prop: Property,\r\n  context: TransformContext,\r\n) {\r\n  let propsWithInjection: ObjectExpression | CallExpression | undefined\r\n  /**\r\n   * 1. mergeProps(...)\r\n   * 2. toHandlers(...)\r\n   * 3. normalizeProps(...)\r\n   * 4. normalizeProps(guardReactiveProps(...))\r\n   *\r\n   * we need to get the real props before normalization\r\n   */\r\n  let props =\r\n    node.type === NodeTypes.VNODE_CALL ? node.props : node.arguments[2]\r\n  let callPath: CallExpression[] = []\r\n  let parentCall: CallExpression | undefined\r\n  if (\r\n    props &&\r\n    !isString(props) &&\r\n    props.type === NodeTypes.JS_CALL_EXPRESSION\r\n  ) {\r\n    const ret = getUnnormalizedProps(props)\r\n    props = ret[0]\r\n    callPath = ret[1]\r\n    parentCall = callPath[callPath.length - 1]\r\n  }\r\n\r\n  if (props == null || isString(props)) {\r\n    propsWithInjection = createObjectExpression([prop])\r\n  } else if (props.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n    // merged props... add ours\r\n    // only inject key to object literal if it's the first argument so that\r\n    // if doesn't override user provided keys\r\n    const first = props.arguments[0] as string | JSChildNode\r\n    if (!isString(first) && first.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n      // #6631\r\n      if (!hasProp(prop, first)) {\r\n        first.properties.unshift(prop)\r\n      }\r\n    } else {\r\n      if (props.callee === TO_HANDLERS) {\r\n        // #2366\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n          createObjectExpression([prop]),\r\n          props,\r\n        ])\r\n      } else {\r\n        props.arguments.unshift(createObjectExpression([prop]))\r\n      }\r\n    }\r\n    !propsWithInjection && (propsWithInjection = props)\r\n  } else if (props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    if (!hasProp(prop, props)) {\r\n      props.properties.unshift(prop)\r\n    }\r\n    propsWithInjection = props\r\n  } else {\r\n    // single v-bind with expression, return a merged replacement\r\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n      createObjectExpression([prop]),\r\n      props,\r\n    ])\r\n    // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n    // the `guardReactiveProps` will no longer be needed\r\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n      parentCall = callPath[callPath.length - 2]\r\n    }\r\n  }\r\n  if (node.type === NodeTypes.VNODE_CALL) {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.props = propsWithInjection\r\n    }\r\n  } else {\r\n    if (parentCall) {\r\n      parentCall.arguments[0] = propsWithInjection\r\n    } else {\r\n      node.arguments[2] = propsWithInjection\r\n    }\r\n  }\r\n}\r\n\r\n// check existing key to avoid overriding user provided keys\r\nfunction hasProp(prop: Property, props: ObjectExpression) {\r\n  let result = false\r\n  if (prop.key.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    const propKeyName = prop.key.content\r\n    result = props.properties.some(\r\n      p =>\r\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        p.key.content === propKeyName,\r\n    )\r\n  }\r\n  return result\r\n}\r\n\r\nexport function toValidAssetId(\r\n  name: string,\r\n  type: 'component' | 'directive' | 'filter',\r\n): string {\r\n  // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n    return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString()\r\n  })}`\r\n}\r\n\r\n// Check if a node contains expressions that reference current context scope ids\r\nexport function hasScopeRef(\r\n  node: TemplateChildNode | IfBranchNode | ExpressionNode | undefined,\r\n  ids: TransformContext['identifiers'],\r\n): boolean {\r\n  if (!node || Object.keys(ids).length === 0) {\r\n    return false\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i]\r\n        if (\r\n          p.type === NodeTypes.DIRECTIVE &&\r\n          (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.FOR:\r\n      if (hasScopeRef(node.source, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.IF:\r\n      return node.branches.some(b => hasScopeRef(b, ids))\r\n    case NodeTypes.IF_BRANCH:\r\n      if (hasScopeRef(node.condition, ids)) {\r\n        return true\r\n      }\r\n      return node.children.some(c => hasScopeRef(c, ids))\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return (\r\n        !node.isStatic &&\r\n        isSimpleIdentifier(node.content) &&\r\n        !!ids[node.content]\r\n      )\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids))\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return hasScopeRef(node.content, ids)\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return false\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return false\r\n  }\r\n}\r\n\r\nexport function getMemoedVNodeCall(node: BlockCodegenNode | MemoExpression) {\r\n  if (node.type === NodeTypes.JS_CALL_EXPRESSION && node.callee === WITH_MEMO) {\r\n    return node.arguments[1].returns as VNodeCall\r\n  } else {\r\n    return node\r\n  }\r\n}\r\n\r\nexport const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\r\n","import {\r\n  type AttributeNode,\r\n  ConstantTypes,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type ForParseResult,\r\n  Namespaces,\r\n  NodeTypes,\r\n  type RootNode,\r\n  type SimpleExpressionNode,\r\n  type SourceLocation,\r\n  type TemplateChildNode,\r\n  createRoot,\r\n  createSimpleExpression,\r\n} from './ast'\r\nimport type { ParserOptions } from './options'\r\nimport Tokenizer, {\r\n  CharCodes,\r\n  ParseMode,\r\n  QuoteType,\r\n  Sequences,\r\n  State,\r\n  isWhitespace,\r\n  toCharCodes,\r\n} from './tokenizer'\r\nimport {\r\n  type CompilerCompatOptions,\r\n  CompilerDeprecationTypes,\r\n  checkCompatEnabled,\r\n  isCompatEnabled,\r\n  warnDeprecation,\r\n} from './compat/compatConfig'\r\nimport { NO, extend } from '@vue/shared'\r\nimport {\r\n  ErrorCodes,\r\n  createCompilerError,\r\n  defaultOnError,\r\n  defaultOnWarn,\r\n} from './errors'\r\nimport {\r\n  forAliasRE,\r\n  isCoreComponent,\r\n  isSimpleIdentifier,\r\n  isStaticArgOf,\r\n} from './utils'\r\nimport { decodeHTML } from 'entities/lib/decode.js'\r\nimport {\r\n  type ParserOptions as BabelOptions,\r\n  parse,\r\n  parseExpression,\r\n} from '@babel/parser'\r\n\r\ntype OptionalOptions =\r\n  | 'decodeEntities'\r\n  | 'whitespace'\r\n  | 'isNativeTag'\r\n  | 'isBuiltInComponent'\r\n  | 'expressionPlugins'\r\n  | keyof CompilerCompatOptions\r\n\r\nexport type MergedParserOptions = Omit<\r\n  Required<ParserOptions>,\r\n  OptionalOptions\r\n> &\r\n  Pick<ParserOptions, OptionalOptions>\r\n\r\nexport const defaultParserOptions: MergedParserOptions = {\r\n  parseMode: 'base',\r\n  ns: Namespaces.HTML,\r\n  delimiters: [`{{`, `}}`],\r\n  getNamespace: () => Namespaces.HTML,\r\n  isVoidTag: NO,\r\n  isPreTag: NO,\r\n  isCustomElement: NO,\r\n  onError: defaultOnError,\r\n  onWarn: defaultOnWarn,\r\n  comments: __DEV__,\r\n  prefixIdentifiers: false,\r\n}\r\n\r\nlet currentOptions: MergedParserOptions = defaultParserOptions\r\nlet currentRoot: RootNode | null = null\r\n\r\n// parser state\r\nlet currentInput = ''\r\nlet currentOpenTag: ElementNode | null = null\r\nlet currentProp: AttributeNode | DirectiveNode | null = null\r\nlet currentAttrValue = ''\r\nlet currentAttrStartIndex = -1\r\nlet currentAttrEndIndex = -1\r\nlet inPre = 0\r\nlet inVPre = false\r\nlet currentVPreBoundary: ElementNode | null = null\r\nconst stack: ElementNode[] = []\r\n\r\nconst tokenizer = new Tokenizer(stack, {\r\n  onerr: emitError,\r\n\r\n  ontext(start, end) {\r\n    onText(getSlice(start, end), start, end)\r\n  },\r\n\r\n  ontextentity(char, start, end) {\r\n    onText(char, start, end)\r\n  },\r\n\r\n  oninterpolation(start, end) {\r\n    if (inVPre) {\r\n      return onText(getSlice(start, end), start, end)\r\n    }\r\n    let innerStart = start + tokenizer.delimiterOpen.length\r\n    let innerEnd = end - tokenizer.delimiterClose.length\r\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\r\n      innerStart++\r\n    }\r\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\r\n      innerEnd--\r\n    }\r\n    let exp = getSlice(innerStart, innerEnd)\r\n    // decode entities for backwards compat\r\n    if (exp.includes('&')) {\r\n      if (__BROWSER__) {\r\n        exp = currentOptions.decodeEntities!(exp, false)\r\n      } else {\r\n        exp = decodeHTML(exp)\r\n      }\r\n    }\r\n    addNode({\r\n      type: NodeTypes.INTERPOLATION,\r\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\r\n      loc: getLoc(start, end),\r\n    })\r\n  },\r\n\r\n  onopentagname(start, end) {\r\n    const name = getSlice(start, end)\r\n    currentOpenTag = {\r\n      type: NodeTypes.ELEMENT,\r\n      tag: name,\r\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\r\n      tagType: ElementTypes.ELEMENT, // will be refined on tag close\r\n      props: [],\r\n      children: [],\r\n      loc: getLoc(start - 1, end),\r\n      codegenNode: undefined,\r\n    }\r\n  },\r\n\r\n  onopentagend(end) {\r\n    endOpenTag(end)\r\n  },\r\n\r\n  onclosetag(start, end) {\r\n    const name = getSlice(start, end)\r\n    if (!currentOptions.isVoidTag(name)) {\r\n      let found = false\r\n      for (let i = 0; i < stack.length; i++) {\r\n        const e = stack[i]\r\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\r\n          found = true\r\n          if (i > 0) {\r\n            emitError(ErrorCodes.X_MISSING_END_TAG, stack[0].loc.start.offset)\r\n          }\r\n          for (let j = 0; j <= i; j++) {\r\n            const el = stack.shift()!\r\n            onCloseTag(el, end, j < i)\r\n          }\r\n          break\r\n        }\r\n      }\r\n      if (!found) {\r\n        emitError(ErrorCodes.X_INVALID_END_TAG, backTrack(start, CharCodes.Lt))\r\n      }\r\n    }\r\n  },\r\n\r\n  onselfclosingtag(end) {\r\n    const name = currentOpenTag!.tag\r\n    currentOpenTag!.isSelfClosing = true\r\n    endOpenTag(end)\r\n    if (stack[0]?.tag === name) {\r\n      onCloseTag(stack.shift()!, end)\r\n    }\r\n  },\r\n\r\n  onattribname(start, end) {\r\n    // plain attribute\r\n    currentProp = {\r\n      type: NodeTypes.ATTRIBUTE,\r\n      name: getSlice(start, end),\r\n      nameLoc: getLoc(start, end),\r\n      value: undefined,\r\n      loc: getLoc(start),\r\n    }\r\n  },\r\n\r\n  ondirname(start, end) {\r\n    const raw = getSlice(start, end)\r\n    const name =\r\n      raw === '.' || raw === ':'\r\n        ? 'bind'\r\n        : raw === '@'\r\n          ? 'on'\r\n          : raw === '#'\r\n            ? 'slot'\r\n            : raw.slice(2)\r\n\r\n    if (!inVPre && name === '') {\r\n      emitError(ErrorCodes.X_MISSING_DIRECTIVE_NAME, start)\r\n    }\r\n\r\n    if (inVPre || name === '') {\r\n      currentProp = {\r\n        type: NodeTypes.ATTRIBUTE,\r\n        name: raw,\r\n        nameLoc: getLoc(start, end),\r\n        value: undefined,\r\n        loc: getLoc(start),\r\n      }\r\n    } else {\r\n      currentProp = {\r\n        type: NodeTypes.DIRECTIVE,\r\n        name,\r\n        rawName: raw,\r\n        exp: undefined,\r\n        arg: undefined,\r\n        modifiers: raw === '.' ? ['prop'] : [],\r\n        loc: getLoc(start),\r\n      }\r\n      if (name === 'pre') {\r\n        inVPre = tokenizer.inVPre = true\r\n        currentVPreBoundary = currentOpenTag\r\n        // convert dirs before this one to attributes\r\n        const props = currentOpenTag!.props\r\n        for (let i = 0; i < props.length; i++) {\r\n          if (props[i].type === NodeTypes.DIRECTIVE) {\r\n            props[i] = dirToAttr(props[i] as DirectiveNode)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ondirarg(start, end) {\r\n    if (start === end) return\r\n    const arg = getSlice(start, end)\r\n    if (inVPre) {\r\n      ;(currentProp as AttributeNode).name += arg\r\n      setLocEnd((currentProp as AttributeNode).nameLoc, end)\r\n    } else {\r\n      const isStatic = arg[0] !== `[`\r\n      ;(currentProp as DirectiveNode).arg = createExp(\r\n        isStatic ? arg : arg.slice(1, -1),\r\n        isStatic,\r\n        getLoc(start, end),\r\n        isStatic ? ConstantTypes.CAN_STRINGIFY : ConstantTypes.NOT_CONSTANT,\r\n      )\r\n    }\r\n  },\r\n\r\n  ondirmodifier(start, end) {\r\n    const mod = getSlice(start, end)\r\n    if (inVPre) {\r\n      ;(currentProp as AttributeNode).name += '.' + mod\r\n      setLocEnd((currentProp as AttributeNode).nameLoc, end)\r\n    } else if ((currentProp as DirectiveNode).name === 'slot') {\r\n      // slot has no modifiers, special case for edge cases like\r\n      // https://github.com/vuejs/language-tools/issues/2710\r\n      const arg = (currentProp as DirectiveNode).arg\r\n      if (arg) {\r\n        ;(arg as SimpleExpressionNode).content += '.' + mod\r\n        setLocEnd(arg.loc, end)\r\n      }\r\n    } else {\r\n      ;(currentProp as DirectiveNode).modifiers.push(mod)\r\n    }\r\n  },\r\n\r\n  onattribdata(start, end) {\r\n    currentAttrValue += getSlice(start, end)\r\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start\r\n    currentAttrEndIndex = end\r\n  },\r\n\r\n  onattribentity(char, start, end) {\r\n    currentAttrValue += char\r\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start\r\n    currentAttrEndIndex = end\r\n  },\r\n\r\n  onattribnameend(end) {\r\n    const start = currentProp!.loc.start.offset\r\n    const name = getSlice(start, end)\r\n    if (currentProp!.type === NodeTypes.DIRECTIVE) {\r\n      currentProp!.rawName = name\r\n    }\r\n    // check duplicate attrs\r\n    if (\r\n      currentOpenTag!.props.some(\r\n        p => (p.type === NodeTypes.DIRECTIVE ? p.rawName : p.name) === name,\r\n      )\r\n    ) {\r\n      emitError(ErrorCodes.DUPLICATE_ATTRIBUTE, start)\r\n    }\r\n  },\r\n\r\n  onattribend(quote, end) {\r\n    if (currentOpenTag && currentProp) {\r\n      // finalize end pos\r\n      setLocEnd(currentProp.loc, end)\r\n\r\n      if (quote !== QuoteType.NoValue) {\r\n        if (__BROWSER__ && currentAttrValue.includes('&')) {\r\n          currentAttrValue = currentOptions.decodeEntities!(\r\n            currentAttrValue,\r\n            true,\r\n          )\r\n        }\r\n\r\n        if (currentProp.type === NodeTypes.ATTRIBUTE) {\r\n          // assign value\r\n\r\n          // condense whitespaces in class\r\n          if (currentProp!.name === 'class') {\r\n            currentAttrValue = condense(currentAttrValue).trim()\r\n          }\r\n\r\n          if (quote === QuoteType.Unquoted && !currentAttrValue) {\r\n            emitError(ErrorCodes.MISSING_ATTRIBUTE_VALUE, end)\r\n          }\r\n\r\n          currentProp!.value = {\r\n            type: NodeTypes.TEXT,\r\n            content: currentAttrValue,\r\n            loc:\r\n              quote === QuoteType.Unquoted\r\n                ? getLoc(currentAttrStartIndex, currentAttrEndIndex)\r\n                : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1),\r\n          }\r\n          if (\r\n            tokenizer.inSFCRoot &&\r\n            currentOpenTag.tag === 'template' &&\r\n            currentProp.name === 'lang' &&\r\n            currentAttrValue &&\r\n            currentAttrValue !== 'html'\r\n          ) {\r\n            // SFC root template with preprocessor lang, force tokenizer to\r\n            // RCDATA mode\r\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0)\r\n          }\r\n        } else {\r\n          // directive\r\n          let expParseMode = ExpParseMode.Normal\r\n          if (!__BROWSER__) {\r\n            if (currentProp.name === 'for') {\r\n              expParseMode = ExpParseMode.Skip\r\n            } else if (currentProp.name === 'slot') {\r\n              expParseMode = ExpParseMode.Params\r\n            } else if (\r\n              currentProp.name === 'on' &&\r\n              currentAttrValue.includes(';')\r\n            ) {\r\n              expParseMode = ExpParseMode.Statements\r\n            }\r\n          }\r\n          currentProp.exp = createExp(\r\n            currentAttrValue,\r\n            false,\r\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\r\n            ConstantTypes.NOT_CONSTANT,\r\n            expParseMode,\r\n          )\r\n          if (currentProp.name === 'for') {\r\n            currentProp.forParseResult = parseForExpression(currentProp.exp)\r\n          }\r\n          // 2.x compat v-bind:foo.sync -> v-model:foo\r\n          let syncIndex = -1\r\n          if (\r\n            __COMPAT__ &&\r\n            currentProp.name === 'bind' &&\r\n            (syncIndex = currentProp.modifiers.indexOf('sync')) > -1 &&\r\n            checkCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_V_BIND_SYNC,\r\n              currentOptions,\r\n              currentProp.loc,\r\n              currentProp.rawName,\r\n            )\r\n          ) {\r\n            currentProp.name = 'model'\r\n            currentProp.modifiers.splice(syncIndex, 1)\r\n          }\r\n        }\r\n      }\r\n      if (\r\n        currentProp.type !== NodeTypes.DIRECTIVE ||\r\n        currentProp.name !== 'pre'\r\n      ) {\r\n        currentOpenTag.props.push(currentProp)\r\n      }\r\n    }\r\n    currentAttrValue = ''\r\n    currentAttrStartIndex = currentAttrEndIndex = -1\r\n  },\r\n\r\n  oncomment(start, end) {\r\n    if (currentOptions.comments) {\r\n      addNode({\r\n        type: NodeTypes.COMMENT,\r\n        content: getSlice(start, end),\r\n        loc: getLoc(start - 4, end + 3),\r\n      })\r\n    }\r\n  },\r\n\r\n  onend() {\r\n    const end = currentInput.length\r\n    // EOF ERRORS\r\n    if ((__DEV__ || !__BROWSER__) && tokenizer.state !== State.Text) {\r\n      switch (tokenizer.state) {\r\n        case State.BeforeTagName:\r\n        case State.BeforeClosingTagName:\r\n          emitError(ErrorCodes.EOF_BEFORE_TAG_NAME, end)\r\n          break\r\n        case State.Interpolation:\r\n        case State.InterpolationClose:\r\n          emitError(\r\n            ErrorCodes.X_MISSING_INTERPOLATION_END,\r\n            tokenizer.sectionStart,\r\n          )\r\n          break\r\n        case State.InCommentLike:\r\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\r\n            emitError(ErrorCodes.EOF_IN_CDATA, end)\r\n          } else {\r\n            emitError(ErrorCodes.EOF_IN_COMMENT, end)\r\n          }\r\n          break\r\n        case State.InTagName:\r\n        case State.InSelfClosingTag:\r\n        case State.InClosingTagName:\r\n        case State.BeforeAttrName:\r\n        case State.InAttrName:\r\n        case State.InDirName:\r\n        case State.InDirArg:\r\n        case State.InDirDynamicArg:\r\n        case State.InDirModifier:\r\n        case State.AfterAttrName:\r\n        case State.BeforeAttrValue:\r\n        case State.InAttrValueDq: // \"\r\n        case State.InAttrValueSq: // '\r\n        case State.InAttrValueNq:\r\n          emitError(ErrorCodes.EOF_IN_TAG, end)\r\n          break\r\n        default:\r\n          // console.log(tokenizer.state)\r\n          break\r\n      }\r\n    }\r\n    for (let index = 0; index < stack.length; index++) {\r\n      onCloseTag(stack[index], end - 1)\r\n      emitError(ErrorCodes.X_MISSING_END_TAG, stack[index].loc.start.offset)\r\n    }\r\n  },\r\n\r\n  oncdata(start, end) {\r\n    if (stack[0].ns !== Namespaces.HTML) {\r\n      onText(getSlice(start, end), start, end)\r\n    } else {\r\n      emitError(ErrorCodes.CDATA_IN_HTML_CONTENT, start - 9)\r\n    }\r\n  },\r\n\r\n  onprocessinginstruction(start) {\r\n    // ignore as we do not have runtime handling for this, only check error\r\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === Namespaces.HTML) {\r\n      emitError(\r\n        ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME,\r\n        start - 1,\r\n      )\r\n    }\r\n  },\r\n})\r\n\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\r\nconst stripParensRE = /^\\(|\\)$/g\r\n\r\nfunction parseForExpression(\r\n  input: SimpleExpressionNode,\r\n): ForParseResult | undefined {\r\n  const loc = input.loc\r\n  const exp = input.content\r\n  const inMatch = exp.match(forAliasRE)\r\n  if (!inMatch) return\r\n\r\n  const [, LHS, RHS] = inMatch\r\n\r\n  const createAliasExpression = (\r\n    content: string,\r\n    offset: number,\r\n    asParam = false,\r\n  ) => {\r\n    const start = loc.start.offset + offset\r\n    const end = start + content.length\r\n    return createExp(\r\n      content,\r\n      false,\r\n      getLoc(start, end),\r\n      ConstantTypes.NOT_CONSTANT,\r\n      asParam ? ExpParseMode.Params : ExpParseMode.Normal,\r\n    )\r\n  }\r\n\r\n  const result: ForParseResult = {\r\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n    value: undefined,\r\n    key: undefined,\r\n    index: undefined,\r\n    finalized: false,\r\n  }\r\n\r\n  let valueContent = LHS.trim().replace(stripParensRE, '').trim()\r\n  const trimmedOffset = LHS.indexOf(valueContent)\r\n\r\n  const iteratorMatch = valueContent.match(forIteratorRE)\r\n  if (iteratorMatch) {\r\n    valueContent = valueContent.replace(forIteratorRE, '').trim()\r\n\r\n    const keyContent = iteratorMatch[1].trim()\r\n    let keyOffset: number | undefined\r\n    if (keyContent) {\r\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length)\r\n      result.key = createAliasExpression(keyContent, keyOffset, true)\r\n    }\r\n\r\n    if (iteratorMatch[2]) {\r\n      const indexContent = iteratorMatch[2].trim()\r\n\r\n      if (indexContent) {\r\n        result.index = createAliasExpression(\r\n          indexContent,\r\n          exp.indexOf(\r\n            indexContent,\r\n            result.key\r\n              ? keyOffset! + keyContent.length\r\n              : trimmedOffset + valueContent.length,\r\n          ),\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (valueContent) {\r\n    result.value = createAliasExpression(valueContent, trimmedOffset, true)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction getSlice(start: number, end: number) {\r\n  return currentInput.slice(start, end)\r\n}\r\n\r\nfunction endOpenTag(end: number) {\r\n  if (tokenizer.inSFCRoot) {\r\n    // in SFC mode, generate locations for root-level tags' inner content.\r\n    currentOpenTag!.innerLoc = getLoc(end + 1, end + 1)\r\n  }\r\n  addNode(currentOpenTag!)\r\n  const { tag, ns } = currentOpenTag!\r\n  if (ns === Namespaces.HTML && currentOptions.isPreTag(tag)) {\r\n    inPre++\r\n  }\r\n  if (currentOptions.isVoidTag(tag)) {\r\n    onCloseTag(currentOpenTag!, end)\r\n  } else {\r\n    stack.unshift(currentOpenTag!)\r\n    if (ns === Namespaces.SVG || ns === Namespaces.MATH_ML) {\r\n      tokenizer.inXML = true\r\n    }\r\n  }\r\n  currentOpenTag = null\r\n}\r\n\r\nfunction onText(content: string, start: number, end: number) {\r\n  if (__BROWSER__) {\r\n    const tag = stack[0]?.tag\r\n    if (tag !== 'script' && tag !== 'style' && content.includes('&')) {\r\n      content = currentOptions.decodeEntities!(content, false)\r\n    }\r\n  }\r\n  const parent = stack[0] || currentRoot\r\n  const lastNode = parent.children[parent.children.length - 1]\r\n  if (lastNode?.type === NodeTypes.TEXT) {\r\n    // merge\r\n    lastNode.content += content\r\n    setLocEnd(lastNode.loc, end)\r\n  } else {\r\n    parent.children.push({\r\n      type: NodeTypes.TEXT,\r\n      content,\r\n      loc: getLoc(start, end),\r\n    })\r\n  }\r\n}\r\n\r\nfunction onCloseTag(el: ElementNode, end: number, isImplied = false) {\r\n  // attach end position\r\n  if (isImplied) {\r\n    // implied close, end should be backtracked to close\r\n    setLocEnd(el.loc, backTrack(end, CharCodes.Lt))\r\n  } else {\r\n    setLocEnd(el.loc, end + 1)\r\n  }\r\n\r\n  if (tokenizer.inSFCRoot) {\r\n    // SFC root tag, resolve inner end\r\n    if (el.children.length) {\r\n      el.innerLoc!.end = extend({}, el.children[el.children.length - 1].loc.end)\r\n    } else {\r\n      el.innerLoc!.end = extend({}, el.innerLoc!.start)\r\n    }\r\n    el.innerLoc!.source = getSlice(\r\n      el.innerLoc!.start.offset,\r\n      el.innerLoc!.end.offset,\r\n    )\r\n  }\r\n\r\n  // refine element type\r\n  const { tag, ns } = el\r\n  if (!inVPre) {\r\n    if (tag === 'slot') {\r\n      el.tagType = ElementTypes.SLOT\r\n    } else if (isFragmentTemplate(el)) {\r\n      el.tagType = ElementTypes.TEMPLATE\r\n    } else if (isComponent(el)) {\r\n      el.tagType = ElementTypes.COMPONENT\r\n    }\r\n  }\r\n\r\n  // whitespace management\r\n  if (!tokenizer.inRCDATA) {\r\n    el.children = condenseWhitespace(el.children, el.tag)\r\n  }\r\n  if (ns === Namespaces.HTML && currentOptions.isPreTag(tag)) {\r\n    inPre--\r\n  }\r\n  if (currentVPreBoundary === el) {\r\n    inVPre = tokenizer.inVPre = false\r\n    currentVPreBoundary = null\r\n  }\r\n  if (\r\n    tokenizer.inXML &&\r\n    (stack[0] ? stack[0].ns : currentOptions.ns) === Namespaces.HTML\r\n  ) {\r\n    tokenizer.inXML = false\r\n  }\r\n\r\n  // 2.x compat / deprecation checks\r\n  if (__COMPAT__) {\r\n    const props = el.props\r\n    if (\r\n      __DEV__ &&\r\n      isCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n        currentOptions,\r\n      )\r\n    ) {\r\n      let hasIf = false\r\n      let hasFor = false\r\n      for (let i = 0; i < props.length; i++) {\r\n        const p = props[i]\r\n        if (p.type === NodeTypes.DIRECTIVE) {\r\n          if (p.name === 'if') {\r\n            hasIf = true\r\n          } else if (p.name === 'for') {\r\n            hasFor = true\r\n          }\r\n        }\r\n        if (hasIf && hasFor) {\r\n          warnDeprecation(\r\n            CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE,\r\n            currentOptions,\r\n            el.loc,\r\n          )\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      !tokenizer.inSFCRoot &&\r\n      isCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n        currentOptions,\r\n      ) &&\r\n      el.tag === 'template' &&\r\n      !isFragmentTemplate(el)\r\n    ) {\r\n      __DEV__ &&\r\n        warnDeprecation(\r\n          CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE,\r\n          currentOptions,\r\n          el.loc,\r\n        )\r\n      // unwrap\r\n      const parent = stack[0] || currentRoot\r\n      const index = parent.children.indexOf(el)\r\n      parent.children.splice(index, 1, ...el.children)\r\n    }\r\n\r\n    const inlineTemplateProp = props.find(\r\n      p => p.type === NodeTypes.ATTRIBUTE && p.name === 'inline-template',\r\n    ) as AttributeNode\r\n    if (\r\n      inlineTemplateProp &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE,\r\n        currentOptions,\r\n        inlineTemplateProp.loc,\r\n      ) &&\r\n      el.children.length\r\n    ) {\r\n      inlineTemplateProp.value = {\r\n        type: NodeTypes.TEXT,\r\n        content: getSlice(\r\n          el.children[0].loc.start.offset,\r\n          el.children[el.children.length - 1].loc.end.offset,\r\n        ),\r\n        loc: inlineTemplateProp.loc,\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction backTrack(index: number, c: number) {\r\n  let i = index\r\n  while (currentInput.charCodeAt(i) !== c && i >= 0) i--\r\n  return i\r\n}\r\n\r\nconst specialTemplateDir = new Set(['if', 'else', 'else-if', 'for', 'slot'])\r\nfunction isFragmentTemplate({ tag, props }: ElementNode): boolean {\r\n  if (tag === 'template') {\r\n    for (let i = 0; i < props.length; i++) {\r\n      if (\r\n        props[i].type === NodeTypes.DIRECTIVE &&\r\n        specialTemplateDir.has((props[i] as DirectiveNode).name)\r\n      ) {\r\n        return true\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction isComponent({ tag, props }: ElementNode): boolean {\r\n  if (currentOptions.isCustomElement(tag)) {\r\n    return false\r\n  }\r\n  if (\r\n    tag === 'component' ||\r\n    isUpperCase(tag.charCodeAt(0)) ||\r\n    isCoreComponent(tag) ||\r\n    currentOptions.isBuiltInComponent?.(tag) ||\r\n    (currentOptions.isNativeTag && !currentOptions.isNativeTag(tag))\r\n  ) {\r\n    return true\r\n  }\r\n  // at this point the tag should be a native tag, but check for potential \"is\"\r\n  // casting\r\n  for (let i = 0; i < props.length; i++) {\r\n    const p = props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.name === 'is' && p.value) {\r\n        if (p.value.content.startsWith('vue:')) {\r\n          return true\r\n        } else if (\r\n          __COMPAT__ &&\r\n          checkCompatEnabled(\r\n            CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n            currentOptions,\r\n            p.loc,\r\n          )\r\n        ) {\r\n          return true\r\n        }\r\n      }\r\n    } else if (\r\n      __COMPAT__ &&\r\n      // :is on plain element - only treat as component in compat mode\r\n      p.name === 'bind' &&\r\n      isStaticArgOf(p.arg, 'is') &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n        currentOptions,\r\n        p.loc,\r\n      )\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction isUpperCase(c: number) {\r\n  return c > 64 && c < 91\r\n}\r\n\r\nconst windowsNewlineRE = /\\r\\n/g\r\nfunction condenseWhitespace(\r\n  nodes: TemplateChildNode[],\r\n  tag?: string,\r\n): TemplateChildNode[] {\r\n  const shouldCondense = currentOptions.whitespace !== 'preserve'\r\n  let removedWhitespace = false\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    const node = nodes[i]\r\n    if (node.type === NodeTypes.TEXT) {\r\n      if (!inPre) {\r\n        if (isAllWhitespace(node.content)) {\r\n          const prev = nodes[i - 1]?.type\r\n          const next = nodes[i + 1]?.type\r\n          // Remove if:\r\n          // - the whitespace is the first or last node, or:\r\n          // - (condense mode) the whitespace is between two comments, or:\r\n          // - (condense mode) the whitespace is between comment and element, or:\r\n          // - (condense mode) the whitespace is between two elements AND contains newline\r\n          if (\r\n            !prev ||\r\n            !next ||\r\n            (shouldCondense &&\r\n              ((prev === NodeTypes.COMMENT &&\r\n                (next === NodeTypes.COMMENT || next === NodeTypes.ELEMENT)) ||\r\n                (prev === NodeTypes.ELEMENT &&\r\n                  (next === NodeTypes.COMMENT ||\r\n                    (next === NodeTypes.ELEMENT &&\r\n                      hasNewlineChar(node.content))))))\r\n          ) {\r\n            removedWhitespace = true\r\n            nodes[i] = null as any\r\n          } else {\r\n            // Otherwise, the whitespace is condensed into a single space\r\n            node.content = ' '\r\n          }\r\n        } else if (shouldCondense) {\r\n          // in condense mode, consecutive whitespaces in text are condensed\r\n          // down to a single space.\r\n          node.content = condense(node.content)\r\n        }\r\n      } else {\r\n        // #6410 normalize windows newlines in <pre>:\r\n        // in SSR, browsers normalize server-rendered \\r\\n into a single \\n\r\n        // in the DOM\r\n        node.content = node.content.replace(windowsNewlineRE, '\\n')\r\n      }\r\n    }\r\n  }\r\n  if (inPre && tag && currentOptions.isPreTag(tag)) {\r\n    // remove leading newline per html spec\r\n    // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n    const first = nodes[0]\r\n    if (first && first.type === NodeTypes.TEXT) {\r\n      first.content = first.content.replace(/^\\r?\\n/, '')\r\n    }\r\n  }\r\n  return removedWhitespace ? nodes.filter(Boolean) : nodes\r\n}\r\n\r\nfunction isAllWhitespace(str: string) {\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (!isWhitespace(str.charCodeAt(i))) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction hasNewlineChar(str: string) {\r\n  for (let i = 0; i < str.length; i++) {\r\n    const c = str.charCodeAt(i)\r\n    if (c === CharCodes.NewLine || c === CharCodes.CarriageReturn) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction condense(str: string) {\r\n  let ret = ''\r\n  let prevCharIsWhitespace = false\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (isWhitespace(str.charCodeAt(i))) {\r\n      if (!prevCharIsWhitespace) {\r\n        ret += ' '\r\n        prevCharIsWhitespace = true\r\n      }\r\n    } else {\r\n      ret += str[i]\r\n      prevCharIsWhitespace = false\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction addNode(node: TemplateChildNode) {\r\n  ;(stack[0] || currentRoot).children.push(node)\r\n}\r\n\r\nfunction getLoc(start: number, end?: number): SourceLocation {\r\n  return {\r\n    start: tokenizer.getPos(start),\r\n    // @ts-expect-error allow late attachment\r\n    end: end == null ? end : tokenizer.getPos(end),\r\n    // @ts-expect-error allow late attachment\r\n    source: end == null ? end : getSlice(start, end),\r\n  }\r\n}\r\n\r\nfunction setLocEnd(loc: SourceLocation, end: number) {\r\n  loc.end = tokenizer.getPos(end)\r\n  loc.source = getSlice(loc.start.offset, end)\r\n}\r\n\r\nfunction dirToAttr(dir: DirectiveNode): AttributeNode {\r\n  const attr: AttributeNode = {\r\n    type: NodeTypes.ATTRIBUTE,\r\n    name: dir.rawName!,\r\n    nameLoc: getLoc(\r\n      dir.loc.start.offset,\r\n      dir.loc.start.offset + dir.rawName!.length,\r\n    ),\r\n    value: undefined,\r\n    loc: dir.loc,\r\n  }\r\n  if (dir.exp) {\r\n    // account for quotes\r\n    const loc = dir.exp.loc\r\n    if (loc.end.offset < dir.loc.end.offset) {\r\n      loc.start.offset--\r\n      loc.start.column--\r\n      loc.end.offset++\r\n      loc.end.column++\r\n    }\r\n    attr.value = {\r\n      type: NodeTypes.TEXT,\r\n      content: (dir.exp as SimpleExpressionNode).content,\r\n      loc,\r\n    }\r\n  }\r\n  return attr\r\n}\r\n\r\nenum ExpParseMode {\r\n  Normal,\r\n  Params,\r\n  Statements,\r\n  Skip,\r\n}\r\n\r\nfunction createExp(\r\n  content: SimpleExpressionNode['content'],\r\n  isStatic: SimpleExpressionNode['isStatic'] = false,\r\n  loc: SourceLocation,\r\n  constType: ConstantTypes = ConstantTypes.NOT_CONSTANT,\r\n  parseMode = ExpParseMode.Normal,\r\n) {\r\n  const exp = createSimpleExpression(content, isStatic, loc, constType)\r\n  if (\r\n    !__BROWSER__ &&\r\n    !isStatic &&\r\n    currentOptions.prefixIdentifiers &&\r\n    parseMode !== ExpParseMode.Skip &&\r\n    content.trim()\r\n  ) {\r\n    if (isSimpleIdentifier(content)) {\r\n      exp.ast = null // fast path\r\n      return exp\r\n    }\r\n    try {\r\n      const plugins = currentOptions.expressionPlugins\r\n      const options: BabelOptions = {\r\n        plugins: plugins ? [...plugins, 'typescript'] : ['typescript'],\r\n      }\r\n      if (parseMode === ExpParseMode.Statements) {\r\n        // v-on with multi-inline-statements, pad 1 char\r\n        exp.ast = parse(` ${content} `, options).program\r\n      } else if (parseMode === ExpParseMode.Params) {\r\n        exp.ast = parseExpression(`(${content})=>{}`, options)\r\n      } else {\r\n        // normal exp, wrap with parens\r\n        exp.ast = parseExpression(`(${content})`, options)\r\n      }\r\n    } catch (e: any) {\r\n      exp.ast = false // indicate an error\r\n      emitError(ErrorCodes.X_INVALID_EXPRESSION, loc.start.offset, e.message)\r\n    }\r\n  }\r\n  return exp\r\n}\r\n\r\nfunction emitError(code: ErrorCodes, index: number, message?: string) {\r\n  currentOptions.onError(\r\n    createCompilerError(code, getLoc(index, index), undefined, message),\r\n  )\r\n}\r\n\r\nfunction reset() {\r\n  tokenizer.reset()\r\n  currentOpenTag = null\r\n  currentProp = null\r\n  currentAttrValue = ''\r\n  currentAttrStartIndex = -1\r\n  currentAttrEndIndex = -1\r\n  stack.length = 0\r\n}\r\n\r\nexport function baseParse(input: string, options?: ParserOptions): RootNode {\r\n  reset()\r\n  currentInput = input\r\n  currentOptions = extend({}, defaultParserOptions)\r\n\r\n  if (options) {\r\n    let key: keyof ParserOptions\r\n    for (key in options) {\r\n      if (options[key] != null) {\r\n        // @ts-expect-error\r\n        currentOptions[key] = options[key]\r\n      }\r\n    }\r\n  }\r\n\r\n  if (__DEV__) {\r\n    if (!__BROWSER__ && currentOptions.decodeEntities) {\r\n      console.warn(\r\n        `[@vue/compiler-core] decodeEntities option is passed but will be ` +\r\n          `ignored in non-browser builds.`,\r\n      )\r\n    } else if (__BROWSER__ && !currentOptions.decodeEntities) {\r\n      throw new Error(\r\n        `[@vue/compiler-core] decodeEntities option is required in browser builds.`,\r\n      )\r\n    }\r\n  }\r\n\r\n  tokenizer.mode =\r\n    currentOptions.parseMode === 'html'\r\n      ? ParseMode.HTML\r\n      : currentOptions.parseMode === 'sfc'\r\n        ? ParseMode.SFC\r\n        : ParseMode.BASE\r\n\r\n  tokenizer.inXML =\r\n    currentOptions.ns === Namespaces.SVG ||\r\n    currentOptions.ns === Namespaces.MATH_ML\r\n\r\n  const delimiters = options?.delimiters\r\n  if (delimiters) {\r\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0])\r\n    tokenizer.delimiterClose = toCharCodes(delimiters[1])\r\n  }\r\n\r\n  const root = (currentRoot = createRoot([], input))\r\n  tokenizer.parse(currentInput)\r\n  root.loc = getLoc(0, input.length)\r\n  root.children = condenseWhitespace(root.children)\r\n  currentRoot = null\r\n  return root\r\n}\r\n","import {\r\n  type CallExpression,\r\n  type ComponentNode,\r\n  ConstantTypes,\r\n  ElementTypes,\r\n  type JSChildNode,\r\n  NodeTypes,\r\n  type ParentNode,\r\n  type PlainElementNode,\r\n  type RootNode,\r\n  type SimpleExpressionNode,\r\n  type TemplateChildNode,\r\n  type TemplateNode,\r\n  type VNodeCall,\r\n  createArrayExpression,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n} from '../ast'\r\nimport type { TransformContext } from '../transform'\r\nimport { PatchFlags, isArray, isString, isSymbol } from '@vue/shared'\r\nimport { isSlotOutlet } from '../utils'\r\nimport {\r\n  GUARD_REACTIVE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_PROPS,\r\n  NORMALIZE_STYLE,\r\n  OPEN_BLOCK,\r\n} from '../runtimeHelpers'\r\n\r\nexport function hoistStatic(root: RootNode, context: TransformContext) {\r\n  walk(\r\n    root,\r\n    context,\r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]),\r\n  )\r\n}\r\n\r\nexport function isSingleElementRoot(\r\n  root: RootNode,\r\n  child: TemplateChildNode,\r\n): child is PlainElementNode | ComponentNode | TemplateNode {\r\n  const { children } = root\r\n  return (\r\n    children.length === 1 &&\r\n    child.type === NodeTypes.ELEMENT &&\r\n    !isSlotOutlet(child)\r\n  )\r\n}\r\n\r\nfunction walk(\r\n  node: ParentNode,\r\n  context: TransformContext,\r\n  doNotHoistNode: boolean = false,\r\n) {\r\n  const { children } = node\r\n  const originalCount = children.length\r\n  let hoistedCount = 0\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    // only plain elements & text calls are eligible for hoisting.\r\n    if (\r\n      child.type === NodeTypes.ELEMENT &&\r\n      child.tagType === ElementTypes.ELEMENT\r\n    ) {\r\n      const constantType = doNotHoistNode\r\n        ? ConstantTypes.NOT_CONSTANT\r\n        : getConstantType(child, context)\r\n      if (constantType > ConstantTypes.NOT_CONSTANT) {\r\n        if (constantType >= ConstantTypes.CAN_HOIST) {\r\n          ;(child.codegenNode as VNodeCall).patchFlag =\r\n            PatchFlags.HOISTED + (__DEV__ ? ` /* HOISTED */` : ``)\r\n          child.codegenNode = context.hoist(child.codegenNode!)\r\n          hoistedCount++\r\n          continue\r\n        }\r\n      } else {\r\n        // node may contain dynamic children, but its props may be eligible for\r\n        // hoisting.\r\n        const codegenNode = child.codegenNode!\r\n        if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n          const flag = getPatchFlag(codegenNode)\r\n          if (\r\n            (!flag ||\r\n              flag === PatchFlags.NEED_PATCH ||\r\n              flag === PatchFlags.TEXT) &&\r\n            getGeneratedPropsConstantType(child, context) >=\r\n              ConstantTypes.CAN_HOIST\r\n          ) {\r\n            const props = getNodeProps(child)\r\n            if (props) {\r\n              codegenNode.props = context.hoist(props)\r\n            }\r\n          }\r\n          if (codegenNode.dynamicProps) {\r\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // walk further\r\n    if (child.type === NodeTypes.ELEMENT) {\r\n      const isComponent = child.tagType === ElementTypes.COMPONENT\r\n      if (isComponent) {\r\n        context.scopes.vSlot++\r\n      }\r\n      walk(child, context)\r\n      if (isComponent) {\r\n        context.scopes.vSlot--\r\n      }\r\n    } else if (child.type === NodeTypes.FOR) {\r\n      // Do not hoist v-for single child because it has to be a block\r\n      walk(child, context, child.children.length === 1)\r\n    } else if (child.type === NodeTypes.IF) {\r\n      for (let i = 0; i < child.branches.length; i++) {\r\n        // Do not hoist v-if single child because it has to be a block\r\n        walk(\r\n          child.branches[i],\r\n          context,\r\n          child.branches[i].children.length === 1,\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (hoistedCount && context.transformHoist) {\r\n    context.transformHoist(children, context, node)\r\n  }\r\n\r\n  // all children were hoisted - the entire children array is hoistable.\r\n  if (\r\n    hoistedCount &&\r\n    hoistedCount === originalCount &&\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    node.codegenNode &&\r\n    node.codegenNode.type === NodeTypes.VNODE_CALL &&\r\n    isArray(node.codegenNode.children)\r\n  ) {\r\n    const hoisted = context.hoist(\r\n      createArrayExpression(node.codegenNode.children),\r\n    )\r\n    // #6978, #7138, #7114\r\n    // a hoisted children array inside v-for can caused HMR errors since\r\n    // it might be mutated when mounting the v-for list\r\n    if (context.hmr) {\r\n      hoisted.content = `[...${hoisted.content}]`\r\n    }\r\n    node.codegenNode.children = hoisted\r\n  }\r\n}\r\n\r\nexport function getConstantType(\r\n  node: TemplateChildNode | SimpleExpressionNode,\r\n  context: TransformContext,\r\n): ConstantTypes {\r\n  const { constantCache } = context\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n      if (node.tagType !== ElementTypes.ELEMENT) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const cached = constantCache.get(node)\r\n      if (cached !== undefined) {\r\n        return cached\r\n      }\r\n      const codegenNode = node.codegenNode!\r\n      if (codegenNode.type !== NodeTypes.VNODE_CALL) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      if (\r\n        codegenNode.isBlock &&\r\n        node.tag !== 'svg' &&\r\n        node.tag !== 'foreignObject'\r\n      ) {\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n      const flag = getPatchFlag(codegenNode)\r\n      if (!flag) {\r\n        let returnType = ConstantTypes.CAN_STRINGIFY\r\n\r\n        // Element itself has no patch flag. However we still need to check:\r\n\r\n        // 1. Even for a node with no patch flag, it is possible for it to contain\r\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n        // injected keys or cached event handlers. Therefore we need to always\r\n        // check the codegenNode's props to be sure.\r\n        const generatedPropsType = getGeneratedPropsConstantType(node, context)\r\n        if (generatedPropsType === ConstantTypes.NOT_CONSTANT) {\r\n          constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n          return ConstantTypes.NOT_CONSTANT\r\n        }\r\n        if (generatedPropsType < returnType) {\r\n          returnType = generatedPropsType\r\n        }\r\n\r\n        // 2. its children.\r\n        for (let i = 0; i < node.children.length; i++) {\r\n          const childType = getConstantType(node.children[i], context)\r\n          if (childType === ConstantTypes.NOT_CONSTANT) {\r\n            constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n            return ConstantTypes.NOT_CONSTANT\r\n          }\r\n          if (childType < returnType) {\r\n            returnType = childType\r\n          }\r\n        }\r\n\r\n        // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n        // type, check if any of the props can cause the type to be lowered\r\n        // we can skip can_patch because it's guaranteed by the absence of a\r\n        // patchFlag.\r\n        if (returnType > ConstantTypes.CAN_SKIP_PATCH) {\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i]\r\n            if (p.type === NodeTypes.DIRECTIVE && p.name === 'bind' && p.exp) {\r\n              const expType = getConstantType(p.exp, context)\r\n              if (expType === ConstantTypes.NOT_CONSTANT) {\r\n                constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n                return ConstantTypes.NOT_CONSTANT\r\n              }\r\n              if (expType < returnType) {\r\n                returnType = expType\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // only svg/foreignObject could be block here, however if they are\r\n        // static then they don't need to be blocks since there will be no\r\n        // nested updates.\r\n        if (codegenNode.isBlock) {\r\n          // except set custom directives.\r\n          for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i]\r\n            if (p.type === NodeTypes.DIRECTIVE) {\r\n              constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n              return ConstantTypes.NOT_CONSTANT\r\n            }\r\n          }\r\n\r\n          context.removeHelper(OPEN_BLOCK)\r\n          context.removeHelper(\r\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent),\r\n          )\r\n          codegenNode.isBlock = false\r\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent))\r\n        }\r\n\r\n        constantCache.set(node, returnType)\r\n        return returnType\r\n      } else {\r\n        constantCache.set(node, ConstantTypes.NOT_CONSTANT)\r\n        return ConstantTypes.NOT_CONSTANT\r\n      }\r\n    case NodeTypes.TEXT:\r\n    case NodeTypes.COMMENT:\r\n      return ConstantTypes.CAN_STRINGIFY\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.IF_BRANCH:\r\n      return ConstantTypes.NOT_CONSTANT\r\n    case NodeTypes.INTERPOLATION:\r\n    case NodeTypes.TEXT_CALL:\r\n      return getConstantType(node.content, context)\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      return node.constType\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      let returnType = ConstantTypes.CAN_STRINGIFY\r\n      for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i]\r\n        if (isString(child) || isSymbol(child)) {\r\n          continue\r\n        }\r\n        const childType = getConstantType(child, context)\r\n        if (childType === ConstantTypes.NOT_CONSTANT) {\r\n          return ConstantTypes.NOT_CONSTANT\r\n        } else if (childType < returnType) {\r\n          returnType = childType\r\n        }\r\n      }\r\n      return returnType\r\n    default:\r\n      if (__DEV__) {\r\n        const exhaustiveCheck: never = node\r\n        exhaustiveCheck\r\n      }\r\n      return ConstantTypes.NOT_CONSTANT\r\n  }\r\n}\r\n\r\nconst allowHoistedHelperSet = new Set([\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_STYLE,\r\n  NORMALIZE_PROPS,\r\n  GUARD_REACTIVE_PROPS,\r\n])\r\n\r\nfunction getConstantTypeOfHelperCall(\r\n  value: CallExpression,\r\n  context: TransformContext,\r\n): ConstantTypes {\r\n  if (\r\n    value.type === NodeTypes.JS_CALL_EXPRESSION &&\r\n    !isString(value.callee) &&\r\n    allowHoistedHelperSet.has(value.callee)\r\n  ) {\r\n    const arg = value.arguments[0] as JSChildNode\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      return getConstantType(arg, context)\r\n    } else if (arg.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n      return getConstantTypeOfHelperCall(arg, context)\r\n    }\r\n  }\r\n  return ConstantTypes.NOT_CONSTANT\r\n}\r\n\r\nfunction getGeneratedPropsConstantType(\r\n  node: PlainElementNode,\r\n  context: TransformContext,\r\n): ConstantTypes {\r\n  let returnType = ConstantTypes.CAN_STRINGIFY\r\n  const props = getNodeProps(node)\r\n  if (props && props.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n    const { properties } = props\r\n    for (let i = 0; i < properties.length; i++) {\r\n      const { key, value } = properties[i]\r\n      const keyType = getConstantType(key, context)\r\n      if (keyType === ConstantTypes.NOT_CONSTANT) {\r\n        return keyType\r\n      }\r\n      if (keyType < returnType) {\r\n        returnType = keyType\r\n      }\r\n      let valueType: ConstantTypes\r\n      if (value.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n        valueType = getConstantType(value, context)\r\n      } else if (value.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n        // some helper calls can be hoisted,\r\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n        // in this case we need to respect the ConstantType of the helper's arguments\r\n        valueType = getConstantTypeOfHelperCall(value, context)\r\n      } else {\r\n        valueType = ConstantTypes.NOT_CONSTANT\r\n      }\r\n      if (valueType === ConstantTypes.NOT_CONSTANT) {\r\n        return valueType\r\n      }\r\n      if (valueType < returnType) {\r\n        returnType = valueType\r\n      }\r\n    }\r\n  }\r\n  return returnType\r\n}\r\n\r\nfunction getNodeProps(node: PlainElementNode) {\r\n  const codegenNode = node.codegenNode!\r\n  if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n    return codegenNode.props\r\n  }\r\n}\r\n\r\nfunction getPatchFlag(node: VNodeCall): number | undefined {\r\n  const flag = node.patchFlag\r\n  return flag ? parseInt(flag, 10) : undefined\r\n}\r\n","import type { TransformOptions } from './options'\r\nimport {\r\n  type ArrayExpression,\r\n  type CacheExpression,\r\n  ConstantTypes,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  type JSChildNode,\r\n  NodeTypes,\r\n  type ParentNode,\r\n  type Property,\r\n  type RootNode,\r\n  type SimpleExpressionNode,\r\n  type TemplateChildNode,\r\n  type TemplateLiteral,\r\n  convertToBlock,\r\n  createCacheExpression,\r\n  createSimpleExpression,\r\n  createVNodeCall,\r\n} from './ast'\r\nimport {\r\n  EMPTY_OBJ,\r\n  NOOP,\r\n  PatchFlagNames,\r\n  PatchFlags,\r\n  camelize,\r\n  capitalize,\r\n  isArray,\r\n  isString,\r\n} from '@vue/shared'\r\nimport { defaultOnError, defaultOnWarn } from './errors'\r\nimport {\r\n  CREATE_COMMENT,\r\n  FRAGMENT,\r\n  TO_DISPLAY_STRING,\r\n  helperNameMap,\r\n} from './runtimeHelpers'\r\nimport { isVSlot } from './utils'\r\nimport { hoistStatic, isSingleElementRoot } from './transforms/hoistStatic'\r\nimport type { CompilerCompatOptions } from './compat/compatConfig'\r\n\r\n// There are two types of transforms:\r\n//\r\n// - NodeTransform:\r\n//   Transforms that operate directly on a ChildNode. NodeTransforms may mutate,\r\n//   replace or remove the node being processed.\r\nexport type NodeTransform = (\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext,\r\n) => void | (() => void) | (() => void)[]\r\n\r\n// - DirectiveTransform:\r\n//   Transforms that handles a single directive attribute on an element.\r\n//   It translates the raw directive into actual props for the VNode.\r\nexport type DirectiveTransform = (\r\n  dir: DirectiveNode,\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  // a platform specific compiler can import the base transform and augment\r\n  // it by passing in this optional argument.\r\n  augmentor?: (ret: DirectiveTransformResult) => DirectiveTransformResult,\r\n) => DirectiveTransformResult\r\n\r\nexport interface DirectiveTransformResult {\r\n  props: Property[]\r\n  needRuntime?: boolean | symbol\r\n  ssrTagParts?: TemplateLiteral['elements']\r\n}\r\n\r\n// A structural directive transform is technically also a NodeTransform;\r\n// Only v-if and v-for fall into this category.\r\nexport type StructuralDirectiveTransform = (\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n) => void | (() => void)\r\n\r\nexport interface ImportItem {\r\n  exp: string | ExpressionNode\r\n  path: string\r\n}\r\n\r\nexport interface TransformContext\r\n  extends Required<Omit<TransformOptions, keyof CompilerCompatOptions>>,\r\n    CompilerCompatOptions {\r\n  selfName: string | null\r\n  root: RootNode\r\n  helpers: Map<symbol, number>\r\n  components: Set<string>\r\n  directives: Set<string>\r\n  hoists: (JSChildNode | null)[]\r\n  imports: ImportItem[]\r\n  temps: number\r\n  cached: number\r\n  identifiers: { [name: string]: number | undefined }\r\n  scopes: {\r\n    vFor: number\r\n    vSlot: number\r\n    vPre: number\r\n    vOnce: number\r\n  }\r\n  parent: ParentNode | null\r\n  childIndex: number\r\n  currentNode: RootNode | TemplateChildNode | null\r\n  inVOnce: boolean\r\n  helper<T extends symbol>(name: T): T\r\n  removeHelper<T extends symbol>(name: T): void\r\n  helperString(name: symbol): string\r\n  replaceNode(node: TemplateChildNode): void\r\n  removeNode(node?: TemplateChildNode): void\r\n  onNodeRemoved(): void\r\n  addIdentifiers(exp: ExpressionNode | string): void\r\n  removeIdentifiers(exp: ExpressionNode | string): void\r\n  hoist(exp: string | JSChildNode | ArrayExpression): SimpleExpressionNode\r\n  cache<T extends JSChildNode>(exp: T, isVNode?: boolean): CacheExpression | T\r\n  constantCache: WeakMap<TemplateChildNode, ConstantTypes>\r\n\r\n  // 2.x Compat only\r\n  filters?: Set<string>\r\n}\r\n\r\nexport function createTransformContext(\r\n  root: RootNode,\r\n  {\r\n    filename = '',\r\n    prefixIdentifiers = false,\r\n    hoistStatic = false,\r\n    hmr = false,\r\n    cacheHandlers = false,\r\n    nodeTransforms = [],\r\n    directiveTransforms = {},\r\n    transformHoist = null,\r\n    isBuiltInComponent = NOOP,\r\n    isCustomElement = NOOP,\r\n    expressionPlugins = [],\r\n    scopeId = null,\r\n    slotted = true,\r\n    ssr = false,\r\n    inSSR = false,\r\n    ssrCssVars = ``,\r\n    bindingMetadata = EMPTY_OBJ,\r\n    inline = false,\r\n    isTS = false,\r\n    onError = defaultOnError,\r\n    onWarn = defaultOnWarn,\r\n    compatConfig,\r\n  }: TransformOptions,\r\n): TransformContext {\r\n  const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/)\r\n  const context: TransformContext = {\r\n    // options\r\n    filename,\r\n    selfName: nameMatch && capitalize(camelize(nameMatch[1])),\r\n    prefixIdentifiers,\r\n    hoistStatic,\r\n    hmr,\r\n    cacheHandlers,\r\n    nodeTransforms,\r\n    directiveTransforms,\r\n    transformHoist,\r\n    isBuiltInComponent,\r\n    isCustomElement,\r\n    expressionPlugins,\r\n    scopeId,\r\n    slotted,\r\n    ssr,\r\n    inSSR,\r\n    ssrCssVars,\r\n    bindingMetadata,\r\n    inline,\r\n    isTS,\r\n    onError,\r\n    onWarn,\r\n    compatConfig,\r\n\r\n    // state\r\n    root,\r\n    helpers: new Map(),\r\n    components: new Set(),\r\n    directives: new Set(),\r\n    hoists: [],\r\n    imports: [],\r\n    constantCache: new WeakMap(),\r\n    temps: 0,\r\n    cached: 0,\r\n    identifiers: Object.create(null),\r\n    scopes: {\r\n      vFor: 0,\r\n      vSlot: 0,\r\n      vPre: 0,\r\n      vOnce: 0,\r\n    },\r\n    parent: null,\r\n    currentNode: root,\r\n    childIndex: 0,\r\n    inVOnce: false,\r\n\r\n    // methods\r\n    helper(name) {\r\n      const count = context.helpers.get(name) || 0\r\n      context.helpers.set(name, count + 1)\r\n      return name\r\n    },\r\n    removeHelper(name) {\r\n      const count = context.helpers.get(name)\r\n      if (count) {\r\n        const currentCount = count - 1\r\n        if (!currentCount) {\r\n          context.helpers.delete(name)\r\n        } else {\r\n          context.helpers.set(name, currentCount)\r\n        }\r\n      }\r\n    },\r\n    helperString(name) {\r\n      return `_${helperNameMap[context.helper(name)]}`\r\n    },\r\n    replaceNode(node) {\r\n      /* istanbul ignore if */\r\n      if (__DEV__) {\r\n        if (!context.currentNode) {\r\n          throw new Error(`Node being replaced is already removed.`)\r\n        }\r\n        if (!context.parent) {\r\n          throw new Error(`Cannot replace root node.`)\r\n        }\r\n      }\r\n      context.parent!.children[context.childIndex] = context.currentNode = node\r\n    },\r\n    removeNode(node) {\r\n      if (__DEV__ && !context.parent) {\r\n        throw new Error(`Cannot remove root node.`)\r\n      }\r\n      const list = context.parent!.children\r\n      const removalIndex = node\r\n        ? list.indexOf(node)\r\n        : context.currentNode\r\n          ? context.childIndex\r\n          : -1\r\n      /* istanbul ignore if */\r\n      if (__DEV__ && removalIndex < 0) {\r\n        throw new Error(`node being removed is not a child of current parent`)\r\n      }\r\n      if (!node || node === context.currentNode) {\r\n        // current node removed\r\n        context.currentNode = null\r\n        context.onNodeRemoved()\r\n      } else {\r\n        // sibling node removed\r\n        if (context.childIndex > removalIndex) {\r\n          context.childIndex--\r\n          context.onNodeRemoved()\r\n        }\r\n      }\r\n      context.parent!.children.splice(removalIndex, 1)\r\n    },\r\n    onNodeRemoved: NOOP,\r\n    addIdentifiers(exp) {\r\n      // identifier tracking only happens in non-browser builds.\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          addId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(addId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          addId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    removeIdentifiers(exp) {\r\n      if (!__BROWSER__) {\r\n        if (isString(exp)) {\r\n          removeId(exp)\r\n        } else if (exp.identifiers) {\r\n          exp.identifiers.forEach(removeId)\r\n        } else if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          removeId(exp.content)\r\n        }\r\n      }\r\n    },\r\n    hoist(exp) {\r\n      if (isString(exp)) exp = createSimpleExpression(exp)\r\n      context.hoists.push(exp)\r\n      const identifier = createSimpleExpression(\r\n        `_hoisted_${context.hoists.length}`,\r\n        false,\r\n        exp.loc,\r\n        ConstantTypes.CAN_HOIST,\r\n      )\r\n      identifier.hoisted = exp\r\n      return identifier\r\n    },\r\n    cache(exp, isVNode = false) {\r\n      return createCacheExpression(context.cached++, exp, isVNode)\r\n    },\r\n  }\r\n\r\n  if (__COMPAT__) {\r\n    context.filters = new Set()\r\n  }\r\n\r\n  function addId(id: string) {\r\n    const { identifiers } = context\r\n    if (identifiers[id] === undefined) {\r\n      identifiers[id] = 0\r\n    }\r\n    identifiers[id]!++\r\n  }\r\n\r\n  function removeId(id: string) {\r\n    context.identifiers[id]!--\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function transform(root: RootNode, options: TransformOptions) {\r\n  const context = createTransformContext(root, options)\r\n  traverseNode(root, context)\r\n  if (options.hoistStatic) {\r\n    hoistStatic(root, context)\r\n  }\r\n  if (!options.ssr) {\r\n    createRootCodegen(root, context)\r\n  }\r\n  // finalize meta information\r\n  root.helpers = new Set([...context.helpers.keys()])\r\n  root.components = [...context.components]\r\n  root.directives = [...context.directives]\r\n  root.imports = context.imports\r\n  root.hoists = context.hoists\r\n  root.temps = context.temps\r\n  root.cached = context.cached\r\n  root.transformed = true\r\n\r\n  if (__COMPAT__) {\r\n    root.filters = [...context.filters!]\r\n  }\r\n}\r\n\r\nfunction createRootCodegen(root: RootNode, context: TransformContext) {\r\n  const { helper } = context\r\n  const { children } = root\r\n  if (children.length === 1) {\r\n    const child = children[0]\r\n    // if the single child is an element, turn it into a block.\r\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n      // single element root is never hoisted so codegenNode will never be\r\n      // SimpleExpressionNode\r\n      const codegenNode = child.codegenNode\r\n      if (codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        convertToBlock(codegenNode, context)\r\n      }\r\n      root.codegenNode = codegenNode\r\n    } else {\r\n      // - single <slot/>, IfNode, ForNode: already blocks.\r\n      // - single text node: always patched.\r\n      // root codegen falls through via genNode()\r\n      root.codegenNode = child\r\n    }\r\n  } else if (children.length > 1) {\r\n    // root has multiple nodes - return a fragment block.\r\n    let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n    let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n    // check if the fragment actually contains a single valid child with\r\n    // the rest being comments\r\n    if (\r\n      __DEV__ &&\r\n      children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n    ) {\r\n      patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n      patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n    }\r\n    root.codegenNode = createVNodeCall(\r\n      context,\r\n      helper(FRAGMENT),\r\n      undefined,\r\n      root.children,\r\n      patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n      undefined,\r\n      undefined,\r\n      true,\r\n      undefined,\r\n      false /* isComponent */,\r\n    )\r\n  } else {\r\n    // no children = noop. codegen will return null.\r\n  }\r\n}\r\n\r\nexport function traverseChildren(\r\n  parent: ParentNode,\r\n  context: TransformContext,\r\n) {\r\n  let i = 0\r\n  const nodeRemoved = () => {\r\n    i--\r\n  }\r\n  for (; i < parent.children.length; i++) {\r\n    const child = parent.children[i]\r\n    if (isString(child)) continue\r\n    context.parent = parent\r\n    context.childIndex = i\r\n    context.onNodeRemoved = nodeRemoved\r\n    traverseNode(child, context)\r\n  }\r\n}\r\n\r\nexport function traverseNode(\r\n  node: RootNode | TemplateChildNode,\r\n  context: TransformContext,\r\n) {\r\n  context.currentNode = node\r\n  // apply transform plugins\r\n  const { nodeTransforms } = context\r\n  const exitFns = []\r\n  for (let i = 0; i < nodeTransforms.length; i++) {\r\n    const onExit = nodeTransforms[i](node, context)\r\n    if (onExit) {\r\n      if (isArray(onExit)) {\r\n        exitFns.push(...onExit)\r\n      } else {\r\n        exitFns.push(onExit)\r\n      }\r\n    }\r\n    if (!context.currentNode) {\r\n      // node was removed\r\n      return\r\n    } else {\r\n      // node may have been replaced\r\n      node = context.currentNode\r\n    }\r\n  }\r\n\r\n  switch (node.type) {\r\n    case NodeTypes.COMMENT:\r\n      if (!context.ssr) {\r\n        // inject import for the Comment symbol, which is needed for creating\r\n        // comment nodes with `createVNode`\r\n        context.helper(CREATE_COMMENT)\r\n      }\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      // no need to traverse, but we need to inject toString helper\r\n      if (!context.ssr) {\r\n        context.helper(TO_DISPLAY_STRING)\r\n      }\r\n      break\r\n\r\n    // for container types, further traverse downwards\r\n    case NodeTypes.IF:\r\n      for (let i = 0; i < node.branches.length; i++) {\r\n        traverseNode(node.branches[i], context)\r\n      }\r\n      break\r\n    case NodeTypes.IF_BRANCH:\r\n    case NodeTypes.FOR:\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.ROOT:\r\n      traverseChildren(node, context)\r\n      break\r\n  }\r\n\r\n  // exit transforms\r\n  context.currentNode = node\r\n  let i = exitFns.length\r\n  while (i--) {\r\n    exitFns[i]()\r\n  }\r\n}\r\n\r\nexport function createStructuralDirectiveTransform(\r\n  name: string | RegExp,\r\n  fn: StructuralDirectiveTransform,\r\n): NodeTransform {\r\n  const matches = isString(name)\r\n    ? (n: string) => n === name\r\n    : (n: string) => name.test(n)\r\n\r\n  return (node, context) => {\r\n    if (node.type === NodeTypes.ELEMENT) {\r\n      const { props } = node\r\n      // structural directive transforms are not concerned with slots\r\n      // as they are handled separately in vSlot.ts\r\n      if (node.tagType === ElementTypes.TEMPLATE && props.some(isVSlot)) {\r\n        return\r\n      }\r\n      const exitFns = []\r\n      for (let i = 0; i < props.length; i++) {\r\n        const prop = props[i]\r\n        if (prop.type === NodeTypes.DIRECTIVE && matches(prop.name)) {\r\n          // structural directives are removed to avoid infinite recursion\r\n          // also we remove them *before* applying so that it can further\r\n          // traverse itself in case it moves the node around\r\n          props.splice(i, 1)\r\n          i--\r\n          const onExit = fn(node, prop, context)\r\n          if (onExit) exitFns.push(onExit)\r\n        }\r\n      }\r\n      return exitFns\r\n    }\r\n  }\r\n}\r\n","import type { CodegenOptions } from './options'\r\nimport {\r\n  type ArrayExpression,\r\n  type AssignmentExpression,\r\n  type CacheExpression,\r\n  type CallExpression,\r\n  type CommentNode,\r\n  type CompoundExpressionNode,\r\n  type ConditionalExpression,\r\n  type ExpressionNode,\r\n  type FunctionExpression,\r\n  type IfStatement,\r\n  type InterpolationNode,\r\n  type JSChildNode,\r\n  NodeTypes,\r\n  type ObjectExpression,\r\n  type Position,\r\n  type ReturnStatement,\r\n  type RootNode,\r\n  type SSRCodegenNode,\r\n  type SequenceExpression,\r\n  type SimpleExpressionNode,\r\n  type TemplateChildNode,\r\n  type TemplateLiteral,\r\n  type TextNode,\r\n  type VNodeCall,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n  locStub,\r\n} from './ast'\r\nimport { type RawSourceMap, SourceMapGenerator } from 'source-map-js'\r\nimport {\r\n  advancePositionWithMutation,\r\n  assert,\r\n  isSimpleIdentifier,\r\n  toValidAssetId,\r\n} from './utils'\r\nimport { isArray, isString, isSymbol } from '@vue/shared'\r\nimport {\r\n  CREATE_COMMENT,\r\n  CREATE_ELEMENT_VNODE,\r\n  CREATE_STATIC,\r\n  CREATE_TEXT,\r\n  CREATE_VNODE,\r\n  OPEN_BLOCK,\r\n  POP_SCOPE_ID,\r\n  PUSH_SCOPE_ID,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DIRECTIVE,\r\n  RESOLVE_FILTER,\r\n  SET_BLOCK_TRACKING,\r\n  TO_DISPLAY_STRING,\r\n  WITH_CTX,\r\n  WITH_DIRECTIVES,\r\n  helperNameMap,\r\n} from './runtimeHelpers'\r\nimport type { ImportItem } from './transform'\r\n\r\nconst PURE_ANNOTATION = `/*#__PURE__*/`\r\n\r\nconst aliasHelper = (s: symbol) => `${helperNameMap[s]}: _${helperNameMap[s]}`\r\n\r\ntype CodegenNode = TemplateChildNode | JSChildNode | SSRCodegenNode\r\n\r\nexport interface CodegenResult {\r\n  code: string\r\n  preamble: string\r\n  ast: RootNode\r\n  map?: RawSourceMap\r\n}\r\n\r\nenum NewlineType {\r\n  Start = 0,\r\n  End = -1,\r\n  None = -2,\r\n  Unknown = -3,\r\n}\r\n\r\nexport interface CodegenContext\r\n  extends Omit<Required<CodegenOptions>, 'bindingMetadata' | 'inline'> {\r\n  source: string\r\n  code: string\r\n  line: number\r\n  column: number\r\n  offset: number\r\n  indentLevel: number\r\n  pure: boolean\r\n  map?: SourceMapGenerator\r\n  helper(key: symbol): string\r\n  push(code: string, newlineIndex?: number, node?: CodegenNode): void\r\n  indent(): void\r\n  deindent(withoutNewLine?: boolean): void\r\n  newline(): void\r\n}\r\n\r\nfunction createCodegenContext(\r\n  ast: RootNode,\r\n  {\r\n    mode = 'function',\r\n    prefixIdentifiers = mode === 'module',\r\n    sourceMap = false,\r\n    filename = `template.vue.html`,\r\n    scopeId = null,\r\n    optimizeImports = false,\r\n    runtimeGlobalName = `Vue`,\r\n    runtimeModuleName = `vue`,\r\n    ssrRuntimeModuleName = 'vue/server-renderer',\r\n    ssr = false,\r\n    isTS = false,\r\n    inSSR = false,\r\n  }: CodegenOptions,\r\n): CodegenContext {\r\n  const context: CodegenContext = {\r\n    mode,\r\n    prefixIdentifiers,\r\n    sourceMap,\r\n    filename,\r\n    scopeId,\r\n    optimizeImports,\r\n    runtimeGlobalName,\r\n    runtimeModuleName,\r\n    ssrRuntimeModuleName,\r\n    ssr,\r\n    isTS,\r\n    inSSR,\r\n    source: ast.source,\r\n    code: ``,\r\n    column: 1,\r\n    line: 1,\r\n    offset: 0,\r\n    indentLevel: 0,\r\n    pure: false,\r\n    map: undefined,\r\n    helper(key) {\r\n      return `_${helperNameMap[key]}`\r\n    },\r\n    push(code, newlineIndex = NewlineType.None, node) {\r\n      context.code += code\r\n      if (!__BROWSER__ && context.map) {\r\n        if (node) {\r\n          let name\r\n          if (node.type === NodeTypes.SIMPLE_EXPRESSION && !node.isStatic) {\r\n            const content = node.content.replace(/^_ctx\\./, '')\r\n            if (content !== node.content && isSimpleIdentifier(content)) {\r\n              name = content\r\n            }\r\n          }\r\n          addMapping(node.loc.start, name)\r\n        }\r\n        if (newlineIndex === NewlineType.Unknown) {\r\n          // multiple newlines, full iteration\r\n          advancePositionWithMutation(context, code)\r\n        } else {\r\n          // fast paths\r\n          context.offset += code.length\r\n          if (newlineIndex === NewlineType.None) {\r\n            // no newlines; fast path to avoid newline detection\r\n            if (__TEST__ && code.includes('\\n')) {\r\n              throw new Error(\r\n                `CodegenContext.push() called newlineIndex: none, but contains` +\r\n                  `newlines: ${code.replace(/\\n/g, '\\\\n')}`,\r\n              )\r\n            }\r\n            context.column += code.length\r\n          } else {\r\n            // single newline at known index\r\n            if (newlineIndex === NewlineType.End) {\r\n              newlineIndex = code.length - 1\r\n            }\r\n            if (\r\n              __TEST__ &&\r\n              (code.charAt(newlineIndex) !== '\\n' ||\r\n                code.slice(0, newlineIndex).includes('\\n') ||\r\n                code.slice(newlineIndex + 1).includes('\\n'))\r\n            ) {\r\n              throw new Error(\r\n                `CodegenContext.push() called with newlineIndex: ${newlineIndex} ` +\r\n                  `but does not conform: ${code.replace(/\\n/g, '\\\\n')}`,\r\n              )\r\n            }\r\n            context.line++\r\n            context.column = code.length - newlineIndex\r\n          }\r\n        }\r\n        if (node && node.loc !== locStub) {\r\n          addMapping(node.loc.end)\r\n        }\r\n      }\r\n    },\r\n    indent() {\r\n      newline(++context.indentLevel)\r\n    },\r\n    deindent(withoutNewLine = false) {\r\n      if (withoutNewLine) {\r\n        --context.indentLevel\r\n      } else {\r\n        newline(--context.indentLevel)\r\n      }\r\n    },\r\n    newline() {\r\n      newline(context.indentLevel)\r\n    },\r\n  }\r\n\r\n  function newline(n: number) {\r\n    context.push('\\n' + `  `.repeat(n), NewlineType.Start)\r\n  }\r\n\r\n  function addMapping(loc: Position, name: string | null = null) {\r\n    // we use the private property to directly add the mapping\r\n    // because the addMapping() implementation in source-map-js has a bunch of\r\n    // unnecessary arg and validation checks that are pure overhead in our case.\r\n    const { _names, _mappings } = context.map!\r\n    if (name !== null && !_names.has(name)) _names.add(name)\r\n    _mappings.add({\r\n      originalLine: loc.line,\r\n      originalColumn: loc.column - 1, // source-map column is 0 based\r\n      generatedLine: context.line,\r\n      generatedColumn: context.column - 1,\r\n      source: filename,\r\n      // @ts-expect-error it is possible to be null\r\n      name,\r\n    })\r\n  }\r\n\r\n  if (!__BROWSER__ && sourceMap) {\r\n    // lazy require source-map implementation, only in non-browser builds\r\n    context.map = new SourceMapGenerator()\r\n    context.map.setSourceContent(filename, context.source)\r\n    context.map._sources.add(filename)\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nexport function generate(\r\n  ast: RootNode,\r\n  options: CodegenOptions & {\r\n    onContextCreated?: (context: CodegenContext) => void\r\n  } = {},\r\n): CodegenResult {\r\n  const context = createCodegenContext(ast, options)\r\n  if (options.onContextCreated) options.onContextCreated(context)\r\n  const {\r\n    mode,\r\n    push,\r\n    prefixIdentifiers,\r\n    indent,\r\n    deindent,\r\n    newline,\r\n    scopeId,\r\n    ssr,\r\n  } = context\r\n\r\n  const helpers = Array.from(ast.helpers)\r\n  const hasHelpers = helpers.length > 0\r\n  const useWithBlock = !prefixIdentifiers && mode !== 'module'\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode === 'module'\r\n  const isSetupInlined = !__BROWSER__ && !!options.inline\r\n\r\n  // preambles\r\n  // in setup() inline mode, the preamble is generated in a sub context\r\n  // and returned separately.\r\n  const preambleContext = isSetupInlined\r\n    ? createCodegenContext(ast, options)\r\n    : context\r\n  if (!__BROWSER__ && mode === 'module') {\r\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined)\r\n  } else {\r\n    genFunctionPreamble(ast, preambleContext)\r\n  }\r\n  // enter render function\r\n  const functionName = ssr ? `ssrRender` : `render`\r\n  const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache']\r\n  if (!__BROWSER__ && options.bindingMetadata && !options.inline) {\r\n    // binding optimization args\r\n    args.push('$props', '$setup', '$data', '$options')\r\n  }\r\n  const signature =\r\n    !__BROWSER__ && options.isTS\r\n      ? args.map(arg => `${arg}: any`).join(',')\r\n      : args.join(', ')\r\n\r\n  if (isSetupInlined) {\r\n    push(`(${signature}) => {`)\r\n  } else {\r\n    push(`function ${functionName}(${signature}) {`)\r\n  }\r\n  indent()\r\n\r\n  if (useWithBlock) {\r\n    push(`with (_ctx) {`)\r\n    indent()\r\n    // function mode const declarations should be inside with block\r\n    // also they should be renamed to avoid collision with user properties\r\n    if (hasHelpers) {\r\n      push(\r\n        `const { ${helpers.map(aliasHelper).join(', ')} } = _Vue\\n`,\r\n        NewlineType.End,\r\n      )\r\n      newline()\r\n    }\r\n  }\r\n\r\n  // generate asset resolution statements\r\n  if (ast.components.length) {\r\n    genAssets(ast.components, 'component', context)\r\n    if (ast.directives.length || ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (ast.directives.length) {\r\n    genAssets(ast.directives, 'directive', context)\r\n    if (ast.temps > 0) {\r\n      newline()\r\n    }\r\n  }\r\n  if (__COMPAT__ && ast.filters && ast.filters.length) {\r\n    newline()\r\n    genAssets(ast.filters, 'filter', context)\r\n    newline()\r\n  }\r\n\r\n  if (ast.temps > 0) {\r\n    push(`let `)\r\n    for (let i = 0; i < ast.temps; i++) {\r\n      push(`${i > 0 ? `, ` : ``}_temp${i}`)\r\n    }\r\n  }\r\n  if (ast.components.length || ast.directives.length || ast.temps) {\r\n    push(`\\n`, NewlineType.Start)\r\n    newline()\r\n  }\r\n\r\n  // generate the VNode tree expression\r\n  if (!ssr) {\r\n    push(`return `)\r\n  }\r\n  if (ast.codegenNode) {\r\n    genNode(ast.codegenNode, context)\r\n  } else {\r\n    push(`null`)\r\n  }\r\n\r\n  if (useWithBlock) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n\r\n  deindent()\r\n  push(`}`)\r\n\r\n  return {\r\n    ast,\r\n    code: context.code,\r\n    preamble: isSetupInlined ? preambleContext.code : ``,\r\n    map: context.map ? context.map.toJSON() : undefined,\r\n  }\r\n}\r\n\r\nfunction genFunctionPreamble(ast: RootNode, context: CodegenContext) {\r\n  const {\r\n    ssr,\r\n    prefixIdentifiers,\r\n    push,\r\n    newline,\r\n    runtimeModuleName,\r\n    runtimeGlobalName,\r\n    ssrRuntimeModuleName,\r\n  } = context\r\n  const VueBinding =\r\n    !__BROWSER__ && ssr\r\n      ? `require(${JSON.stringify(runtimeModuleName)})`\r\n      : runtimeGlobalName\r\n  // Generate const declaration for helpers\r\n  // In prefix mode, we place the const declaration at top so it's done\r\n  // only once; But if we not prefixing, we place the declaration inside the\r\n  // with block so it doesn't incur the `in` check cost for every helper access.\r\n  const helpers = Array.from(ast.helpers)\r\n  if (helpers.length > 0) {\r\n    if (!__BROWSER__ && prefixIdentifiers) {\r\n      push(\r\n        `const { ${helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`,\r\n        NewlineType.End,\r\n      )\r\n    } else {\r\n      // \"with\" mode.\r\n      // save Vue in a separate variable to avoid collision\r\n      push(`const _Vue = ${VueBinding}\\n`, NewlineType.End)\r\n      // in \"with\" mode, helpers are declared inside the with block to avoid\r\n      // has check cost, but hoists are lifted out of the function - we need\r\n      // to provide the helper here.\r\n      if (ast.hoists.length) {\r\n        const staticHelpers = [\r\n          CREATE_VNODE,\r\n          CREATE_ELEMENT_VNODE,\r\n          CREATE_COMMENT,\r\n          CREATE_TEXT,\r\n          CREATE_STATIC,\r\n        ]\r\n          .filter(helper => helpers.includes(helper))\r\n          .map(aliasHelper)\r\n          .join(', ')\r\n        push(`const { ${staticHelpers} } = _Vue\\n`, NewlineType.End)\r\n      }\r\n    }\r\n  }\r\n  // generate variables for ssr helpers\r\n  if (!__BROWSER__ && ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    // ssr guarantees prefixIdentifier: true\r\n    push(\r\n      `const { ${ast.ssrHelpers\r\n        .map(aliasHelper)\r\n        .join(', ')} } = require(\"${ssrRuntimeModuleName}\")\\n`,\r\n      NewlineType.End,\r\n    )\r\n  }\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n  push(`return `)\r\n}\r\n\r\nfunction genModulePreamble(\r\n  ast: RootNode,\r\n  context: CodegenContext,\r\n  genScopeId: boolean,\r\n  inline?: boolean,\r\n) {\r\n  const {\r\n    push,\r\n    newline,\r\n    optimizeImports,\r\n    runtimeModuleName,\r\n    ssrRuntimeModuleName,\r\n  } = context\r\n\r\n  if (genScopeId && ast.hoists.length) {\r\n    ast.helpers.add(PUSH_SCOPE_ID)\r\n    ast.helpers.add(POP_SCOPE_ID)\r\n  }\r\n\r\n  // generate import statements for helpers\r\n  if (ast.helpers.size) {\r\n    const helpers = Array.from(ast.helpers)\r\n    if (optimizeImports) {\r\n      // when bundled with webpack with code-split, calling an import binding\r\n      // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\r\n      // incurring both payload size increase and potential perf overhead.\r\n      // therefore we assign the imports to variables (which is a constant ~50b\r\n      // cost per-component instead of scaling with template size)\r\n      push(\r\n        `import { ${helpers\r\n          .map(s => helperNameMap[s])\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`,\r\n        NewlineType.End,\r\n      )\r\n      push(\r\n        `\\n// Binding optimization for webpack code-split\\nconst ${helpers\r\n          .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\r\n          .join(', ')}\\n`,\r\n        NewlineType.End,\r\n      )\r\n    } else {\r\n      push(\r\n        `import { ${helpers\r\n          .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n          .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`,\r\n        NewlineType.End,\r\n      )\r\n    }\r\n  }\r\n\r\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n    push(\r\n      `import { ${ast.ssrHelpers\r\n        .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n        .join(', ')} } from \"${ssrRuntimeModuleName}\"\\n`,\r\n      NewlineType.End,\r\n    )\r\n  }\r\n\r\n  if (ast.imports.length) {\r\n    genImports(ast.imports, context)\r\n    newline()\r\n  }\r\n\r\n  genHoists(ast.hoists, context)\r\n  newline()\r\n\r\n  if (!inline) {\r\n    push(`export `)\r\n  }\r\n}\r\n\r\nfunction genAssets(\r\n  assets: string[],\r\n  type: 'component' | 'directive' | 'filter',\r\n  { helper, push, newline, isTS }: CodegenContext,\r\n) {\r\n  const resolver = helper(\r\n    __COMPAT__ && type === 'filter'\r\n      ? RESOLVE_FILTER\r\n      : type === 'component'\r\n        ? RESOLVE_COMPONENT\r\n        : RESOLVE_DIRECTIVE,\r\n  )\r\n  for (let i = 0; i < assets.length; i++) {\r\n    let id = assets[i]\r\n    // potential component implicit self-reference inferred from SFC filename\r\n    const maybeSelfReference = id.endsWith('__self')\r\n    if (maybeSelfReference) {\r\n      id = id.slice(0, -6)\r\n    }\r\n    push(\r\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${\r\n        maybeSelfReference ? `, true` : ``\r\n      })${isTS ? `!` : ``}`,\r\n    )\r\n    if (i < assets.length - 1) {\r\n      newline()\r\n    }\r\n  }\r\n}\r\n\r\nfunction genHoists(hoists: (JSChildNode | null)[], context: CodegenContext) {\r\n  if (!hoists.length) {\r\n    return\r\n  }\r\n  context.pure = true\r\n  const { push, newline, helper, scopeId, mode } = context\r\n  const genScopeId = !__BROWSER__ && scopeId != null && mode !== 'function'\r\n  newline()\r\n\r\n  // generate inlined withScopeId helper\r\n  if (genScopeId) {\r\n    push(\r\n      `const _withScopeId = n => (${helper(\r\n        PUSH_SCOPE_ID,\r\n      )}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`,\r\n    )\r\n    newline()\r\n  }\r\n\r\n  for (let i = 0; i < hoists.length; i++) {\r\n    const exp = hoists[i]\r\n    if (exp) {\r\n      const needScopeIdWrapper = genScopeId && exp.type === NodeTypes.VNODE_CALL\r\n      push(\r\n        `const _hoisted_${i + 1} = ${\r\n          needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``\r\n        }`,\r\n      )\r\n      genNode(exp, context)\r\n      if (needScopeIdWrapper) {\r\n        push(`)`)\r\n      }\r\n      newline()\r\n    }\r\n  }\r\n\r\n  context.pure = false\r\n}\r\n\r\nfunction genImports(importsOptions: ImportItem[], context: CodegenContext) {\r\n  if (!importsOptions.length) {\r\n    return\r\n  }\r\n  importsOptions.forEach(imports => {\r\n    context.push(`import `)\r\n    genNode(imports.exp, context)\r\n    context.push(` from '${imports.path}'`)\r\n    context.newline()\r\n  })\r\n}\r\n\r\nfunction isText(n: string | CodegenNode) {\r\n  return (\r\n    isString(n) ||\r\n    n.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n    n.type === NodeTypes.TEXT ||\r\n    n.type === NodeTypes.INTERPOLATION ||\r\n    n.type === NodeTypes.COMPOUND_EXPRESSION\r\n  )\r\n}\r\n\r\nfunction genNodeListAsArray(\r\n  nodes: (string | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext,\r\n) {\r\n  const multilines =\r\n    nodes.length > 3 ||\r\n    ((!__BROWSER__ || __DEV__) && nodes.some(n => isArray(n) || !isText(n)))\r\n  context.push(`[`)\r\n  multilines && context.indent()\r\n  genNodeList(nodes, context, multilines)\r\n  multilines && context.deindent()\r\n  context.push(`]`)\r\n}\r\n\r\nfunction genNodeList(\r\n  nodes: (string | symbol | CodegenNode | TemplateChildNode[])[],\r\n  context: CodegenContext,\r\n  multilines: boolean = false,\r\n  comma: boolean = true,\r\n) {\r\n  const { push, newline } = context\r\n  for (let i = 0; i < nodes.length; i++) {\r\n    const node = nodes[i]\r\n    if (isString(node)) {\r\n      push(node, NewlineType.Unknown)\r\n    } else if (isArray(node)) {\r\n      genNodeListAsArray(node, context)\r\n    } else {\r\n      genNode(node, context)\r\n    }\r\n    if (i < nodes.length - 1) {\r\n      if (multilines) {\r\n        comma && push(',')\r\n        newline()\r\n      } else {\r\n        comma && push(', ')\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction genNode(node: CodegenNode | symbol | string, context: CodegenContext) {\r\n  if (isString(node)) {\r\n    context.push(node, NewlineType.Unknown)\r\n    return\r\n  }\r\n  if (isSymbol(node)) {\r\n    context.push(context.helper(node))\r\n    return\r\n  }\r\n  switch (node.type) {\r\n    case NodeTypes.ELEMENT:\r\n    case NodeTypes.IF:\r\n    case NodeTypes.FOR:\r\n      __DEV__ &&\r\n        assert(\r\n          node.codegenNode != null,\r\n          `Codegen node is missing for element/if/for node. ` +\r\n            `Apply appropriate transforms first.`,\r\n        )\r\n      genNode(node.codegenNode!, context)\r\n      break\r\n    case NodeTypes.TEXT:\r\n      genText(node, context)\r\n      break\r\n    case NodeTypes.SIMPLE_EXPRESSION:\r\n      genExpression(node, context)\r\n      break\r\n    case NodeTypes.INTERPOLATION:\r\n      genInterpolation(node, context)\r\n      break\r\n    case NodeTypes.TEXT_CALL:\r\n      genNode(node.codegenNode, context)\r\n      break\r\n    case NodeTypes.COMPOUND_EXPRESSION:\r\n      genCompoundExpression(node, context)\r\n      break\r\n    case NodeTypes.COMMENT:\r\n      genComment(node, context)\r\n      break\r\n    case NodeTypes.VNODE_CALL:\r\n      genVNodeCall(node, context)\r\n      break\r\n\r\n    case NodeTypes.JS_CALL_EXPRESSION:\r\n      genCallExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_OBJECT_EXPRESSION:\r\n      genObjectExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_ARRAY_EXPRESSION:\r\n      genArrayExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_FUNCTION_EXPRESSION:\r\n      genFunctionExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CONDITIONAL_EXPRESSION:\r\n      genConditionalExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_CACHE_EXPRESSION:\r\n      genCacheExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_BLOCK_STATEMENT:\r\n      genNodeList(node.body, context, true, false)\r\n      break\r\n\r\n    // SSR only types\r\n    case NodeTypes.JS_TEMPLATE_LITERAL:\r\n      !__BROWSER__ && genTemplateLiteral(node, context)\r\n      break\r\n    case NodeTypes.JS_IF_STATEMENT:\r\n      !__BROWSER__ && genIfStatement(node, context)\r\n      break\r\n    case NodeTypes.JS_ASSIGNMENT_EXPRESSION:\r\n      !__BROWSER__ && genAssignmentExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_SEQUENCE_EXPRESSION:\r\n      !__BROWSER__ && genSequenceExpression(node, context)\r\n      break\r\n    case NodeTypes.JS_RETURN_STATEMENT:\r\n      !__BROWSER__ && genReturnStatement(node, context)\r\n      break\r\n\r\n    /* istanbul ignore next */\r\n    case NodeTypes.IF_BRANCH:\r\n      // noop\r\n      break\r\n    default:\r\n      if (__DEV__) {\r\n        assert(false, `unhandled codegen node type: ${(node as any).type}`)\r\n        // make sure we exhaust all possible types\r\n        const exhaustiveCheck: never = node\r\n        return exhaustiveCheck\r\n      }\r\n  }\r\n}\r\n\r\nfunction genText(\r\n  node: TextNode | SimpleExpressionNode,\r\n  context: CodegenContext,\r\n) {\r\n  context.push(JSON.stringify(node.content), NewlineType.Unknown, node)\r\n}\r\n\r\nfunction genExpression(node: SimpleExpressionNode, context: CodegenContext) {\r\n  const { content, isStatic } = node\r\n  context.push(\r\n    isStatic ? JSON.stringify(content) : content,\r\n    NewlineType.Unknown,\r\n    node,\r\n  )\r\n}\r\n\r\nfunction genInterpolation(node: InterpolationNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) push(PURE_ANNOTATION)\r\n  push(`${helper(TO_DISPLAY_STRING)}(`)\r\n  genNode(node.content, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genCompoundExpression(\r\n  node: CompoundExpressionNode,\r\n  context: CodegenContext,\r\n) {\r\n  for (let i = 0; i < node.children!.length; i++) {\r\n    const child = node.children![i]\r\n    if (isString(child)) {\r\n      context.push(child, NewlineType.Unknown)\r\n    } else {\r\n      genNode(child, context)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genExpressionAsPropertyKey(\r\n  node: ExpressionNode,\r\n  context: CodegenContext,\r\n) {\r\n  const { push } = context\r\n  if (node.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n    push(`[`)\r\n    genCompoundExpression(node, context)\r\n    push(`]`)\r\n  } else if (node.isStatic) {\r\n    // only quote keys if necessary\r\n    const text = isSimpleIdentifier(node.content)\r\n      ? node.content\r\n      : JSON.stringify(node.content)\r\n    push(text, NewlineType.None, node)\r\n  } else {\r\n    push(`[${node.content}]`, NewlineType.Unknown, node)\r\n  }\r\n}\r\n\r\nfunction genComment(node: CommentNode, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(\r\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\r\n    NewlineType.Unknown,\r\n    node,\r\n  )\r\n}\r\n\r\nfunction genVNodeCall(node: VNodeCall, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const {\r\n    tag,\r\n    props,\r\n    children,\r\n    patchFlag,\r\n    dynamicProps,\r\n    directives,\r\n    isBlock,\r\n    disableTracking,\r\n    isComponent,\r\n  } = node\r\n  if (directives) {\r\n    push(helper(WITH_DIRECTIVES) + `(`)\r\n  }\r\n  if (isBlock) {\r\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `)\r\n  }\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  const callHelper: symbol = isBlock\r\n    ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n    : getVNodeHelper(context.inSSR, isComponent)\r\n  push(helper(callHelper) + `(`, NewlineType.None, node)\r\n  genNodeList(\r\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\r\n    context,\r\n  )\r\n  push(`)`)\r\n  if (isBlock) {\r\n    push(`)`)\r\n  }\r\n  if (directives) {\r\n    push(`, `)\r\n    genNode(directives, context)\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genNullableArgs(args: any[]): CallExpression['arguments'] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i] != null) break\r\n  }\r\n  return args.slice(0, i + 1).map(arg => arg || `null`)\r\n}\r\n\r\n// JavaScript\r\nfunction genCallExpression(node: CallExpression, context: CodegenContext) {\r\n  const { push, helper, pure } = context\r\n  const callee = isString(node.callee) ? node.callee : helper(node.callee)\r\n  if (pure) {\r\n    push(PURE_ANNOTATION)\r\n  }\r\n  push(callee + `(`, NewlineType.None, node)\r\n  genNodeList(node.arguments, context)\r\n  push(`)`)\r\n}\r\n\r\nfunction genObjectExpression(node: ObjectExpression, context: CodegenContext) {\r\n  const { push, indent, deindent, newline } = context\r\n  const { properties } = node\r\n  if (!properties.length) {\r\n    push(`{}`, NewlineType.None, node)\r\n    return\r\n  }\r\n  const multilines =\r\n    properties.length > 1 ||\r\n    ((!__BROWSER__ || __DEV__) &&\r\n      properties.some(p => p.value.type !== NodeTypes.SIMPLE_EXPRESSION))\r\n  push(multilines ? `{` : `{ `)\r\n  multilines && indent()\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const { key, value } = properties[i]\r\n    // key\r\n    genExpressionAsPropertyKey(key, context)\r\n    push(`: `)\r\n    // value\r\n    genNode(value, context)\r\n    if (i < properties.length - 1) {\r\n      // will only reach this if it's multilines\r\n      push(`,`)\r\n      newline()\r\n    }\r\n  }\r\n  multilines && deindent()\r\n  push(multilines ? `}` : ` }`)\r\n}\r\n\r\nfunction genArrayExpression(node: ArrayExpression, context: CodegenContext) {\r\n  genNodeListAsArray(node.elements as CodegenNode[], context)\r\n}\r\n\r\nfunction genFunctionExpression(\r\n  node: FunctionExpression,\r\n  context: CodegenContext,\r\n) {\r\n  const { push, indent, deindent } = context\r\n  const { params, returns, body, newline, isSlot } = node\r\n  if (isSlot) {\r\n    // wrap slot functions with owner context\r\n    push(`_${helperNameMap[WITH_CTX]}(`)\r\n  }\r\n  push(`(`, NewlineType.None, node)\r\n  if (isArray(params)) {\r\n    genNodeList(params, context)\r\n  } else if (params) {\r\n    genNode(params, context)\r\n  }\r\n  push(`) => `)\r\n  if (newline || body) {\r\n    push(`{`)\r\n    indent()\r\n  }\r\n  if (returns) {\r\n    if (newline) {\r\n      push(`return `)\r\n    }\r\n    if (isArray(returns)) {\r\n      genNodeListAsArray(returns, context)\r\n    } else {\r\n      genNode(returns, context)\r\n    }\r\n  } else if (body) {\r\n    genNode(body, context)\r\n  }\r\n  if (newline || body) {\r\n    deindent()\r\n    push(`}`)\r\n  }\r\n  if (isSlot) {\r\n    if (__COMPAT__ && node.isNonScopedSlot) {\r\n      push(`, undefined, true`)\r\n    }\r\n    push(`)`)\r\n  }\r\n}\r\n\r\nfunction genConditionalExpression(\r\n  node: ConditionalExpression,\r\n  context: CodegenContext,\r\n) {\r\n  const { test, consequent, alternate, newline: needNewline } = node\r\n  const { push, indent, deindent, newline } = context\r\n  if (test.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    const needsParens = !isSimpleIdentifier(test.content)\r\n    needsParens && push(`(`)\r\n    genExpression(test, context)\r\n    needsParens && push(`)`)\r\n  } else {\r\n    push(`(`)\r\n    genNode(test, context)\r\n    push(`)`)\r\n  }\r\n  needNewline && indent()\r\n  context.indentLevel++\r\n  needNewline || push(` `)\r\n  push(`? `)\r\n  genNode(consequent, context)\r\n  context.indentLevel--\r\n  needNewline && newline()\r\n  needNewline || push(` `)\r\n  push(`: `)\r\n  const isNested = alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n  if (!isNested) {\r\n    context.indentLevel++\r\n  }\r\n  genNode(alternate, context)\r\n  if (!isNested) {\r\n    context.indentLevel--\r\n  }\r\n  needNewline && deindent(true /* without newline */)\r\n}\r\n\r\nfunction genCacheExpression(node: CacheExpression, context: CodegenContext) {\r\n  const { push, helper, indent, deindent, newline } = context\r\n  push(`_cache[${node.index}] || (`)\r\n  if (node.isVNode) {\r\n    indent()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`)\r\n    newline()\r\n  }\r\n  push(`_cache[${node.index}] = `)\r\n  genNode(node.value, context)\r\n  if (node.isVNode) {\r\n    push(`,`)\r\n    newline()\r\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`)\r\n    newline()\r\n    push(`_cache[${node.index}]`)\r\n    deindent()\r\n  }\r\n  push(`)`)\r\n}\r\n\r\nfunction genTemplateLiteral(node: TemplateLiteral, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  push('`')\r\n  const l = node.elements.length\r\n  const multilines = l > 3\r\n  for (let i = 0; i < l; i++) {\r\n    const e = node.elements[i]\r\n    if (isString(e)) {\r\n      push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'), NewlineType.Unknown)\r\n    } else {\r\n      push('${')\r\n      if (multilines) indent()\r\n      genNode(e, context)\r\n      if (multilines) deindent()\r\n      push('}')\r\n    }\r\n  }\r\n  push('`')\r\n}\r\n\r\nfunction genIfStatement(node: IfStatement, context: CodegenContext) {\r\n  const { push, indent, deindent } = context\r\n  const { test, consequent, alternate } = node\r\n  push(`if (`)\r\n  genNode(test, context)\r\n  push(`) {`)\r\n  indent()\r\n  genNode(consequent, context)\r\n  deindent()\r\n  push(`}`)\r\n  if (alternate) {\r\n    push(` else `)\r\n    if (alternate.type === NodeTypes.JS_IF_STATEMENT) {\r\n      genIfStatement(alternate, context)\r\n    } else {\r\n      push(`{`)\r\n      indent()\r\n      genNode(alternate, context)\r\n      deindent()\r\n      push(`}`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction genAssignmentExpression(\r\n  node: AssignmentExpression,\r\n  context: CodegenContext,\r\n) {\r\n  genNode(node.left, context)\r\n  context.push(` = `)\r\n  genNode(node.right, context)\r\n}\r\n\r\nfunction genSequenceExpression(\r\n  node: SequenceExpression,\r\n  context: CodegenContext,\r\n) {\r\n  context.push(`(`)\r\n  genNodeList(node.expressions, context)\r\n  context.push(`)`)\r\n}\r\n\r\nfunction genReturnStatement(\r\n  { returns }: ReturnStatement,\r\n  context: CodegenContext,\r\n) {\r\n  context.push(`return `)\r\n  if (isArray(returns)) {\r\n    genNodeListAsArray(returns, context)\r\n  } else {\r\n    genNode(returns, context)\r\n  }\r\n}\r\n","import {\r\n  type TransformContext,\r\n  createStructuralDirectiveTransform,\r\n  traverseNode,\r\n} from '../transform'\r\nimport {\r\n  type AttributeNode,\r\n  type BlockCodegenNode,\r\n  type CacheExpression,\r\n  ConstantTypes,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type IfBranchNode,\r\n  type IfConditionalExpression,\r\n  type IfNode,\r\n  type MemoExpression,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  convertToBlock,\r\n  createCallExpression,\r\n  createConditionalExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createVNodeCall,\r\n  locStub,\r\n} from '../ast'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { CREATE_COMMENT, FRAGMENT } from '../runtimeHelpers'\r\nimport { findDir, findProp, getMemoedVNodeCall, injectProp } from '../utils'\r\nimport { PatchFlagNames, PatchFlags } from '@vue/shared'\r\n\r\nexport const transformIf = createStructuralDirectiveTransform(\r\n  /^(if|else|else-if)$/,\r\n  (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n      // #1587: We need to dynamically increment the key based on the current\r\n      // node's sibling nodes, since chained v-if/else branches are\r\n      // rendered at the same depth\r\n      const siblings = context.parent!.children\r\n      let i = siblings.indexOf(ifNode)\r\n      let key = 0\r\n      while (i-- >= 0) {\r\n        const sibling = siblings[i]\r\n        if (sibling && sibling.type === NodeTypes.IF) {\r\n          key += sibling.branches.length\r\n        }\r\n      }\r\n\r\n      // Exit callback. Complete the codegenNode when all children have been\r\n      // transformed.\r\n      return () => {\r\n        if (isRoot) {\r\n          ifNode.codegenNode = createCodegenNodeForBranch(\r\n            branch,\r\n            key,\r\n            context,\r\n          ) as IfConditionalExpression\r\n        } else {\r\n          // attach this branch's codegen node to the v-if root.\r\n          const parentCondition = getParentCondition(ifNode.codegenNode!)\r\n          parentCondition.alternate = createCodegenNodeForBranch(\r\n            branch,\r\n            key + ifNode.branches.length - 1,\r\n            context,\r\n          )\r\n        }\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processIf(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (\r\n    node: IfNode,\r\n    branch: IfBranchNode,\r\n    isRoot: boolean,\r\n  ) => (() => void) | undefined,\r\n) {\r\n  if (\r\n    dir.name !== 'else' &&\r\n    (!dir.exp || !(dir.exp as SimpleExpressionNode).content.trim())\r\n  ) {\r\n    const loc = dir.exp ? dir.exp.loc : node.loc\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_IF_NO_EXPRESSION, dir.loc),\r\n    )\r\n    dir.exp = createSimpleExpression(`true`, false, loc)\r\n  }\r\n\r\n  if (!__BROWSER__ && context.prefixIdentifiers && dir.exp) {\r\n    // dir.exp can only be simple expression because vIf transform is applied\r\n    // before expression transform.\r\n    dir.exp = processExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (__DEV__ && __BROWSER__ && dir.exp) {\r\n    validateBrowserExpression(dir.exp as SimpleExpressionNode, context)\r\n  }\r\n\r\n  if (dir.name === 'if') {\r\n    const branch = createIfBranch(node, dir)\r\n    const ifNode: IfNode = {\r\n      type: NodeTypes.IF,\r\n      loc: node.loc,\r\n      branches: [branch],\r\n    }\r\n    context.replaceNode(ifNode)\r\n    if (processCodegen) {\r\n      return processCodegen(ifNode, branch, true)\r\n    }\r\n  } else {\r\n    // locate the adjacent v-if\r\n    const siblings = context.parent!.children\r\n    const comments = []\r\n    let i = siblings.indexOf(node)\r\n    while (i-- >= -1) {\r\n      const sibling = siblings[i]\r\n      if (sibling && sibling.type === NodeTypes.COMMENT) {\r\n        context.removeNode(sibling)\r\n        __DEV__ && comments.unshift(sibling)\r\n        continue\r\n      }\r\n\r\n      if (\r\n        sibling &&\r\n        sibling.type === NodeTypes.TEXT &&\r\n        !sibling.content.trim().length\r\n      ) {\r\n        context.removeNode(sibling)\r\n        continue\r\n      }\r\n\r\n      if (sibling && sibling.type === NodeTypes.IF) {\r\n        // Check if v-else was followed by v-else-if\r\n        if (\r\n          dir.name === 'else-if' &&\r\n          sibling.branches[sibling.branches.length - 1].condition === undefined\r\n        ) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc),\r\n          )\r\n        }\r\n\r\n        // move the node to the if node's branches\r\n        context.removeNode()\r\n        const branch = createIfBranch(node, dir)\r\n        if (\r\n          __DEV__ &&\r\n          comments.length &&\r\n          // #3619 ignore comments if the v-if is direct child of <transition>\r\n          !(\r\n            context.parent &&\r\n            context.parent.type === NodeTypes.ELEMENT &&\r\n            (context.parent.tag === 'transition' ||\r\n              context.parent.tag === 'Transition')\r\n          )\r\n        ) {\r\n          branch.children = [...comments, ...branch.children]\r\n        }\r\n\r\n        // check if user is forcing same key on different branches\r\n        if (__DEV__ || !__BROWSER__) {\r\n          const key = branch.userKey\r\n          if (key) {\r\n            sibling.branches.forEach(({ userKey }) => {\r\n              if (isSameKey(userKey, key)) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_IF_SAME_KEY,\r\n                    branch.userKey!.loc,\r\n                  ),\r\n                )\r\n              }\r\n            })\r\n          }\r\n        }\r\n\r\n        sibling.branches.push(branch)\r\n        const onExit = processCodegen && processCodegen(sibling, branch, false)\r\n        // since the branch was removed, it will not be traversed.\r\n        // make sure to traverse here.\r\n        traverseNode(branch, context)\r\n        // call on exit\r\n        if (onExit) onExit()\r\n        // make sure to reset currentNode after traversal to indicate this\r\n        // node has been removed.\r\n        context.currentNode = null\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, node.loc),\r\n        )\r\n      }\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction createIfBranch(node: ElementNode, dir: DirectiveNode): IfBranchNode {\r\n  const isTemplateIf = node.tagType === ElementTypes.TEMPLATE\r\n  return {\r\n    type: NodeTypes.IF_BRANCH,\r\n    loc: node.loc,\r\n    condition: dir.name === 'else' ? undefined : dir.exp,\r\n    children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\r\n    userKey: findProp(node, `key`),\r\n    isTemplateIf,\r\n  }\r\n}\r\n\r\nfunction createCodegenNodeForBranch(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext,\r\n): IfConditionalExpression | BlockCodegenNode | MemoExpression {\r\n  if (branch.condition) {\r\n    return createConditionalExpression(\r\n      branch.condition,\r\n      createChildrenCodegenNode(branch, keyIndex, context),\r\n      // make sure to pass in asBlock: true so that the comment node call\r\n      // closes the current block.\r\n      createCallExpression(context.helper(CREATE_COMMENT), [\r\n        __DEV__ ? '\"v-if\"' : '\"\"',\r\n        'true',\r\n      ]),\r\n    ) as IfConditionalExpression\r\n  } else {\r\n    return createChildrenCodegenNode(branch, keyIndex, context)\r\n  }\r\n}\r\n\r\nfunction createChildrenCodegenNode(\r\n  branch: IfBranchNode,\r\n  keyIndex: number,\r\n  context: TransformContext,\r\n): BlockCodegenNode | MemoExpression {\r\n  const { helper } = context\r\n  const keyProperty = createObjectProperty(\r\n    `key`,\r\n    createSimpleExpression(\r\n      `${keyIndex}`,\r\n      false,\r\n      locStub,\r\n      ConstantTypes.CAN_HOIST,\r\n    ),\r\n  )\r\n  const { children } = branch\r\n  const firstChild = children[0]\r\n  const needFragmentWrapper =\r\n    children.length !== 1 || firstChild.type !== NodeTypes.ELEMENT\r\n  if (needFragmentWrapper) {\r\n    if (children.length === 1 && firstChild.type === NodeTypes.FOR) {\r\n      // optimize away nested fragments when child is a ForNode\r\n      const vnodeCall = firstChild.codegenNode!\r\n      injectProp(vnodeCall, keyProperty, context)\r\n      return vnodeCall\r\n    } else {\r\n      let patchFlag = PatchFlags.STABLE_FRAGMENT\r\n      let patchFlagText = PatchFlagNames[PatchFlags.STABLE_FRAGMENT]\r\n      // check if the fragment actually contains a single valid child with\r\n      // the rest being comments\r\n      if (\r\n        __DEV__ &&\r\n        !branch.isTemplateIf &&\r\n        children.filter(c => c.type !== NodeTypes.COMMENT).length === 1\r\n      ) {\r\n        patchFlag |= PatchFlags.DEV_ROOT_FRAGMENT\r\n        patchFlagText += `, ${PatchFlagNames[PatchFlags.DEV_ROOT_FRAGMENT]}`\r\n      }\r\n\r\n      return createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        createObjectExpression([keyProperty]),\r\n        children,\r\n        patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true,\r\n        false,\r\n        false /* isComponent */,\r\n        branch.loc,\r\n      )\r\n    }\r\n  } else {\r\n    const ret = (firstChild as ElementNode).codegenNode as\r\n      | BlockCodegenNode\r\n      | MemoExpression\r\n    const vnodeCall = getMemoedVNodeCall(ret)\r\n    // Change createVNode to createBlock.\r\n    if (vnodeCall.type === NodeTypes.VNODE_CALL) {\r\n      convertToBlock(vnodeCall, context)\r\n    }\r\n    // inject branch key\r\n    injectProp(vnodeCall, keyProperty, context)\r\n    return ret\r\n  }\r\n}\r\n\r\nfunction isSameKey(\r\n  a: AttributeNode | DirectiveNode | undefined,\r\n  b: AttributeNode | DirectiveNode,\r\n): boolean {\r\n  if (!a || a.type !== b.type) {\r\n    return false\r\n  }\r\n  if (a.type === NodeTypes.ATTRIBUTE) {\r\n    if (a.value!.content !== (b as AttributeNode).value!.content) {\r\n      return false\r\n    }\r\n  } else {\r\n    // directive\r\n    const exp = a.exp!\r\n    const branchExp = (b as DirectiveNode).exp!\r\n    if (exp.type !== branchExp.type) {\r\n      return false\r\n    }\r\n    if (\r\n      exp.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n      exp.isStatic !== (branchExp as SimpleExpressionNode).isStatic ||\r\n      exp.content !== (branchExp as SimpleExpressionNode).content\r\n    ) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParentCondition(\r\n  node: IfConditionalExpression | CacheExpression,\r\n): IfConditionalExpression {\r\n  while (true) {\r\n    if (node.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n      if (node.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION) {\r\n        node = node.alternate\r\n      } else {\r\n        return node\r\n      }\r\n    } else if (node.type === NodeTypes.JS_CACHE_EXPRESSION) {\r\n      node = node.value as IfConditionalExpression\r\n    }\r\n  }\r\n}\r\n","import {\r\n  type TransformContext,\r\n  createStructuralDirectiveTransform,\r\n} from '../transform'\r\nimport {\r\n  type BlockCodegenNode,\r\n  ConstantTypes,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  type ExpressionNode,\r\n  type ForCodegenNode,\r\n  type ForIteratorExpression,\r\n  type ForNode,\r\n  type ForParseResult,\r\n  type ForRenderListExpression,\r\n  NodeTypes,\r\n  type PlainElementNode,\r\n  type RenderSlotCall,\r\n  type SimpleExpressionNode,\r\n  type SlotOutletNode,\r\n  type VNodeCall,\r\n  createBlockStatement,\r\n  createCallExpression,\r\n  createCompoundExpression,\r\n  createFunctionExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createVNodeCall,\r\n  getVNodeBlockHelper,\r\n  getVNodeHelper,\r\n} from '../ast'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport {\r\n  findDir,\r\n  findProp,\r\n  injectProp,\r\n  isSlotOutlet,\r\n  isTemplateNode,\r\n} from '../utils'\r\nimport {\r\n  FRAGMENT,\r\n  IS_MEMO_SAME,\r\n  OPEN_BLOCK,\r\n  RENDER_LIST,\r\n} from '../runtimeHelpers'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { PatchFlagNames, PatchFlags } from '@vue/shared'\r\n\r\nexport const transformFor = createStructuralDirectiveTransform(\r\n  'for',\r\n  (node, dir, context) => {\r\n    const { helper, removeHelper } = context\r\n    return processFor(node, dir, context, forNode => {\r\n      // create the loop render function expression now, and add the\r\n      // iterator on exit after all children have been traversed\r\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n        forNode.source,\r\n      ]) as ForRenderListExpression\r\n      const isTemplate = isTemplateNode(node)\r\n      const memo = findDir(node, 'memo')\r\n      const keyProp = findProp(node, `key`)\r\n      const keyExp =\r\n        keyProp &&\r\n        (keyProp.type === NodeTypes.ATTRIBUTE\r\n          ? createSimpleExpression(keyProp.value!.content, true)\r\n          : keyProp.exp!)\r\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp!) : null\r\n\r\n      if (!__BROWSER__ && isTemplate) {\r\n        // #2085 / #5288 process :key and v-memo expressions need to be\r\n        // processed on `<template v-for>`. In this case the node is discarded\r\n        // and never traversed so its binding expressions won't be processed\r\n        // by the normal transforms.\r\n        if (memo) {\r\n          memo.exp = processExpression(\r\n            memo.exp! as SimpleExpressionNode,\r\n            context,\r\n          )\r\n        }\r\n        if (keyProperty && keyProp!.type !== NodeTypes.ATTRIBUTE) {\r\n          keyProperty.value = processExpression(\r\n            keyProperty.value as SimpleExpressionNode,\r\n            context,\r\n          )\r\n        }\r\n      }\r\n\r\n      const isStableFragment =\r\n        forNode.source.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        forNode.source.constType > ConstantTypes.NOT_CONSTANT\r\n      const fragmentFlag = isStableFragment\r\n        ? PatchFlags.STABLE_FRAGMENT\r\n        : keyProp\r\n          ? PatchFlags.KEYED_FRAGMENT\r\n          : PatchFlags.UNKEYED_FRAGMENT\r\n\r\n      forNode.codegenNode = createVNodeCall(\r\n        context,\r\n        helper(FRAGMENT),\r\n        undefined,\r\n        renderExp,\r\n        fragmentFlag +\r\n          (__DEV__ ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``),\r\n        undefined,\r\n        undefined,\r\n        true /* isBlock */,\r\n        !isStableFragment /* disableTracking */,\r\n        false /* isComponent */,\r\n        node.loc,\r\n      ) as ForCodegenNode\r\n\r\n      return () => {\r\n        // finish the codegen now that all children have been traversed\r\n        let childBlock: BlockCodegenNode\r\n        const { children } = forNode\r\n\r\n        // check <template v-for> key placement\r\n        if ((__DEV__ || !__BROWSER__) && isTemplate) {\r\n          node.children.some(c => {\r\n            if (c.type === NodeTypes.ELEMENT) {\r\n              const key = findProp(c, 'key')\r\n              if (key) {\r\n                context.onError(\r\n                  createCompilerError(\r\n                    ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT,\r\n                    key.loc,\r\n                  ),\r\n                )\r\n                return true\r\n              }\r\n            }\r\n          })\r\n        }\r\n\r\n        const needFragmentWrapper =\r\n          children.length !== 1 || children[0].type !== NodeTypes.ELEMENT\r\n        const slotOutlet = isSlotOutlet(node)\r\n          ? node\r\n          : isTemplate &&\r\n              node.children.length === 1 &&\r\n              isSlotOutlet(node.children[0])\r\n            ? (node.children[0] as SlotOutletNode) // api-extractor somehow fails to infer this\r\n            : null\r\n\r\n        if (slotOutlet) {\r\n          // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n          childBlock = slotOutlet.codegenNode as RenderSlotCall\r\n          if (isTemplate && keyProperty) {\r\n            // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n            // we need to inject the key to the renderSlot() call.\r\n            // the props for renderSlot is passed as the 3rd argument.\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n        } else if (needFragmentWrapper) {\r\n          // <template v-for=\"...\"> with text or multi-elements\r\n          // should generate a fragment block for each loop\r\n          childBlock = createVNodeCall(\r\n            context,\r\n            helper(FRAGMENT),\r\n            keyProperty ? createObjectExpression([keyProperty]) : undefined,\r\n            node.children,\r\n            PatchFlags.STABLE_FRAGMENT +\r\n              (__DEV__\r\n                ? ` /* ${PatchFlagNames[PatchFlags.STABLE_FRAGMENT]} */`\r\n                : ``),\r\n            undefined,\r\n            undefined,\r\n            true,\r\n            undefined,\r\n            false /* isComponent */,\r\n          )\r\n        } else {\r\n          // Normal element v-for. Directly use the child's codegenNode\r\n          // but mark it as a block.\r\n          childBlock = (children[0] as PlainElementNode)\r\n            .codegenNode as VNodeCall\r\n          if (isTemplate && keyProperty) {\r\n            injectProp(childBlock, keyProperty, context)\r\n          }\r\n          if (childBlock.isBlock !== !isStableFragment) {\r\n            if (childBlock.isBlock) {\r\n              // switch from block to vnode\r\n              removeHelper(OPEN_BLOCK)\r\n              removeHelper(\r\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent),\r\n              )\r\n            } else {\r\n              // switch from vnode to block\r\n              removeHelper(\r\n                getVNodeHelper(context.inSSR, childBlock.isComponent),\r\n              )\r\n            }\r\n          }\r\n          childBlock.isBlock = !isStableFragment\r\n          if (childBlock.isBlock) {\r\n            helper(OPEN_BLOCK)\r\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent))\r\n          } else {\r\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent))\r\n          }\r\n        }\r\n\r\n        if (memo) {\r\n          const loop = createFunctionExpression(\r\n            createForLoopParams(forNode.parseResult, [\r\n              createSimpleExpression(`_cached`),\r\n            ]),\r\n          )\r\n          loop.body = createBlockStatement([\r\n            createCompoundExpression([`const _memo = (`, memo.exp!, `)`]),\r\n            createCompoundExpression([\r\n              `if (_cached`,\r\n              ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n              ` && ${context.helperString(\r\n                IS_MEMO_SAME,\r\n              )}(_cached, _memo)) return _cached`,\r\n            ]),\r\n            createCompoundExpression([`const _item = `, childBlock as any]),\r\n            createSimpleExpression(`_item.memo = _memo`),\r\n            createSimpleExpression(`return _item`),\r\n          ])\r\n          renderExp.arguments.push(\r\n            loop as ForIteratorExpression,\r\n            createSimpleExpression(`_cache`),\r\n            createSimpleExpression(String(context.cached++)),\r\n          )\r\n        } else {\r\n          renderExp.arguments.push(\r\n            createFunctionExpression(\r\n              createForLoopParams(forNode.parseResult),\r\n              childBlock,\r\n              true /* force newline */,\r\n            ) as ForIteratorExpression,\r\n          )\r\n        }\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processFor(\r\n  node: ElementNode,\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n  processCodegen?: (forNode: ForNode) => (() => void) | undefined,\r\n) {\r\n  if (!dir.exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_NO_EXPRESSION, dir.loc),\r\n    )\r\n    return\r\n  }\r\n\r\n  const parseResult = dir.forParseResult\r\n\r\n  if (!parseResult) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION, dir.loc),\r\n    )\r\n    return\r\n  }\r\n\r\n  finalizeForParseResult(parseResult, context)\r\n\r\n  const { addIdentifiers, removeIdentifiers, scopes } = context\r\n  const { source, value, key, index } = parseResult\r\n\r\n  const forNode: ForNode = {\r\n    type: NodeTypes.FOR,\r\n    loc: dir.loc,\r\n    source,\r\n    valueAlias: value,\r\n    keyAlias: key,\r\n    objectIndexAlias: index,\r\n    parseResult,\r\n    children: isTemplateNode(node) ? node.children : [node],\r\n  }\r\n\r\n  context.replaceNode(forNode)\r\n\r\n  // bookkeeping\r\n  scopes.vFor++\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    // scope management\r\n    // inject identifiers to context\r\n    value && addIdentifiers(value)\r\n    key && addIdentifiers(key)\r\n    index && addIdentifiers(index)\r\n  }\r\n\r\n  const onExit = processCodegen && processCodegen(forNode)\r\n\r\n  return () => {\r\n    scopes.vFor--\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      value && removeIdentifiers(value)\r\n      key && removeIdentifiers(key)\r\n      index && removeIdentifiers(index)\r\n    }\r\n    if (onExit) onExit()\r\n  }\r\n}\r\n\r\nexport function finalizeForParseResult(\r\n  result: ForParseResult,\r\n  context: TransformContext,\r\n) {\r\n  if (result.finalized) return\r\n\r\n  if (!__BROWSER__ && context.prefixIdentifiers) {\r\n    result.source = processExpression(\r\n      result.source as SimpleExpressionNode,\r\n      context,\r\n    )\r\n    if (result.key) {\r\n      result.key = processExpression(\r\n        result.key as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n    if (result.index) {\r\n      result.index = processExpression(\r\n        result.index as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n    if (result.value) {\r\n      result.value = processExpression(\r\n        result.value as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n  }\r\n  if (__DEV__ && __BROWSER__) {\r\n    validateBrowserExpression(result.source as SimpleExpressionNode, context)\r\n    if (result.key) {\r\n      validateBrowserExpression(\r\n        result.key as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n    if (result.index) {\r\n      validateBrowserExpression(\r\n        result.index as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n    if (result.value) {\r\n      validateBrowserExpression(\r\n        result.value as SimpleExpressionNode,\r\n        context,\r\n        true,\r\n      )\r\n    }\r\n  }\r\n  result.finalized = true\r\n}\r\n\r\nexport function createForLoopParams(\r\n  { value, key, index }: ForParseResult,\r\n  memoArgs: ExpressionNode[] = [],\r\n): ExpressionNode[] {\r\n  return createParamsList([value, key, index, ...memoArgs])\r\n}\r\n\r\nfunction createParamsList(\r\n  args: (ExpressionNode | undefined)[],\r\n): ExpressionNode[] {\r\n  let i = args.length\r\n  while (i--) {\r\n    if (args[i]) break\r\n  }\r\n  return args\r\n    .slice(0, i + 1)\r\n    .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false))\r\n}\r\n","import {\r\n  type CallExpression,\r\n  type ConditionalExpression,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  type FunctionExpression,\r\n  NodeTypes,\r\n  type ObjectExpression,\r\n  type Property,\r\n  type SlotsExpression,\r\n  type SourceLocation,\r\n  type TemplateChildNode,\r\n  createArrayExpression,\r\n  createCallExpression,\r\n  createConditionalExpression,\r\n  createFunctionExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n} from '../ast'\r\nimport type { NodeTransform, TransformContext } from '../transform'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport {\r\n  assert,\r\n  findDir,\r\n  hasScopeRef,\r\n  isStaticExp,\r\n  isTemplateNode,\r\n  isVSlot,\r\n} from '../utils'\r\nimport { CREATE_SLOTS, RENDER_LIST, WITH_CTX } from '../runtimeHelpers'\r\nimport { createForLoopParams, finalizeForParseResult } from './vFor'\r\nimport { SlotFlags, slotFlagsText } from '@vue/shared'\r\n\r\nconst defaultFallback = createSimpleExpression(`undefined`, false)\r\n\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nexport const trackSlotScopes: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    (node.tagType === ElementTypes.COMPONENT ||\r\n      node.tagType === ElementTypes.TEMPLATE)\r\n  ) {\r\n    // We are only checking non-empty v-slot here\r\n    // since we only care about slots that introduce scope variables.\r\n    const vSlot = findDir(node, 'slot')\r\n    if (vSlot) {\r\n      const slotProps = vSlot.exp\r\n      if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        slotProps && context.addIdentifiers(slotProps)\r\n      }\r\n      context.scopes.vSlot++\r\n      return () => {\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n          slotProps && context.removeIdentifiers(slotProps)\r\n        }\r\n        context.scopes.vSlot--\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nexport const trackVForSlotScopes: NodeTransform = (node, context) => {\r\n  let vFor\r\n  if (\r\n    isTemplateNode(node) &&\r\n    node.props.some(isVSlot) &&\r\n    (vFor = findDir(node, 'for'))\r\n  ) {\r\n    const result = vFor.forParseResult\r\n    if (result) {\r\n      finalizeForParseResult(result, context)\r\n      const { value, key, index } = result\r\n      const { addIdentifiers, removeIdentifiers } = context\r\n      value && addIdentifiers(value)\r\n      key && addIdentifiers(key)\r\n      index && addIdentifiers(index)\r\n\r\n      return () => {\r\n        value && removeIdentifiers(value)\r\n        key && removeIdentifiers(key)\r\n        index && removeIdentifiers(index)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type SlotFnBuilder = (\r\n  slotProps: ExpressionNode | undefined,\r\n  vFor: DirectiveNode | undefined,\r\n  slotChildren: TemplateChildNode[],\r\n  loc: SourceLocation,\r\n) => FunctionExpression\r\n\r\nconst buildClientSlotFn: SlotFnBuilder = (props, _vForExp, children, loc) =>\r\n  createFunctionExpression(\r\n    props,\r\n    children,\r\n    false /* newline */,\r\n    true /* isSlot */,\r\n    children.length ? children[0].loc : loc,\r\n  )\r\n\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nexport function buildSlots(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  buildSlotFn: SlotFnBuilder = buildClientSlotFn,\r\n): {\r\n  slots: SlotsExpression\r\n  hasDynamicSlots: boolean\r\n} {\r\n  context.helper(WITH_CTX)\r\n\r\n  const { children, loc } = node\r\n  const slotsProperties: Property[] = []\r\n  const dynamicSlots: (ConditionalExpression | CallExpression)[] = []\r\n\r\n  // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n  // since it likely uses a scope variable.\r\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0\r\n  // with `prefixIdentifiers: true`, this can be further optimized to make\r\n  // it dynamic only when the slot actually uses the scope variables.\r\n  if (!__BROWSER__ && !context.ssr && context.prefixIdentifiers) {\r\n    hasDynamicSlots = hasScopeRef(node, context.identifiers)\r\n  }\r\n\r\n  // 1. Check for slot with slotProps on component itself.\r\n  //    <Comp v-slot=\"{ prop }\"/>\r\n  const onComponentSlot = findDir(node, 'slot', true)\r\n  if (onComponentSlot) {\r\n    const { arg, exp } = onComponentSlot\r\n    if (arg && !isStaticExp(arg)) {\r\n      hasDynamicSlots = true\r\n    }\r\n    slotsProperties.push(\r\n      createObjectProperty(\r\n        arg || createSimpleExpression('default', true),\r\n        buildSlotFn(exp, undefined, children, loc),\r\n      ),\r\n    )\r\n  }\r\n\r\n  // 2. Iterate through children and check for template slots\r\n  //    <template v-slot:foo=\"{ prop }\">\r\n  let hasTemplateSlots = false\r\n  let hasNamedDefaultSlot = false\r\n  const implicitDefaultChildren: TemplateChildNode[] = []\r\n  const seenSlotNames = new Set<string>()\r\n  let conditionalBranchIndex = 0\r\n\r\n  for (let i = 0; i < children.length; i++) {\r\n    const slotElement = children[i]\r\n    let slotDir\r\n\r\n    if (\r\n      !isTemplateNode(slotElement) ||\r\n      !(slotDir = findDir(slotElement, 'slot', true))\r\n    ) {\r\n      // not a <template v-slot>, skip.\r\n      if (slotElement.type !== NodeTypes.COMMENT) {\r\n        implicitDefaultChildren.push(slotElement)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (onComponentSlot) {\r\n      // already has on-component slot - this is incorrect usage.\r\n      context.onError(\r\n        createCompilerError(ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE, slotDir.loc),\r\n      )\r\n      break\r\n    }\r\n\r\n    hasTemplateSlots = true\r\n    const { children: slotChildren, loc: slotLoc } = slotElement\r\n    const {\r\n      arg: slotName = createSimpleExpression(`default`, true),\r\n      exp: slotProps,\r\n      loc: dirLoc,\r\n    } = slotDir\r\n\r\n    // check if name is dynamic.\r\n    let staticSlotName: string | undefined\r\n    if (isStaticExp(slotName)) {\r\n      staticSlotName = slotName ? slotName.content : `default`\r\n    } else {\r\n      hasDynamicSlots = true\r\n    }\r\n\r\n    const vFor = findDir(slotElement, 'for')\r\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc)\r\n\r\n    // check if this slot is conditional (v-if/v-for)\r\n    let vIf: DirectiveNode | undefined\r\n    let vElse: DirectiveNode | undefined\r\n    if ((vIf = findDir(slotElement, 'if'))) {\r\n      hasDynamicSlots = true\r\n      dynamicSlots.push(\r\n        createConditionalExpression(\r\n          vIf.exp!,\r\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\r\n          defaultFallback,\r\n        ),\r\n      )\r\n    } else if (\r\n      (vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))\r\n    ) {\r\n      // find adjacent v-if\r\n      let j = i\r\n      let prev\r\n      while (j--) {\r\n        prev = children[j]\r\n        if (prev.type !== NodeTypes.COMMENT) {\r\n          break\r\n        }\r\n      }\r\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n        // remove node\r\n        children.splice(i, 1)\r\n        i--\r\n        __TEST__ && assert(dynamicSlots.length > 0)\r\n        // attach this slot to previous conditional\r\n        let conditional = dynamicSlots[\r\n          dynamicSlots.length - 1\r\n        ] as ConditionalExpression\r\n        while (\r\n          conditional.alternate.type === NodeTypes.JS_CONDITIONAL_EXPRESSION\r\n        ) {\r\n          conditional = conditional.alternate\r\n        }\r\n        conditional.alternate = vElse.exp\r\n          ? createConditionalExpression(\r\n              vElse.exp,\r\n              buildDynamicSlot(\r\n                slotName,\r\n                slotFunction,\r\n                conditionalBranchIndex++,\r\n              ),\r\n              defaultFallback,\r\n            )\r\n          : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++)\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(ErrorCodes.X_V_ELSE_NO_ADJACENT_IF, vElse.loc),\r\n        )\r\n      }\r\n    } else if (vFor) {\r\n      hasDynamicSlots = true\r\n      const parseResult = vFor.forParseResult\r\n      if (parseResult) {\r\n        finalizeForParseResult(parseResult, context)\r\n        // Render the dynamic slots as an array and add it to the createSlot()\r\n        // args. The runtime knows how to handle it appropriately.\r\n        dynamicSlots.push(\r\n          createCallExpression(context.helper(RENDER_LIST), [\r\n            parseResult.source,\r\n            createFunctionExpression(\r\n              createForLoopParams(parseResult),\r\n              buildDynamicSlot(slotName, slotFunction),\r\n              true /* force newline */,\r\n            ),\r\n          ]),\r\n        )\r\n      } else {\r\n        context.onError(\r\n          createCompilerError(\r\n            ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION,\r\n            vFor.loc,\r\n          ),\r\n        )\r\n      }\r\n    } else {\r\n      // check duplicate static names\r\n      if (staticSlotName) {\r\n        if (seenSlotNames.has(staticSlotName)) {\r\n          context.onError(\r\n            createCompilerError(\r\n              ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES,\r\n              dirLoc,\r\n            ),\r\n          )\r\n          continue\r\n        }\r\n        seenSlotNames.add(staticSlotName)\r\n        if (staticSlotName === 'default') {\r\n          hasNamedDefaultSlot = true\r\n        }\r\n      }\r\n      slotsProperties.push(createObjectProperty(slotName, slotFunction))\r\n    }\r\n  }\r\n\r\n  if (!onComponentSlot) {\r\n    const buildDefaultSlotProperty = (\r\n      props: ExpressionNode | undefined,\r\n      children: TemplateChildNode[],\r\n    ) => {\r\n      const fn = buildSlotFn(props, undefined, children, loc)\r\n      if (__COMPAT__ && context.compatConfig) {\r\n        fn.isNonScopedSlot = true\r\n      }\r\n      return createObjectProperty(`default`, fn)\r\n    }\r\n\r\n    if (!hasTemplateSlots) {\r\n      // implicit default slot (on component)\r\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children))\r\n    } else if (\r\n      implicitDefaultChildren.length &&\r\n      // #3766\r\n      // with whitespace: 'preserve', whitespaces between slots will end up in\r\n      // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n      implicitDefaultChildren.some(node => isNonWhitespaceContent(node))\r\n    ) {\r\n      // implicit default slot (mixed with named slots)\r\n      if (hasNamedDefaultSlot) {\r\n        context.onError(\r\n          createCompilerError(\r\n            ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN,\r\n            implicitDefaultChildren[0].loc,\r\n          ),\r\n        )\r\n      } else {\r\n        slotsProperties.push(\r\n          buildDefaultSlotProperty(undefined, implicitDefaultChildren),\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const slotFlag = hasDynamicSlots\r\n    ? SlotFlags.DYNAMIC\r\n    : hasForwardedSlots(node.children)\r\n      ? SlotFlags.FORWARDED\r\n      : SlotFlags.STABLE\r\n\r\n  let slots = createObjectExpression(\r\n    slotsProperties.concat(\r\n      createObjectProperty(\r\n        `_`,\r\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n        // 1 = compiled and static = can skip normalization AND diff as optimized\r\n        createSimpleExpression(\r\n          slotFlag + (__DEV__ ? ` /* ${slotFlagsText[slotFlag]} */` : ``),\r\n          false,\r\n        ),\r\n      ),\r\n    ),\r\n    loc,\r\n  ) as SlotsExpression\r\n  if (dynamicSlots.length) {\r\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n      slots,\r\n      createArrayExpression(dynamicSlots),\r\n    ]) as SlotsExpression\r\n  }\r\n\r\n  return {\r\n    slots,\r\n    hasDynamicSlots,\r\n  }\r\n}\r\n\r\nfunction buildDynamicSlot(\r\n  name: ExpressionNode,\r\n  fn: FunctionExpression,\r\n  index?: number,\r\n): ObjectExpression {\r\n  const props = [\r\n    createObjectProperty(`name`, name),\r\n    createObjectProperty(`fn`, fn),\r\n  ]\r\n  if (index != null) {\r\n    props.push(\r\n      createObjectProperty(`key`, createSimpleExpression(String(index), true)),\r\n    )\r\n  }\r\n  return createObjectExpression(props)\r\n}\r\n\r\nfunction hasForwardedSlots(children: TemplateChildNode[]): boolean {\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i]\r\n    switch (child.type) {\r\n      case NodeTypes.ELEMENT:\r\n        if (\r\n          child.tagType === ElementTypes.SLOT ||\r\n          hasForwardedSlots(child.children)\r\n        ) {\r\n          return true\r\n        }\r\n        break\r\n      case NodeTypes.IF:\r\n        if (hasForwardedSlots(child.branches)) return true\r\n        break\r\n      case NodeTypes.IF_BRANCH:\r\n      case NodeTypes.FOR:\r\n        if (hasForwardedSlots(child.children)) return true\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction isNonWhitespaceContent(node: TemplateChildNode): boolean {\r\n  if (node.type !== NodeTypes.TEXT && node.type !== NodeTypes.TEXT_CALL)\r\n    return true\r\n  return node.type === NodeTypes.TEXT\r\n    ? !!node.content.trim()\r\n    : isNonWhitespaceContent(node.content)\r\n}\r\n","import type { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  type ArrayExpression,\r\n  type CallExpression,\r\n  type ComponentNode,\r\n  ConstantTypes,\r\n  type DirectiveArguments,\r\n  type DirectiveNode,\r\n  type ElementNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  type JSChildNode,\r\n  NodeTypes,\r\n  type ObjectExpression,\r\n  type Property,\r\n  type TemplateTextChildNode,\r\n  type VNodeCall,\r\n  createArrayExpression,\r\n  createCallExpression,\r\n  createObjectExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  createVNodeCall,\r\n} from '../ast'\r\nimport {\r\n  PatchFlagNames,\r\n  PatchFlags,\r\n  camelize,\r\n  capitalize,\r\n  isBuiltInDirective,\r\n  isObject,\r\n  isOn,\r\n  isReservedProp,\r\n  isSymbol,\r\n} from '@vue/shared'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport {\r\n  GUARD_REACTIVE_PROPS,\r\n  KEEP_ALIVE,\r\n  MERGE_PROPS,\r\n  NORMALIZE_CLASS,\r\n  NORMALIZE_PROPS,\r\n  NORMALIZE_STYLE,\r\n  RESOLVE_COMPONENT,\r\n  RESOLVE_DIRECTIVE,\r\n  RESOLVE_DYNAMIC_COMPONENT,\r\n  SUSPENSE,\r\n  TELEPORT,\r\n  TO_HANDLERS,\r\n  UNREF,\r\n} from '../runtimeHelpers'\r\nimport {\r\n  findProp,\r\n  isCoreComponent,\r\n  isStaticArgOf,\r\n  isStaticExp,\r\n  toValidAssetId,\r\n} from '../utils'\r\nimport { buildSlots } from './vSlot'\r\nimport { getConstantType } from './hoistStatic'\r\nimport { BindingTypes } from '../options'\r\nimport {\r\n  CompilerDeprecationTypes,\r\n  checkCompatEnabled,\r\n  isCompatEnabled,\r\n} from '../compat/compatConfig'\r\n\r\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap<DirectiveNode, symbol>()\r\n\r\n// generate a JavaScript AST for this element's codegen\r\nexport const transformElement: NodeTransform = (node, context) => {\r\n  // perform the work on exit, after all child expressions have been\r\n  // processed and merged.\r\n  return function postTransformElement() {\r\n    node = context.currentNode!\r\n\r\n    if (\r\n      !(\r\n        node.type === NodeTypes.ELEMENT &&\r\n        (node.tagType === ElementTypes.ELEMENT ||\r\n          node.tagType === ElementTypes.COMPONENT)\r\n      )\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const { tag, props } = node\r\n    const isComponent = node.tagType === ElementTypes.COMPONENT\r\n\r\n    // The goal of the transform is to create a codegenNode implementing the\r\n    // VNodeCall interface.\r\n    let vnodeTag = isComponent\r\n      ? resolveComponentType(node as ComponentNode, context)\r\n      : `\"${tag}\"`\r\n\r\n    const isDynamicComponent =\r\n      isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT\r\n\r\n    let vnodeProps: VNodeCall['props']\r\n    let vnodeChildren: VNodeCall['children']\r\n    let vnodePatchFlag: VNodeCall['patchFlag']\r\n    let patchFlag: number = 0\r\n    let vnodeDynamicProps: VNodeCall['dynamicProps']\r\n    let dynamicPropNames: string[] | undefined\r\n    let vnodeDirectives: VNodeCall['directives']\r\n\r\n    let shouldUseBlock =\r\n      // dynamic component may resolve to plain elements\r\n      isDynamicComponent ||\r\n      vnodeTag === TELEPORT ||\r\n      vnodeTag === SUSPENSE ||\r\n      (!isComponent &&\r\n        // <svg> and <foreignObject> must be forced into blocks so that block\r\n        // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n        // This is technically web-specific, but splitting the logic out of core\r\n        // leads to too much unnecessary complexity.\r\n        (tag === 'svg' || tag === 'foreignObject'))\r\n\r\n    // props\r\n    if (props.length > 0) {\r\n      const propsBuildResult = buildProps(\r\n        node,\r\n        context,\r\n        undefined,\r\n        isComponent,\r\n        isDynamicComponent,\r\n      )\r\n      vnodeProps = propsBuildResult.props\r\n      patchFlag = propsBuildResult.patchFlag\r\n      dynamicPropNames = propsBuildResult.dynamicPropNames\r\n      const directives = propsBuildResult.directives\r\n      vnodeDirectives =\r\n        directives && directives.length\r\n          ? (createArrayExpression(\r\n              directives.map(dir => buildDirectiveArgs(dir, context)),\r\n            ) as DirectiveArguments)\r\n          : undefined\r\n\r\n      if (propsBuildResult.shouldUseBlock) {\r\n        shouldUseBlock = true\r\n      }\r\n    }\r\n\r\n    // children\r\n    if (node.children.length > 0) {\r\n      if (vnodeTag === KEEP_ALIVE) {\r\n        // Although a built-in component, we compile KeepAlive with raw children\r\n        // instead of slot functions so that it can be used inside Transition\r\n        // or other Transition-wrapping HOCs.\r\n        // To ensure correct updates with block optimizations, we need to:\r\n        // 1. Force keep-alive into a block. This avoids its children being\r\n        //    collected by a parent block.\r\n        shouldUseBlock = true\r\n        // 2. Force keep-alive to always be updated, since it uses raw children.\r\n        patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        if (__DEV__ && node.children.length > 1) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN, {\r\n              start: node.children[0].loc.start,\r\n              end: node.children[node.children.length - 1].loc.end,\r\n              source: '',\r\n            }),\r\n          )\r\n        }\r\n      }\r\n\r\n      const shouldBuildAsSlots =\r\n        isComponent &&\r\n        // Teleport is not a real component and has dedicated runtime handling\r\n        vnodeTag !== TELEPORT &&\r\n        // explained above.\r\n        vnodeTag !== KEEP_ALIVE\r\n\r\n      if (shouldBuildAsSlots) {\r\n        const { slots, hasDynamicSlots } = buildSlots(node, context)\r\n        vnodeChildren = slots\r\n        if (hasDynamicSlots) {\r\n          patchFlag |= PatchFlags.DYNAMIC_SLOTS\r\n        }\r\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n        const child = node.children[0]\r\n        const type = child.type\r\n        // check for dynamic text children\r\n        const hasDynamicTextChild =\r\n          type === NodeTypes.INTERPOLATION ||\r\n          type === NodeTypes.COMPOUND_EXPRESSION\r\n        if (\r\n          hasDynamicTextChild &&\r\n          getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n        ) {\r\n          patchFlag |= PatchFlags.TEXT\r\n        }\r\n        // pass directly if the only child is a text node\r\n        // (plain / interpolation / expression)\r\n        if (hasDynamicTextChild || type === NodeTypes.TEXT) {\r\n          vnodeChildren = child as TemplateTextChildNode\r\n        } else {\r\n          vnodeChildren = node.children\r\n        }\r\n      } else {\r\n        vnodeChildren = node.children\r\n      }\r\n    }\r\n\r\n    // patchFlag & dynamicPropNames\r\n    if (patchFlag !== 0) {\r\n      if (__DEV__) {\r\n        if (patchFlag < 0) {\r\n          // special flags (negative and mutually exclusive)\r\n          vnodePatchFlag =\r\n            patchFlag + ` /* ${PatchFlagNames[patchFlag as PatchFlags]} */`\r\n        } else {\r\n          // bitwise flags\r\n          const flagNames = Object.keys(PatchFlagNames)\r\n            .map(Number)\r\n            .filter(n => n > 0 && patchFlag & n)\r\n            .map(n => PatchFlagNames[n as PatchFlags])\r\n            .join(`, `)\r\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`\r\n        }\r\n      } else {\r\n        vnodePatchFlag = String(patchFlag)\r\n      }\r\n      if (dynamicPropNames && dynamicPropNames.length) {\r\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames)\r\n      }\r\n    }\r\n\r\n    node.codegenNode = createVNodeCall(\r\n      context,\r\n      vnodeTag,\r\n      vnodeProps,\r\n      vnodeChildren,\r\n      vnodePatchFlag,\r\n      vnodeDynamicProps,\r\n      vnodeDirectives,\r\n      !!shouldUseBlock,\r\n      false /* disableTracking */,\r\n      isComponent,\r\n      node.loc,\r\n    )\r\n  }\r\n}\r\n\r\nexport function resolveComponentType(\r\n  node: ComponentNode,\r\n  context: TransformContext,\r\n  ssr = false,\r\n) {\r\n  let { tag } = node\r\n\r\n  // 1. dynamic component\r\n  const isExplicitDynamic = isComponentTag(tag)\r\n  const isProp = findProp(node, 'is')\r\n  if (isProp) {\r\n    if (\r\n      isExplicitDynamic ||\r\n      (__COMPAT__ &&\r\n        isCompatEnabled(\r\n          CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n          context,\r\n        ))\r\n    ) {\r\n      const exp =\r\n        isProp.type === NodeTypes.ATTRIBUTE\r\n          ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n          : isProp.exp\r\n      if (exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n          exp,\r\n        ])\r\n      }\r\n    } else if (\r\n      isProp.type === NodeTypes.ATTRIBUTE &&\r\n      isProp.value!.content.startsWith('vue:')\r\n    ) {\r\n      // <button is=\"vue:xxx\">\r\n      // if not <component>, only is value that starts with \"vue:\" will be\r\n      // treated as component by the parse phase and reach here, unless it's\r\n      // compat mode where all is values are considered components\r\n      tag = isProp.value!.content.slice(4)\r\n    }\r\n  }\r\n\r\n  // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag)\r\n  if (builtIn) {\r\n    // built-ins are simply fallthroughs / have special handling during ssr\r\n    // so we don't need to import their runtime equivalents\r\n    if (!ssr) context.helper(builtIn)\r\n    return builtIn\r\n  }\r\n\r\n  // 3. user component (from setup bindings)\r\n  // this is skipped in browser build since browser builds do not perform\r\n  // binding analysis.\r\n  if (!__BROWSER__) {\r\n    const fromSetup = resolveSetupReference(tag, context)\r\n    if (fromSetup) {\r\n      return fromSetup\r\n    }\r\n    const dotIndex = tag.indexOf('.')\r\n    if (dotIndex > 0) {\r\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context)\r\n      if (ns) {\r\n        return ns + tag.slice(dotIndex)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 4. Self referencing component (inferred from filename)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.selfName &&\r\n    capitalize(camelize(tag)) === context.selfName\r\n  ) {\r\n    context.helper(RESOLVE_COMPONENT)\r\n    // codegen.ts has special check for __self postfix when generating\r\n    // component imports, which will pass additional `maybeSelfReference` flag\r\n    // to `resolveComponent`.\r\n    context.components.add(tag + `__self`)\r\n    return toValidAssetId(tag, `component`)\r\n  }\r\n\r\n  // 5. user component (resolve)\r\n  context.helper(RESOLVE_COMPONENT)\r\n  context.components.add(tag)\r\n  return toValidAssetId(tag, `component`)\r\n}\r\n\r\nfunction resolveSetupReference(name: string, context: TransformContext) {\r\n  const bindings = context.bindingMetadata\r\n  if (!bindings || bindings.__isScriptSetup === false) {\r\n    return\r\n  }\r\n\r\n  const camelName = camelize(name)\r\n  const PascalName = capitalize(camelName)\r\n  const checkType = (type: BindingTypes) => {\r\n    if (bindings[name] === type) {\r\n      return name\r\n    }\r\n    if (bindings[camelName] === type) {\r\n      return camelName\r\n    }\r\n    if (bindings[PascalName] === type) {\r\n      return PascalName\r\n    }\r\n  }\r\n\r\n  const fromConst =\r\n    checkType(BindingTypes.SETUP_CONST) ||\r\n    checkType(BindingTypes.SETUP_REACTIVE_CONST) ||\r\n    checkType(BindingTypes.LITERAL_CONST)\r\n  if (fromConst) {\r\n    return context.inline\r\n      ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\r\n        fromConst\r\n      : `$setup[${JSON.stringify(fromConst)}]`\r\n  }\r\n\r\n  const fromMaybeRef =\r\n    checkType(BindingTypes.SETUP_LET) ||\r\n    checkType(BindingTypes.SETUP_REF) ||\r\n    checkType(BindingTypes.SETUP_MAYBE_REF)\r\n  if (fromMaybeRef) {\r\n    return context.inline\r\n      ? // setup scope bindings that may be refs need to be unrefed\r\n        `${context.helperString(UNREF)}(${fromMaybeRef})`\r\n      : `$setup[${JSON.stringify(fromMaybeRef)}]`\r\n  }\r\n\r\n  const fromProps = checkType(BindingTypes.PROPS)\r\n  if (fromProps) {\r\n    return `${context.helperString(UNREF)}(${\r\n      context.inline ? '__props' : '$props'\r\n    }[${JSON.stringify(fromProps)}])`\r\n  }\r\n}\r\n\r\nexport type PropsExpression = ObjectExpression | CallExpression | ExpressionNode\r\n\r\nexport function buildProps(\r\n  node: ElementNode,\r\n  context: TransformContext,\r\n  props: ElementNode['props'] = node.props,\r\n  isComponent: boolean,\r\n  isDynamicComponent: boolean,\r\n  ssr = false,\r\n): {\r\n  props: PropsExpression | undefined\r\n  directives: DirectiveNode[]\r\n  patchFlag: number\r\n  dynamicPropNames: string[]\r\n  shouldUseBlock: boolean\r\n} {\r\n  const { tag, loc: elementLoc, children } = node\r\n  let properties: ObjectExpression['properties'] = []\r\n  const mergeArgs: PropsExpression[] = []\r\n  const runtimeDirectives: DirectiveNode[] = []\r\n  const hasChildren = children.length > 0\r\n  let shouldUseBlock = false\r\n\r\n  // patchFlag analysis\r\n  let patchFlag = 0\r\n  let hasRef = false\r\n  let hasClassBinding = false\r\n  let hasStyleBinding = false\r\n  let hasHydrationEventBinding = false\r\n  let hasDynamicKeys = false\r\n  let hasVnodeHook = false\r\n  const dynamicPropNames: string[] = []\r\n\r\n  const pushMergeArg = (arg?: PropsExpression) => {\r\n    if (properties.length) {\r\n      mergeArgs.push(\r\n        createObjectExpression(dedupeProperties(properties), elementLoc),\r\n      )\r\n      properties = []\r\n    }\r\n    if (arg) mergeArgs.push(arg)\r\n  }\r\n\r\n  const analyzePatchFlag = ({ key, value }: Property) => {\r\n    if (isStaticExp(key)) {\r\n      const name = key.content\r\n      const isEventHandler = isOn(name)\r\n      if (\r\n        isEventHandler &&\r\n        (!isComponent || isDynamicComponent) &&\r\n        // omit the flag for click handlers because hydration gives click\r\n        // dedicated fast path.\r\n        name.toLowerCase() !== 'onclick' &&\r\n        // omit v-model handlers\r\n        name !== 'onUpdate:modelValue' &&\r\n        // omit onVnodeXXX hooks\r\n        !isReservedProp(name)\r\n      ) {\r\n        hasHydrationEventBinding = true\r\n      }\r\n\r\n      if (isEventHandler && isReservedProp(name)) {\r\n        hasVnodeHook = true\r\n      }\r\n\r\n      if (isEventHandler && value.type === NodeTypes.JS_CALL_EXPRESSION) {\r\n        // handler wrapped with internal helper e.g. withModifiers(fn)\r\n        // extract the actual expression\r\n        value = value.arguments[0] as JSChildNode\r\n      }\r\n\r\n      if (\r\n        value.type === NodeTypes.JS_CACHE_EXPRESSION ||\r\n        ((value.type === NodeTypes.SIMPLE_EXPRESSION ||\r\n          value.type === NodeTypes.COMPOUND_EXPRESSION) &&\r\n          getConstantType(value, context) > 0)\r\n      ) {\r\n        // skip if the prop is a cached handler or has constant value\r\n        return\r\n      }\r\n\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n      } else if (name === 'class') {\r\n        hasClassBinding = true\r\n      } else if (name === 'style') {\r\n        hasStyleBinding = true\r\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n\r\n      // treat the dynamic class and style binding of the component as dynamic props\r\n      if (\r\n        isComponent &&\r\n        (name === 'class' || name === 'style') &&\r\n        !dynamicPropNames.includes(name)\r\n      ) {\r\n        dynamicPropNames.push(name)\r\n      }\r\n    } else {\r\n      hasDynamicKeys = true\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < props.length; i++) {\r\n    // static attribute\r\n    const prop = props[i]\r\n    if (prop.type === NodeTypes.ATTRIBUTE) {\r\n      const { loc, name, nameLoc, value } = prop\r\n      let isStatic = true\r\n      if (name === 'ref') {\r\n        hasRef = true\r\n        if (context.scopes.vFor > 0) {\r\n          properties.push(\r\n            createObjectProperty(\r\n              createSimpleExpression('ref_for', true),\r\n              createSimpleExpression('true'),\r\n            ),\r\n          )\r\n        }\r\n        // in inline mode there is no setupState object, so we can't use string\r\n        // keys to set the ref. Instead, we need to transform it to pass the\r\n        // actual ref instead.\r\n        if (!__BROWSER__ && value && context.inline) {\r\n          const binding = context.bindingMetadata[value.content]\r\n          if (\r\n            binding === BindingTypes.SETUP_LET ||\r\n            binding === BindingTypes.SETUP_REF ||\r\n            binding === BindingTypes.SETUP_MAYBE_REF\r\n          ) {\r\n            isStatic = false\r\n            properties.push(\r\n              createObjectProperty(\r\n                createSimpleExpression('ref_key', true),\r\n                createSimpleExpression(value.content, true, value.loc),\r\n              ),\r\n            )\r\n          }\r\n        }\r\n      }\r\n      // skip is on <component>, or is=\"vue:xxx\"\r\n      if (\r\n        name === 'is' &&\r\n        (isComponentTag(tag) ||\r\n          (value && value.content.startsWith('vue:')) ||\r\n          (__COMPAT__ &&\r\n            isCompatEnabled(\r\n              CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n              context,\r\n            )))\r\n      ) {\r\n        continue\r\n      }\r\n      properties.push(\r\n        createObjectProperty(\r\n          createSimpleExpression(name, true, nameLoc),\r\n          createSimpleExpression(\r\n            value ? value.content : '',\r\n            isStatic,\r\n            value ? value.loc : loc,\r\n          ),\r\n        ),\r\n      )\r\n    } else {\r\n      // directives\r\n      const { name, arg, exp, loc, modifiers } = prop\r\n      const isVBind = name === 'bind'\r\n      const isVOn = name === 'on'\r\n\r\n      // skip v-slot - it is handled by its dedicated transform.\r\n      if (name === 'slot') {\r\n        if (!isComponent) {\r\n          context.onError(\r\n            createCompilerError(ErrorCodes.X_V_SLOT_MISPLACED, loc),\r\n          )\r\n        }\r\n        continue\r\n      }\r\n      // skip v-once/v-memo - they are handled by dedicated transforms.\r\n      if (name === 'once' || name === 'memo') {\r\n        continue\r\n      }\r\n      // skip v-is and :is on <component>\r\n      if (\r\n        name === 'is' ||\r\n        (isVBind &&\r\n          isStaticArgOf(arg, 'is') &&\r\n          (isComponentTag(tag) ||\r\n            (__COMPAT__ &&\r\n              isCompatEnabled(\r\n                CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT,\r\n                context,\r\n              ))))\r\n      ) {\r\n        continue\r\n      }\r\n      // skip v-on in SSR compilation\r\n      if (isVOn && ssr) {\r\n        continue\r\n      }\r\n\r\n      if (\r\n        // #938: elements with dynamic keys should be forced into blocks\r\n        (isVBind && isStaticArgOf(arg, 'key')) ||\r\n        // inline before-update hooks need to force block so that it is invoked\r\n        // before children\r\n        (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))\r\n      ) {\r\n        shouldUseBlock = true\r\n      }\r\n\r\n      if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n        properties.push(\r\n          createObjectProperty(\r\n            createSimpleExpression('ref_for', true),\r\n            createSimpleExpression('true'),\r\n          ),\r\n        )\r\n      }\r\n\r\n      // special case for v-bind and v-on with no argument\r\n      if (!arg && (isVBind || isVOn)) {\r\n        hasDynamicKeys = true\r\n        if (exp) {\r\n          if (isVBind) {\r\n            // have to merge early for compat build check\r\n            pushMergeArg()\r\n            if (__COMPAT__) {\r\n              // 2.x v-bind object order compat\r\n              if (__DEV__) {\r\n                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                  if (arg.type === NodeTypes.JS_OBJECT_EXPRESSION) {\r\n                    return arg.properties.some(({ key }) => {\r\n                      if (\r\n                        key.type !== NodeTypes.SIMPLE_EXPRESSION ||\r\n                        !key.isStatic\r\n                      ) {\r\n                        return true\r\n                      }\r\n                      return (\r\n                        key.content !== 'class' &&\r\n                        key.content !== 'style' &&\r\n                        !isOn(key.content)\r\n                      )\r\n                    })\r\n                  } else {\r\n                    // dynamic expression\r\n                    return true\r\n                  }\r\n                })\r\n                if (hasOverridableKeys) {\r\n                  checkCompatEnabled(\r\n                    CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                    context,\r\n                    loc,\r\n                  )\r\n                }\r\n              }\r\n\r\n              if (\r\n                isCompatEnabled(\r\n                  CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER,\r\n                  context,\r\n                )\r\n              ) {\r\n                mergeArgs.unshift(exp)\r\n                continue\r\n              }\r\n            }\r\n\r\n            mergeArgs.push(exp)\r\n          } else {\r\n            // v-on=\"obj\" -> toHandlers(obj)\r\n            pushMergeArg({\r\n              type: NodeTypes.JS_CALL_EXPRESSION,\r\n              loc,\r\n              callee: context.helper(TO_HANDLERS),\r\n              arguments: isComponent ? [exp] : [exp, `true`],\r\n            })\r\n          }\r\n        } else {\r\n          context.onError(\r\n            createCompilerError(\r\n              isVBind\r\n                ? ErrorCodes.X_V_BIND_NO_EXPRESSION\r\n                : ErrorCodes.X_V_ON_NO_EXPRESSION,\r\n              loc,\r\n            ),\r\n          )\r\n        }\r\n        continue\r\n      }\r\n\r\n      // force hydration for v-bind with .prop modifier\r\n      if (isVBind && modifiers.includes('prop')) {\r\n        patchFlag |= PatchFlags.NEED_HYDRATION\r\n      }\r\n\r\n      const directiveTransform = context.directiveTransforms[name]\r\n      if (directiveTransform) {\r\n        // has built-in directive transform.\r\n        const { props, needRuntime } = directiveTransform(prop, node, context)\r\n        !ssr && props.forEach(analyzePatchFlag)\r\n        if (isVOn && arg && !isStaticExp(arg)) {\r\n          pushMergeArg(createObjectExpression(props, elementLoc))\r\n        } else {\r\n          properties.push(...props)\r\n        }\r\n        if (needRuntime) {\r\n          runtimeDirectives.push(prop)\r\n          if (isSymbol(needRuntime)) {\r\n            directiveImportMap.set(prop, needRuntime)\r\n          }\r\n        }\r\n      } else if (!isBuiltInDirective(name)) {\r\n        // no built-in transform, this is a user custom directive.\r\n        runtimeDirectives.push(prop)\r\n        // custom dirs may use beforeUpdate so they need to force blocks\r\n        // to ensure before-update gets called before children update\r\n        if (hasChildren) {\r\n          shouldUseBlock = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let propsExpression: PropsExpression | undefined = undefined\r\n\r\n  // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n  if (mergeArgs.length) {\r\n    // close up any not-yet-merged props\r\n    pushMergeArg()\r\n    if (mergeArgs.length > 1) {\r\n      propsExpression = createCallExpression(\r\n        context.helper(MERGE_PROPS),\r\n        mergeArgs,\r\n        elementLoc,\r\n      )\r\n    } else {\r\n      // single v-bind with nothing else - no need for a mergeProps call\r\n      propsExpression = mergeArgs[0]\r\n    }\r\n  } else if (properties.length) {\r\n    propsExpression = createObjectExpression(\r\n      dedupeProperties(properties),\r\n      elementLoc,\r\n    )\r\n  }\r\n\r\n  // patchFlag analysis\r\n  if (hasDynamicKeys) {\r\n    patchFlag |= PatchFlags.FULL_PROPS\r\n  } else {\r\n    if (hasClassBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.CLASS\r\n    }\r\n    if (hasStyleBinding && !isComponent) {\r\n      patchFlag |= PatchFlags.STYLE\r\n    }\r\n    if (dynamicPropNames.length) {\r\n      patchFlag |= PatchFlags.PROPS\r\n    }\r\n    if (hasHydrationEventBinding) {\r\n      patchFlag |= PatchFlags.NEED_HYDRATION\r\n    }\r\n  }\r\n  if (\r\n    !shouldUseBlock &&\r\n    (patchFlag === 0 || patchFlag === PatchFlags.NEED_HYDRATION) &&\r\n    (hasRef || hasVnodeHook || runtimeDirectives.length > 0)\r\n  ) {\r\n    patchFlag |= PatchFlags.NEED_PATCH\r\n  }\r\n\r\n  // pre-normalize props, SSR is skipped for now\r\n  if (!context.inSSR && propsExpression) {\r\n    switch (propsExpression.type) {\r\n      case NodeTypes.JS_OBJECT_EXPRESSION:\r\n        // means that there is no v-bind,\r\n        // but still need to deal with dynamic key binding\r\n        let classKeyIndex = -1\r\n        let styleKeyIndex = -1\r\n        let hasDynamicKey = false\r\n\r\n        for (let i = 0; i < propsExpression.properties.length; i++) {\r\n          const key = propsExpression.properties[i].key\r\n          if (isStaticExp(key)) {\r\n            if (key.content === 'class') {\r\n              classKeyIndex = i\r\n            } else if (key.content === 'style') {\r\n              styleKeyIndex = i\r\n            }\r\n          } else if (!key.isHandlerKey) {\r\n            hasDynamicKey = true\r\n          }\r\n        }\r\n\r\n        const classProp = propsExpression.properties[classKeyIndex]\r\n        const styleProp = propsExpression.properties[styleKeyIndex]\r\n\r\n        // no dynamic key\r\n        if (!hasDynamicKey) {\r\n          if (classProp && !isStaticExp(classProp.value)) {\r\n            classProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_CLASS),\r\n              [classProp.value],\r\n            )\r\n          }\r\n          if (\r\n            styleProp &&\r\n            // the static style is compiled into an object,\r\n            // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n            (hasStyleBinding ||\r\n              (styleProp.value.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n                styleProp.value.content.trim()[0] === `[`) ||\r\n              // v-bind:style and style both exist,\r\n              // v-bind:style with static literal object\r\n              styleProp.value.type === NodeTypes.JS_ARRAY_EXPRESSION)\r\n          ) {\r\n            styleProp.value = createCallExpression(\r\n              context.helper(NORMALIZE_STYLE),\r\n              [styleProp.value],\r\n            )\r\n          }\r\n        } else {\r\n          // dynamic key binding, wrap with `normalizeProps`\r\n          propsExpression = createCallExpression(\r\n            context.helper(NORMALIZE_PROPS),\r\n            [propsExpression],\r\n          )\r\n        }\r\n        break\r\n      case NodeTypes.JS_CALL_EXPRESSION:\r\n        // mergeProps call, do nothing\r\n        break\r\n      default:\r\n        // single v-bind\r\n        propsExpression = createCallExpression(\r\n          context.helper(NORMALIZE_PROPS),\r\n          [\r\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n              propsExpression,\r\n            ]),\r\n          ],\r\n        )\r\n        break\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: propsExpression,\r\n    directives: runtimeDirectives,\r\n    patchFlag,\r\n    dynamicPropNames,\r\n    shouldUseBlock,\r\n  }\r\n}\r\n\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties: Property[]): Property[] {\r\n  const knownProps: Map<string, Property> = new Map()\r\n  const deduped: Property[] = []\r\n  for (let i = 0; i < properties.length; i++) {\r\n    const prop = properties[i]\r\n    // dynamic keys are always allowed\r\n    if (prop.key.type === NodeTypes.COMPOUND_EXPRESSION || !prop.key.isStatic) {\r\n      deduped.push(prop)\r\n      continue\r\n    }\r\n    const name = prop.key.content\r\n    const existing = knownProps.get(name)\r\n    if (existing) {\r\n      if (name === 'style' || name === 'class' || isOn(name)) {\r\n        mergeAsArray(existing, prop)\r\n      }\r\n      // unexpected duplicate, should have emitted error during parse\r\n    } else {\r\n      knownProps.set(name, prop)\r\n      deduped.push(prop)\r\n    }\r\n  }\r\n  return deduped\r\n}\r\n\r\nfunction mergeAsArray(existing: Property, incoming: Property) {\r\n  if (existing.value.type === NodeTypes.JS_ARRAY_EXPRESSION) {\r\n    existing.value.elements.push(incoming.value)\r\n  } else {\r\n    existing.value = createArrayExpression(\r\n      [existing.value, incoming.value],\r\n      existing.loc,\r\n    )\r\n  }\r\n}\r\n\r\nexport function buildDirectiveArgs(\r\n  dir: DirectiveNode,\r\n  context: TransformContext,\r\n): ArrayExpression {\r\n  const dirArgs: ArrayExpression['elements'] = []\r\n  const runtime = directiveImportMap.get(dir)\r\n  if (runtime) {\r\n    // built-in directive with runtime\r\n    dirArgs.push(context.helperString(runtime))\r\n  } else {\r\n    // user directive.\r\n    // see if we have directives exposed via <script setup>\r\n    const fromSetup =\r\n      !__BROWSER__ && resolveSetupReference('v-' + dir.name, context)\r\n    if (fromSetup) {\r\n      dirArgs.push(fromSetup)\r\n    } else {\r\n      // inject statement for resolving directive\r\n      context.helper(RESOLVE_DIRECTIVE)\r\n      context.directives.add(dir.name)\r\n      dirArgs.push(toValidAssetId(dir.name, `directive`))\r\n    }\r\n  }\r\n  const { loc } = dir\r\n  if (dir.exp) dirArgs.push(dir.exp)\r\n  if (dir.arg) {\r\n    if (!dir.exp) {\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    dirArgs.push(dir.arg)\r\n  }\r\n  if (Object.keys(dir.modifiers).length) {\r\n    if (!dir.arg) {\r\n      if (!dir.exp) {\r\n        dirArgs.push(`void 0`)\r\n      }\r\n      dirArgs.push(`void 0`)\r\n    }\r\n    const trueExpression = createSimpleExpression(`true`, false, loc)\r\n    dirArgs.push(\r\n      createObjectExpression(\r\n        dir.modifiers.map(modifier =>\r\n          createObjectProperty(modifier, trueExpression),\r\n        ),\r\n        loc,\r\n      ),\r\n    )\r\n  }\r\n  return createArrayExpression(dirArgs, dir.loc)\r\n}\r\n\r\nfunction stringifyDynamicPropNames(props: string[]): string {\r\n  let propsNamesString = `[`\r\n  for (let i = 0, l = props.length; i < l; i++) {\r\n    propsNamesString += JSON.stringify(props[i])\r\n    if (i < l - 1) propsNamesString += ', '\r\n  }\r\n  return propsNamesString + `]`\r\n}\r\n\r\nfunction isComponentTag(tag: string) {\r\n  return tag === 'component' || tag === 'Component'\r\n}\r\n","import type { NodeTransform, TransformContext } from '../transform'\r\nimport {\r\n  type CallExpression,\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  type SlotOutletNode,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n} from '../ast'\r\nimport { isSlotOutlet, isStaticArgOf, isStaticExp } from '../utils'\r\nimport { type PropsExpression, buildProps } from './transformElement'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport { RENDER_SLOT } from '../runtimeHelpers'\r\nimport { camelize } from '@vue/shared'\r\n\r\nexport const transformSlotOutlet: NodeTransform = (node, context) => {\r\n  if (isSlotOutlet(node)) {\r\n    const { children, loc } = node\r\n    const { slotName, slotProps } = processSlotOutlet(node, context)\r\n\r\n    const slotArgs: CallExpression['arguments'] = [\r\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n      slotName,\r\n      '{}',\r\n      'undefined',\r\n      'true',\r\n    ]\r\n    let expectedLen = 2\r\n\r\n    if (slotProps) {\r\n      slotArgs[2] = slotProps\r\n      expectedLen = 3\r\n    }\r\n\r\n    if (children.length) {\r\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc)\r\n      expectedLen = 4\r\n    }\r\n\r\n    if (context.scopeId && !context.slotted) {\r\n      expectedLen = 5\r\n    }\r\n    slotArgs.splice(expectedLen) // remove unused arguments\r\n\r\n    node.codegenNode = createCallExpression(\r\n      context.helper(RENDER_SLOT),\r\n      slotArgs,\r\n      loc,\r\n    )\r\n  }\r\n}\r\n\r\ninterface SlotOutletProcessResult {\r\n  slotName: string | ExpressionNode\r\n  slotProps: PropsExpression | undefined\r\n}\r\n\r\nexport function processSlotOutlet(\r\n  node: SlotOutletNode,\r\n  context: TransformContext,\r\n): SlotOutletProcessResult {\r\n  let slotName: string | ExpressionNode = `\"default\"`\r\n  let slotProps: PropsExpression | undefined = undefined\r\n\r\n  const nonNameProps = []\r\n  for (let i = 0; i < node.props.length; i++) {\r\n    const p = node.props[i]\r\n    if (p.type === NodeTypes.ATTRIBUTE) {\r\n      if (p.value) {\r\n        if (p.name === 'name') {\r\n          slotName = JSON.stringify(p.value.content)\r\n        } else {\r\n          p.name = camelize(p.name)\r\n          nonNameProps.push(p)\r\n        }\r\n      }\r\n    } else {\r\n      if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n        if (p.exp) slotName = p.exp\r\n      } else {\r\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n          p.arg.content = camelize(p.arg.content)\r\n        }\r\n        nonNameProps.push(p)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (nonNameProps.length > 0) {\r\n    const { props, directives } = buildProps(\r\n      node,\r\n      context,\r\n      nonNameProps,\r\n      false,\r\n      false,\r\n    )\r\n    slotProps = props\r\n\r\n    if (directives.length) {\r\n      context.onError(\r\n        createCompilerError(\r\n          ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET,\r\n          directives[0].loc,\r\n        ),\r\n      )\r\n    }\r\n  }\r\n\r\n  return {\r\n    slotName,\r\n    slotProps,\r\n  }\r\n}\r\n","import type { DirectiveTransform, DirectiveTransformResult } from '../transform'\r\nimport {\r\n  type DirectiveNode,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  createCompoundExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n} from '../ast'\r\nimport { camelize, toHandlerKey } from '@vue/shared'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport { processExpression } from './transformExpression'\r\nimport { validateBrowserExpression } from '../validateExpression'\r\nimport { hasScopeRef, isMemberExpression } from '../utils'\r\nimport { TO_HANDLER_KEY } from '../runtimeHelpers'\r\n\r\nconst fnExpRE =\r\n  /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/\r\n\r\nexport interface VOnDirectiveNode extends DirectiveNode {\r\n  // v-on without arg is handled directly in ./transformElements.ts due to it affecting\r\n  // codegen for the entire props object. This transform here is only for v-on\r\n  // *with* args.\r\n  arg: ExpressionNode\r\n  // exp is guaranteed to be a simple expression here because v-on w/ arg is\r\n  // skipped by transformExpression as a special case.\r\n  exp: SimpleExpressionNode | undefined\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (\r\n  dir,\r\n  node,\r\n  context,\r\n  augmentor,\r\n) => {\r\n  const { loc, modifiers, arg } = dir as VOnDirectiveNode\r\n  if (!dir.exp && !modifiers.length) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_ON_NO_EXPRESSION, loc))\r\n  }\r\n  let eventName: ExpressionNode\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      let rawName = arg.content\r\n      if (__DEV__ && rawName.startsWith('vnode')) {\r\n        context.onError(createCompilerError(ErrorCodes.X_VNODE_HOOKS, arg.loc))\r\n      }\r\n      if (rawName.startsWith('vue:')) {\r\n        rawName = `vnode-${rawName.slice(4)}`\r\n      }\r\n      const eventString =\r\n        node.tagType !== ElementTypes.ELEMENT ||\r\n        rawName.startsWith('vnode') ||\r\n        !/[A-Z]/.test(rawName)\r\n          ? // for non-element and vnode lifecycle event listeners, auto convert\r\n            // it to camelCase. See issue #2249\r\n            toHandlerKey(camelize(rawName))\r\n          : // preserve case for plain element listeners that have uppercase\r\n            // letters, as these may be custom elements' custom events\r\n            `on:${rawName}`\r\n      eventName = createSimpleExpression(eventString, true, arg.loc)\r\n    } else {\r\n      // #2388\r\n      eventName = createCompoundExpression([\r\n        `${context.helperString(TO_HANDLER_KEY)}(`,\r\n        arg,\r\n        `)`,\r\n      ])\r\n    }\r\n  } else {\r\n    // already a compound expression.\r\n    eventName = arg\r\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`)\r\n    eventName.children.push(`)`)\r\n  }\r\n\r\n  // handler processing\r\n  let exp: ExpressionNode | undefined = dir.exp as\r\n    | SimpleExpressionNode\r\n    | undefined\r\n  if (exp && !exp.content.trim()) {\r\n    exp = undefined\r\n  }\r\n  let shouldCache: boolean = context.cacheHandlers && !exp && !context.inVOnce\r\n  if (exp) {\r\n    const isMemberExp = isMemberExpression(exp.content, context)\r\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content))\r\n    const hasMultipleStatements = exp.content.includes(`;`)\r\n\r\n    // process the expression since it's been skipped\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n      isInlineStatement && context.addIdentifiers(`$event`)\r\n      exp = dir.exp = processExpression(\r\n        exp,\r\n        context,\r\n        false,\r\n        hasMultipleStatements,\r\n      )\r\n      isInlineStatement && context.removeIdentifiers(`$event`)\r\n      // with scope analysis, the function is hoistable if it has no reference\r\n      // to scope variables.\r\n      shouldCache =\r\n        context.cacheHandlers &&\r\n        // unnecessary to cache inside v-once\r\n        !context.inVOnce &&\r\n        // runtime constants don't need to be cached\r\n        // (this is analyzed by compileScript in SFC <script setup>)\r\n        !(exp.type === NodeTypes.SIMPLE_EXPRESSION && exp.constType > 0) &&\r\n        // #1541 bail if this is a member exp handler passed to a component -\r\n        // we need to use the original function to preserve arity,\r\n        // e.g. <transition> relies on checking cb.length to determine\r\n        // transition end handling. Inline function is ok since its arity\r\n        // is preserved even when cached.\r\n        !(isMemberExp && node.tagType === ElementTypes.COMPONENT) &&\r\n        // bail if the function references closure variables (v-for, v-slot)\r\n        // it must be passed fresh to avoid stale values.\r\n        !hasScopeRef(exp, context.identifiers)\r\n      // If the expression is optimizable and is a member expression pointing\r\n      // to a function, turn it into invocation (and wrap in an arrow function\r\n      // below) so that it always accesses the latest value when called - thus\r\n      // avoiding the need to be patched.\r\n      if (shouldCache && isMemberExp) {\r\n        if (exp.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n          exp.content = `${exp.content} && ${exp.content}(...args)`\r\n        } else {\r\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`]\r\n        }\r\n      }\r\n    }\r\n\r\n    if (__DEV__ && __BROWSER__) {\r\n      validateBrowserExpression(\r\n        exp as SimpleExpressionNode,\r\n        context,\r\n        false,\r\n        hasMultipleStatements,\r\n      )\r\n    }\r\n\r\n    if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n      // wrap inline statement in a function expression\r\n      exp = createCompoundExpression([\r\n        `${\r\n          isInlineStatement\r\n            ? !__BROWSER__ && context.isTS\r\n              ? `($event: any)`\r\n              : `$event`\r\n            : `${\r\n                !__BROWSER__ && context.isTS ? `\\n//@ts-ignore\\n` : ``\r\n              }(...args)`\r\n        } => ${hasMultipleStatements ? `{` : `(`}`,\r\n        exp,\r\n        hasMultipleStatements ? `}` : `)`,\r\n      ])\r\n    }\r\n  }\r\n\r\n  let ret: DirectiveTransformResult = {\r\n    props: [\r\n      createObjectProperty(\r\n        eventName,\r\n        exp || createSimpleExpression(`() => {}`, false, loc),\r\n      ),\r\n    ],\r\n  }\r\n\r\n  // apply extended compiler augmentor\r\n  if (augmentor) {\r\n    ret = augmentor(ret)\r\n  }\r\n\r\n  if (shouldCache) {\r\n    // cache handlers so that it's always the same handler being passed down.\r\n    // this avoids unnecessary re-renders when users use inline handlers on\r\n    // components.\r\n    ret.props[0].value = context.cache(ret.props[0].value)\r\n  }\r\n\r\n  // mark the key as handler for props normalization check\r\n  ret.props.forEach(p => (p.key.isHandlerKey = true))\r\n  return ret\r\n}\r\n","import type { DirectiveTransform } from '../transform'\r\nimport {\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n} from '../ast'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport { camelize } from '@vue/shared'\r\nimport { CAMELIZE } from '../runtimeHelpers'\r\nimport { processExpression } from './transformExpression'\r\n\r\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nexport const transformBind: DirectiveTransform = (dir, _node, context) => {\r\n  const { modifiers, loc } = dir\r\n  const arg = dir.arg!\r\n\r\n  // :arg is replaced by :arg=\"arg\"\r\n  let { exp } = dir\r\n  if (!exp && arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    const propName = camelize(arg.content)\r\n    exp = dir.exp = createSimpleExpression(propName, false, arg.loc)\r\n    if (!__BROWSER__) {\r\n      exp = dir.exp = processExpression(exp, context)\r\n    }\r\n  }\r\n\r\n  if (arg.type !== NodeTypes.SIMPLE_EXPRESSION) {\r\n    arg.children.unshift(`(`)\r\n    arg.children.push(`) || \"\"`)\r\n  } else if (!arg.isStatic) {\r\n    arg.content = `${arg.content} || \"\"`\r\n  }\r\n\r\n  // .sync is replaced by v-model:arg\r\n  if (modifiers.includes('camel')) {\r\n    if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n      if (arg.isStatic) {\r\n        arg.content = camelize(arg.content)\r\n      } else {\r\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`\r\n      }\r\n    } else {\r\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`)\r\n      arg.children.push(`)`)\r\n    }\r\n  }\r\n\r\n  if (!context.inSSR) {\r\n    if (modifiers.includes('prop')) {\r\n      injectPrefix(arg, '.')\r\n    }\r\n    if (modifiers.includes('attr')) {\r\n      injectPrefix(arg, '^')\r\n    }\r\n  }\r\n\r\n  if (\r\n    !exp ||\r\n    (exp.type === NodeTypes.SIMPLE_EXPRESSION && !exp.content.trim())\r\n  ) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_BIND_NO_EXPRESSION, loc))\r\n    return {\r\n      props: [createObjectProperty(arg, createSimpleExpression('', true, loc))],\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: [createObjectProperty(arg, exp)],\r\n  }\r\n}\r\n\r\nconst injectPrefix = (arg: ExpressionNode, prefix: string) => {\r\n  if (arg.type === NodeTypes.SIMPLE_EXPRESSION) {\r\n    if (arg.isStatic) {\r\n      arg.content = prefix + arg.content\r\n    } else {\r\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``\r\n    }\r\n  } else {\r\n    arg.children.unshift(`'${prefix}' + (`)\r\n    arg.children.push(`)`)\r\n  }\r\n}\r\n","import type { NodeTransform } from '../transform'\r\nimport {\r\n  type CallExpression,\r\n  type CompoundExpressionNode,\r\n  ConstantTypes,\r\n  ElementTypes,\r\n  NodeTypes,\r\n  createCallExpression,\r\n  createCompoundExpression,\r\n} from '../ast'\r\nimport { isText } from '../utils'\r\nimport { CREATE_TEXT } from '../runtimeHelpers'\r\nimport { PatchFlagNames, PatchFlags } from '@vue/shared'\r\nimport { getConstantType } from './hoistStatic'\r\n\r\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nexport const transformText: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ROOT ||\r\n    node.type === NodeTypes.ELEMENT ||\r\n    node.type === NodeTypes.FOR ||\r\n    node.type === NodeTypes.IF_BRANCH\r\n  ) {\r\n    // perform the transform on node exit so that all expressions have already\r\n    // been processed.\r\n    return () => {\r\n      const children = node.children\r\n      let currentContainer: CompoundExpressionNode | undefined = undefined\r\n      let hasText = false\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child)) {\r\n          hasText = true\r\n          for (let j = i + 1; j < children.length; j++) {\r\n            const next = children[j]\r\n            if (isText(next)) {\r\n              if (!currentContainer) {\r\n                currentContainer = children[i] = createCompoundExpression(\r\n                  [child],\r\n                  child.loc,\r\n                )\r\n              }\r\n              // merge adjacent text node into current\r\n              currentContainer.children.push(` + `, next)\r\n              children.splice(j, 1)\r\n              j--\r\n            } else {\r\n              currentContainer = undefined\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        !hasText ||\r\n        // if this is a plain element with a single text child, leave it\r\n        // as-is since the runtime has dedicated fast path for this by directly\r\n        // setting textContent of the element.\r\n        // for component root it's always normalized anyway.\r\n        (children.length === 1 &&\r\n          (node.type === NodeTypes.ROOT ||\r\n            (node.type === NodeTypes.ELEMENT &&\r\n              node.tagType === ElementTypes.ELEMENT &&\r\n              // #3756\r\n              // custom directives can potentially add DOM elements arbitrarily,\r\n              // we need to avoid setting textContent of the element at runtime\r\n              // to avoid accidentally overwriting the DOM elements added\r\n              // by the user through custom directives.\r\n              !node.props.find(\r\n                p =>\r\n                  p.type === NodeTypes.DIRECTIVE &&\r\n                  !context.directiveTransforms[p.name],\r\n              ) &&\r\n              // in compat mode, <template> tags with no special directives\r\n              // will be rendered as a fragment so its children must be\r\n              // converted into vnodes.\r\n              !(__COMPAT__ && node.tag === 'template'))))\r\n      ) {\r\n        return\r\n      }\r\n\r\n      // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n      // runtime normalization.\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        if (isText(child) || child.type === NodeTypes.COMPOUND_EXPRESSION) {\r\n          const callArgs: CallExpression['arguments'] = []\r\n          // createTextVNode defaults to single whitespace, so if it is a\r\n          // single space the code could be an empty call to save bytes.\r\n          if (child.type !== NodeTypes.TEXT || child.content !== ' ') {\r\n            callArgs.push(child)\r\n          }\r\n          // mark dynamic text with flag so it gets patched inside a block\r\n          if (\r\n            !context.ssr &&\r\n            getConstantType(child, context) === ConstantTypes.NOT_CONSTANT\r\n          ) {\r\n            callArgs.push(\r\n              PatchFlags.TEXT +\r\n                (__DEV__ ? ` /* ${PatchFlagNames[PatchFlags.TEXT]} */` : ``),\r\n            )\r\n          }\r\n          children[i] = {\r\n            type: NodeTypes.TEXT_CALL,\r\n            content: child,\r\n            loc: child.loc,\r\n            codegenNode: createCallExpression(\r\n              context.helper(CREATE_TEXT),\r\n              callArgs,\r\n            ),\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { NodeTransform } from '../transform'\r\nimport { findDir } from '../utils'\r\nimport { type ElementNode, type ForNode, type IfNode, NodeTypes } from '../ast'\r\nimport { SET_BLOCK_TRACKING } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformOnce: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT && findDir(node, 'once', true)) {\r\n    if (seen.has(node) || context.inVOnce || context.inSSR) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    context.inVOnce = true\r\n    context.helper(SET_BLOCK_TRACKING)\r\n    return () => {\r\n      context.inVOnce = false\r\n      const cur = context.currentNode as ElementNode | IfNode | ForNode\r\n      if (cur.codegenNode) {\r\n        cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { DirectiveTransform } from '../transform'\r\nimport {\r\n  ConstantTypes,\r\n  ElementTypes,\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  type Property,\r\n  createCompoundExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n} from '../ast'\r\nimport { ErrorCodes, createCompilerError } from '../errors'\r\nimport {\r\n  hasScopeRef,\r\n  isMemberExpression,\r\n  isSimpleIdentifier,\r\n  isStaticExp,\r\n} from '../utils'\r\nimport { IS_REF } from '../runtimeHelpers'\r\nimport { BindingTypes } from '../options'\r\nimport { camelize } from '@vue/shared'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, arg } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_NO_EXPRESSION, dir.loc),\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  // we assume v-model directives are always parsed\r\n  // (not artificially created by a transform)\r\n  const rawExp = exp.loc.source\r\n  const expString =\r\n    exp.type === NodeTypes.SIMPLE_EXPRESSION ? exp.content : rawExp\r\n\r\n  // im SFC <script setup> inline mode, the exp may have been transformed into\r\n  // _unref(exp)\r\n  const bindingType = context.bindingMetadata[rawExp]\r\n\r\n  // check props\r\n  if (\r\n    bindingType === BindingTypes.PROPS ||\r\n    bindingType === BindingTypes.PROPS_ALIASED\r\n  ) {\r\n    context.onError(createCompilerError(ErrorCodes.X_V_MODEL_ON_PROPS, exp.loc))\r\n    return createTransformProps()\r\n  }\r\n\r\n  const maybeRef =\r\n    !__BROWSER__ &&\r\n    context.inline &&\r\n    (bindingType === BindingTypes.SETUP_LET ||\r\n      bindingType === BindingTypes.SETUP_REF ||\r\n      bindingType === BindingTypes.SETUP_MAYBE_REF)\r\n\r\n  if (\r\n    !expString.trim() ||\r\n    (!isMemberExpression(expString, context) && !maybeRef)\r\n  ) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION, exp.loc),\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    isSimpleIdentifier(expString) &&\r\n    context.identifiers[expString]\r\n  ) {\r\n    context.onError(\r\n      createCompilerError(ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE, exp.loc),\r\n    )\r\n    return createTransformProps()\r\n  }\r\n\r\n  const propName = arg ? arg : createSimpleExpression('modelValue', true)\r\n  const eventName = arg\r\n    ? isStaticExp(arg)\r\n      ? `onUpdate:${camelize(arg.content)}`\r\n      : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n    : `onUpdate:modelValue`\r\n\r\n  let assignmentExp: ExpressionNode\r\n  const eventArg = context.isTS ? `($event: any)` : `$event`\r\n  if (maybeRef) {\r\n    if (bindingType === BindingTypes.SETUP_REF) {\r\n      // v-model used on known ref.\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => ((`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `).value = $event)`,\r\n      ])\r\n    } else {\r\n      // v-model used on a potentially ref binding in <script setup> inline mode.\r\n      // the assignment needs to check whether the binding is actually a ref.\r\n      const altAssignment =\r\n        bindingType === BindingTypes.SETUP_LET ? `${rawExp} = $event` : `null`\r\n      assignmentExp = createCompoundExpression([\r\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\r\n        createSimpleExpression(rawExp, false, exp.loc),\r\n        `).value = $event : ${altAssignment})`,\r\n      ])\r\n    }\r\n  } else {\r\n    assignmentExp = createCompoundExpression([\r\n      `${eventArg} => ((`,\r\n      exp,\r\n      `) = $event)`,\r\n    ])\r\n  }\r\n\r\n  const props = [\r\n    // modelValue: foo\r\n    createObjectProperty(propName, dir.exp!),\r\n    // \"onUpdate:modelValue\": $event => (foo = $event)\r\n    createObjectProperty(eventName, assignmentExp),\r\n  ]\r\n\r\n  // cache v-model handler if applicable (when it doesn't refer any scope vars)\r\n  if (\r\n    !__BROWSER__ &&\r\n    context.prefixIdentifiers &&\r\n    !context.inVOnce &&\r\n    context.cacheHandlers &&\r\n    !hasScopeRef(exp, context.identifiers)\r\n  ) {\r\n    props[1].value = context.cache(props[1].value)\r\n  }\r\n\r\n  // modelModifiers: { foo: true, \"bar-baz\": true }\r\n  if (dir.modifiers.length && node.tagType === ElementTypes.COMPONENT) {\r\n    const modifiers = dir.modifiers\r\n      .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n      .join(`, `)\r\n    const modifiersKey = arg\r\n      ? isStaticExp(arg)\r\n        ? `${arg.content}Modifiers`\r\n        : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n      : `modelModifiers`\r\n    props.push(\r\n      createObjectProperty(\r\n        modifiersKey,\r\n        createSimpleExpression(\r\n          `{ ${modifiers} }`,\r\n          false,\r\n          dir.loc,\r\n          ConstantTypes.CAN_HOIST,\r\n        ),\r\n      ),\r\n    )\r\n  }\r\n\r\n  return createTransformProps(props)\r\n}\r\n\r\nfunction createTransformProps(props: Property[] = []) {\r\n  return { props }\r\n}\r\n","import type { NodeTransform } from '../transform'\r\nimport { findDir } from '../utils'\r\nimport {\r\n  ElementTypes,\r\n  type MemoExpression,\r\n  NodeTypes,\r\n  type PlainElementNode,\r\n  convertToBlock,\r\n  createCallExpression,\r\n  createFunctionExpression,\r\n} from '../ast'\r\nimport { WITH_MEMO } from '../runtimeHelpers'\r\n\r\nconst seen = new WeakSet()\r\n\r\nexport const transformMemo: NodeTransform = (node, context) => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    const dir = findDir(node, 'memo')\r\n    if (!dir || seen.has(node)) {\r\n      return\r\n    }\r\n    seen.add(node)\r\n    return () => {\r\n      const codegenNode =\r\n        node.codegenNode ||\r\n        (context.currentNode as PlainElementNode).codegenNode\r\n      if (codegenNode && codegenNode.type === NodeTypes.VNODE_CALL) {\r\n        // non-component sub tree should be turned into a block\r\n        if (node.tagType !== ElementTypes.COMPONENT) {\r\n          convertToBlock(codegenNode, context)\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n          dir.exp!,\r\n          createFunctionExpression(undefined, codegenNode),\r\n          `_cache`,\r\n          String(context.cached++),\r\n        ]) as MemoExpression\r\n      }\r\n    }\r\n  }\r\n}\r\n","import type { CompilerOptions } from './options'\r\nimport { baseParse } from './parser'\r\nimport {\r\n  type DirectiveTransform,\r\n  type NodeTransform,\r\n  transform,\r\n} from './transform'\r\nimport { type CodegenResult, generate } from './codegen'\r\nimport type { RootNode } from './ast'\r\nimport { extend, isString } from '@vue/shared'\r\nimport { transformIf } from './transforms/vIf'\r\nimport { transformFor } from './transforms/vFor'\r\nimport { transformExpression } from './transforms/transformExpression'\r\nimport { transformSlotOutlet } from './transforms/transformSlotOutlet'\r\nimport { transformElement } from './transforms/transformElement'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformBind } from './transforms/vBind'\r\nimport { trackSlotScopes, trackVForSlotScopes } from './transforms/vSlot'\r\nimport { transformText } from './transforms/transformText'\r\nimport { transformOnce } from './transforms/vOnce'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformFilter } from './compat/transformFilter'\r\nimport { ErrorCodes, createCompilerError, defaultOnError } from './errors'\r\nimport { transformMemo } from './transforms/vMemo'\r\n\r\nexport type TransformPreset = [\r\n  NodeTransform[],\r\n  Record<string, DirectiveTransform>,\r\n]\r\n\r\nexport function getBaseTransformPreset(\r\n  prefixIdentifiers?: boolean,\r\n): TransformPreset {\r\n  return [\r\n    [\r\n      transformOnce,\r\n      transformIf,\r\n      transformMemo,\r\n      transformFor,\r\n      ...(__COMPAT__ ? [transformFilter] : []),\r\n      ...(!__BROWSER__ && prefixIdentifiers\r\n        ? [\r\n            // order is important\r\n            trackVForSlotScopes,\r\n            transformExpression,\r\n          ]\r\n        : __BROWSER__ && __DEV__\r\n          ? [transformExpression]\r\n          : []),\r\n      transformSlotOutlet,\r\n      transformElement,\r\n      trackSlotScopes,\r\n      transformText,\r\n    ],\r\n    {\r\n      on: transformOn,\r\n      bind: transformBind,\r\n      model: transformModel,\r\n    },\r\n  ]\r\n}\r\n\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nexport function baseCompile(\r\n  source: string | RootNode,\r\n  options: CompilerOptions = {},\r\n): CodegenResult {\r\n  const onError = options.onError || defaultOnError\r\n  const isModuleMode = options.mode === 'module'\r\n  /* istanbul ignore if */\r\n  if (__BROWSER__) {\r\n    if (options.prefixIdentifiers === true) {\r\n      onError(createCompilerError(ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED))\r\n    } else if (isModuleMode) {\r\n      onError(createCompilerError(ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED))\r\n    }\r\n  }\r\n\r\n  const prefixIdentifiers =\r\n    !__BROWSER__ && (options.prefixIdentifiers === true || isModuleMode)\r\n  if (!prefixIdentifiers && options.cacheHandlers) {\r\n    onError(createCompilerError(ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED))\r\n  }\r\n  if (options.scopeId && !isModuleMode) {\r\n    onError(createCompilerError(ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED))\r\n  }\r\n\r\n  const resolvedOptions = extend({}, options, {\r\n    prefixIdentifiers,\r\n  })\r\n  // 解析html判断（词法语法分析），最后会生成一个树形结构\r\n  const ast = isString(source) ? baseParse(source, resolvedOptions) : source\r\n  const [nodeTransforms, directiveTransforms] =\r\n    getBaseTransformPreset(prefixIdentifiers)\r\n\r\n  if (!__BROWSER__ && options.isTS) {\r\n    const { expressionPlugins } = options\r\n    if (!expressionPlugins || !expressionPlugins.includes('typescript')) {\r\n      options.expressionPlugins = [...(expressionPlugins || []), 'typescript']\r\n    }\r\n  }\r\n\r\n  transform(\r\n    ast,\r\n    extend({}, resolvedOptions, {\r\n      nodeTransforms: [\r\n        ...nodeTransforms,\r\n        ...(options.nodeTransforms || []), // user transforms\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        directiveTransforms,\r\n        options.directiveTransforms || {}, // user transforms\r\n      ),\r\n    }),\r\n  )\r\n\r\n  return generate(ast, resolvedOptions)\r\n}\r\n","import type { DirectiveTransform } from '../transform'\r\n\r\nexport const noopDirectiveTransform: DirectiveTransform = () => ({ props: [] })\r\n","import { registerRuntimeHelpers } from '@vue/compiler-core'\r\n\r\nexport const V_MODEL_RADIO = Symbol(__DEV__ ? `vModelRadio` : ``)\r\nexport const V_MODEL_CHECKBOX = Symbol(__DEV__ ? `vModelCheckbox` : ``)\r\nexport const V_MODEL_TEXT = Symbol(__DEV__ ? `vModelText` : ``)\r\nexport const V_MODEL_SELECT = Symbol(__DEV__ ? `vModelSelect` : ``)\r\nexport const V_MODEL_DYNAMIC = Symbol(__DEV__ ? `vModelDynamic` : ``)\r\n\r\nexport const V_ON_WITH_MODIFIERS = Symbol(__DEV__ ? `vOnModifiersGuard` : ``)\r\nexport const V_ON_WITH_KEYS = Symbol(__DEV__ ? `vOnKeysGuard` : ``)\r\n\r\nexport const V_SHOW = Symbol(__DEV__ ? `vShow` : ``)\r\n\r\nexport const TRANSITION = Symbol(__DEV__ ? `Transition` : ``)\r\nexport const TRANSITION_GROUP = Symbol(__DEV__ ? `TransitionGroup` : ``)\r\n\r\nregisterRuntimeHelpers({\r\n  [V_MODEL_RADIO]: `vModelRadio`,\r\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n  [V_MODEL_TEXT]: `vModelText`,\r\n  [V_MODEL_SELECT]: `vModelSelect`,\r\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n  [V_ON_WITH_KEYS]: `withKeys`,\r\n  [V_SHOW]: `vShow`,\r\n  [TRANSITION]: `Transition`,\r\n  [TRANSITION_GROUP]: `TransitionGroup`,\r\n})\r\n","/* eslint-disable no-restricted-globals */\r\n\r\nlet decoder: HTMLDivElement\r\n\r\nexport function decodeHtmlBrowser(raw: string, asAttr = false): string {\r\n  if (!decoder) {\r\n    decoder = document.createElement('div')\r\n  }\r\n  if (asAttr) {\r\n    decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, '&quot;')}\">`\r\n    return decoder.children[0].getAttribute('foo')!\r\n  } else {\r\n    decoder.innerHTML = raw\r\n    return decoder.textContent!\r\n  }\r\n}\r\n","import { Namespaces, NodeTypes, type ParserOptions } from '@vue/compiler-core'\r\nimport { isHTMLTag, isMathMLTag, isSVGTag, isVoidTag } from '@vue/shared'\r\nimport { TRANSITION, TRANSITION_GROUP } from './runtimeHelpers'\r\nimport { decodeHtmlBrowser } from './decodeHtmlBrowser'\r\n\r\nexport const parserOptions: ParserOptions = {\r\n  parseMode: 'html',\r\n  isVoidTag,\r\n  isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag) || isMathMLTag(tag),\r\n  isPreTag: tag => tag === 'pre',\r\n  decodeEntities: __BROWSER__ ? decodeHtmlBrowser : undefined,\r\n\r\n  isBuiltInComponent: tag => {\r\n    if (tag === 'Transition' || tag === 'transition') {\r\n      return TRANSITION\r\n    } else if (tag === 'TransitionGroup' || tag === 'transition-group') {\r\n      return TRANSITION_GROUP\r\n    }\r\n  },\r\n\r\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n  getNamespace(tag, parent, rootNamespace) {\r\n    let ns = parent ? parent.ns : rootNamespace\r\n    if (parent && ns === Namespaces.MATH_ML) {\r\n      if (parent.tag === 'annotation-xml') {\r\n        if (tag === 'svg') {\r\n          return Namespaces.SVG\r\n        }\r\n        if (\r\n          parent.props.some(\r\n            a =>\r\n              a.type === NodeTypes.ATTRIBUTE &&\r\n              a.name === 'encoding' &&\r\n              a.value != null &&\r\n              (a.value.content === 'text/html' ||\r\n                a.value.content === 'application/xhtml+xml'),\r\n          )\r\n        ) {\r\n          ns = Namespaces.HTML\r\n        }\r\n      } else if (\r\n        /^m(?:[ions]|text)$/.test(parent.tag) &&\r\n        tag !== 'mglyph' &&\r\n        tag !== 'malignmark'\r\n      ) {\r\n        ns = Namespaces.HTML\r\n      }\r\n    } else if (parent && ns === Namespaces.SVG) {\r\n      if (\r\n        parent.tag === 'foreignObject' ||\r\n        parent.tag === 'desc' ||\r\n        parent.tag === 'title'\r\n      ) {\r\n        ns = Namespaces.HTML\r\n      }\r\n    }\r\n\r\n    if (ns === Namespaces.HTML) {\r\n      if (tag === 'svg') {\r\n        return Namespaces.SVG\r\n      }\r\n      if (tag === 'math') {\r\n        return Namespaces.MATH_ML\r\n      }\r\n    }\r\n    return ns\r\n  },\r\n}\r\n","import {\r\n  ConstantTypes,\r\n  type NodeTransform,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  type SourceLocation,\r\n  createSimpleExpression,\r\n} from '@vue/compiler-core'\r\nimport { parseStringStyle } from '@vue/shared'\r\n\r\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nexport const transformStyle: NodeTransform = node => {\r\n  if (node.type === NodeTypes.ELEMENT) {\r\n    node.props.forEach((p, i) => {\r\n      if (p.type === NodeTypes.ATTRIBUTE && p.name === 'style' && p.value) {\r\n        // replace p with an expression node\r\n        node.props[i] = {\r\n          type: NodeTypes.DIRECTIVE,\r\n          name: `bind`,\r\n          arg: createSimpleExpression(`style`, true, p.loc),\r\n          exp: parseInlineCSS(p.value.content, p.loc),\r\n          modifiers: [],\r\n          loc: p.loc,\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst parseInlineCSS = (\r\n  cssText: string,\r\n  loc: SourceLocation,\r\n): SimpleExpressionNode => {\r\n  const normalized = parseStringStyle(cssText)\r\n  return createSimpleExpression(\r\n    JSON.stringify(normalized),\r\n    false,\r\n    loc,\r\n    ConstantTypes.CAN_STRINGIFY,\r\n  )\r\n}\r\n","import {\r\n  type CompilerError,\r\n  ErrorCodes,\r\n  type SourceLocation,\r\n  createCompilerError,\r\n} from '@vue/compiler-core'\r\n\r\nexport interface DOMCompilerError extends CompilerError {\r\n  code: DOMErrorCodes\r\n}\r\n\r\nexport function createDOMCompilerError(\r\n  code: DOMErrorCodes,\r\n  loc?: SourceLocation,\r\n) {\r\n  return createCompilerError(\r\n    code,\r\n    loc,\r\n    __DEV__ || !__BROWSER__ ? DOMErrorMessages : undefined,\r\n  ) as DOMCompilerError\r\n}\r\n\r\nexport enum DOMErrorCodes {\r\n  X_V_HTML_NO_EXPRESSION = 53 /* ErrorCodes.__EXTEND_POINT__ */,\r\n  X_V_HTML_WITH_CHILDREN,\r\n  X_V_TEXT_NO_EXPRESSION,\r\n  X_V_TEXT_WITH_CHILDREN,\r\n  X_V_MODEL_ON_INVALID_ELEMENT,\r\n  X_V_MODEL_ARG_ON_ELEMENT,\r\n  X_V_MODEL_ON_FILE_INPUT_ELEMENT,\r\n  X_V_MODEL_UNNECESSARY_VALUE,\r\n  X_V_SHOW_NO_EXPRESSION,\r\n  X_TRANSITION_INVALID_CHILDREN,\r\n  X_IGNORED_SIDE_EFFECT_TAG,\r\n  __EXTEND_POINT__,\r\n}\r\n\r\nif (__TEST__) {\r\n  // esbuild cannot infer enum increments if first value is from another\r\n  // file, so we have to manually keep them in sync. this check ensures it\r\n  // errors out if there are collisions.\r\n  if (DOMErrorCodes.X_V_HTML_NO_EXPRESSION < ErrorCodes.__EXTEND_POINT__) {\r\n    throw new Error(\r\n      `DOMErrorCodes need to be updated to ${\r\n        ErrorCodes.__EXTEND_POINT__ + 1\r\n      } to match extension point from core ErrorCodes.`,\r\n    )\r\n  }\r\n}\r\n\r\nexport const DOMErrorMessages: { [code: number]: string } = {\r\n  [DOMErrorCodes.X_V_HTML_NO_EXPRESSION]: `v-html is missing expression.`,\r\n  [DOMErrorCodes.X_V_HTML_WITH_CHILDREN]: `v-html will override element children.`,\r\n  [DOMErrorCodes.X_V_TEXT_NO_EXPRESSION]: `v-text is missing expression.`,\r\n  [DOMErrorCodes.X_V_TEXT_WITH_CHILDREN]: `v-text will override element children.`,\r\n  [DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n  [DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT]: `v-model argument is not supported on plain elements.`,\r\n  [DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n  [DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n  [DOMErrorCodes.X_V_SHOW_NO_EXPRESSION]: `v-show is missing expression.`,\r\n  [DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN]: `<Transition> expects exactly one child element or component.`,\r\n  [DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`,\r\n}\r\n","import {\r\n  type DirectiveTransform,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n} from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\n\r\nexport const transformVHtml: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_NO_EXPRESSION, loc),\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_HTML_WITH_CHILDREN, loc),\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`innerHTML`, true, loc),\r\n        exp || createSimpleExpression('', true),\r\n      ),\r\n    ],\r\n  }\r\n}\r\n","import {\r\n  CompilerDeprecationTypes,\r\n  type DirectiveTransform,\r\n  type ExpressionNode,\r\n  NodeTypes,\r\n  type SimpleExpressionNode,\r\n  type SourceLocation,\r\n  type TransformContext,\r\n  transformOn as baseTransform,\r\n  checkCompatEnabled,\r\n  createCallExpression,\r\n  createCompoundExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  isStaticExp,\r\n} from '@vue/compiler-core'\r\nimport { V_ON_WITH_KEYS, V_ON_WITH_MODIFIERS } from '../runtimeHelpers'\r\nimport { capitalize, makeMap } from '@vue/shared'\r\n\r\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`)\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n  // event propagation management\r\n  `stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`,\r\n)\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right')\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(\r\n  `onkeyup,onkeydown,onkeypress`,\r\n  true,\r\n)\r\n\r\nconst resolveModifiers = (\r\n  key: ExpressionNode,\r\n  modifiers: string[],\r\n  context: TransformContext,\r\n  loc: SourceLocation,\r\n) => {\r\n  const keyModifiers = []\r\n  const nonKeyModifiers = []\r\n  const eventOptionModifiers = []\r\n\r\n  for (let i = 0; i < modifiers.length; i++) {\r\n    const modifier = modifiers[i]\r\n\r\n    if (\r\n      __COMPAT__ &&\r\n      modifier === 'native' &&\r\n      checkCompatEnabled(\r\n        CompilerDeprecationTypes.COMPILER_V_ON_NATIVE,\r\n        context,\r\n        loc,\r\n      )\r\n    ) {\r\n      eventOptionModifiers.push(modifier)\r\n    } else if (isEventOptionModifier(modifier)) {\r\n      // eventOptionModifiers: modifiers for addEventListener() options,\r\n      // e.g. .passive & .capture\r\n      eventOptionModifiers.push(modifier)\r\n    } else {\r\n      // runtimeModifiers: modifiers that needs runtime guards\r\n      if (maybeKeyModifier(modifier)) {\r\n        if (isStaticExp(key)) {\r\n          if (isKeyboardEvent((key as SimpleExpressionNode).content)) {\r\n            keyModifiers.push(modifier)\r\n          } else {\r\n            nonKeyModifiers.push(modifier)\r\n          }\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n          nonKeyModifiers.push(modifier)\r\n        }\r\n      } else {\r\n        if (isNonKeyModifier(modifier)) {\r\n          nonKeyModifiers.push(modifier)\r\n        } else {\r\n          keyModifiers.push(modifier)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    keyModifiers,\r\n    nonKeyModifiers,\r\n    eventOptionModifiers,\r\n  }\r\n}\r\n\r\nconst transformClick = (key: ExpressionNode, event: string) => {\r\n  const isStaticClick =\r\n    isStaticExp(key) && key.content.toLowerCase() === 'onclick'\r\n  return isStaticClick\r\n    ? createSimpleExpression(event, true)\r\n    : key.type !== NodeTypes.SIMPLE_EXPRESSION\r\n      ? createCompoundExpression([\r\n          `(`,\r\n          key,\r\n          `) === \"onClick\" ? \"${event}\" : (`,\r\n          key,\r\n          `)`,\r\n        ])\r\n      : key\r\n}\r\n\r\nexport const transformOn: DirectiveTransform = (dir, node, context) => {\r\n  return baseTransform(dir, node, context, baseResult => {\r\n    const { modifiers } = dir\r\n    if (!modifiers.length) return baseResult\r\n\r\n    let { key, value: handlerExp } = baseResult.props[0]\r\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } =\r\n      resolveModifiers(key, modifiers, context, dir.loc)\r\n\r\n    // normalize click.right and click.middle since they don't actually fire\r\n    if (nonKeyModifiers.includes('right')) {\r\n      key = transformClick(key, `onContextmenu`)\r\n    }\r\n    if (nonKeyModifiers.includes('middle')) {\r\n      key = transformClick(key, `onMouseup`)\r\n    }\r\n\r\n    if (nonKeyModifiers.length) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n        handlerExp,\r\n        JSON.stringify(nonKeyModifiers),\r\n      ])\r\n    }\r\n\r\n    if (\r\n      keyModifiers.length &&\r\n      // if event name is dynamic, always wrap with keys guard\r\n      (!isStaticExp(key) || isKeyboardEvent(key.content))\r\n    ) {\r\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n        handlerExp,\r\n        JSON.stringify(keyModifiers),\r\n      ])\r\n    }\r\n\r\n    if (eventOptionModifiers.length) {\r\n      const modifierPostfix = eventOptionModifiers.map(capitalize).join('')\r\n      key = isStaticExp(key)\r\n        ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n        : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`])\r\n    }\r\n\r\n    return {\r\n      props: [createObjectProperty(key, handlerExp)],\r\n    }\r\n  })\r\n}\r\n","import { ElementTypes, type NodeTransform, NodeTypes } from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\n\r\nexport const ignoreSideEffectTags: NodeTransform = (node, context) => {\r\n  if (\r\n    node.type === NodeTypes.ELEMENT &&\r\n    node.tagType === ElementTypes.ELEMENT &&\r\n    (node.tag === 'script' || node.tag === 'style')\r\n  ) {\r\n    __DEV__ &&\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG,\r\n          node.loc,\r\n        ),\r\n      )\r\n    context.removeNode()\r\n  }\r\n}\r\n","import {\r\n  type CodegenResult,\r\n  type CompilerOptions,\r\n  type DirectiveTransform,\r\n  type NodeTransform,\r\n  type ParserOptions,\r\n  type RootNode,\r\n  baseCompile,\r\n  baseParse,\r\n  noopDirectiveTransform,\r\n} from '@vue/compiler-core'\r\nimport { parserOptions } from './parserOptions'\r\nimport { transformStyle } from './transforms/transformStyle'\r\nimport { transformVHtml } from './transforms/vHtml'\r\nimport { transformVText } from './transforms/vText'\r\nimport { transformModel } from './transforms/vModel'\r\nimport { transformOn } from './transforms/vOn'\r\nimport { transformShow } from './transforms/vShow'\r\nimport { transformTransition } from './transforms/Transition'\r\nimport { stringifyStatic } from './transforms/stringifyStatic'\r\nimport { ignoreSideEffectTags } from './transforms/ignoreSideEffectTags'\r\nimport { extend } from '@vue/shared'\r\n\r\nexport { parserOptions }\r\n\r\nexport const DOMNodeTransforms: NodeTransform[] = [\r\n  transformStyle,\r\n  ...(__DEV__ ? [transformTransition] : []),\r\n]\r\n\r\nexport const DOMDirectiveTransforms: Record<string, DirectiveTransform> = {\r\n  cloak: noopDirectiveTransform,\r\n  html: transformVHtml,\r\n  text: transformVText,\r\n  model: transformModel, // override compiler-core\r\n  on: transformOn, // override compiler-core\r\n  show: transformShow,\r\n}\r\n\r\nexport function compile(\r\n  src: string | RootNode,\r\n  options: CompilerOptions = {},\r\n): CodegenResult {\r\n  return baseCompile(\r\n    src,\r\n    extend({}, parserOptions, options, {\r\n      nodeTransforms: [\r\n        // ignore <script> and <tag>\r\n        // this is not put inside DOMNodeTransforms because that list is used\r\n        // by compiler-ssr to generate vnode fallback branches\r\n        ignoreSideEffectTags,\r\n        ...DOMNodeTransforms,\r\n        ...(options.nodeTransforms || []),\r\n      ],\r\n      directiveTransforms: extend(\r\n        {},\r\n        DOMDirectiveTransforms,\r\n        options.directiveTransforms || {},\r\n      ),\r\n      transformHoist: __BROWSER__ ? null : stringifyStatic,\r\n    }),\r\n  )\r\n}\r\n\r\nexport function parse(template: string, options: ParserOptions = {}): RootNode {\r\n  return baseParse(template, extend({}, parserOptions, options))\r\n}\r\n\r\nexport * from './runtimeHelpers'\r\nexport { transformStyle } from './transforms/transformStyle'\r\nexport {\r\n  createDOMCompilerError,\r\n  DOMErrorCodes,\r\n  DOMErrorMessages,\r\n} from './errors'\r\nexport * from '@vue/compiler-core'\r\n","import {\r\n  type DirectiveTransform,\r\n  TO_DISPLAY_STRING,\r\n  createCallExpression,\r\n  createObjectProperty,\r\n  createSimpleExpression,\r\n  getConstantType,\r\n} from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\n\r\nexport const transformVText: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_NO_EXPRESSION, loc),\r\n    )\r\n  }\r\n  if (node.children.length) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_TEXT_WITH_CHILDREN, loc),\r\n    )\r\n    node.children.length = 0\r\n  }\r\n  return {\r\n    props: [\r\n      createObjectProperty(\r\n        createSimpleExpression(`textContent`, true),\r\n        exp\r\n          ? getConstantType(exp, context) > 0\r\n            ? exp\r\n            : createCallExpression(\r\n                context.helperString(TO_DISPLAY_STRING),\r\n                [exp],\r\n                loc,\r\n              )\r\n          : createSimpleExpression('', true),\r\n      ),\r\n    ],\r\n  }\r\n}\r\n","import {\r\n  type DirectiveTransform,\r\n  ElementTypes,\r\n  NodeTypes,\r\n  transformModel as baseTransform,\r\n  findDir,\r\n  findProp,\r\n  hasDynamicKeyVBind,\r\n  isStaticArgOf,\r\n} from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\nimport {\r\n  V_MODEL_CHECKBOX,\r\n  V_MODEL_DYNAMIC,\r\n  V_MODEL_RADIO,\r\n  V_MODEL_SELECT,\r\n  V_MODEL_TEXT,\r\n} from '../runtimeHelpers'\r\n\r\nexport const transformModel: DirectiveTransform = (dir, node, context) => {\r\n  const baseResult = baseTransform(dir, node, context)\r\n  // base transform has errors OR component v-model (only need props)\r\n  if (!baseResult.props.length || node.tagType === ElementTypes.COMPONENT) {\r\n    return baseResult\r\n  }\r\n\r\n  if (dir.arg) {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT,\r\n        dir.arg.loc,\r\n      ),\r\n    )\r\n  }\r\n\r\n  function checkDuplicatedValue() {\r\n    const value = findDir(node, 'bind')\r\n    if (value && isStaticArgOf(value.arg, 'value')) {\r\n      context.onError(\r\n        createDOMCompilerError(\r\n          DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE,\r\n          value.loc,\r\n        ),\r\n      )\r\n    }\r\n  }\r\n\r\n  const { tag } = node\r\n  const isCustomElement = context.isCustomElement(tag)\r\n  if (\r\n    tag === 'input' ||\r\n    tag === 'textarea' ||\r\n    tag === 'select' ||\r\n    isCustomElement\r\n  ) {\r\n    let directiveToUse = V_MODEL_TEXT\r\n    let isInvalidType = false\r\n    if (tag === 'input' || isCustomElement) {\r\n      const type = findProp(node, `type`)\r\n      if (type) {\r\n        if (type.type === NodeTypes.DIRECTIVE) {\r\n          // :type=\"foo\"\r\n          directiveToUse = V_MODEL_DYNAMIC\r\n        } else if (type.value) {\r\n          switch (type.value.content) {\r\n            case 'radio':\r\n              directiveToUse = V_MODEL_RADIO\r\n              break\r\n            case 'checkbox':\r\n              directiveToUse = V_MODEL_CHECKBOX\r\n              break\r\n            case 'file':\r\n              isInvalidType = true\r\n              context.onError(\r\n                createDOMCompilerError(\r\n                  DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT,\r\n                  dir.loc,\r\n                ),\r\n              )\r\n              break\r\n            default:\r\n              // text type\r\n              __DEV__ && checkDuplicatedValue()\r\n              break\r\n          }\r\n        }\r\n      } else if (hasDynamicKeyVBind(node)) {\r\n        // element has bindings with dynamic keys, which can possibly contain\r\n        // \"type\".\r\n        directiveToUse = V_MODEL_DYNAMIC\r\n      } else {\r\n        // text type\r\n        __DEV__ && checkDuplicatedValue()\r\n      }\r\n    } else if (tag === 'select') {\r\n      directiveToUse = V_MODEL_SELECT\r\n    } else {\r\n      // textarea\r\n      __DEV__ && checkDuplicatedValue()\r\n    }\r\n    // inject runtime directive\r\n    // by returning the helper symbol via needRuntime\r\n    // the import will replaced a resolveDirective call.\r\n    if (!isInvalidType) {\r\n      baseResult.needRuntime = context.helper(directiveToUse)\r\n    }\r\n  } else {\r\n    context.onError(\r\n      createDOMCompilerError(\r\n        DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT,\r\n        dir.loc,\r\n      ),\r\n    )\r\n  }\r\n\r\n  // native vmodel doesn't need the `modelValue` props since they are also\r\n  // passed to the runtime as `binding.value`. removing it reduces code size.\r\n  baseResult.props = baseResult.props.filter(\r\n    p =>\r\n      !(\r\n        p.key.type === NodeTypes.SIMPLE_EXPRESSION &&\r\n        p.key.content === 'modelValue'\r\n      ),\r\n  )\r\n\r\n  return baseResult\r\n}\r\n","import type { DirectiveTransform } from '@vue/compiler-core'\r\nimport { DOMErrorCodes, createDOMCompilerError } from '../errors'\r\nimport { V_SHOW } from '../runtimeHelpers'\r\n\r\nexport const transformShow: DirectiveTransform = (dir, node, context) => {\r\n  const { exp, loc } = dir\r\n  if (!exp) {\r\n    context.onError(\r\n      createDOMCompilerError(DOMErrorCodes.X_V_SHOW_NO_EXPRESSION, loc),\r\n    )\r\n  }\r\n\r\n  return {\r\n    props: [],\r\n    needRuntime: context.helper(V_SHOW),\r\n  }\r\n}\r\n","// This entry is the \"full-build\" that includes both the runtime\r\n// and the compiler, and supports on-the-fly compilation of the template option.\r\nimport { initDev } from './dev'\r\nimport {\r\n  type CompilerError,\r\n  type CompilerOptions,\r\n  compile,\r\n} from '@vue/compiler-dom'\r\nimport {\r\n  type RenderFunction,\r\n  registerRuntimeCompiler,\r\n  warn,\r\n} from '@vue/runtime-dom'\r\nimport * as runtimeDom from '@vue/runtime-dom'\r\nimport {\r\n  EMPTY_OBJ,\r\n  NOOP,\r\n  extend,\r\n  generateCodeFrame,\r\n  isString,\r\n} from '@vue/shared'\r\nimport type { InternalRenderFunction } from 'packages/runtime-core/src/component'\r\n\r\nif (__DEV__) {\r\n  initDev()\r\n}\r\n\r\nconst compileCache = new WeakMap<\r\n  CompilerOptions,\r\n  Record<string, RenderFunction>\r\n>()\r\n\r\nfunction getCache(options?: CompilerOptions) {\r\n  let c = compileCache.get(options ?? EMPTY_OBJ)\r\n  if (!c) {\r\n    c = Object.create(null) as Record<string, RenderFunction>\r\n    compileCache.set(options ?? EMPTY_OBJ, c)\r\n  }\r\n  return c\r\n}\r\n\r\nfunction compileToFunction(\r\n  template: string | HTMLElement,\r\n  options?: CompilerOptions,\r\n): RenderFunction {\r\n  if (!isString(template)) {\r\n    if (template.nodeType) {\r\n      template = template.innerHTML\r\n    } else {\r\n      __DEV__ && warn(`invalid template option: `, template)\r\n      return NOOP\r\n    }\r\n  }\r\n\r\n  const key = template\r\n  const cache = getCache(options)\r\n  const cached = cache[key]\r\n  if (cached) {\r\n    return cached\r\n  }\r\n\r\n  if (template[0] === '#') {\r\n    const el = document.querySelector(template)\r\n    if (__DEV__ && !el) {\r\n      warn(`Template element not found or is empty: ${template}`)\r\n    }\r\n    // __UNSAFE__\r\n    // Reason: potential execution of JS expressions in in-DOM template.\r\n    // The user must make sure the in-DOM template is trusted. If it's rendered\r\n    // by the server, the template should not contain any user data.\r\n    template = el ? el.innerHTML : ``\r\n  }\r\n\r\n  const opts = extend(\r\n    {\r\n      hoistStatic: true,\r\n      onError: __DEV__ ? onError : undefined,\r\n      onWarn: __DEV__ ? e => onError(e, true) : NOOP,\r\n    } as CompilerOptions,\r\n    options,\r\n  )\r\n\r\n  if (!opts.isCustomElement && typeof customElements !== 'undefined') {\r\n    opts.isCustomElement = tag => !!customElements.get(tag)\r\n  }\r\n\r\n  const { code } = compile(template, opts)\r\n\r\n  function onError(err: CompilerError, asWarning = false) {\r\n    const message = asWarning\r\n      ? err.message\r\n      : `Template compilation error: ${err.message}`\r\n    const codeFrame =\r\n      err.loc &&\r\n      generateCodeFrame(\r\n        template as string,\r\n        err.loc.start.offset,\r\n        err.loc.end.offset,\r\n      )\r\n    warn(codeFrame ? `${message}\\n${codeFrame}` : message)\r\n  }\r\n\r\n  // The wildcard import results in a huge object with every export\r\n  // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n  // In the global build we know `Vue` is available globally so we can avoid\r\n  // the wildcard object.\r\n  const render = (\r\n    __GLOBAL__ ? new Function(code)() : new Function('Vue', code)(runtimeDom)\r\n  ) as RenderFunction\r\n\r\n  // mark the function as runtime compiled\r\n  ;(render as InternalRenderFunction)._rc = true\r\n\r\n  return (cache[key] = render)\r\n}\r\n\r\nregisterRuntimeCompiler(compileToFunction)\r\n\r\nexport { compileToFunction as compile }\r\nexport * from '@vue/runtime-dom'\r\n","// using literal strings instead of numbers so that it's easier to inspect\r\n// debugger events\r\n\r\nexport enum TrackOpTypes {\r\n  GET = 'get',\r\n  HAS = 'has',\r\n  ITERATE = 'iterate',\r\n}\r\n\r\nexport enum TriggerOpTypes {\r\n  SET = 'set',\r\n  ADD = 'add',\r\n  DELETE = 'delete',\r\n  CLEAR = 'clear',\r\n}\r\n\r\nexport enum ReactiveFlags {\r\n  // 这个属性表示一个值是否应该被跳过，不进行响应式处理。通常在对对象进行深度遍历时，遇到某些特殊标记的值，需要跳过不处理，以避免循环引用或其他不必要的处理\r\n  SKIP = '__v_skip',\r\n  // 这个属性表示一个值是否已经被设置为响应式。在 Vue 3 的响应式系统中，会为对象的属性添加 getter 和 setter，从而实现数据的响应式变化。如果一个对象已经被设置为响应式，就会通过该标记进行标识。\r\n  IS_REACTIVE = '__v_isReactive',\r\n  // 这个属性表示一个值是否是只读的。在 Vue 3 的响应式系统中，可以通过 readonly 函数将对象转换为只读的，这样就无法对其进行修改操作。通过该标记可以进行判断，从而确定是否应该进行只读的处理。\r\n  IS_READONLY = '__v_isReadonly',\r\n  // 这个属性表示一个值是否是浅响应式的。在某些情况下，只需要对对象的顶层属性进行响应式处理，而不需要深度监听整个对象的变化。通过该标记可以进行标识，从而确定是否应该进行浅响应式处理。\r\n  IS_SHALLOW = '__v_isShallow',\r\n  // 这个属性表示一个值的原始版本。在 Vue 3 的响应式系统中，会为对象的属性添加 getter 和 setter，但有时需要获取对象的原始版本，而不是经过响应式处理后的版本。通过该标记可以进行标识，从而确定获取对象的原始版本。\r\n  RAW = '__v_raw',\r\n}\r\n\r\nexport enum DirtyLevels {\r\n  NotDirty = 0,\r\n  MaybeDirty = 1,\r\n  Dirty = 2,\r\n}\r\n","import type { VNode } from './vnode'\r\nimport {\r\n  type ComponentInternalInstance,\r\n  type ConcreteComponent,\r\n  type Data,\r\n  formatComponentName,\r\n} from './component'\r\nimport { isFunction, isString } from '@vue/shared'\r\nimport { isRef, pauseTracking, resetTracking, toRaw } from '@vue/reactivity'\r\nimport { ErrorCodes, callWithErrorHandling } from './errorHandling'\r\n\r\ntype ComponentVNode = VNode & {\r\n  type: ConcreteComponent\r\n}\r\n\r\nconst stack: VNode[] = []\r\n\r\ntype TraceEntry = {\r\n  vnode: ComponentVNode\r\n  recurseCount: number\r\n}\r\n\r\ntype ComponentTraceStack = TraceEntry[]\r\n\r\nexport function pushWarningContext(vnode: VNode) {\r\n  stack.push(vnode)\r\n}\r\n\r\nexport function popWarningContext() {\r\n  stack.pop()\r\n}\r\n\r\nexport function warn(msg: string, ...args: any[]) {\r\n  // avoid props formatting or warn handler tracking deps that might be mutated\r\n  // during patch, leading to infinite recursion.\r\n  pauseTracking()\r\n\r\n  const instance = stack.length ? stack[stack.length - 1].component : null\r\n  const appWarnHandler = instance && instance.appContext.config.warnHandler\r\n  const trace = getComponentTrace()\r\n\r\n  if (appWarnHandler) {\r\n    callWithErrorHandling(\r\n      appWarnHandler,\r\n      instance,\r\n      ErrorCodes.APP_WARN_HANDLER,\r\n      [\r\n        msg + args.join(''),\r\n        instance && instance.proxy,\r\n        trace\r\n          .map(\r\n            ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`,\r\n          )\r\n          .join('\\n'),\r\n        trace,\r\n      ],\r\n    )\r\n  } else {\r\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args]\r\n    /* istanbul ignore if */\r\n    if (\r\n      trace.length &&\r\n      // avoid spamming console during tests\r\n      !__TEST__\r\n    ) {\r\n      warnArgs.push(`\\n`, ...formatTrace(trace))\r\n    }\r\n    console.warn(...warnArgs)\r\n  }\r\n\r\n  resetTracking()\r\n}\r\n\r\nexport function getComponentTrace(): ComponentTraceStack {\r\n  let currentVNode: VNode | null = stack[stack.length - 1]\r\n  if (!currentVNode) {\r\n    return []\r\n  }\r\n\r\n  // we can't just use the stack because it will be incomplete during updates\r\n  // that did not start from the root. Re-construct the parent chain using\r\n  // instance parent pointers.\r\n  const normalizedStack: ComponentTraceStack = []\r\n\r\n  while (currentVNode) {\r\n    const last = normalizedStack[0]\r\n    if (last && last.vnode === currentVNode) {\r\n      last.recurseCount++\r\n    } else {\r\n      normalizedStack.push({\r\n        vnode: currentVNode as ComponentVNode,\r\n        recurseCount: 0,\r\n      })\r\n    }\r\n    const parentInstance: ComponentInternalInstance | null =\r\n      currentVNode.component && currentVNode.component.parent\r\n    currentVNode = parentInstance && parentInstance.vnode\r\n  }\r\n\r\n  return normalizedStack\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace: ComponentTraceStack): any[] {\r\n  const logs: any[] = []\r\n  trace.forEach((entry, i) => {\r\n    logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry))\r\n  })\r\n  return logs\r\n}\r\n\r\nfunction formatTraceEntry({ vnode, recurseCount }: TraceEntry): any[] {\r\n  const postfix =\r\n    recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``\r\n  const isRoot = vnode.component ? vnode.component.parent == null : false\r\n  const open = ` at <${formatComponentName(\r\n    vnode.component,\r\n    vnode.type,\r\n    isRoot,\r\n  )}`\r\n  const close = `>` + postfix\r\n  return vnode.props\r\n    ? [open, ...formatProps(vnode.props), close]\r\n    : [open + close]\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction formatProps(props: Data): any[] {\r\n  const res: any[] = []\r\n  const keys = Object.keys(props)\r\n  keys.slice(0, 3).forEach(key => {\r\n    res.push(...formatProp(key, props[key]))\r\n  })\r\n  if (keys.length > 3) {\r\n    res.push(` ...`)\r\n  }\r\n  return res\r\n}\r\n\r\nfunction formatProp(key: string, value: unknown): any[]\r\nfunction formatProp(key: string, value: unknown, raw: true): any\r\n/* istanbul ignore next */\r\nfunction formatProp(key: string, value: unknown, raw?: boolean): any {\r\n  if (isString(value)) {\r\n    value = JSON.stringify(value)\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (\r\n    typeof value === 'number' ||\r\n    typeof value === 'boolean' ||\r\n    value == null\r\n  ) {\r\n    return raw ? value : [`${key}=${value}`]\r\n  } else if (isRef(value)) {\r\n    value = formatProp(key, toRaw(value.value), true)\r\n    return raw ? value : [`${key}=Ref<`, value, `>`]\r\n  } else if (isFunction(value)) {\r\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`]\r\n  } else {\r\n    value = toRaw(value)\r\n    return raw ? value : [`${key}=`, value]\r\n  }\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function assertNumber(val: unknown, type: string) {\r\n  if (!__DEV__) return\r\n  if (val === undefined) {\r\n    return\r\n  } else if (typeof val !== 'number') {\r\n    warn(`${type} is not a valid number - ` + `got ${JSON.stringify(val)}.`)\r\n  } else if (isNaN(val)) {\r\n    warn(`${type} is NaN - ` + 'the duration expression might be incorrect.')\r\n  }\r\n}\r\n","import { isArray } from '@vue/shared'\r\nimport type { VNode } from '../vnode'\r\n\r\n// #6651 res can be undefined in SSR in string push mode\r\ntype SSRSlot = (...args: any[]) => VNode[] | undefined\r\n\r\ninterface CompiledSlotDescriptor {\r\n  name: string\r\n  fn: SSRSlot\r\n  key?: string\r\n}\r\n\r\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nexport function createSlots(\r\n  slots: Record<string, SSRSlot>,\r\n  dynamicSlots: (\r\n    | CompiledSlotDescriptor\r\n    | CompiledSlotDescriptor[]\r\n    | undefined\r\n  )[],\r\n): Record<string, SSRSlot> {\r\n  for (let i = 0; i < dynamicSlots.length; i++) {\r\n    const slot = dynamicSlots[i]\r\n    // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n    if (isArray(slot)) {\r\n      for (let j = 0; j < slot.length; j++) {\r\n        slots[slot[j].name] = slot[j].fn\r\n      }\r\n    } else if (slot) {\r\n      // conditional single slot generated by <template v-if=\"...\" #foo>\r\n      slots[slot.name] = slot.key\r\n        ? (...args: any[]) => {\r\n            const res = slot.fn(...args)\r\n            // attach branch key so each conditional branch is considered a\r\n            // different fragment\r\n            if (res) (res as any).key = slot.key\r\n            return res\r\n          }\r\n        : slot.fn\r\n    }\r\n  }\r\n  return slots\r\n}\r\n","import { type Ref, isReactive, isReadonly, isRef, toRaw } from '@vue/reactivity'\r\nimport { EMPTY_OBJ, extend, isArray, isFunction, isObject } from '@vue/shared'\r\nimport { isShallow } from '../../reactivity/src/reactive'\r\nimport type { ComponentInternalInstance, ComponentOptions } from './component'\r\nimport type { ComponentPublicInstance } from './componentPublicInstance'\r\n\r\nexport function initCustomFormatter() {\r\n  /* eslint-disable no-restricted-globals */\r\n  if (!__DEV__ || typeof window === 'undefined') {\r\n    return\r\n  }\r\n\r\n  const vueStyle = { style: 'color:#3ba776' }\r\n  const numberStyle = { style: 'color:#1677ff' }\r\n  const stringStyle = { style: 'color:#f5222d' }\r\n  const keywordStyle = { style: 'color:#eb2f96' }\r\n\r\n  // custom formatter for Chrome\r\n  // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n  const formatter = {\r\n    header(obj: unknown) {\r\n      // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n      if (!isObject(obj)) {\r\n        return null\r\n      }\r\n\r\n      if (obj.__isVue) {\r\n        return ['div', vueStyle, `VueInstance`]\r\n      } else if (isRef(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, genRefFlag(obj)],\r\n          '<',\r\n          formatValue(obj.value),\r\n          `>`,\r\n        ]\r\n      } else if (isReactive(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'],\r\n          '<',\r\n          formatValue(obj),\r\n          `>${isReadonly(obj) ? ` (readonly)` : ``}`,\r\n        ]\r\n      } else if (isReadonly(obj)) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'],\r\n          '<',\r\n          formatValue(obj),\r\n          '>',\r\n        ]\r\n      }\r\n      return null\r\n    },\r\n    hasBody(obj: unknown) {\r\n      return obj && (obj as any).__isVue\r\n    },\r\n    body(obj: unknown) {\r\n      if (obj && (obj as any).__isVue) {\r\n        return [\r\n          'div',\r\n          {},\r\n          ...formatInstance((obj as ComponentPublicInstance).$),\r\n        ]\r\n      }\r\n    },\r\n  }\r\n\r\n  function formatInstance(instance: ComponentInternalInstance) {\r\n    const blocks = []\r\n    if (instance.type.props && instance.props) {\r\n      blocks.push(createInstanceBlock('props', toRaw(instance.props)))\r\n    }\r\n    if (instance.setupState !== EMPTY_OBJ) {\r\n      blocks.push(createInstanceBlock('setup', instance.setupState))\r\n    }\r\n    if (instance.data !== EMPTY_OBJ) {\r\n      blocks.push(createInstanceBlock('data', toRaw(instance.data)))\r\n    }\r\n    const computed = extractKeys(instance, 'computed')\r\n    if (computed) {\r\n      blocks.push(createInstanceBlock('computed', computed))\r\n    }\r\n    const injected = extractKeys(instance, 'inject')\r\n    if (injected) {\r\n      blocks.push(createInstanceBlock('injected', injected))\r\n    }\r\n\r\n    blocks.push([\r\n      'div',\r\n      {},\r\n      [\r\n        'span',\r\n        {\r\n          style: keywordStyle.style + ';opacity:0.66',\r\n        },\r\n        '$ (internal): ',\r\n      ],\r\n      ['object', { object: instance }],\r\n    ])\r\n    return blocks\r\n  }\r\n\r\n  function createInstanceBlock(type: string, target: any) {\r\n    target = extend({}, target)\r\n    if (!Object.keys(target).length) {\r\n      return ['span', {}]\r\n    }\r\n    return [\r\n      'div',\r\n      { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n      [\r\n        'div',\r\n        {\r\n          style: 'color:#476582',\r\n        },\r\n        type,\r\n      ],\r\n      [\r\n        'div',\r\n        {\r\n          style: 'padding-left:1.25em',\r\n        },\r\n        ...Object.keys(target).map(key => {\r\n          return [\r\n            'div',\r\n            {},\r\n            ['span', keywordStyle, key + ': '],\r\n            formatValue(target[key], false),\r\n          ]\r\n        }),\r\n      ],\r\n    ]\r\n  }\r\n\r\n  function formatValue(v: unknown, asRaw = true) {\r\n    if (typeof v === 'number') {\r\n      return ['span', numberStyle, v]\r\n    } else if (typeof v === 'string') {\r\n      return ['span', stringStyle, JSON.stringify(v)]\r\n    } else if (typeof v === 'boolean') {\r\n      return ['span', keywordStyle, v]\r\n    } else if (isObject(v)) {\r\n      return ['object', { object: asRaw ? toRaw(v) : v }]\r\n    } else {\r\n      return ['span', stringStyle, String(v)]\r\n    }\r\n  }\r\n\r\n  function extractKeys(instance: ComponentInternalInstance, type: string) {\r\n    const Comp = instance.type\r\n    if (isFunction(Comp)) {\r\n      return\r\n    }\r\n    const extracted: Record<string, any> = {}\r\n    for (const key in instance.ctx) {\r\n      if (isKeyOfType(Comp, key, type)) {\r\n        extracted[key] = instance.ctx[key]\r\n      }\r\n    }\r\n    return extracted\r\n  }\r\n\r\n  function isKeyOfType(Comp: ComponentOptions, key: string, type: string) {\r\n    const opts = Comp[type]\r\n    if (\r\n      (isArray(opts) && opts.includes(key)) ||\r\n      (isObject(opts) && key in opts)\r\n    ) {\r\n      return true\r\n    }\r\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n      return true\r\n    }\r\n    if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  function genRefFlag(v: Ref) {\r\n    if (isShallow(v)) {\r\n      return `ShallowRef`\r\n    }\r\n    if ((v as any).effect) {\r\n      return `ComputedRef`\r\n    }\r\n    return `Ref`\r\n  }\r\n\r\n  if ((window as any).devtoolsFormatters) {\r\n    ;(window as any).devtoolsFormatters.push(formatter)\r\n  } else {\r\n    ;(window as any).devtoolsFormatters = [formatter]\r\n  }\r\n}\r\n","import type { VNode, VNodeChild } from '../vnode'\r\nimport { isArray, isObject, isString } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * v-for string\r\n * @private\r\n */\r\nexport function renderList(\r\n  source: string,\r\n  renderItem: (value: string, index: number) => VNodeChild,\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for number\r\n */\r\nexport function renderList(\r\n  source: number,\r\n  renderItem: (value: number, index: number) => VNodeChild,\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for array\r\n */\r\nexport function renderList<T>(\r\n  source: T[],\r\n  renderItem: (value: T, index: number) => VNodeChild,\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for iterable\r\n */\r\nexport function renderList<T>(\r\n  source: Iterable<T>,\r\n  renderItem: (value: T, index: number) => VNodeChild,\r\n): VNodeChild[]\r\n\r\n/**\r\n * v-for object\r\n */\r\nexport function renderList<T>(\r\n  source: T,\r\n  renderItem: <K extends keyof T>(\r\n    value: T[K],\r\n    key: K,\r\n    index: number,\r\n  ) => VNodeChild,\r\n): VNodeChild[]\r\n\r\n/**\r\n * Actual implementation\r\n */\r\nexport function renderList(\r\n  source: any,\r\n  renderItem: (...args: any[]) => VNodeChild,\r\n  cache?: any[],\r\n  index?: number,\r\n): VNodeChild[] {\r\n  let ret: VNodeChild[]\r\n  const cached = (cache && cache[index!]) as VNode[] | undefined\r\n\r\n  if (isArray(source) || isString(source)) {\r\n    ret = new Array(source.length)\r\n    for (let i = 0, l = source.length; i < l; i++) {\r\n      ret[i] = renderItem(source[i], i, undefined, cached && cached[i])\r\n    }\r\n  } else if (typeof source === 'number') {\r\n    if (__DEV__ && !Number.isInteger(source)) {\r\n      warn(`The v-for range expect an integer value but got ${source}.`)\r\n    }\r\n    ret = new Array(source)\r\n    for (let i = 0; i < source; i++) {\r\n      ret[i] = renderItem(i + 1, i, undefined, cached && cached[i])\r\n    }\r\n  } else if (isObject(source)) {\r\n    if (source[Symbol.iterator as any]) {\r\n      ret = Array.from(source as Iterable<any>, (item, i) =>\r\n        renderItem(item, i, undefined, cached && cached[i]),\r\n      )\r\n    } else {\r\n      const keys = Object.keys(source)\r\n      ret = new Array(keys.length)\r\n      for (let i = 0, l = keys.length; i < l; i++) {\r\n        const key = keys[i]\r\n        ret[i] = renderItem(source[key], key, i, cached && cached[i])\r\n      }\r\n    }\r\n  } else {\r\n    ret = []\r\n  }\r\n\r\n  if (cache) {\r\n    cache[index!] = ret\r\n  }\r\n  return ret\r\n}\r\n","import { isObject, toHandlerKey } from '@vue/shared'\r\nimport { warn } from '../warning'\r\n\r\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nexport function toHandlers(\r\n  obj: Record<string, any>,\r\n  preserveCaseIfNecessary?: boolean,\r\n): Record<string, any> {\r\n  const ret: Record<string, any> = {}\r\n  if (__DEV__ && !isObject(obj)) {\r\n    warn(`v-on with no argument expects an object value.`)\r\n    return ret\r\n  }\r\n  for (const key in obj) {\r\n    ret[\r\n      preserveCaseIfNecessary && /[A-Z]/.test(key)\r\n        ? `on:${key}`\r\n        : toHandlerKey(key)\r\n    ] = obj[key]\r\n  }\r\n  return ret\r\n}\r\n","import { getCurrentInstance, warn } from '@vue/runtime-core'\r\nimport { EMPTY_OBJ } from '@vue/shared'\r\n\r\nexport function useCssModule(name = '$style'): Record<string, string> {\r\n  /* istanbul ignore else */\r\n  if (!__GLOBAL__) {\r\n    const instance = getCurrentInstance()!\r\n    if (!instance) {\r\n      __DEV__ && warn(`useCssModule must be called inside setup()`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const modules = instance.type.__cssModules\r\n    if (!modules) {\r\n      __DEV__ && warn(`Current instance does not have CSS modules injected.`)\r\n      return EMPTY_OBJ\r\n    }\r\n    const mod = modules[name]\r\n    if (!mod) {\r\n      __DEV__ &&\r\n        warn(`Current instance does not have CSS module named \"${name}\".`)\r\n      return EMPTY_OBJ\r\n    }\r\n    return mod as Record<string, string>\r\n  } else {\r\n    if (__DEV__) {\r\n      warn(`useCssModule() is not supported in the global build.`)\r\n    }\r\n    return EMPTY_OBJ\r\n  }\r\n}\r\n","import { type Ref, customRef, ref } from '@vue/reactivity'\r\nimport { EMPTY_OBJ, camelize, hasChanged, hyphenate } from '@vue/shared'\r\nimport type { DefineModelOptions, ModelRef } from '../apiSetupHelpers'\r\nimport { getCurrentInstance } from '../component'\r\nimport { warn } from '../warning'\r\nimport type { NormalizedProps } from '../componentProps'\r\nimport { watchSyncEffect } from '../apiWatch'\r\n\r\nexport function useModel<\r\n  M extends string | number | symbol,\r\n  T extends Record<string, any>,\r\n  K extends keyof T,\r\n>(props: T, name: K, options?: DefineModelOptions<T[K]>): ModelRef<T[K], M>\r\nexport function useModel(\r\n  props: Record<string, any>,\r\n  name: string,\r\n  options: DefineModelOptions = EMPTY_OBJ,\r\n): Ref {\r\n  const i = getCurrentInstance()!\r\n  if (__DEV__ && !i) {\r\n    warn(`useModel() called without active instance.`)\r\n    return ref() as any\r\n  }\r\n\r\n  if (__DEV__ && !(i.propsOptions[0] as NormalizedProps)[name]) {\r\n    warn(`useModel() called with prop \"${name}\" which is not declared.`)\r\n    return ref() as any\r\n  }\r\n\r\n  const camelizedName = camelize(name)\r\n  const hyphenatedName = hyphenate(name)\r\n\r\n  const res = customRef((track, trigger) => {\r\n    let localValue: any\r\n    watchSyncEffect(() => {\r\n      const propValue = props[name]\r\n      if (hasChanged(localValue, propValue)) {\r\n        localValue = propValue\r\n        trigger()\r\n      }\r\n    })\r\n    return {\r\n      get() {\r\n        track()\r\n        return options.get ? options.get(localValue) : localValue\r\n      },\r\n      set(value) {\r\n        const rawProps = i.vnode!.props\r\n        if (\r\n          !(\r\n            rawProps &&\r\n            // check if parent has passed v-model\r\n            (name in rawProps ||\r\n              camelizedName in rawProps ||\r\n              hyphenatedName in rawProps) &&\r\n            (`onUpdate:${name}` in rawProps ||\r\n              `onUpdate:${camelizedName}` in rawProps ||\r\n              `onUpdate:${hyphenatedName}` in rawProps)\r\n          ) &&\r\n          hasChanged(value, localValue)\r\n        ) {\r\n          localValue = value\r\n          trigger()\r\n        }\r\n        i.emit(`update:${name}`, options.set ? options.set(value) : value)\r\n      },\r\n    }\r\n  })\r\n\r\n  const modifierKey =\r\n    name === 'modelValue' ? 'modelModifiers' : `${name}Modifiers`\r\n\r\n  // @ts-expect-error\r\n  res[Symbol.iterator] = () => {\r\n    let i = 0\r\n    return {\r\n      next() {\r\n        if (i < 2) {\r\n          return { value: i++ ? props[modifierKey] || {} : res, done: false }\r\n        } else {\r\n          return { done: true }\r\n        }\r\n      },\r\n    }\r\n  }\r\n\r\n  return res\r\n}\r\n"],"names":["makeMap","str","expectsLowerCase","set","Set","split","val","has","toLowerCase","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","isOn","key","charCodeAt","isModelListener","startsWith","extend","Object","assign","remove","arr","el","i","indexOf","splice","hasOwnProperty","prototype","hasOwn","call","isArray","Array","isMap","toTypeString","isSet","isDate","isFunction","isString","isSymbol","isObject","isPromise","then","catch","objectToString","toString","value","toRawType","slice","isPlainObject","isIntegerKey","parseInt","isReservedProp","isBuiltInDirective","cacheStringFunction","fn","cache","create","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","oldValue","is","invokeArrayFns","fns","arg","length","def","obj","defineProperty","configurable","enumerable","looseToNumber","n","parseFloat","isNaN","toNumber","Number","NaN","_globalThis","getGlobalThis","globalThis","self","window","global","isGloballyAllowed","normalizeStyle","res","item","normalized","parseStringStyle","listDelimiterRE","propertyDelimiterRE","styleCommentRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","isHTMLTag","isSVGTag","isMathMLTag","isVoidTag","isSpecialBooleanAttr","includeBooleanAttr","looseEqual","a","b","aValidType","bValidType","getTime","equal","looseCompareArrays","keys","aHasKey","bHasKey","String","looseIndexOf","findIndex","replacer","_key","__v_isRef","size","entries","reduce","stringifySymbol","values","map","v","_a","description","activeEffectScope","EffectScope","constructor","detached","this","__publicField","parent","index","scopes","push","active","_active","run","currentEffectScope","on","off","stop","fromParent","l","effects","cleanups","last","pop","recordEffectScope","effect","scope","getCurrentScope","activeEffect","ReactiveEffect","trigger","scheduler","dirty","_dirtyLevel","pauseTracking","_depsLength","dep","deps","computed","triggerComputed","resetTracking","lastShouldTrack","shouldTrack","lastEffect","_runnings","preCleanupEffect","postCleanupEffect","onStop","_trackId","cleanupDepEffect","trackId","get","delete","cleanup","pauseScheduleStack","trackStack","pauseScheduling","resetScheduling","queueEffectSchedulers","shift","trackEffect","debuggerEventExtraInfo","oldDep","triggerEffects","dirtyLevel","lastDirtyLevel","_shouldSchedule","scheduleEffects","allowRecurse","createDep","Map","targetMap","WeakMap","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","track","target","type","depsMap","newValue","oldTarget","newLength","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","toRaw","apply","BaseReactiveHandler","_isReadonly","_shallow","receiver","isReadonly","shallow","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","getPrototypeOf","targetIsArray","Reflect","isRef","readonly","reactive","MutableReactiveHandler","super","isOldValueReadonly","isShallow","hadKey","result","deleteProperty","ownKeys","ReadonlyReactiveHandler","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toShallow","getProto","rawTarget","rawKey","wrap","toReadonly","toReactive","add","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isExtensible","rawType","targetTypeMap","proxy","Proxy","isReactive","isProxy","raw","markRaw","ComputedRefImpl","getter","_setter","isSSR","_value","triggerRefValue","_cacheable","trackRefValue","_dirty","ref","newVal","r","createRef","rawValue","RefImpl","__v_isShallow","_rawValue","useDirectValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","_get","_set","customRef","ObjectRefImpl","_object","_defaultValue","object","GetterRefImpl","_getter","propertyToRef","source","defaultValue","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","throwInDev","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","console","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","resolve","currentFlushPromise","nextTick","p","bind","queueJob","job","includes","id","start","end","middle","middleJob","middleJobId","getId","pre","findInsertionIndex","queueFlush","flushJobs","queuePostFlushCb","cb","flushPreFlushCbs","seen","uid","flushPostFlushCbs","deduped","sort","Infinity","comparator","diff","emit","event","rawArgs","isUnmounted","props","vnode","modelArg","modifiersKey","number","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","emitsCache","cached","emits","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","options","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","blockStack","createVNode","Comment","root","some","filterModelListeners","cloneVNode","dirs","concat","transition","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","updateHOCHostEl","subTree","suspense","activeBranch","COMPONENTS","NULL_DYNAMIC_COMPONENT","for","resolveAsset","warnMissing","maybeSelfReference","currentInstance","selfName","getComponentName","registry","isSuspense","__isSuspense","suspenseId","Suspense","process","n1","n2","container","anchor","parentComponent","parentSuspense","namespace","slotScopeIds","optimized","rendererInternals","patch","o","createElement","hiddenContainer","createSuspenseBoundary","pendingBranch","ssContent","triggerEvent","ssFallback","setActiveBranch","mountSuspense","um","unmount","newBranch","newFallback","isInFallback","isHydrating","isSameVNodeType","pendingId","component","timeout","setTimeout","fallback","patchSuspense","hydrate","node","hydrateNode","parentNode","document","normalize","children","isSlotChildren","normalizeSuspenseSlot","default","eventListener","m","move","parentSuspenseId","isSuspensible","suspensible","isVNodeSuspensible","initialAnchor","resume","sync","delayEnter","mode","afterLeave","hasUnresolvedAncestor","fallbackVNode","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","asyncResolved","handleSetupResult","placeholder","doRemove","s","block","trackBlock","isBlockTreeEnabled","openBlock","currentBlock","closeBlock","singleChild","recurse","singleRoot","child","isVNode","filterSingleRoot","dynamicChildren","queueEffectWithSuspense","branch","ssrContextKey","watchPostEffect","doWatch","flush","watchSyncEffect","INITIAL_WATCHER_VALUE","watch","immediate","deep","once","_cb","unwatch","reactiveGetter","traverse","forceTrigger","isMultiSource","onCleanup","baseGetter","fill","queuePostRenderEffect","instanceWatch","publicThis","createPathGetter","reset","setCurrentInstance","path","segments","depth","currentDepth","invokeDirectiveHook","prevVNode","bindings","oldBindings","binding","hook","dir","leaveCbKey","enterCbKey","useTransitionState","state","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","BaseTransitionPropsValidators","appear","Boolean","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","BaseTransition","setup","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","leavingVNodesCache","callHook","callAsyncHook","every","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","cancelled","leave","clone","isKeepAlive","keepComment","parentKey","keyedFragmentCount","Fragment","patchFlag","defineComponent","extraOptions","isAsyncWrapper","__asyncLoader","createInnerComp","ce","__isKeepAlive","KeepAlive","include","RegExp","exclude","max","sharedContext","current","renderer","_unmount","storageContainer","resetShapeFlag","pruneCache","pruneCacheEntry","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","matches","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","rawVNode","__asyncResolved","cachedVNode","pattern","test","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","ensureValidVNode","vnodes","getPublicInstance","isStatefulComponent","getExposeProxy","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","f","$nextTick","$watch","hasSetupBinding","__isScriptSetup","PublicInstanceProxyHandlers","accessCache","normalizedProps","shouldCacheAccess","publicGetter","cssModule","globalProperties","__cssModules","descriptor","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","getContext","setupContext","createSetupContext","normalizePropsOrEmits","applyOptions","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provide","provideOptions","inject","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","directives","checkDuplicateProperties","normalizeInject","opt","from","resolveInjections","methodHandler","createWatcher","provides","registerLifecycleHook","register","_hook","exposed","h","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeEmitsOrPropsOptions","mergeObjectOptions","mergeAsArray","beforeDestroy","destroyed","merged","createAppContext","app","isNativeTag","performance","warnHandler","compilerOptions","propsCache","createAppAPI","rootComponent","rootProps","context","installedPlugins","WeakSet","_uid","_component","_props","_container","_context","_instance","version","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","__vue_app__","runWithContext","currentApp","parentProvides","treatDefaultAsFactory","arguments","setFullProps","needCastKeys","rawCastValues","hasAttrsChanged","camelKey","rawCurrentProps","castValues","resolvePropValue","isAbsent","hasDefault","skipFactory","propsDefaults","normalizePropsOptions","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","isSameType","expectedTypes","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","InternalObjectKey","updateSlots","needDeletionCheck","deletionComparisonTarget","$stable","setRef","rawRef","oldRawRef","isUnmount","refValue","owner","oldRef","_isString","_isRef","isVFor","doSet","existing","k","hasMismatch","getContainerType","namespaceURI","tagName","isSVGContainer","isMathMLContainer","isComment","nodeType","createHydrationFunctions","mt","mountComponent","patchProp","createText","nextSibling","insert","createComment","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","Text","isTemplateNode","replaceNode","content","firstChild","Static","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","locateClosingAnchor","previousSibling","lastChild","createTextVNode","hydrateChildren","forcePatch","vnodeHooks","needCallTransitionHooks","needTransition","innerHTML","textContent","endsWith","onClick","onVnodeBeforeMount","parentVNode","fragmentSlotScopeIds","isFragment","open","close","newNode","oldNode","replaceChild","hasChildNodes","_vnode","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","__VUE__","hostInsert","hostRemove","hostPatchProp","hostCreateElement","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","internals","mountElement","patchElement","mountChildren","resolveChildrenNamespace","scopeId","unmountChildren","cloneIfMounted","oldProps","newProps","toggleRecurse","onVnodeBeforeUpdate","patchBlockChildren","patchChildren","patchProps","class","style","propsToUpdate","dynamicProps","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","updateComponent","initialVNode","emptyAppContext","exposeProxy","attrsProxy","slotsProxy","bc","bm","bu","u","bum","rtg","rtc","sp","createComponentInstance","setInSSRSetupState","isStateful","initProps","setupResult","unsetCurrentInstance","resolvedResult","e","finishComponentSetup","setupStatefulComponent","setupComponent","nextVNode","prevChildren","nextChildren","shouldUpdateComponent","updateComponentPreRender","invalidateJob","componentUpdateFn","nonHydratedAsyncRoot","locateNonHydratedAsyncRoot","originNext","nextTree","prevTree","isAsyncWrapperVNode","hydrateSubTree","scopedInitialVNode","rawPrevProps","kebabKey","camelizedKey","updateProps","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","len","arrI","getSequence","nextIndex","moveType","moveStaticNode","performLeave","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","removeFragment","removeStaticNode","performRemove","mc","pc","pbc","createApp","currentNamespace","encoding","allowed","ch1","ch2","subComponent","isTeleportDisabled","disabled","isTargetSVG","SVGElement","isTargetMathML","MathMLElement","resolveTarget","select","targetSelector","moveTeleport","targetAnchor","isReorder","Teleport","__isTeleport","querySelector","mainAnchor","wasDisabled","currentContainer","currentAnchor","nextTarget","updateCssVars","shouldRemove","targetNode","_lpa","ut","setAttribute","disableTracking","setupBlock","createBlock","__v_isVNode","normalizeKey","normalizeRef","ref_key","ref_for","createBaseVNode","isBlockNode","needFullChildrenNormalization","__v_skip","normalizeChildren","cloned","__vccOpts","guardReactiveProps","klass","isTeleport","extraProps","mergeRef","mergedProps","mergeProps","text","flag","memo","slot","slotFlag","toMerge","incoming","internalSetCurrentInstance","compile","installWithProxy","registerRuntimeCompiler","_compile","_rc","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","getAttrsProxy","includeInferred","displayName","__name","getterOrOptions","debugOptions","setter","onlyGetter","_computed","propsOrChildren","isMemoSame","warn","setDevtoolsHook","doc","templateContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","createTextNode","nodeValue","selector","before","cloneNode","wrapper","appendChild","TRANSITION","ANIMATION","vtcKey","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","hasExplicitCallback","baseProps","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","_isLeaving","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","cls","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","removeEventListener","onEnd","addEventListener","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","vShowOldKey","vShow","display","setDisplay","CSS_VAR_TEXT","setVarsOnVNode","vars","setVarsOnNode","setProperty","importantRE","setStyle","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","veiKey","patchEvent","prevValue","nextValue","invokers","existingInvoker","optionsModifierRE","parseName","invoker","initialValue","_vts","attached","Date","now","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","cachedNow","isNativeOn","defineCustomElement","Comp","VueCustomElement","VueElement","initialProps","BaseClass","HTMLElement","_def","shadowRoot","_createVNode","attachShadow","_resolveProps","connectedCallback","_connected","_resolved","_update","_resolveDef","disconnectedCallback","_ob","disconnect","attributes","_setAttr","MutationObserver","mutations","attributeName","observe","isAsync","numberProps","_numberProps","_applyStyles","asyncDef","declaredPropKeys","_setProp","_getProp","getAttribute","shouldReflect","shouldUpdate","removeAttribute","isCE","dispatch","dispatchEvent","CustomEvent","detail","host","positionMap","newPositionMap","moveCbKey","TransitionGroupImpl","moveClass","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","propertyName","cssTransitionProps","getBoundingClientRect","TransitionGroup","oldPos","newPos","dx","left","dy","top","getModelAssigner","onCompositionStart","composing","onCompositionEnd","Event","assignKey","vModelText","modifiers","lazy","castToNumber","domValue","activeElement","vModelCheckbox","modelValue","_modelValue","elementValue","getValue","checked","found","filtered","getCheckboxValue","setChecked","vModelRadio","vModelSelect","isSetModel","selectedVal","selected","_assigning","setSelected","_binding","isMultiple","isArrayValue","option","optionValue","optionType","selectedIndex","vModelDynamic","callModelHook","resolveDynamicModel","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shiftKey","alt","altKey","meta","metaKey","button","right","exact","keyNames","esc","space","up","down","rendererOptions","isSVG","transitionClasses","join","className","patchClass","currentDisplay","isCssString","cssVarText","patchStyle","shouldSetAsProp","needRemove","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","enabledHydration","ensureRenderer","ensureHydrationRenderer","resolveRootNamespace","normalizeContainer","initDirectivesForSSR","FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","locStub","line","column","offset","createVNodeCall","isBlock","isComponent","loc","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","createSimpleExpression","isStatic","constType","createCompoundExpression","createCallExpression","callee","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","consequent","alternate","ssr","convertToBlock","removeHelper","defaultDelimitersOpen","Uint8Array","defaultDelimitersClose","isTagStartChar","isWhitespace","isEndOfTagSection","toCharCodes","Sequences","Cdata","CdataEnd","CommentEnd","ScriptEnd","StyleEnd","TitleEnd","TextareaEnd","defaultOnError","defaultOnWarn","msg","createCompilerError","code","messages","additionalMessage","SyntaxError","isStaticExp","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpression","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","char","findDir","allowEmpty","exp","findProp","dynamicOnly","isStaticArgOf","isText","isVSlot","tagType","isSlotOutlet","propsHelperSet","getUnnormalizedProps","callPath","injectProp","propsWithInjection","parentCall","first","hasProp","propKeyName","toValidAssetId","searchValue","replaceValue","forAliasRE","defaultParserOptions","parseMode","ns","getNamespace","isPreTag","onError","onWarn","comments","prefixIdentifiers","currentOptions","currentRoot","currentInput","currentOpenTag","currentProp","currentAttrValue","currentAttrStartIndex","currentAttrEndIndex","inPre","inVPre","currentVPreBoundary","stack","tokenizer","cbs","inSFCRoot","buffer","sectionStart","baseState","inRCDATA","currentSequence","newlines","delimiterOpen","delimiterClose","getPos","newlineIndex","peek","stateText","ontext","delimiterIndex","stateInterpolationOpen","stateInRCDATA","stateInterpolation","stateInterpolationClose","oninterpolation","stateSpecialStartSequence","isEnd","sequenceIndex","stateInTagName","endOfText","actualIndex","stateInClosingTagName","fastForwardTo","stateCDATASequence","stateInDeclaration","cc","stateInCommentLike","oncdata","oncomment","startSpecial","sequence","enterRCDATA","stateBeforeTagName","inXML","lower","handleTagName","stateInSFCRootTagName","onopentagname","stateBeforeAttrName","stateBeforeClosingTagName","onclosetag","stateAfterClosingTagName","onopentagend","handleAttrStart","ondirname","stateInSelfClosingTag","onselfclosingtag","stateInAttrName","onattribname","handleAttrNameEnd","stateInDirName","stateInDirArg","ondirarg","stateInDynamicDirArg","stateInDirModifier","ondirmodifier","onattribnameend","stateAfterAttrName","onattribend","stateBeforeAttrValue","stateInAttrValueNoQuotes","handleInAttrValue","quote","onattribdata","stateInAttrValueDoubleQuotes","stateInAttrValueSingleQuotes","onerr","stateBeforeDeclaration","stateInProcessingInstruction","onprocessinginstruction","stateBeforeComment","stateInSpecialComment","stateBeforeSpecialS","stateBeforeSpecialT","startEntity","stateInEntity","parse","input","finish","handleTrailingData","onend","endIndex","emitCodePoint","cp","consumed","emitError","onText","getSlice","ontextentity","innerStart","innerEnd","decodeEntities","addNode","createExp","getLoc","codegenNode","endOpenTag","onCloseTag","backTrack","isSelfClosing","nameLoc","dirToAttr","setLocEnd","mod","onattribentity","condense","expParseMode","forParseResult","inMatch","LHS","RHS","createAliasExpression","asParam","finalized","valueContent","stripParensRE","trimmedOffset","iteratorMatch","forIteratorRE","keyContent","keyOffset","indexContent","parseForExpression","innerLoc","lastNode","isImplied","specialTemplateDir","isFragmentTemplate","isBuiltInComponent","condenseWhitespace","windowsNewlineRE","nodes","_b","shouldCondense","whitespace","removedWhitespace","isAllWhitespace","hasNewlineChar","prevCharIsWhitespace","attr","message","baseParse","helpers","hoists","imports","temps","createRoot","hoistStatic","walk","isSingleElementRoot","doNotHoistNode","originalCount","hoistedCount","constantType","getConstantType","hoist","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","vSlot","branches","transformHoist","hoisted","hmr","constantCache","returnType","generatedPropsType","childType","expType","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","createTransformContext","filename","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","slotted","ssrCssVars","bindingMetadata","inline","isTS","compatConfig","nameMatch","identifiers","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","helperString","removeNode","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","identifier","createCacheExpression","traverseNode","createRootCodegen","transformed","exitFns","onExit","nodeRemoved","traverseChildren","createStructuralDirectiveTransform","PURE_ANNOTATION","aliasHelper","createCodegenContext","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ssrRuntimeModuleName","indentLevel","pure","indent","deindent","withoutNewLine","repeat","generate","onContextCreated","hasHelpers","useWithBlock","preambleContext","VueBinding","genNode","genHoists","genFunctionPreamble","genAssets","preamble","toJSON","assets","resolver","JSON","stringify","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","callHelper","genNullableArgs","genVNodeCall","genCallExpression","genExpressionAsPropertyKey","genObjectExpression","genArrayExpression","genFunctionExpression","needNewline","needsParens","isNested","genConditionalExpression","genCacheExpression","transformIf","processCodegen","createIfBranch","ifNode","siblings","sibling","condition","processIf","isRoot","createCodegenNodeForBranch","parentCondition","getParentCondition","isTemplateIf","userKey","keyIndex","createChildrenCodegenNode","keyProperty","vnodeCall","transformFor","parseResult","finalizeForParseResult","forNode","valueAlias","keyAlias","objectIndexAlias","processFor","renderExp","isTemplate","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","needFragmentWrapper","slotOutlet","loop","createForLoopParams","memoArgs","createParamsList","defaultFallback","trackSlotScopes","buildClientSlotFn","_vForExp","buildSlots","buildSlotFn","slotsProperties","dynamicSlots","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","conditionalBranchIndex","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","hasForwardedSlots","directiveImportMap","transformElement","vnodeTag","isExplicitDynamic","isComponentTag","isProp","builtIn","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","dirArgs","runtime","trueExpression","modifier","buildDirectiveArgs","hasDynamicTextChild","propsNamesString","stringifyDynamicPropNames","elementLoc","mergeArgs","runtimeDirectives","hasChildren","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","pushMergeArg","dedupeProperties","analyzePatchFlag","isEventHandler","isVBind","isVOn","directiveTransform","needRuntime","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","transformSlotOutlet","nonNameProps","processSlotOutlet","slotArgs","expectedLen","fnExpRE","transformOn","augmentor","eventName","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","propName","injectPrefix","prefix","transformText","hasText","find","callArgs","transformOnce","transformModel","createTransformProps","rawExp","expString","bindingType","assignmentExp","transformMemo","baseCompile","isModuleMode","resolvedOptions","model","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION_GROUP","decoder","getOwnPropertySymbols","parserOptions","asAttr","rootNamespace","parseInlineCSS","createDOMCompilerError","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","transformClick","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","baseResult","baseTransform","directiveToUse","isInvalidType","hasDynamicKeyVBind","handlerExp","keyModifiers","nonKeyModifiers","eventOptionModifiers","resolveModifiers","modifierPostfix","show","compileCache","compileToFunction","getCache","opts","customElements","src","SETUP_FUNCTION","RENDER_FUNCTION","WATCH_GETTER","WATCH_CALLBACK","WATCH_CLEANUP","NATIVE_EVENT_HANDLER","COMPONENT_EVENT_HANDLER","VNODE_HOOK","DIRECTIVE_HOOK","TRANSITION_HOOK","APP_ERROR_HANDLER","APP_WARN_HANDLER","FUNCTION_REF","ASYNC_COMPONENT_LOADER","SCHEDULER","GET","HAS","ITERATE","SET","ADD","DELETE","CLEAR","containerOrSelector","Element","asBlock","excludedKeys","numberOfNodes","loader","loadingComponent","errorComponent","delay","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","Error","Promise","reject","__esModule","toStringTag","loaded","delayed","_effect","runner","defaults","renderItem","noSlotted","validSlotContent","rendered","preserveCaseIfNecessary","transformer","updateTeleports","querySelectorAll","setVars","ob","childList","camelizedName","hyphenatedName","localValue","propValue","modifierKey","getAwaitable","awaitable","_withKeys","cacheKey","eventKey","_withMods","guard","_id"],"mappings":"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"}